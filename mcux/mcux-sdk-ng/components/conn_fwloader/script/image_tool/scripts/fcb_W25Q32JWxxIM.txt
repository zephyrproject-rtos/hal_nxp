  46 43 46 42                                           // uint32_t tag;                                         //!< [0x000-0x003] Tag, fixed value 0x42464346UL
  00 00 00 00                                           // uint32_t version;                                     //!< [0x004-0x007] Version,[31:24] -'V', [23:16] - Major, [15:8] - Minor, [7:0] - bugfix
  00 00 00 00                                           // uint32_t reserved0;                                   //!< [0x008-0x00b] Reserved for future use
  00                                                    // uint8_t readSampleClkSrc;                             //!< [0x00c-0x00c] Read Sample Clock Source, valid value: 0/1/3
  03                                                    // uint8_t csHoldTime;                                   //!< [0x00d-0x00d] CS hold time, default value: 3
  03                                                    // uint8_t csSetupTime;                                  //!< [0x00e-0x00e] CS setup time, default value: 3
  00                                                    // uint8_t columnAddressWidth;                           //!< [0x00f-0x00f] Column Address with, for HyperBus protocol, it is fixed to 3, For Serial NAND, need to refer to datasheet
  00                                                    // uint8_t deviceModeCfgEnable;                          //!< [0x010-0x010] Device Mode Configure enable flag, 1 - Enable, 0 - Disable
  00                                                    // uint8_t deviceModeType;                               //!< [0x011-0x011] Specify the configuration command type:Quad Enable, DPI/QPI/OPI switch, Generic configuration, etc.
  00 00                                                 // uint16_t waitTimeCfgCommands;                         //!< [0x012-0x013] Wait time for all configuration commands, unit: 100us, Used for DPI/QPI/OPI switch or reset command
  00 00 00 00                                           // flexspi_lut_seq_t deviceModeSeq;                      //!< [0x014-0x017] Device mode sequence info, [7:0] - LUT sequence id, [15:8] - LUt sequence number, [31:16] Reserved
  00 00 00 00                                           // uint32_t deviceModeArg;                               //!< [0x018-0x01b] Argument/Parameter for device configuration
  00                                                    // uint8_t configCmdEnable;                              //!< [0x01c-0x01c] Configure command Enable Flag, 1 - Enable, 0 - Disable
  00 00 00                                              // uint8_t configModeType[3];                            //!< [0x01d-0x01f] Configure Mode Type, similar as deviceModeTpe
  00 00 00 00 00 00 00 00 00 00 00 00                   // flexspi_lut_seq_t configCmdSeqs[3];                   //!< [0x020-0x02b] Sequence info for Device Configuration command, similar as deviceModeSeq
  00 00 00 00                                           // uint32_t reserved1;                                   //!< [0x02c-0x02f] Reserved for future use
  00 00 00 00 00 00 00 00 00 00 00 00                   // uint32_t configCmdArgs[3];                            //!< [0x030-0x03b] Arguments/Parameters for device Configuration commands
  00 00 00 00                                           // uint32_t reserved2;                                   //!< [0x03c-0x03f] Reserved for future use
  00 00 00 00                                           // uint32_t controllerMiscOption;                        //!< [0x040-0x043] Controller Misc Options, see Misc feature bit definitions for more details
  01                                                    // uint8_t deviceType;                                   //!< [0x044-0x044] Device Type:  See Flash Type Definition for more details
  04                                                    // uint8_t sflashPadType;                                //!< [0x045-0x045] Serial Flash Pad Type: 1 - Single, 2 - Dual, 4 - Quad, 8 - Octal
  07                                                    // uint8_t serialClkFreq;                                //!< [0x046-0x046] Serial Flash Frequencey, device specific definitions, See System Boot Chapter for more details
  00                                                    // uint8_t lutCustomSeqEnable;                           //!< [0x047-0x047] LUT customization Enable, it is required if the program/erase cannot be done using 1 LUT sequence, currently, only applicable to HyperFLASH
  00 00 00 00 00 00 00 00                               // uint32_t reserved3[2];                                //!< [0x048-0x04f] Reserved for future use
  00 00 40 00                                           // uint32_t sflashA1Size;                                //!< [0x050-0x053] Size of Flash connected to A1
  00 00 00 00                                           // uint32_t sflashA2Size;                                //!< [0x054-0x057] Size of Flash connected to A2
  00 00 00 00                                           // uint32_t sflashB1Size;                                //!< [0x058-0x05b] Size of Flash connected to B1
  00 00 00 00                                           // uint32_t sflashB2Size;                                //!< [0x05c-0x05f] Size of Flash connected to B2
  00 00 00 00                                           // flexspi_pad_config_override_t csPadSettingOverride;   //!< [0x060-0x063] CS pad setting override value
  00 00 00 00                                           // flexspi_pad_config_override_t sclkPadSettingOverride; //!< [0x064-0x067] SCK pad setting override value
  00 00 00 00                                           // flexspi_pad_config_override_t dataPadSettingOverride; //!< [0x068-0x06b] data pad setting override value
  00 00 00 00                                           // flexspi_pad_config_override_t dqsPadSettingOverride;  //!< [0x06c-0x06f] DQS pad setting override value
  00 00 00 00                                           // uint32_t timeoutInMs;                                 //!< [0x070-0x073] Timeout threshold for read status command
  00 00 00 00                                           // uint32_t commandInterval;                             //!< [0x074-0x077] CS deselect interval between two commands
  00 00 00 00                                           // flexspi_dll_time_t dataValidTime[2];                  //!< [0x078-0x07b] CLK edge to data valid time for PORT A and PORT B
  00 00                                                 // uint16_t busyOffset;                                  //!< [0x07c-0x07d] Busy offset, valid value: 0-31
  00 00                                                 // uint16_t busyBitPolarity;                             //!< [0x07e-0x07f] Busy flag polarity, 0 - busy flag is 1 when flash device is busy, 1 - busy flag is 0 when flash device is busy

  03 04 18 08   04 24 00 00   00 00 00 00   00 00 00 00 //  0 Read: 03 04 (send read command), 18 08 (send address), 04 24 (read data)
  05 04 04 24   00 00 00 00   00 00 00 00   00 00 00 00 //  1 Read status: 05 04 (send read status command), 04 24 (read data)
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 //  2
  06 04 00 00   00 00 00 00   00 00 00 00   00 00 00 00 //  3 Write enable: 06 04 (send write enable command) 
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 //  4
  20 04 18 08   00 00 00 00   00 00 00 00   00 00 00 00 //  5 Sector erase: 20 04 (send sector erase (4kB) command), 18 08 (send address)
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 //  6
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 //  7
  52 04 18 08   00 00 00 00   00 00 00 00   00 00 00 00 //  8 Block erase: 52 04 (send block erase (32kB) command), 18 08 (send address)
  02 04 18 08   00 20 00 00   00 00 00 00   00 00 00 00 //  9 Page program: 02 04 (send page program command), 18 08 (send address), 00 20 (write data)
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // 10
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // 11
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // 12
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // 13
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // 14
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // 15
                                                        // uint32_t lookupTable[64];                             //!< [0x080-0x17f] Lookup table holds Flash command sequences

  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // flexspi_lut_seq_t lutCustomSeq[12];                   //!< [0x180-0x1af] Customizable LUT Sequences

  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // uint32_t reserved4[4];                                //!< [0x1b0-0x1bf] Reserved for future use
  00 01 00 00                                           // uint32_t pageSize;                                    //!< Page size of Serial NOR
  00 10 00 00                                           // uint32_t sectorSize;                                  //!< Sector size of Serial NOR
  00                                                    // uint8_t ipcmdSerialClkFreq;                           //!< Clock frequency for IP command
  00                                                    // uint8_t isUniformBlockSize;                           //!< Sector/Block size is the same
  00                                                    // uint8_t isDataOrderSwapped;                           //!< Data order (D0, D1, D2, D3) is swapped (D1,D0, D3, D2)
  00                                                    // uint8_t reserved0[1];                                 //!< Reserved for future use
  00                                                    // uint8_t serialNorType;                                //!< Serial NOR Flash type: 0/1/2/3
  00                                                    // uint8_t needExitNoCmdMode;                            //!< Need to exit NoCmd mode before other IP command
  00                                                    // uint8_t halfClkForNonReadCmd;                         //!< Half the Serial Clock for non-read command: true/false
  00                                                    // uint8_t needRestoreNoCmdMode;                         //!< Need to Restore NoCmd mode after IP commmand execution
  00 80 00 00                                           // uint32_t blockSize;                                   //!< Block size
  00 00 00 00                                           // uint32_t flashStateCtx;                               //!< Flash State Context
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00 // uint32_t reserve2[10];                                //!< Reserved for future use
  00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00
  00 00 00 00   00 00 00 00   
