/*
** ###################################################################
**     Processors:          MIMX8ML3CVNKZ_ca53
**                          MIMX8ML3CVNKZ_cm7
**                          MIMX8ML3CVNKZ_dsp
**                          MIMX8ML3DVNLZ_ca53
**                          MIMX8ML3DVNLZ_cm7
**                          MIMX8ML3DVNLZ_dsp
**                          MIMX8ML4CVNKZ_ca53
**                          MIMX8ML4CVNKZ_cm7
**                          MIMX8ML4DVNLZ_ca53
**                          MIMX8ML4DVNLZ_cm7
**                          MIMX8ML6CVNKZ_ca53
**                          MIMX8ML6CVNKZ_cm7
**                          MIMX8ML6DVNLZ_ca53
**                          MIMX8ML6DVNLZ_cm7
**                          MIMX8ML8CVNKZ_ca53
**                          MIMX8ML8CVNKZ_cm7
**                          MIMX8ML8CVNKZ_dsp
**                          MIMX8ML8DVNLZ_ca53
**                          MIMX8ML8DVNLZ_cm7
**                          MIMX8ML8DVNLZ_dsp
**
**     Version:             rev. 5.0, 2021-03-01
**     Build:               b240708
**
**     Abstract:
**         CMSIS Peripheral Access Layer for IOMUXC_GPR
**
**     Copyright 1997-2016 Freescale Semiconductor, Inc.
**     Copyright 2016-2024 NXP
**     SPDX-License-Identifier: BSD-3-Clause
**
**     http:                 www.nxp.com
**     mail:                 support@nxp.com
**
**     Revisions:
**     - rev. 1.0 (2019-10-11)
**         Initial version.
**     - rev. 2.0 (2020-02-21)
**         Rev.B Header.
**     - rev. 3.0 (2020-06-22)
**         Rev.C Header.
**     - rev. 4.0 (2020-11-16)
**         Rev.D Header.
**     - rev. 5.0 (2021-03-01)
**         Rev.D Header Final.
**
** ###################################################################
*/

/*!
 * @file IOMUXC_GPR.h
 * @version 5.0
 * @date 2021-03-01
 * @brief CMSIS Peripheral Access Layer for IOMUXC_GPR
 *
 * CMSIS Peripheral Access Layer for IOMUXC_GPR
 */

#if !defined(IOMUXC_GPR_H_)
#define IOMUXC_GPR_H_                            /**< Symbol preventing repeated inclusion */

#if (defined(CPU_MIMX8ML3CVNKZ_ca53) || defined(CPU_MIMX8ML3DVNLZ_ca53))
#include "MIMX8ML3_ca53_COMMON.h"
#elif (defined(CPU_MIMX8ML3CVNKZ_cm7) || defined(CPU_MIMX8ML3DVNLZ_cm7))
#include "MIMX8ML3_cm7_COMMON.h"
#elif (defined(CPU_MIMX8ML3CVNKZ_dsp) || defined(CPU_MIMX8ML3DVNLZ_dsp))
#include "MIMX8ML3_dsp_COMMON.h"
#elif (defined(CPU_MIMX8ML4CVNKZ_ca53) || defined(CPU_MIMX8ML4DVNLZ_ca53))
#include "MIMX8ML4_ca53_COMMON.h"
#elif (defined(CPU_MIMX8ML4CVNKZ_cm7) || defined(CPU_MIMX8ML4DVNLZ_cm7))
#include "MIMX8ML4_cm7_COMMON.h"
#elif (defined(CPU_MIMX8ML6CVNKZ_ca53) || defined(CPU_MIMX8ML6DVNLZ_ca53))
#include "MIMX8ML6_ca53_COMMON.h"
#elif (defined(CPU_MIMX8ML6CVNKZ_cm7) || defined(CPU_MIMX8ML6DVNLZ_cm7))
#include "MIMX8ML6_cm7_COMMON.h"
#elif (defined(CPU_MIMX8ML8CVNKZ_ca53) || defined(CPU_MIMX8ML8DVNLZ_ca53))
#include "MIMX8ML8_ca53_COMMON.h"
#elif (defined(CPU_MIMX8ML8CVNKZ_cm7) || defined(CPU_MIMX8ML8DVNLZ_cm7))
#include "MIMX8ML8_cm7_COMMON.h"
#elif (defined(CPU_MIMX8ML8CVNKZ_dsp) || defined(CPU_MIMX8ML8DVNLZ_dsp))
#include "MIMX8ML8_dsp_COMMON.h"
#else
  #error "No valid CPU defined!"
#endif

/* ----------------------------------------------------------------------------
   -- Device Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Peripheral_access_layer Device Peripheral Access Layer
 * @{
 */


/*
** Start of section using anonymous unions
*/

#if defined(__ARMCC_VERSION)
  #if (__ARMCC_VERSION >= 6010050)
    #pragma clang diagnostic push
  #else
    #pragma push
    #pragma anon_unions
  #endif
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=extended
#elif defined(__XTENSA__)
  /* anonymous unions are enabled by default */
#else
  #error Not supported compiler type
#endif

/* ----------------------------------------------------------------------------
   -- IOMUXC_GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup IOMUXC_GPR_Peripheral_Access_Layer IOMUXC_GPR Peripheral Access Layer
 * @{
 */

/** IOMUXC_GPR - Register Layout Typedef */
typedef struct {
       uint32_t GPR0;                              /**< General Purpose Register 0, offset: 0x0 */
  __IO uint32_t GPR1;                              /**< General Purpose Register 1, offset: 0x4 */
  __IO uint32_t GPR2;                              /**< General Purpose Register 2, offset: 0x8 */
       uint32_t GPR3;                              /**< General Purpose Register 3, offset: 0xC */
  __IO uint32_t GPR4;                              /**< General Purpose Register 4, offset: 0x10 */
  __IO uint32_t GPR5;                              /**< General Purpose Register 5, offset: 0x14 */
  __IO uint32_t GPR6;                              /**< General Purpose Register 6, offset: 0x18 */
       uint32_t GPR7;                              /**< General Purpose Register 7, offset: 0x1C */
       uint32_t GPR8;                              /**< General Purpose Register 8, offset: 0x20 */
       uint32_t GPR9;                              /**< General Purpose Register 9, offset: 0x24 */
  __IO uint32_t GPR10;                             /**< General Purpose Register 10, offset: 0x28 */
  __IO uint32_t GPR11;                             /**< General Purpose Register 11, offset: 0x2C */
  __IO uint32_t GPR12;                             /**< General Purpose Register 12, offset: 0x30 */
  __IO uint32_t GPR13;                             /**< General Purpose Register 13, offset: 0x34 */
  __IO uint32_t GPR14;                             /**< General Purpose Register 14, offset: 0x38 */
  __IO uint32_t GPR15;                             /**< General Purpose Register 15, offset: 0x3C */
  __IO uint32_t GPR16;                             /**< General Purpose Register 16, offset: 0x40 */
       uint32_t GPR17;                             /**< General Purpose Register 17, offset: 0x44 */
       uint32_t GPR18;                             /**< General Purpose Register 18, offset: 0x48 */
  __I  uint32_t GPR19;                             /**< General Purpose Register 19, offset: 0x4C */
  __IO uint32_t GPR20;                             /**< General Purpose Register 20, offset: 0x50 */
  __IO uint32_t GPR21;                             /**< General Purpose Register 21, offset: 0x54 */
  __IO uint32_t GPR22;                             /**< General Purpose Register 22, offset: 0x58 */
       uint32_t GPR23;                             /**< General Purpose Register 23, offset: 0x5C */
  __I  uint32_t GPR24;                             /**< General Purpose Register 24, offset: 0x60 */
} IOMUXC_GPR_Type;

/* ----------------------------------------------------------------------------
   -- IOMUXC_GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup IOMUXC_GPR_Register_Masks IOMUXC_GPR Register Masks
 * @{
 */

/*! @name GPR1 - General Purpose Register 1 */
/*! @{ */

#define IOMUXC_GPR_GPR1_GPR_ENET1_EVENT0IN_SEL_MASK (0x1U)
#define IOMUXC_GPR_GPR1_GPR_ENET1_EVENT0IN_SEL_SHIFT (0U)
/*! GPR_ENET1_EVENT0IN_SEL
 *  0b0..IOMUX
 *  0b1..GPT1 CMPOUT2
 */
#define IOMUXC_GPR_GPR1_GPR_ENET1_EVENT0IN_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_ENET1_EVENT0IN_SEL_SHIFT)) & IOMUXC_GPR_GPR1_GPR_ENET1_EVENT0IN_SEL_MASK)

#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_EVENT0IN_SEL_MASK (0x2U)
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_EVENT0IN_SEL_SHIFT (1U)
/*! GPR_ENET_QOS_EVENT0IN_SEL
 *  0b0..IOMUX;
 *  0b1..GPT1 CMPOUT2
 */
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_EVENT0IN_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_ENET_QOS_EVENT0IN_SEL_SHIFT)) & IOMUXC_GPR_GPR1_GPR_ENET_QOS_EVENT0IN_SEL_MASK)

#define IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN1_SEL_MASK (0x4U)
#define IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN1_SEL_SHIFT (2U)
/*! GPR_GPT1_CAPIN1_SEL
 *  0b0..IOMUX
 *  0b1..ENET1 TIMIER1 EVENT
 */
#define IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN1_SEL(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN1_SEL_SHIFT)) & IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN1_SEL_MASK)

#define IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN2_SEL_MASK (0x8U)
#define IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN2_SEL_SHIFT (3U)
/*! GPR_GPT1_CAPIN2_SEL
 *  0b0..IOMUX
 *  0b1..ENET QOS TIMIER1 EVENT
 */
#define IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN2_SEL(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN2_SEL_SHIFT)) & IOMUXC_GPR_GPR1_GPR_GPT1_CAPIN2_SEL_MASK)

#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON0_MASK (0x10U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON0_SHIFT (4U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON0(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON0_SHIFT)) & IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON0_MASK)

#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON1_MASK (0x20U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON1_SHIFT (5U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON1_SHIFT)) & IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON1_MASK)

#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON2_MASK (0x40U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON2_SHIFT (6U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON2(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON2_SHIFT)) & IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON2_MASK)

#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON3_MASK (0x80U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON3_SHIFT (7U)
#define IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON3(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON3_SHIFT)) & IOMUXC_GPR_GPR1_GPR_LVDS_TEST_DO_ON3_MASK)

#define IOMUXC_GPR_GPR1_GPR_IRQ_MASK             (0x1000U)
#define IOMUXC_GPR_GPR1_GPR_IRQ_SHIFT            (12U)
#define IOMUXC_GPR_GPR1_GPR_IRQ(x)               (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_IRQ_SHIFT)) & IOMUXC_GPR_GPR1_GPR_IRQ_MASK)

#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_TX_CLK_SEL_MASK (0x2000U)
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_TX_CLK_SEL_SHIFT (13U)
/*! IOMUXC_GPR_ENET1_TX_CLK_SEL
 *  0b1..ENET1 RMII clock comes from ccm->pad->loopback
 *  0b0..ENET1 RMII clock comes from external PHY or OSC
 */
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_TX_CLK_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_TX_CLK_SEL_SHIFT)) & IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_TX_CLK_SEL_MASK)

#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_DIS_CRC_CHK_MASK (0x4000U)
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_DIS_CRC_CHK_SHIFT (14U)
/*! GPR_ENET_QOS_DIS_CRC_CHK
 *  0b0..do not disable
 *  0b1..disable
 */
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_DIS_CRC_CHK(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_ENET_QOS_DIS_CRC_CHK_SHIFT)) & IOMUXC_GPR_GPR1_GPR_ENET_QOS_DIS_CRC_CHK_MASK)

#define IOMUXC_GPR_GPR1_GPR_ANAMIX_IPT_MODE_MASK (0x8000U)
#define IOMUXC_GPR_GPR1_GPR_ANAMIX_IPT_MODE_SHIFT (15U)
/*! GPR_ANAMIX_IPT_MODE
 *  0b0..masked to 0
 *  0b1..unmasked
 */
#define IOMUXC_GPR_GPR1_GPR_ANAMIX_IPT_MODE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_ANAMIX_IPT_MODE_SHIFT)) & IOMUXC_GPR_GPR1_GPR_ANAMIX_IPT_MODE_MASK)

#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_INTF_SEL_MASK (0x70000U)
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_INTF_SEL_SHIFT (16U)
/*! GPR_ENET_QOS_INTF_SEL
 *  0b000..MII
 *  0b001..RGMII
 *  0b100..RMII
 */
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_INTF_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_ENET_QOS_INTF_SEL_SHIFT)) & IOMUXC_GPR_GPR1_GPR_ENET_QOS_INTF_SEL_MASK)

#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_CLK_GEN_EN_MASK (0x80000U)
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_CLK_GEN_EN_SHIFT (19U)
/*! GPR_ENET_QOS_CLK_GEN_EN
 *  0b0..disable
 *  0b1..enable
 */
#define IOMUXC_GPR_GPR1_GPR_ENET_QOS_CLK_GEN_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_ENET_QOS_CLK_GEN_EN_SHIFT)) & IOMUXC_GPR_GPR1_GPR_ENET_QOS_CLK_GEN_EN_MASK)

#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_CLK_TX_CLK_SEL_MASK (0x100000U)
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_CLK_TX_CLK_SEL_SHIFT (20U)
/*! IOMUXC_GPR_ENET_QOS_CLK_TX_CLK_SEL
 *  0b1..ENET QOS RMII clock comes from ccm->pad->loopback
 *  0b0..ENET QOS RMII clock comes from external PHY or OSC
 */
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_CLK_TX_CLK_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_CLK_TX_CLK_SEL_SHIFT)) & IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_CLK_TX_CLK_SEL_MASK)

#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_RGMII_EN_MASK (0x200000U)
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_RGMII_EN_SHIFT (21U)
/*! IOMUXC_GPR_ENET_QOS_RGMII_EN
 *  0b0..MII(input)
 *  0b1..RGMII(output)
 */
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_RGMII_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_RGMII_EN_SHIFT)) & IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET_QOS_RGMII_EN_MASK)

#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_RGMII_EN_MASK (0x400000U)
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_RGMII_EN_SHIFT (22U)
/*! IOMUXC_GPR_ENET1_RGMII_EN
 *  0b0..MII(input)
 *  0b1..RGMII(output)
 */
#define IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_RGMII_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_RGMII_EN_SHIFT)) & IOMUXC_GPR_GPR1_IOMUXC_GPR_ENET1_RGMII_EN_MASK)

#define IOMUXC_GPR_GPR1_GPR_TZASC1_SECURE_BOOT_LOCK_MASK (0x800000U)
#define IOMUXC_GPR_GPR1_GPR_TZASC1_SECURE_BOOT_LOCK_SHIFT (23U)
#define IOMUXC_GPR_GPR1_GPR_TZASC1_SECURE_BOOT_LOCK(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_TZASC1_SECURE_BOOT_LOCK_SHIFT)) & IOMUXC_GPR_GPR1_GPR_TZASC1_SECURE_BOOT_LOCK_MASK)

#define IOMUXC_GPR_GPR1_GPR_DBG_ACK_M7_MASK_MASK (0x8000000U)
#define IOMUXC_GPR_GPR1_GPR_DBG_ACK_M7_MASK_SHIFT (27U)
/*! GPR_DBG_ACK_M7_MASK
 *  0b0..unmasked
 *  0b1..mask to 0
 */
#define IOMUXC_GPR_GPR1_GPR_DBG_ACK_M7_MASK(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_DBG_ACK_M7_MASK_SHIFT)) & IOMUXC_GPR_GPR1_GPR_DBG_ACK_M7_MASK_MASK)

#define IOMUXC_GPR_GPR1_GPR_DBG_ACK_A53_MASK_MASK (0xF0000000U)
#define IOMUXC_GPR_GPR1_GPR_DBG_ACK_A53_MASK_SHIFT (28U)
/*! GPR_DBG_ACK_A53_MASK
 *  0b0000..unmasked
 *  0b0001..mask to 0
 */
#define IOMUXC_GPR_GPR1_GPR_DBG_ACK_A53_MASK(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR1_GPR_DBG_ACK_A53_MASK_SHIFT)) & IOMUXC_GPR_GPR1_GPR_DBG_ACK_A53_MASK_MASK)
/*! @} */

/*! @name GPR2 - General Purpose Register 2 */
/*! @{ */

#define IOMUXC_GPR_GPR2_GPR_CORESIGHT_GPR_CTM_SEL_MASK (0x3U)
#define IOMUXC_GPR_GPR2_GPR_CORESIGHT_GPR_CTM_SEL_SHIFT (0U)
#define IOMUXC_GPR_GPR2_GPR_CORESIGHT_GPR_CTM_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR2_GPR_CORESIGHT_GPR_CTM_SEL_SHIFT)) & IOMUXC_GPR_GPR2_GPR_CORESIGHT_GPR_CTM_SEL_MASK)
/*! @} */

/*! @name GPR4 - General Purpose Register 4 */
/*! @{ */

#define IOMUXC_GPR_GPR4_GPR_SDMA1_IPG_STOP_MASK  (0x1U)
#define IOMUXC_GPR_GPR4_GPR_SDMA1_IPG_STOP_SHIFT (0U)
#define IOMUXC_GPR_GPR4_GPR_SDMA1_IPG_STOP(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_SDMA1_IPG_STOP_SHIFT)) & IOMUXC_GPR_GPR4_GPR_SDMA1_IPG_STOP_MASK)

#define IOMUXC_GPR_GPR4_GPR_FLEXSPI_I_IPG_STOP_MASK (0x2U)
#define IOMUXC_GPR_GPR4_GPR_FLEXSPI_I_IPG_STOP_SHIFT (1U)
#define IOMUXC_GPR_GPR4_GPR_FLEXSPI_I_IPG_STOP(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_FLEXSPI_I_IPG_STOP_SHIFT)) & IOMUXC_GPR_GPR4_GPR_FLEXSPI_I_IPG_STOP_MASK)

#define IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_MASK  (0x8U)
#define IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_SHIFT (3U)
#define IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_SHIFT)) & IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_MASK)

#define IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_MASK   (0x10U)
#define IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_SHIFT  (4U)
#define IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_SHIFT)) & IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_MASK)

#define IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_MASK   (0x20U)
#define IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_SHIFT  (5U)
#define IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_SHIFT)) & IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_MASK)

#define IOMUXC_GPR_GPR4_GPR_SDAM1_IPG_STOP_ACK_MASK (0x10000U)
#define IOMUXC_GPR_GPR4_GPR_SDAM1_IPG_STOP_ACK_SHIFT (16U)
#define IOMUXC_GPR_GPR4_GPR_SDAM1_IPG_STOP_ACK(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_SDAM1_IPG_STOP_ACK_SHIFT)) & IOMUXC_GPR_GPR4_GPR_SDAM1_IPG_STOP_ACK_MASK)

#define IOMUXC_GPR_GPR4_GPR_FLEXSPI_O_IPG_STOP_ACK_MASK (0x20000U)
#define IOMUXC_GPR_GPR4_GPR_FLEXSPI_O_IPG_STOP_ACK_SHIFT (17U)
#define IOMUXC_GPR_GPR4_GPR_FLEXSPI_O_IPG_STOP_ACK(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_FLEXSPI_O_IPG_STOP_ACK_SHIFT)) & IOMUXC_GPR_GPR4_GPR_FLEXSPI_O_IPG_STOP_ACK_MASK)

#define IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_ACK_MASK (0x80000U)
#define IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_ACK_SHIFT (19U)
#define IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_ACK(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_ACK_SHIFT)) & IOMUXC_GPR_GPR4_GPR_ENET1_IPG_STOP_ACK_MASK)

#define IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_ACK_MASK (0x100000U)
#define IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_ACK_SHIFT (20U)
#define IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_ACK(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_ACK_SHIFT)) & IOMUXC_GPR_GPR4_GPR_CAN1_IPG_STOP_ACK_MASK)

#define IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_ACK_MASK (0x200000U)
#define IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_ACK_SHIFT (21U)
#define IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_ACK(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_ACK_SHIFT)) & IOMUXC_GPR_GPR4_GPR_CAN2_IPG_STOP_ACK_MASK)

#define IOMUXC_GPR_GPR4_CPU_STANDBYWFI_MASK      (0xF000000U)
#define IOMUXC_GPR_GPR4_CPU_STANDBYWFI_SHIFT     (24U)
#define IOMUXC_GPR_GPR4_CPU_STANDBYWFI(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_CPU_STANDBYWFI_SHIFT)) & IOMUXC_GPR_GPR4_CPU_STANDBYWFI_MASK)

#define IOMUXC_GPR_GPR4_CPU_STANDBYWFE_MASK      (0xF0000000U)
#define IOMUXC_GPR_GPR4_CPU_STANDBYWFE_SHIFT     (28U)
#define IOMUXC_GPR_GPR4_CPU_STANDBYWFE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR4_CPU_STANDBYWFE_SHIFT)) & IOMUXC_GPR_GPR4_CPU_STANDBYWFE_MASK)
/*! @} */

/*! @name GPR5 - General Purpose Register 5 */
/*! @{ */

#define IOMUXC_GPR_GPR5_GPR_RMW_WAIT_BVALID_CPL_MASK (0x1U)
#define IOMUXC_GPR_GPR5_GPR_RMW_WAIT_BVALID_CPL_SHIFT (0U)
#define IOMUXC_GPR_GPR5_GPR_RMW_WAIT_BVALID_CPL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR5_GPR_RMW_WAIT_BVALID_CPL_SHIFT)) & IOMUXC_GPR_GPR5_GPR_RMW_WAIT_BVALID_CPL_MASK)

#define IOMUXC_GPR_GPR5_GPR_RMW_S_WAIT_BVALID_CPL_MASK (0x2U)
#define IOMUXC_GPR_GPR5_GPR_RMW_S_WAIT_BVALID_CPL_SHIFT (1U)
#define IOMUXC_GPR_GPR5_GPR_RMW_S_WAIT_BVALID_CPL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR5_GPR_RMW_S_WAIT_BVALID_CPL_SHIFT)) & IOMUXC_GPR_GPR5_GPR_RMW_S_WAIT_BVALID_CPL_MASK)

#define IOMUXC_GPR_GPR5_GPR_ENABLE_UPSIZER_MASK  (0x4U)
#define IOMUXC_GPR_GPR5_GPR_ENABLE_UPSIZER_SHIFT (2U)
#define IOMUXC_GPR_GPR5_GPR_ENABLE_UPSIZER(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR5_GPR_ENABLE_UPSIZER_SHIFT)) & IOMUXC_GPR_GPR5_GPR_ENABLE_UPSIZER_MASK)

#define IOMUXC_GPR_GPR5_GPR_WDOG1_MASK_MASK      (0x40U)
#define IOMUXC_GPR_GPR5_GPR_WDOG1_MASK_SHIFT     (6U)
/*! GPR_WDOG1_MASK
 *  0b0..wdog1 low will make the GPIO1_IO02.alt5_out low;
 *  0b1..wdog1 low will NOT impact the GPIO1_IO02.alt5_out
 */
#define IOMUXC_GPR_GPR5_GPR_WDOG1_MASK(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR5_GPR_WDOG1_MASK_SHIFT)) & IOMUXC_GPR_GPR5_GPR_WDOG1_MASK_MASK)

#define IOMUXC_GPR_GPR5_GPR_WDOG2_MASK_MASK      (0x80U)
#define IOMUXC_GPR_GPR5_GPR_WDOG2_MASK_SHIFT     (7U)
/*! GPR_WDOG2_MASK
 *  0b0..wdog2 low will make the GPIO1_IO02.alt5_out low;
 *  0b1..wdog2 low will NOT impact the GPIO1_IO02.alt5_out
 */
#define IOMUXC_GPR_GPR5_GPR_WDOG2_MASK(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR5_GPR_WDOG2_MASK_SHIFT)) & IOMUXC_GPR_GPR5_GPR_WDOG2_MASK_MASK)

#define IOMUXC_GPR_GPR5_GPR_WDOG3_MASK_MASK      (0x100000U)
#define IOMUXC_GPR_GPR5_GPR_WDOG3_MASK_SHIFT     (20U)
/*! GPR_WDOG3_MASK
 *  0b0..wdog3 low will make the GPIO1_IO02.alt5_out low;
 *  0b1..wdog3 low will NOT impact the GPIO1_IO02.alt5_out
 */
#define IOMUXC_GPR_GPR5_GPR_WDOG3_MASK(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR5_GPR_WDOG3_MASK_SHIFT)) & IOMUXC_GPR_GPR5_GPR_WDOG3_MASK_MASK)
/*! @} */

/*! @name GPR6 - General Purpose Register 6 */
/*! @{ */

#define IOMUXC_GPR_GPR6_GPR_M7_INITVTOR_MASK     (0xFFFFFF80U)
#define IOMUXC_GPR_GPR6_GPR_M7_INITVTOR_SHIFT    (7U)
#define IOMUXC_GPR_GPR6_GPR_M7_INITVTOR(x)       (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR6_GPR_M7_INITVTOR_SHIFT)) & IOMUXC_GPR_GPR6_GPR_M7_INITVTOR_MASK)
/*! @} */

/*! @name GPR10 - General Purpose Register 10 */
/*! @{ */

#define IOMUXC_GPR_GPR10_GPR_TZASC_EN_MASK       (0x1U)
#define IOMUXC_GPR_GPR10_GPR_TZASC_EN_SHIFT      (0U)
#define IOMUXC_GPR_GPR10_GPR_TZASC_EN(x)         (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_GPR_TZASC_EN_SHIFT)) & IOMUXC_GPR_GPR10_GPR_TZASC_EN_MASK)

#define IOMUXC_GPR_GPR10_GPR_TZASC_ID_SWAP_BYPASS_MASK (0x2U)
#define IOMUXC_GPR_GPR10_GPR_TZASC_ID_SWAP_BYPASS_SHIFT (1U)
#define IOMUXC_GPR_GPR10_GPR_TZASC_ID_SWAP_BYPASS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_GPR_TZASC_ID_SWAP_BYPASS_SHIFT)) & IOMUXC_GPR_GPR10_GPR_TZASC_ID_SWAP_BYPASS_MASK)

#define IOMUXC_GPR_GPR10_GPR_SEC_ERR_RESP_EN_MASK (0x4U)
#define IOMUXC_GPR_GPR10_GPR_SEC_ERR_RESP_EN_SHIFT (2U)
#define IOMUXC_GPR_GPR10_GPR_SEC_ERR_RESP_EN(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_GPR_SEC_ERR_RESP_EN_SHIFT)) & IOMUXC_GPR_GPR10_GPR_SEC_ERR_RESP_EN_MASK)

#define IOMUXC_GPR_GPR10_GPR_EXC_ERR_RESP_EN_MASK (0x8U)
#define IOMUXC_GPR_GPR10_GPR_EXC_ERR_RESP_EN_SHIFT (3U)
#define IOMUXC_GPR_GPR10_GPR_EXC_ERR_RESP_EN(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_GPR_EXC_ERR_RESP_EN_SHIFT)) & IOMUXC_GPR_GPR10_GPR_EXC_ERR_RESP_EN_MASK)

#define IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_EN_MASK  (0x10U)
#define IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_EN_SHIFT (4U)
#define IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_EN(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_EN_SHIFT)) & IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_EN_MASK)

#define IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_START_ADDR_MASK (0x7E0U)
#define IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_START_ADDR_SHIFT (5U)
#define IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_START_ADDR(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_START_ADDR_SHIFT)) & IOMUXC_GPR_GPR10_GPR_OCRAM_A_TZ_START_ADDR_MASK)

#define IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_EN_MASK  (0x10000U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_EN_SHIFT (16U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_EN(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_EN_SHIFT)) & IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_EN_MASK)

#define IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_ID_SWAP_BYPASS_MASK (0x20000U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_ID_SWAP_BYPASS_SHIFT (17U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_ID_SWAP_BYPASS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_ID_SWAP_BYPASS_SHIFT)) & IOMUXC_GPR_GPR10_LOCK_GPR_TZASC_ID_SWAP_BYPASS_MASK)

#define IOMUXC_GPR_GPR10_LOCK_GPR_SEC_ERR_RESP_EN_MASK (0x40000U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_SEC_ERR_RESP_EN_SHIFT (18U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_SEC_ERR_RESP_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_LOCK_GPR_SEC_ERR_RESP_EN_SHIFT)) & IOMUXC_GPR_GPR10_LOCK_GPR_SEC_ERR_RESP_EN_MASK)

#define IOMUXC_GPR_GPR10_LOCK_GPR_EXC_ERR_RESP_EN_MASK (0x80000U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_EXC_ERR_RESP_EN_SHIFT (19U)
#define IOMUXC_GPR_GPR10_LOCK_GPR_EXC_ERR_RESP_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR10_LOCK_GPR_EXC_ERR_RESP_EN_SHIFT)) & IOMUXC_GPR_GPR10_LOCK_GPR_EXC_ERR_RESP_EN_MASK)
/*! @} */

/*! @name GPR11 - General Purpose Register 11 */
/*! @{ */

#define IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_EN_MASK    (0x1U)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_EN_SHIFT   (0U)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_EN(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_EN_SHIFT)) & IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_EN_MASK)

#define IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_START_ADDR_MASK (0x1FEU)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_START_ADDR_SHIFT (1U)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_START_ADDR(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_START_ADDR_SHIFT)) & IOMUXC_GPR_GPR11_GPR_OCRAM_TZ_START_ADDR_MASK)

#define IOMUXC_GPR_GPR11_GPR_CAAM_CAAM_IPS_MANAGER_MASK (0x200U)
#define IOMUXC_GPR_GPR11_GPR_CAAM_CAAM_IPS_MANAGER_SHIFT (9U)
/*! GPR_CAAM_CAAM_IPS_MANAGER
 *  0b0..not controlled by CSU/RDC slot
 *  0b1..controlled by CSU/RDC slot
 */
#define IOMUXC_GPR_GPR11_GPR_CAAM_CAAM_IPS_MANAGER(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_GPR_CAAM_CAAM_IPS_MANAGER_SHIFT)) & IOMUXC_GPR_GPR11_GPR_CAAM_CAAM_IPS_MANAGER_MASK)

#define IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_EN_MASK  (0x400U)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_EN_SHIFT (10U)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_EN(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_EN_SHIFT)) & IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_EN_MASK)

#define IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_START_ADDR_MASK (0x7800U)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_START_ADDR_SHIFT (11U)
#define IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_START_ADDR(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_START_ADDR_SHIFT)) & IOMUXC_GPR_GPR11_GPR_OCRAM_S_TZ_START_ADDR_MASK)

#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_EN_MASK (0x10000U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_EN_SHIFT (16U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_EN_SHIFT)) & IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_EN_MASK)

#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_START_ADDR_MASK (0x1FE0000U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_START_ADDR_SHIFT (17U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_START_ADDR(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_START_ADDR_SHIFT)) & IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_TZ_START_ADDR_MASK)

#define IOMUXC_GPR_GPR11_LOCK_GPR_CAAM_CAAM_IPS_MANAGER_MASK (0x2000000U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_CAAM_CAAM_IPS_MANAGER_SHIFT (25U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_CAAM_CAAM_IPS_MANAGER(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_LOCK_GPR_CAAM_CAAM_IPS_MANAGER_SHIFT)) & IOMUXC_GPR_GPR11_LOCK_GPR_CAAM_CAAM_IPS_MANAGER_MASK)

#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_EN_MASK (0x4000000U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_EN_SHIFT (26U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_EN_SHIFT)) & IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_EN_MASK)

#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_START_ADDR_MASK (0x38000000U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_START_ADDR_SHIFT (27U)
#define IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_START_ADDR(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_START_ADDR_SHIFT)) & IOMUXC_GPR_GPR11_LOCK_GPR_OCRAM_S_TZ_START_ADDR_MASK)
/*! @} */

/*! @name GPR12 - General Purpose Register 12 */
/*! @{ */

#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DEVICE_TYPE_MASK (0xF000U)
#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DEVICE_TYPE_SHIFT (12U)
#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DEVICE_TYPE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DEVICE_TYPE_SHIFT)) & IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DEVICE_TYPE_MASK)

#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_STATUS_BUS_SELECT_MASK (0x1E0000U)
#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_STATUS_BUS_SELECT_SHIFT (17U)
#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_STATUS_BUS_SELECT(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_STATUS_BUS_SELECT_SHIFT)) & IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_STATUS_BUS_SELECT_MASK)

#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_CTRL_BUS_MASK (0x600000U)
#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_CTRL_BUS_SHIFT (21U)
#define IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_CTRL_BUS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_CTRL_BUS_SHIFT)) & IOMUXC_GPR_GPR12_GPR_PCIE1_CTRL_DIAG_CTRL_BUS_MASK)

#define IOMUXC_GPR_GPR12_GPR_PCIE_DIAG_BUS_SEL_MASK (0x80000000U)
#define IOMUXC_GPR_GPR12_GPR_PCIE_DIAG_BUS_SEL_SHIFT (31U)
#define IOMUXC_GPR_GPR12_GPR_PCIE_DIAG_BUS_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR12_GPR_PCIE_DIAG_BUS_SEL_SHIFT)) & IOMUXC_GPR_GPR12_GPR_PCIE_DIAG_BUS_SEL_MASK)
/*! @} */

/*! @name GPR13 - General Purpose Register 13 */
/*! @{ */

#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USDHC_MASK  (0x1U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USDHC_SHIFT (0U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USDHC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_ARCACHE_USDHC_SHIFT)) & IOMUXC_GPR_GPR13_GPR_ARCACHE_USDHC_MASK)

#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USDHC_MASK  (0x2U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USDHC_SHIFT (1U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USDHC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_AWCACHE_USDHC_SHIFT)) & IOMUXC_GPR_GPR13_GPR_AWCACHE_USDHC_MASK)

#define IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_MASK   (0x10U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_SHIFT  (4U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_SHIFT)) & IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_MASK)

#define IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_MASK   (0x20U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_SHIFT  (5U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_SHIFT)) & IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_MASK)

#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USB1_MASK   (0x80U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USB1_SHIFT  (7U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USB1(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_ARCACHE_USB1_SHIFT)) & IOMUXC_GPR_GPR13_GPR_ARCACHE_USB1_MASK)

#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USB1_MASK   (0x100U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USB1_SHIFT  (8U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USB1(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_AWCACHE_USB1_SHIFT)) & IOMUXC_GPR_GPR13_GPR_AWCACHE_USB1_MASK)

#define IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_EN_MASK (0x400U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_EN_SHIFT (10U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_EN(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_EN_SHIFT)) & IOMUXC_GPR_GPR13_GPR_ARCACHE_PCIE_EN_MASK)

#define IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_EN_MASK (0x800U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_EN_SHIFT (11U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_EN(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_EN_SHIFT)) & IOMUXC_GPR_GPR13_GPR_AWCACHE_PCIE_EN_MASK)

#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USB2_MASK   (0x2000U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USB2_SHIFT  (13U)
#define IOMUXC_GPR_GPR13_GPR_ARCACHE_USB2(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_ARCACHE_USB2_SHIFT)) & IOMUXC_GPR_GPR13_GPR_ARCACHE_USB2_MASK)

#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USB2_MASK   (0x4000U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USB2_SHIFT  (14U)
#define IOMUXC_GPR_GPR13_GPR_AWCACHE_USB2(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR13_GPR_AWCACHE_USB2_SHIFT)) & IOMUXC_GPR_GPR13_GPR_AWCACHE_USB2_MASK)
/*! @} */

/*! @name GPR14 - General Purpose Register 14 */
/*! @{ */

#define IOMUXC_GPR_GPR14_GPR_PCIE_APP_CLK_PM_EN_MASK (0x100U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_APP_CLK_PM_EN_SHIFT (8U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_APP_CLK_PM_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR14_GPR_PCIE_APP_CLK_PM_EN_SHIFT)) & IOMUXC_GPR_GPR14_GPR_PCIE_APP_CLK_PM_EN_MASK)

#define IOMUXC_GPR_GPR14_GPR_PCIE_REF_USE_PAD_MASK (0x200U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_REF_USE_PAD_SHIFT (9U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_REF_USE_PAD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR14_GPR_PCIE_REF_USE_PAD_SHIFT)) & IOMUXC_GPR_GPR14_GPR_PCIE_REF_USE_PAD_MASK)

#define IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_EN_MASK (0x400U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_EN_SHIFT (10U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_EN_SHIFT)) & IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_EN_MASK)

#define IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_MASK (0x800U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_SHIFT (11U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_SHIFT)) & IOMUXC_GPR_GPR14_GPR_PCIE_CLKREQ_B_OVERRIDE_MASK)

#define IOMUXC_GPR_GPR14_GPR_PCIE_PHY_CTRL_BUS_MASK (0xF0000U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_PHY_CTRL_BUS_SHIFT (16U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_PHY_CTRL_BUS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR14_GPR_PCIE_PHY_CTRL_BUS_SHIFT)) & IOMUXC_GPR_GPR14_GPR_PCIE_PHY_CTRL_BUS_MASK)

#define IOMUXC_GPR_GPR14_GPR_PCIE_PHY_PLL_REF_CLK_SEL_MASK (0x3000000U)
#define IOMUXC_GPR_GPR14_GPR_PCIE_PHY_PLL_REF_CLK_SEL_SHIFT (24U)
/*! GPR_PCIE_PHY_PLL_REF_CLK_SEL
 *  0b00..N/A
 *  0b01..Selects reference clock from XO (pll_refclk_from_xo)
 *  0b10..Selects reference clock from IO (ext_ref_clkp/n)
 *  0b11..Selects reference clock from SOC PLL (pll_refclk_from_syspll)
 */
#define IOMUXC_GPR_GPR14_GPR_PCIE_PHY_PLL_REF_CLK_SEL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR14_GPR_PCIE_PHY_PLL_REF_CLK_SEL_SHIFT)) & IOMUXC_GPR_GPR14_GPR_PCIE_PHY_PLL_REF_CLK_SEL_MASK)
/*! @} */

/*! @name GPR15 - General Purpose Register 15 */
/*! @{ */

#define IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU3D_MASK (0xFFFFU)
#define IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU3D_SHIFT (0U)
#define IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU3D(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU3D_SHIFT)) & IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU3D_MASK)

#define IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU2D_MASK (0xFFFF0000U)
#define IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU2D_SHIFT (16U)
#define IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU2D(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU2D_SHIFT)) & IOMUXC_GPR_GPR15_GPR_GPUMIX_GPR_AXI_LIMIT_BEAT_LIMIT_GPU2D_MASK)
/*! @} */

/*! @name GPR16 - General Purpose Register 16 */
/*! @{ */

#define IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU3D_MASK (0x1U)
#define IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU3D_SHIFT (0U)
#define IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU3D(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU3D_SHIFT)) & IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU3D_MASK)

#define IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU2D_MASK (0x2U)
#define IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU2D_SHIFT (1U)
#define IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU2D(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU2D_SHIFT)) & IOMUXC_GPR_GPR16_GPR_GPUMIX_GPR_AXI_LIMIT_ENABLE_GPU2D_MASK)
/*! @} */

/*! @name GPR19 - General Purpose Register 19 */
/*! @{ */

#define IOMUXC_GPR_GPR19_PCIE_DIAG_STATUS_MASK   (0xFFFFFFFFU)
#define IOMUXC_GPR_GPR19_PCIE_DIAG_STATUS_SHIFT  (0U)
#define IOMUXC_GPR_GPR19_PCIE_DIAG_STATUS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR19_PCIE_DIAG_STATUS_SHIFT)) & IOMUXC_GPR_GPR19_PCIE_DIAG_STATUS_MASK)
/*! @} */

/*! @name GPR20 - General Purpose Register 20 */
/*! @{ */

#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR33_MASK (0x1U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR33_SHIFT (0U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR32_MASK (0x2U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR32_SHIFT (1U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_AWADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR33_MASK (0x4U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR33_SHIFT (2U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR32_MASK (0x8U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR32_SHIFT (3U)
#define IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC3_M_D_8_ARADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR33_MASK (0x10U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR33_SHIFT (4U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR32_MASK (0x20U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR32_SHIFT (5U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_AWADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR33_MASK (0x40U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR33_SHIFT (6U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR32_MASK (0x80U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR32_SHIFT (7U)
#define IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC2_M_D_7_ARADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR33_MASK (0x100U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR33_SHIFT (8U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR32_MASK (0x200U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR32_SHIFT (9U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_AWADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR33_MASK (0x400U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR33_SHIFT (10U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR32_MASK (0x800U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR32_SHIFT (11U)
#define IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_USDHC1_M_D_6_ARADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR33_MASK (0x1000U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR33_SHIFT (12U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR32_MASK (0x2000U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR32_SHIFT (13U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_AWADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR33_MASK (0x4000U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR33_SHIFT (14U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR32_MASK (0x8000U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR32_SHIFT (15U)
#define IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_RAWNAND_M_D_5_ARADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR33_MASK (0x10000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR33_SHIFT (16U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR32_MASK (0x20000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR32_SHIFT (17U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_AWADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR33_MASK (0x40000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR33_SHIFT (18U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR32_MASK (0x80000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR32_SHIFT (19U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_1_ARADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR33_MASK (0x100000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR33_SHIFT (20U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR32_MASK (0x200000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR32_SHIFT (21U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_AWADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR33_MASK (0x400000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR33_SHIFT (22U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR32_MASK (0x800000U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR32_SHIFT (23U)
#define IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_ENET1_M_E_0_ARADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR33_MASK (0x1000000U)
#define IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR33_SHIFT (24U)
#define IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR32_MASK (0x2000000U)
#define IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR32_SHIFT (25U)
#define IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_DAP_M_D_0_HADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR33_MASK (0x4000000U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR33_SHIFT (26U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR32_MASK (0x8000000U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR32_SHIFT (27U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_AWADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR33_MASK (0x10000000U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR33_SHIFT (28U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR32_MASK (0x20000000U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR32_SHIFT (29U)
#define IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_CORESIGHT_M_A_0_ARADDR32_MASK)

#define IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR33_MASK (0x40000000U)
#define IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR33_SHIFT (30U)
#define IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR33_SHIFT)) & IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR33_MASK)

#define IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR32_MASK (0x80000000U)
#define IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR32_SHIFT (31U)
#define IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR32_SHIFT)) & IOMUXC_GPR_GPR20_GPR_APBHDMA_M_D_4_HADDR32_MASK)
/*! @} */

/*! @name GPR21 - General Purpose Register 21 */
/*! @{ */

#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR33_MASK (0x4000000U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR33_SHIFT (26U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR33_SHIFT)) & IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR33_MASK)

#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR32_MASK (0x8000000U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR32_SHIFT (27U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR32_SHIFT)) & IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_AWADDR32_MASK)

#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR33_MASK (0x10000000U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR33_SHIFT (28U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR33_SHIFT)) & IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR33_MASK)

#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR32_MASK (0x20000000U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR32_SHIFT (29U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR32_SHIFT)) & IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_3_ARADDR32_MASK)

#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR33_MASK (0x40000000U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR33_SHIFT (30U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR33(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR33_SHIFT)) & IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR33_MASK)

#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR32_MASK (0x80000000U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR32_SHIFT (31U)
#define IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR32(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR32_SHIFT)) & IOMUXC_GPR_GPR21_GPR_SDMA1_M_D_2_HADDR32_MASK)
/*! @} */

/*! @name GPR22 - General Purpose Register 22 */
/*! @{ */

#define IOMUXC_GPR_GPR22_GPR_M7_CPUWAIT_MASK     (0x1U)
#define IOMUXC_GPR_GPR22_GPR_M7_CPUWAIT_SHIFT    (0U)
/*! GPR_M7_CPUWAIT
 *  0b0..do not let CM7 enter wait mode
 *  0b1..let CM7 enter wait mode
 */
#define IOMUXC_GPR_GPR22_GPR_M7_CPUWAIT(x)       (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR22_GPR_M7_CPUWAIT_SHIFT)) & IOMUXC_GPR_GPR22_GPR_M7_CPUWAIT_MASK)

#define IOMUXC_GPR_GPR22_GPR_M7_HCLK_AUTO_GATE_EN_MASK (0x4U)
#define IOMUXC_GPR_GPR22_GPR_M7_HCLK_AUTO_GATE_EN_SHIFT (2U)
/*! GPR_M7_HCLK_AUTO_GATE_EN
 *  0b0..depends on the value of "GPR_M7_HCLK_GATE_EN"
 *  0b1..ignore the value of "GPR_M7_HCLK_GATE_EN"
 */
#define IOMUXC_GPR_GPR22_GPR_M7_HCLK_AUTO_GATE_EN(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR22_GPR_M7_HCLK_AUTO_GATE_EN_SHIFT)) & IOMUXC_GPR_GPR22_GPR_M7_HCLK_AUTO_GATE_EN_MASK)

#define IOMUXC_GPR_GPR22_GPR_M7_HCLK_GATE_EN_MASK (0x8U)
#define IOMUXC_GPR_GPR22_GPR_M7_HCLK_GATE_EN_SHIFT (3U)
/*! GPR_M7_HCLK_GATE_EN
 *  0b0..gate on
 *  0b1..gate off
 */
#define IOMUXC_GPR_GPR22_GPR_M7_HCLK_GATE_EN(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR22_GPR_M7_HCLK_GATE_EN_SHIFT)) & IOMUXC_GPR_GPR22_GPR_M7_HCLK_GATE_EN_MASK)

#define IOMUXC_GPR_GPR22_SJC_CHALLENGE_RESPONSE_AUTHENTICATION_FAIL_MASK (0x10000U)
#define IOMUXC_GPR_GPR22_SJC_CHALLENGE_RESPONSE_AUTHENTICATION_FAIL_SHIFT (16U)
#define IOMUXC_GPR_GPR22_SJC_CHALLENGE_RESPONSE_AUTHENTICATION_FAIL(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR22_SJC_CHALLENGE_RESPONSE_AUTHENTICATION_FAIL_SHIFT)) & IOMUXC_GPR_GPR22_SJC_CHALLENGE_RESPONSE_AUTHENTICATION_FAIL_MASK)
/*! @} */

/*! @name GPR24 - General Purpose Register 24 */
/*! @{ */

#define IOMUXC_GPR_GPR24_GPR_GPU2D_DEBUG_OUT_MASK (0xFFU)
#define IOMUXC_GPR_GPR24_GPR_GPU2D_DEBUG_OUT_SHIFT (0U)
#define IOMUXC_GPR_GPR24_GPR_GPU2D_DEBUG_OUT(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR24_GPR_GPU2D_DEBUG_OUT_SHIFT)) & IOMUXC_GPR_GPR24_GPR_GPU2D_DEBUG_OUT_MASK)

#define IOMUXC_GPR_GPR24_GPR_GPU3D_DEBUG_OUT_MASK (0xFF00U)
#define IOMUXC_GPR_GPR24_GPR_GPU3D_DEBUG_OUT_SHIFT (8U)
#define IOMUXC_GPR_GPR24_GPR_GPU3D_DEBUG_OUT(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR24_GPR_GPU3D_DEBUG_OUT_SHIFT)) & IOMUXC_GPR_GPR24_GPR_GPU3D_DEBUG_OUT_MASK)

#define IOMUXC_GPR_GPR24_GPR_MLMIX_DEBUG_OUT_MASK (0xFF0000U)
#define IOMUXC_GPR_GPR24_GPR_MLMIX_DEBUG_OUT_SHIFT (16U)
#define IOMUXC_GPR_GPR24_GPR_MLMIX_DEBUG_OUT(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_GPR_GPR24_GPR_MLMIX_DEBUG_OUT_SHIFT)) & IOMUXC_GPR_GPR24_GPR_MLMIX_DEBUG_OUT_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group IOMUXC_GPR_Register_Masks */


/*!
 * @}
 */ /* end of group IOMUXC_GPR_Peripheral_Access_Layer */


/*
** End of section using anonymous unions
*/

#if defined(__ARMCC_VERSION)
  #if (__ARMCC_VERSION >= 6010050)
    #pragma clang diagnostic pop
  #else
    #pragma pop
  #endif
#elif defined(__GNUC__)
  /* leave anonymous unions enabled */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=default
#elif defined(__XTENSA__)
  /* leave anonymous unions enabled */
#else
  #error Not supported compiler type
#endif

/*!
 * @}
 */ /* end of group Peripheral_access_layer */


#endif  /* IOMUXC_GPR_H_ */

