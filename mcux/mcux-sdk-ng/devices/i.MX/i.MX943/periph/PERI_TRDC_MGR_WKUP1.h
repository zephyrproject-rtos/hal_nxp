/*
** ###################################################################
**     Processors:          MIMX94398AVKE_ca55
**                          MIMX94398AVKE_cm33_core0
**                          MIMX94398AVKE_cm33_core1
**                          MIMX94398AVKE_cm7_core0
**                          MIMX94398AVKE_cm7_core1
**                          MIMX94398AVKJ_ca55
**                          MIMX94398AVKJ_cm33_core0
**                          MIMX94398AVKJ_cm33_core1
**                          MIMX94398AVKJ_cm7_core0
**                          MIMX94398AVKJ_cm7_core1
**                          MIMX94398AVKM_ca55
**                          MIMX94398AVKM_cm33_core0
**                          MIMX94398AVKM_cm33_core1
**                          MIMX94398AVKM_cm7_core0
**                          MIMX94398AVKM_cm7_core1
**                          MIMX94398AVME_ca55
**                          MIMX94398AVME_cm33_core0
**                          MIMX94398AVME_cm33_core1
**                          MIMX94398AVME_cm7_core0
**                          MIMX94398AVME_cm7_core1
**                          MIMX94398AVMJ_ca55
**                          MIMX94398AVMJ_cm33_core0
**                          MIMX94398AVMJ_cm33_core1
**                          MIMX94398AVMJ_cm7_core0
**                          MIMX94398AVMJ_cm7_core1
**                          MIMX94398AVMM_ca55
**                          MIMX94398AVMM_cm33_core0
**                          MIMX94398AVMM_cm33_core1
**                          MIMX94398AVMM_cm7_core0
**                          MIMX94398AVMM_cm7_core1
**                          MIMX94398CVKE_ca55
**                          MIMX94398CVKE_cm33_core0
**                          MIMX94398CVKE_cm33_core1
**                          MIMX94398CVKE_cm7_core0
**                          MIMX94398CVKE_cm7_core1
**                          MIMX94398CVKJ_ca55
**                          MIMX94398CVKJ_cm33_core0
**                          MIMX94398CVKJ_cm33_core1
**                          MIMX94398CVKJ_cm7_core0
**                          MIMX94398CVKJ_cm7_core1
**                          MIMX94398CVKM_ca55
**                          MIMX94398CVKM_cm33_core0
**                          MIMX94398CVKM_cm33_core1
**                          MIMX94398CVKM_cm7_core0
**                          MIMX94398CVKM_cm7_core1
**                          MIMX94398CVME_ca55
**                          MIMX94398CVME_cm33_core0
**                          MIMX94398CVME_cm33_core1
**                          MIMX94398CVME_cm7_core0
**                          MIMX94398CVME_cm7_core1
**                          MIMX94398CVMJ_ca55
**                          MIMX94398CVMJ_cm33_core0
**                          MIMX94398CVMJ_cm33_core1
**                          MIMX94398CVMJ_cm7_core0
**                          MIMX94398CVMJ_cm7_core1
**                          MIMX94398CVMM_ca55
**                          MIMX94398CVMM_cm33_core0
**                          MIMX94398CVMM_cm33_core1
**                          MIMX94398CVMM_cm7_core0
**                          MIMX94398CVMM_cm7_core1
**                          MIMX94398DVKE_ca55
**                          MIMX94398DVKE_cm33_core0
**                          MIMX94398DVKE_cm33_core1
**                          MIMX94398DVKE_cm7_core0
**                          MIMX94398DVKE_cm7_core1
**                          MIMX94398DVKJ_ca55
**                          MIMX94398DVKJ_cm33_core0
**                          MIMX94398DVKJ_cm33_core1
**                          MIMX94398DVKJ_cm7_core0
**                          MIMX94398DVKJ_cm7_core1
**                          MIMX94398DVKM_ca55
**                          MIMX94398DVKM_cm33_core0
**                          MIMX94398DVKM_cm33_core1
**                          MIMX94398DVKM_cm7_core0
**                          MIMX94398DVKM_cm7_core1
**                          MIMX94398DVME_ca55
**                          MIMX94398DVME_cm33_core0
**                          MIMX94398DVME_cm33_core1
**                          MIMX94398DVME_cm7_core0
**                          MIMX94398DVME_cm7_core1
**                          MIMX94398DVMJ_ca55
**                          MIMX94398DVMJ_cm33_core0
**                          MIMX94398DVMJ_cm33_core1
**                          MIMX94398DVMJ_cm7_core0
**                          MIMX94398DVMJ_cm7_core1
**                          MIMX94398DVMM_ca55
**                          MIMX94398DVMM_cm33_core0
**                          MIMX94398DVMM_cm33_core1
**                          MIMX94398DVMM_cm7_core0
**                          MIMX94398DVMM_cm7_core1
**                          MIMX94398XVKE_ca55
**                          MIMX94398XVKE_cm33_core0
**                          MIMX94398XVKE_cm33_core1
**                          MIMX94398XVKE_cm7_core0
**                          MIMX94398XVKE_cm7_core1
**                          MIMX94398XVKJ_ca55
**                          MIMX94398XVKJ_cm33_core0
**                          MIMX94398XVKJ_cm33_core1
**                          MIMX94398XVKJ_cm7_core0
**                          MIMX94398XVKJ_cm7_core1
**                          MIMX94398XVKM_ca55
**                          MIMX94398XVKM_cm33_core0
**                          MIMX94398XVKM_cm33_core1
**                          MIMX94398XVKM_cm7_core0
**                          MIMX94398XVKM_cm7_core1
**                          MIMX94398XVME_ca55
**                          MIMX94398XVME_cm33_core0
**                          MIMX94398XVME_cm33_core1
**                          MIMX94398XVME_cm7_core0
**                          MIMX94398XVME_cm7_core1
**                          MIMX94398XVMJ_ca55
**                          MIMX94398XVMJ_cm33_core0
**                          MIMX94398XVMJ_cm33_core1
**                          MIMX94398XVMJ_cm7_core0
**                          MIMX94398XVMJ_cm7_core1
**                          MIMX94398XVMM_ca55
**                          MIMX94398XVMM_cm33_core0
**                          MIMX94398XVMM_cm33_core1
**                          MIMX94398XVMM_cm7_core0
**                          MIMX94398XVMM_cm7_core1
**
**     Version:             rev. 1.0, 2023-11-01
**     Build:               b250109
**
**     Abstract:
**         CMSIS Peripheral Access Layer for TRDC_MGR_WKUP1
**
**     Copyright 1997-2016 Freescale Semiconductor, Inc.
**     Copyright 2016-2025 NXP
**     SPDX-License-Identifier: BSD-3-Clause
**
**     http:                 www.nxp.com
**     mail:                 support@nxp.com
**
**     Revisions:
**     - rev. 1.0 (2023-11-01)
**         Initial version.
**         core name and core alias name
**         +---------------------------------------------------------------------+
**         | core name  |                  core alias name                       |
**         +---------------------------------------------------------------------+
**         | cm33_core0 | m33, cm33                                              |
**         +---------------------------------------------------------------------+
**         | cm33_core1 | m33_2, cm33_2, cm33_sync, netcmix_cm33                 |
**         +---------------------------------------------------------------------+
**         | cm7_core0  | m7, cm7                                                |
**         +---------------------------------------------------------------------+
**         | cm7_core1  | m7_2, cm7_2                                            |
**         +---------------------------------------------------------------------+
**         | ca55_core0 | a55, ca55, a55_0, ca55_0                               |
**         +---------------------------------------------------------------------+
**         | ca55_core1 | a55, ca55, a55_1, ca55_1                               |
**         +---------------------------------------------------------------------+
**         | ca55_core2 | a55, ca55, a55_2, ca55_2                               |
**         +---------------------------------------------------------------------+
**         | ca55_core3 | a55, ca55, a55_3, ca55_3                               |
**         +---------------------------------------------------------------------+
**
** ###################################################################
*/

/*!
 * @file TRDC_MGR_WKUP1.h
 * @version 1.0
 * @date 2023-11-01
 * @brief CMSIS Peripheral Access Layer for TRDC_MGR_WKUP1
 *
 * CMSIS Peripheral Access Layer for TRDC_MGR_WKUP1
 */

#if !defined(TRDC_MGR_WKUP1_H_)
#define TRDC_MGR_WKUP1_H_                        /**< Symbol preventing repeated inclusion */

#if (defined(CPU_MIMX94398AVKE_ca55) || defined(CPU_MIMX94398AVKJ_ca55) || defined(CPU_MIMX94398AVKM_ca55) || defined(CPU_MIMX94398AVME_ca55) || defined(CPU_MIMX94398AVMJ_ca55) || defined(CPU_MIMX94398AVMM_ca55) || defined(CPU_MIMX94398CVKE_ca55) || defined(CPU_MIMX94398CVKJ_ca55) || defined(CPU_MIMX94398CVKM_ca55) || defined(CPU_MIMX94398CVME_ca55) || defined(CPU_MIMX94398CVMJ_ca55) || defined(CPU_MIMX94398CVMM_ca55) || defined(CPU_MIMX94398DVKE_ca55) || defined(CPU_MIMX94398DVKJ_ca55) || defined(CPU_MIMX94398DVKM_ca55) || defined(CPU_MIMX94398DVME_ca55) || defined(CPU_MIMX94398DVMJ_ca55) || defined(CPU_MIMX94398DVMM_ca55) || defined(CPU_MIMX94398XVKE_ca55) || defined(CPU_MIMX94398XVKJ_ca55) || defined(CPU_MIMX94398XVKM_ca55) || defined(CPU_MIMX94398XVME_ca55) || defined(CPU_MIMX94398XVMJ_ca55) || defined(CPU_MIMX94398XVMM_ca55))
#include "MIMX94398_ca55_COMMON.h"
#elif (defined(CPU_MIMX94398AVKE_cm33_core0) || defined(CPU_MIMX94398AVKJ_cm33_core0) || defined(CPU_MIMX94398AVKM_cm33_core0) || defined(CPU_MIMX94398AVME_cm33_core0) || defined(CPU_MIMX94398AVMJ_cm33_core0) || defined(CPU_MIMX94398AVMM_cm33_core0) || defined(CPU_MIMX94398CVKE_cm33_core0) || defined(CPU_MIMX94398CVKJ_cm33_core0) || defined(CPU_MIMX94398CVKM_cm33_core0) || defined(CPU_MIMX94398CVME_cm33_core0) || defined(CPU_MIMX94398CVMJ_cm33_core0) || defined(CPU_MIMX94398CVMM_cm33_core0) || defined(CPU_MIMX94398DVKE_cm33_core0) || defined(CPU_MIMX94398DVKJ_cm33_core0) || defined(CPU_MIMX94398DVKM_cm33_core0) || defined(CPU_MIMX94398DVME_cm33_core0) || defined(CPU_MIMX94398DVMJ_cm33_core0) || defined(CPU_MIMX94398DVMM_cm33_core0) || defined(CPU_MIMX94398XVKE_cm33_core0) || defined(CPU_MIMX94398XVKJ_cm33_core0) || defined(CPU_MIMX94398XVKM_cm33_core0) || defined(CPU_MIMX94398XVME_cm33_core0) || defined(CPU_MIMX94398XVMJ_cm33_core0) || defined(CPU_MIMX94398XVMM_cm33_core0))
#include "MIMX94398_cm33_core0_COMMON.h"
#elif (defined(CPU_MIMX94398AVKE_cm33_core1) || defined(CPU_MIMX94398AVKJ_cm33_core1) || defined(CPU_MIMX94398AVKM_cm33_core1) || defined(CPU_MIMX94398AVME_cm33_core1) || defined(CPU_MIMX94398AVMJ_cm33_core1) || defined(CPU_MIMX94398AVMM_cm33_core1) || defined(CPU_MIMX94398CVKE_cm33_core1) || defined(CPU_MIMX94398CVKJ_cm33_core1) || defined(CPU_MIMX94398CVKM_cm33_core1) || defined(CPU_MIMX94398CVME_cm33_core1) || defined(CPU_MIMX94398CVMJ_cm33_core1) || defined(CPU_MIMX94398CVMM_cm33_core1) || defined(CPU_MIMX94398DVKE_cm33_core1) || defined(CPU_MIMX94398DVKJ_cm33_core1) || defined(CPU_MIMX94398DVKM_cm33_core1) || defined(CPU_MIMX94398DVME_cm33_core1) || defined(CPU_MIMX94398DVMJ_cm33_core1) || defined(CPU_MIMX94398DVMM_cm33_core1) || defined(CPU_MIMX94398XVKE_cm33_core1) || defined(CPU_MIMX94398XVKJ_cm33_core1) || defined(CPU_MIMX94398XVKM_cm33_core1) || defined(CPU_MIMX94398XVME_cm33_core1) || defined(CPU_MIMX94398XVMJ_cm33_core1) || defined(CPU_MIMX94398XVMM_cm33_core1))
#include "MIMX94398_cm33_core1_COMMON.h"
#elif (defined(CPU_MIMX94398AVKE_cm7_core0) || defined(CPU_MIMX94398AVKJ_cm7_core0) || defined(CPU_MIMX94398AVKM_cm7_core0) || defined(CPU_MIMX94398AVME_cm7_core0) || defined(CPU_MIMX94398AVMJ_cm7_core0) || defined(CPU_MIMX94398AVMM_cm7_core0) || defined(CPU_MIMX94398CVKE_cm7_core0) || defined(CPU_MIMX94398CVKJ_cm7_core0) || defined(CPU_MIMX94398CVKM_cm7_core0) || defined(CPU_MIMX94398CVME_cm7_core0) || defined(CPU_MIMX94398CVMJ_cm7_core0) || defined(CPU_MIMX94398CVMM_cm7_core0) || defined(CPU_MIMX94398DVKE_cm7_core0) || defined(CPU_MIMX94398DVKJ_cm7_core0) || defined(CPU_MIMX94398DVKM_cm7_core0) || defined(CPU_MIMX94398DVME_cm7_core0) || defined(CPU_MIMX94398DVMJ_cm7_core0) || defined(CPU_MIMX94398DVMM_cm7_core0) || defined(CPU_MIMX94398XVKE_cm7_core0) || defined(CPU_MIMX94398XVKJ_cm7_core0) || defined(CPU_MIMX94398XVKM_cm7_core0) || defined(CPU_MIMX94398XVME_cm7_core0) || defined(CPU_MIMX94398XVMJ_cm7_core0) || defined(CPU_MIMX94398XVMM_cm7_core0))
#include "MIMX94398_cm7_core0_COMMON.h"
#elif (defined(CPU_MIMX94398AVKE_cm7_core1) || defined(CPU_MIMX94398AVKJ_cm7_core1) || defined(CPU_MIMX94398AVKM_cm7_core1) || defined(CPU_MIMX94398AVME_cm7_core1) || defined(CPU_MIMX94398AVMJ_cm7_core1) || defined(CPU_MIMX94398AVMM_cm7_core1) || defined(CPU_MIMX94398CVKE_cm7_core1) || defined(CPU_MIMX94398CVKJ_cm7_core1) || defined(CPU_MIMX94398CVKM_cm7_core1) || defined(CPU_MIMX94398CVME_cm7_core1) || defined(CPU_MIMX94398CVMJ_cm7_core1) || defined(CPU_MIMX94398CVMM_cm7_core1) || defined(CPU_MIMX94398DVKE_cm7_core1) || defined(CPU_MIMX94398DVKJ_cm7_core1) || defined(CPU_MIMX94398DVKM_cm7_core1) || defined(CPU_MIMX94398DVME_cm7_core1) || defined(CPU_MIMX94398DVMJ_cm7_core1) || defined(CPU_MIMX94398DVMM_cm7_core1) || defined(CPU_MIMX94398XVKE_cm7_core1) || defined(CPU_MIMX94398XVKJ_cm7_core1) || defined(CPU_MIMX94398XVKM_cm7_core1) || defined(CPU_MIMX94398XVME_cm7_core1) || defined(CPU_MIMX94398XVMJ_cm7_core1) || defined(CPU_MIMX94398XVMM_cm7_core1))
#include "MIMX94398_cm7_core1_COMMON.h"
#else
  #error "No valid CPU defined!"
#endif

/* ----------------------------------------------------------------------------
   -- Device Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Peripheral_access_layer Device Peripheral Access Layer
 * @{
 */


/*
** Start of section using anonymous unions
*/

#if defined(__ARMCC_VERSION)
  #if (__ARMCC_VERSION >= 6010050)
    #pragma clang diagnostic push
  #else
    #pragma push
    #pragma anon_unions
  #endif
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=extended
#else
  #error Not supported compiler type
#endif

/* ----------------------------------------------------------------------------
   -- TRDC_MGR_WKUP1 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TRDC_MGR_WKUP1_Peripheral_Access_Layer TRDC_MGR_WKUP1 Peripheral Access Layer
 * @{
 */

/** TRDC_MGR_WKUP1 - Size of Registers Arrays */
#define TRDC_MGR_WKUP1_DERRLOC_COUNT              16u
#define TRDC_MGR_WKUP1_MBC_DERR_COUNT             3u
#define TRDC_MGR_WKUP1_MRC_DERR_COUNT             5u
#define TRDC_MGR_WKUP1_MBC_MEM_GLBCFG0_COUNT      4u
#define TRDC_MGR_WKUP1_MBC_MEMN_GLBAC0_COUNT      8u
#define TRDC_MGR_WKUP1_MBC_MEM_GLBCFG1_COUNT      4u
#define TRDC_MGR_WKUP1_MBC_MEMN_GLBAC1_COUNT      8u
#define TRDC_MGR_WKUP1_MBC_MEM_GLBCFG2_COUNT      4u
#define TRDC_MGR_WKUP1_MBC_MEMN_GLBAC2_COUNT      8u
#define TRDC_MGR_WKUP1_MRC0_GLBAC_COUNT           8u
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC1_GLBAC_COUNT           8u
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC2_GLBAC_COUNT           8u
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC3_GLBAC_COUNT           8u
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC4_GLBAC_COUNT           8u
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_COUNT        8u
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_COUNT       8u
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_COUNT       8u

/** TRDC_MGR_WKUP1 - Register Layout Typedef */
typedef struct {
  __IO uint32_t TRDC_CR;                           /**< TRDC Register, offset: 0x0 */
       uint8_t RESERVED_0[236];
  __I  uint32_t TRDC_HWCFG0;                       /**< TRDC Hardware Configuration Register 0, offset: 0xF0 */
  __I  uint32_t TRDC_HWCFG1;                       /**< TRDC Hardware Configuration Register 1, offset: 0xF4 */
  __I  uint32_t TRDC_HWCFG2;                       /**< TRDC Hardware Configuration Register 2, offset: 0xF8 */
  __I  uint32_t TRDC_HWCFG3;                       /**< TRDC Hardware Configuration Register 3, offset: 0xFC */
  __I  uint8_t DACFG0;                             /**< Domain Assignment Configuration Register, offset: 0x100 */
  __I  uint8_t DACFG1;                             /**< Domain Assignment Configuration Register, offset: 0x101 */
  __I  uint8_t DACFG2;                             /**< Domain Assignment Configuration Register, offset: 0x102 */
  __I  uint8_t DACFG3;                             /**< Domain Assignment Configuration Register, offset: 0x103 */
  __I  uint8_t DACFG4;                             /**< Domain Assignment Configuration Register, offset: 0x104 */
  __I  uint8_t DACFG5;                             /**< Domain Assignment Configuration Register, offset: 0x105 */
  __I  uint8_t DACFG6;                             /**< Domain Assignment Configuration Register, offset: 0x106 */
  __I  uint8_t DACFG7;                             /**< Domain Assignment Configuration Register, offset: 0x107 */
  __I  uint8_t DACFG8;                             /**< Domain Assignment Configuration Register, offset: 0x108 */
  __I  uint8_t DACFG9;                             /**< Domain Assignment Configuration Register, offset: 0x109 */
  __I  uint8_t DACFG10;                            /**< Domain Assignment Configuration Register, offset: 0x10A */
  __I  uint8_t DACFG11;                            /**< Domain Assignment Configuration Register, offset: 0x10B */
  __I  uint8_t DACFG12;                            /**< Domain Assignment Configuration Register, offset: 0x10C */
  __I  uint8_t DACFG13;                            /**< Domain Assignment Configuration Register, offset: 0x10D */
  __I  uint8_t DACFG14;                            /**< Domain Assignment Configuration Register, offset: 0x10E */
  __I  uint8_t DACFG15;                            /**< Domain Assignment Configuration Register, offset: 0x10F */
  __I  uint8_t DACFG16;                            /**< Domain Assignment Configuration Register, offset: 0x110 */
  __I  uint8_t DACFG17;                            /**< Domain Assignment Configuration Register, offset: 0x111 */
  __I  uint8_t DACFG18;                            /**< Domain Assignment Configuration Register, offset: 0x112 */
  __I  uint8_t DACFG19;                            /**< Domain Assignment Configuration Register, offset: 0x113 */
  __I  uint8_t DACFG20;                            /**< Domain Assignment Configuration Register, offset: 0x114 */
  __I  uint8_t DACFG21;                            /**< Domain Assignment Configuration Register, offset: 0x115 */
  __I  uint8_t DACFG22;                            /**< Domain Assignment Configuration Register, offset: 0x116 */
  __I  uint8_t DACFG23;                            /**< Domain Assignment Configuration Register, offset: 0x117 */
  __I  uint8_t DACFG24;                            /**< Domain Assignment Configuration Register, offset: 0x118 */
  __I  uint8_t DACFG25;                            /**< Domain Assignment Configuration Register, offset: 0x119 */
  __I  uint8_t DACFG26;                            /**< Domain Assignment Configuration Register, offset: 0x11A */
  __I  uint8_t DACFG27;                            /**< Domain Assignment Configuration Register, offset: 0x11B */
  __I  uint8_t DACFG28;                            /**< Domain Assignment Configuration Register, offset: 0x11C */
  __I  uint8_t DACFG29;                            /**< Domain Assignment Configuration Register, offset: 0x11D */
  __I  uint8_t DACFG30;                            /**< Domain Assignment Configuration Register, offset: 0x11E */
  __I  uint8_t DACFG31;                            /**< Domain Assignment Configuration Register, offset: 0x11F */
  __I  uint8_t DACFG32;                            /**< Domain Assignment Configuration Register, offset: 0x120 */
  __I  uint8_t DACFG33;                            /**< Domain Assignment Configuration Register, offset: 0x121 */
  __I  uint8_t DACFG34;                            /**< Domain Assignment Configuration Register, offset: 0x122 */
  __I  uint8_t DACFG35;                            /**< Domain Assignment Configuration Register, offset: 0x123 */
  __I  uint8_t DACFG36;                            /**< Domain Assignment Configuration Register, offset: 0x124 */
  __I  uint8_t DACFG37;                            /**< Domain Assignment Configuration Register, offset: 0x125 */
       uint8_t RESERVED_1[154];
  __IO uint32_t TRDC_IDAU_CR;                      /**< TRDC IDAU Control Register, offset: 0x1C0 */
       uint8_t RESERVED_2[28];
  __IO uint32_t TRDC_FLW_CTL;                      /**< TRDC FLW Control, offset: 0x1E0 */
  __I  uint32_t TRDC_FLW_PBASE;                    /**< TRDC FLW Physical Base, offset: 0x1E4 */
  __IO uint32_t TRDC_FLW_ABASE;                    /**< TRDC FLW Array Base, offset: 0x1E8 */
  __IO uint32_t TRDC_FLW_BCNT;                     /**< TRDC FLW Block Count, offset: 0x1EC */
       uint8_t RESERVED_3[12];
  __IO uint32_t TRDC_FDID;                         /**< TRDC Fault Domain ID, offset: 0x1FC */
  __I  uint32_t TRDC_DERRLOC[TRDC_MGR_WKUP1_DERRLOC_COUNT]; /**< TRDC Domain Error Location Register, array offset: 0x200, array step: 0x4 */
       uint8_t RESERVED_4[448];
  struct {                                         /* offset: 0x400, array step: 0x10 */
    __I  uint32_t W0;                                /**< MBC Domain Error Word0 Register, array offset: 0x400, array step: 0x10 */
    __I  uint32_t W1;                                /**< MBC Domain Error Word1 Register, array offset: 0x404, array step: 0x10 */
         uint8_t RESERVED_0[4];
    __IO uint32_t W3;                                /**< MBC Domain Error Word3 Register, array offset: 0x40C, array step: 0x10 */
  } MBC_DERR[TRDC_MGR_WKUP1_MBC_DERR_COUNT];
       uint8_t RESERVED_5[80];
  struct {                                         /* offset: 0x480, array step: 0x10 */
    __I  uint32_t W0;                                /**< MRC Domain Error Word0 Register, array offset: 0x480, array step: 0x10 */
    __I  uint32_t W1;                                /**< MRC Domain Error Word1 Register, array offset: 0x484, array step: 0x10 */
         uint8_t RESERVED_0[4];
    __IO uint32_t W3;                                /**< MRC Domain Error Word3 Register, array offset: 0x48C, array step: 0x10 */
  } MRC_DERR[TRDC_MGR_WKUP1_MRC_DERR_COUNT];
       uint8_t RESERVED_6[816];
  __IO uint32_t MDA_W0_0_DFMT0;                    /**< DAC Master Domain Assignment Register, offset: 0x800 */
       uint8_t RESERVED_7[28];
  __IO uint32_t MDA_W0_1_DFMT0;                    /**< DAC Master Domain Assignment Register, offset: 0x820 */
       uint8_t RESERVED_8[28];
  __IO uint32_t MDA_W0_2_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x840 */
       uint8_t RESERVED_9[28];
  __IO uint32_t MDA_W0_3_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x860 */
       uint8_t RESERVED_10[28];
  __IO uint32_t MDA_W0_4_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x880 */
       uint8_t RESERVED_11[28];
  __IO uint32_t MDA_W0_5_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x8A0 */
       uint8_t RESERVED_12[28];
  __IO uint32_t MDA_W0_6_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x8C0 */
       uint8_t RESERVED_13[28];
  __IO uint32_t MDA_W0_7_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x8E0 */
       uint8_t RESERVED_14[28];
  __IO uint32_t MDA_W0_8_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x900 */
       uint8_t RESERVED_15[28];
  __IO uint32_t MDA_W0_9_DFMT1;                    /**< DAC Master Domain Assignment Register, offset: 0x920 */
       uint8_t RESERVED_16[28];
  __IO uint32_t MDA_W0_10_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0x940 */
       uint8_t RESERVED_17[28];
  __IO uint32_t MDA_W0_11_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0x960 */
       uint8_t RESERVED_18[28];
  __IO uint32_t MDA_W0_12_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0x980 */
       uint8_t RESERVED_19[28];
  __IO uint32_t MDA_W0_13_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0x9A0 */
       uint8_t RESERVED_20[28];
  __IO uint32_t MDA_W0_14_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0x9C0 */
       uint8_t RESERVED_21[28];
  __IO uint32_t MDA_W0_15_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0x9E0 */
       uint8_t RESERVED_22[28];
  __IO uint32_t MDA_W0_16_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xA00 */
       uint8_t RESERVED_23[28];
  __IO uint32_t MDA_W0_17_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xA20 */
       uint8_t RESERVED_24[28];
  __IO uint32_t MDA_W0_18_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xA40 */
       uint8_t RESERVED_25[28];
  __IO uint32_t MDA_W0_19_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xA60 */
       uint8_t RESERVED_26[28];
  __IO uint32_t MDA_W0_20_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xA80 */
       uint8_t RESERVED_27[28];
  __IO uint32_t MDA_W0_21_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xAA0 */
       uint8_t RESERVED_28[28];
  __IO uint32_t MDA_W0_22_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xAC0 */
       uint8_t RESERVED_29[28];
  __IO uint32_t MDA_W0_23_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xAE0 */
       uint8_t RESERVED_30[28];
  __IO uint32_t MDA_W0_24_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xB00 */
       uint8_t RESERVED_31[28];
  __IO uint32_t MDA_W0_25_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xB20 */
       uint8_t RESERVED_32[28];
  __IO uint32_t MDA_W0_26_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xB40 */
       uint8_t RESERVED_33[28];
  __IO uint32_t MDA_W0_27_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xB60 */
       uint8_t RESERVED_34[28];
  __IO uint32_t MDA_W0_28_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xB80 */
       uint8_t RESERVED_35[28];
  __IO uint32_t MDA_W0_29_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xBA0 */
       uint8_t RESERVED_36[28];
  __IO uint32_t MDA_W0_30_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xBC0 */
       uint8_t RESERVED_37[28];
  __IO uint32_t MDA_W0_31_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xBE0 */
       uint8_t RESERVED_38[28];
  __IO uint32_t MDA_W0_32_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xC00 */
       uint8_t RESERVED_39[28];
  __IO uint32_t MDA_W0_33_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xC20 */
       uint8_t RESERVED_40[28];
  __IO uint32_t MDA_W0_34_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xC40 */
       uint8_t RESERVED_41[28];
  __IO uint32_t MDA_W0_35_DFMT1;                   /**< DAC Master Domain Assignment Register, offset: 0xC60 */
       uint8_t RESERVED_42[28];
  __IO uint32_t MDA_W0_36_DFMT0;                   /**< DAC Master Domain Assignment Register, offset: 0xC80 */
       uint8_t RESERVED_43[28];
  __IO uint32_t MDA_W0_37_DFMT0;                   /**< DAC Master Domain Assignment Register, offset: 0xCA0 */
       uint8_t RESERVED_44[62300];
  __I  uint32_t MBC0_MEM_GLBCFG[TRDC_MGR_WKUP1_MBC_MEM_GLBCFG0_COUNT]; /**< MBC Global Configuration Register, array offset: 0x10000, array step: 0x4 */
  __IO uint32_t MBC0_NSE_BLK_INDEX;                /**< MBC NonSecure Enable Block Index, offset: 0x10010 */
  __IO uint32_t MBC0_NSE_BLK_SET;                  /**< MBC NonSecure Enable Block Set, offset: 0x10014 */
  __IO uint32_t MBC0_NSE_BLK_CLR;                  /**< MBC NonSecure Enable Block Clear, offset: 0x10018 */
  __IO uint32_t MBC0_NSE_BLK_CLR_ALL;              /**< MBC NonSecure Enable Block Clear All, offset: 0x1001C */
  __IO uint32_t MBC0_MEMN_GLBAC[TRDC_MGR_WKUP1_MBC_MEMN_GLBAC0_COUNT]; /**< MBC Global Access Control, array offset: 0x10020, array step: 0x4 */
       uint8_t RESERVED_45[8128];
  __I  uint32_t MBC1_MEM_GLBCFG[TRDC_MGR_WKUP1_MBC_MEM_GLBCFG1_COUNT]; /**< MBC Global Configuration Register, array offset: 0x12000, array step: 0x4 */
  __IO uint32_t MBC1_NSE_BLK_INDEX;                /**< MBC NonSecure Enable Block Index, offset: 0x12010 */
  __IO uint32_t MBC1_NSE_BLK_SET;                  /**< MBC NonSecure Enable Block Set, offset: 0x12014 */
  __IO uint32_t MBC1_NSE_BLK_CLR;                  /**< MBC NonSecure Enable Block Clear, offset: 0x12018 */
  __IO uint32_t MBC1_NSE_BLK_CLR_ALL;              /**< MBC NonSecure Enable Block Clear All, offset: 0x1201C */
  __IO uint32_t MBC1_MEMN_GLBAC[TRDC_MGR_WKUP1_MBC_MEMN_GLBAC1_COUNT]; /**< MBC Global Access Control, array offset: 0x12020, array step: 0x4 */
       uint8_t RESERVED_46[8128];
  __I  uint32_t MBC2_MEM_GLBCFG[TRDC_MGR_WKUP1_MBC_MEM_GLBCFG2_COUNT]; /**< MBC Global Configuration Register, array offset: 0x14000, array step: 0x4 */
  __IO uint32_t MBC2_NSE_BLK_INDEX;                /**< MBC NonSecure Enable Block Index, offset: 0x14010 */
  __IO uint32_t MBC2_NSE_BLK_SET;                  /**< MBC NonSecure Enable Block Set, offset: 0x14014 */
  __IO uint32_t MBC2_NSE_BLK_CLR;                  /**< MBC NonSecure Enable Block Clear, offset: 0x14018 */
  __IO uint32_t MBC2_NSE_BLK_CLR_ALL;              /**< MBC NonSecure Enable Block Clear All, offset: 0x1401C */
  __IO uint32_t MBC2_MEMN_GLBAC[TRDC_MGR_WKUP1_MBC_MEMN_GLBAC2_COUNT]; /**< MBC Global Access Control, array offset: 0x14020, array step: 0x4 */
       uint8_t RESERVED_47[8128];
  __I  uint32_t MRC0_GLBCFG;                       /**< MRC Global Configuration Register, offset: 0x16000 */
       uint8_t RESERVED_48[12];
  __IO uint32_t MRC0_NSE_RGN_INDIRECT;             /**< MRC NonSecure Enable Region Indirect, offset: 0x16010 */
  __IO uint32_t MRC0_NSE_RGN_SET;                  /**< MRC NonSecure Enable Region Set, offset: 0x16014 */
  __IO uint32_t MRC0_NSE_RGN_CLR;                  /**< MRC NonSecure Enable Region Clear, offset: 0x16018 */
  __IO uint32_t MRC0_NSE_RGN_CLR_ALL;              /**< MRC NonSecure Enable Region Clear All, offset: 0x1601C */
  __IO uint32_t MRC0_GLBAC[TRDC_MGR_WKUP1_MRC0_GLBAC_COUNT]; /**< MRC Global Access Control, array offset: 0x16020, array step: 0x4 */
  struct {                                         /* offset: 0x16040, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16040, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16044, array step: 0x8 */
  } MRC0_DOM0_RGD[TRDC_MGR_WKUP1_MRC0_DOM0_RGD_COUNT];
       uint8_t RESERVED_49[64];
  __IO uint32_t MRC0_DOM0_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x160C0 */
       uint8_t RESERVED_50[124];
  struct {                                         /* offset: 0x16140, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16140, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16144, array step: 0x8 */
  } MRC0_DOM1_RGD[TRDC_MGR_WKUP1_MRC0_DOM1_RGD_COUNT];
       uint8_t RESERVED_51[64];
  __IO uint32_t MRC0_DOM1_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x161C0 */
       uint8_t RESERVED_52[124];
  struct {                                         /* offset: 0x16240, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16240, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16244, array step: 0x8 */
  } MRC0_DOM2_RGD[TRDC_MGR_WKUP1_MRC0_DOM2_RGD_COUNT];
       uint8_t RESERVED_53[64];
  __IO uint32_t MRC0_DOM2_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x162C0 */
       uint8_t RESERVED_54[124];
  struct {                                         /* offset: 0x16340, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16340, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16344, array step: 0x8 */
  } MRC0_DOM3_RGD[TRDC_MGR_WKUP1_MRC0_DOM3_RGD_COUNT];
       uint8_t RESERVED_55[64];
  __IO uint32_t MRC0_DOM3_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x163C0 */
       uint8_t RESERVED_56[124];
  struct {                                         /* offset: 0x16440, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16440, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16444, array step: 0x8 */
  } MRC0_DOM4_RGD[TRDC_MGR_WKUP1_MRC0_DOM4_RGD_COUNT];
       uint8_t RESERVED_57[64];
  __IO uint32_t MRC0_DOM4_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x164C0 */
       uint8_t RESERVED_58[124];
  struct {                                         /* offset: 0x16540, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16540, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16544, array step: 0x8 */
  } MRC0_DOM5_RGD[TRDC_MGR_WKUP1_MRC0_DOM5_RGD_COUNT];
       uint8_t RESERVED_59[64];
  __IO uint32_t MRC0_DOM5_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x165C0 */
       uint8_t RESERVED_60[124];
  struct {                                         /* offset: 0x16640, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16640, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16644, array step: 0x8 */
  } MRC0_DOM6_RGD[TRDC_MGR_WKUP1_MRC0_DOM6_RGD_COUNT];
       uint8_t RESERVED_61[64];
  __IO uint32_t MRC0_DOM6_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x166C0 */
       uint8_t RESERVED_62[124];
  struct {                                         /* offset: 0x16740, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16740, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16744, array step: 0x8 */
  } MRC0_DOM7_RGD[TRDC_MGR_WKUP1_MRC0_DOM7_RGD_COUNT];
       uint8_t RESERVED_63[64];
  __IO uint32_t MRC0_DOM7_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x167C0 */
       uint8_t RESERVED_64[124];
  struct {                                         /* offset: 0x16840, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16840, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16844, array step: 0x8 */
  } MRC0_DOM8_RGD[TRDC_MGR_WKUP1_MRC0_DOM8_RGD_COUNT];
       uint8_t RESERVED_65[64];
  __IO uint32_t MRC0_DOM8_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x168C0 */
       uint8_t RESERVED_66[124];
  struct {                                         /* offset: 0x16940, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16940, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16944, array step: 0x8 */
  } MRC0_DOM9_RGD[TRDC_MGR_WKUP1_MRC0_DOM9_RGD_COUNT];
       uint8_t RESERVED_67[64];
  __IO uint32_t MRC0_DOM9_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x169C0 */
       uint8_t RESERVED_68[124];
  struct {                                         /* offset: 0x16A40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16A40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16A44, array step: 0x8 */
  } MRC0_DOM10_RGD[TRDC_MGR_WKUP1_MRC0_DOM10_RGD_COUNT];
       uint8_t RESERVED_69[64];
  __IO uint32_t MRC0_DOM10_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x16AC0 */
       uint8_t RESERVED_70[124];
  struct {                                         /* offset: 0x16B40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16B40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16B44, array step: 0x8 */
  } MRC0_DOM11_RGD[TRDC_MGR_WKUP1_MRC0_DOM11_RGD_COUNT];
       uint8_t RESERVED_71[64];
  __IO uint32_t MRC0_DOM11_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x16BC0 */
       uint8_t RESERVED_72[124];
  struct {                                         /* offset: 0x16C40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16C40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16C44, array step: 0x8 */
  } MRC0_DOM12_RGD[TRDC_MGR_WKUP1_MRC0_DOM12_RGD_COUNT];
       uint8_t RESERVED_73[64];
  __IO uint32_t MRC0_DOM12_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x16CC0 */
       uint8_t RESERVED_74[124];
  struct {                                         /* offset: 0x16D40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16D40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16D44, array step: 0x8 */
  } MRC0_DOM13_RGD[TRDC_MGR_WKUP1_MRC0_DOM13_RGD_COUNT];
       uint8_t RESERVED_75[64];
  __IO uint32_t MRC0_DOM13_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x16DC0 */
       uint8_t RESERVED_76[124];
  struct {                                         /* offset: 0x16E40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16E40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16E44, array step: 0x8 */
  } MRC0_DOM14_RGD[TRDC_MGR_WKUP1_MRC0_DOM14_RGD_COUNT];
       uint8_t RESERVED_77[64];
  __IO uint32_t MRC0_DOM14_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x16EC0 */
       uint8_t RESERVED_78[124];
  struct {                                         /* offset: 0x16F40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x16F40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x16F44, array step: 0x8 */
  } MRC0_DOM15_RGD[TRDC_MGR_WKUP1_MRC0_DOM15_RGD_COUNT];
       uint8_t RESERVED_79[64];
  __IO uint32_t MRC0_DOM15_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x16FC0 */
       uint8_t RESERVED_80[60];
  __I  uint32_t MRC1_GLBCFG;                       /**< MRC Global Configuration Register, offset: 0x17000 */
       uint8_t RESERVED_81[12];
  __IO uint32_t MRC1_NSE_RGN_INDIRECT;             /**< MRC NonSecure Enable Region Indirect, offset: 0x17010 */
  __IO uint32_t MRC1_NSE_RGN_SET;                  /**< MRC NonSecure Enable Region Set, offset: 0x17014 */
  __IO uint32_t MRC1_NSE_RGN_CLR;                  /**< MRC NonSecure Enable Region Clear, offset: 0x17018 */
  __IO uint32_t MRC1_NSE_RGN_CLR_ALL;              /**< MRC NonSecure Enable Region Clear All, offset: 0x1701C */
  __IO uint32_t MRC1_GLBAC[TRDC_MGR_WKUP1_MRC1_GLBAC_COUNT]; /**< MRC Global Access Control, array offset: 0x17020, array step: 0x4 */
  struct {                                         /* offset: 0x17040, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17040, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17044, array step: 0x8 */
  } MRC1_DOM0_RGD[TRDC_MGR_WKUP1_MRC1_DOM0_RGD_COUNT];
       uint8_t RESERVED_82[64];
  __IO uint32_t MRC1_DOM0_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x170C0 */
       uint8_t RESERVED_83[124];
  struct {                                         /* offset: 0x17140, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17140, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17144, array step: 0x8 */
  } MRC1_DOM1_RGD[TRDC_MGR_WKUP1_MRC1_DOM1_RGD_COUNT];
       uint8_t RESERVED_84[64];
  __IO uint32_t MRC1_DOM1_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x171C0 */
       uint8_t RESERVED_85[124];
  struct {                                         /* offset: 0x17240, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17240, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17244, array step: 0x8 */
  } MRC1_DOM2_RGD[TRDC_MGR_WKUP1_MRC1_DOM2_RGD_COUNT];
       uint8_t RESERVED_86[64];
  __IO uint32_t MRC1_DOM2_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x172C0 */
       uint8_t RESERVED_87[124];
  struct {                                         /* offset: 0x17340, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17340, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17344, array step: 0x8 */
  } MRC1_DOM3_RGD[TRDC_MGR_WKUP1_MRC1_DOM3_RGD_COUNT];
       uint8_t RESERVED_88[64];
  __IO uint32_t MRC1_DOM3_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x173C0 */
       uint8_t RESERVED_89[124];
  struct {                                         /* offset: 0x17440, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17440, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17444, array step: 0x8 */
  } MRC1_DOM4_RGD[TRDC_MGR_WKUP1_MRC1_DOM4_RGD_COUNT];
       uint8_t RESERVED_90[64];
  __IO uint32_t MRC1_DOM4_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x174C0 */
       uint8_t RESERVED_91[124];
  struct {                                         /* offset: 0x17540, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17540, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17544, array step: 0x8 */
  } MRC1_DOM5_RGD[TRDC_MGR_WKUP1_MRC1_DOM5_RGD_COUNT];
       uint8_t RESERVED_92[64];
  __IO uint32_t MRC1_DOM5_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x175C0 */
       uint8_t RESERVED_93[124];
  struct {                                         /* offset: 0x17640, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17640, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17644, array step: 0x8 */
  } MRC1_DOM6_RGD[TRDC_MGR_WKUP1_MRC1_DOM6_RGD_COUNT];
       uint8_t RESERVED_94[64];
  __IO uint32_t MRC1_DOM6_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x176C0 */
       uint8_t RESERVED_95[124];
  struct {                                         /* offset: 0x17740, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17740, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17744, array step: 0x8 */
  } MRC1_DOM7_RGD[TRDC_MGR_WKUP1_MRC1_DOM7_RGD_COUNT];
       uint8_t RESERVED_96[64];
  __IO uint32_t MRC1_DOM7_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x177C0 */
       uint8_t RESERVED_97[124];
  struct {                                         /* offset: 0x17840, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17840, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17844, array step: 0x8 */
  } MRC1_DOM8_RGD[TRDC_MGR_WKUP1_MRC1_DOM8_RGD_COUNT];
       uint8_t RESERVED_98[64];
  __IO uint32_t MRC1_DOM8_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x178C0 */
       uint8_t RESERVED_99[124];
  struct {                                         /* offset: 0x17940, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17940, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17944, array step: 0x8 */
  } MRC1_DOM9_RGD[TRDC_MGR_WKUP1_MRC1_DOM9_RGD_COUNT];
       uint8_t RESERVED_100[64];
  __IO uint32_t MRC1_DOM9_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x179C0 */
       uint8_t RESERVED_101[124];
  struct {                                         /* offset: 0x17A40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17A40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17A44, array step: 0x8 */
  } MRC1_DOM10_RGD[TRDC_MGR_WKUP1_MRC1_DOM10_RGD_COUNT];
       uint8_t RESERVED_102[64];
  __IO uint32_t MRC1_DOM10_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x17AC0 */
       uint8_t RESERVED_103[124];
  struct {                                         /* offset: 0x17B40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17B40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17B44, array step: 0x8 */
  } MRC1_DOM11_RGD[TRDC_MGR_WKUP1_MRC1_DOM11_RGD_COUNT];
       uint8_t RESERVED_104[64];
  __IO uint32_t MRC1_DOM11_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x17BC0 */
       uint8_t RESERVED_105[124];
  struct {                                         /* offset: 0x17C40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17C40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17C44, array step: 0x8 */
  } MRC1_DOM12_RGD[TRDC_MGR_WKUP1_MRC1_DOM12_RGD_COUNT];
       uint8_t RESERVED_106[64];
  __IO uint32_t MRC1_DOM12_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x17CC0 */
       uint8_t RESERVED_107[124];
  struct {                                         /* offset: 0x17D40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17D40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17D44, array step: 0x8 */
  } MRC1_DOM13_RGD[TRDC_MGR_WKUP1_MRC1_DOM13_RGD_COUNT];
       uint8_t RESERVED_108[64];
  __IO uint32_t MRC1_DOM13_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x17DC0 */
       uint8_t RESERVED_109[124];
  struct {                                         /* offset: 0x17E40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17E40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17E44, array step: 0x8 */
  } MRC1_DOM14_RGD[TRDC_MGR_WKUP1_MRC1_DOM14_RGD_COUNT];
       uint8_t RESERVED_110[64];
  __IO uint32_t MRC1_DOM14_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x17EC0 */
       uint8_t RESERVED_111[124];
  struct {                                         /* offset: 0x17F40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x17F40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x17F44, array step: 0x8 */
  } MRC1_DOM15_RGD[TRDC_MGR_WKUP1_MRC1_DOM15_RGD_COUNT];
       uint8_t RESERVED_112[64];
  __IO uint32_t MRC1_DOM15_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x17FC0 */
       uint8_t RESERVED_113[60];
  __I  uint32_t MRC2_GLBCFG;                       /**< MRC Global Configuration Register, offset: 0x18000 */
       uint8_t RESERVED_114[12];
  __IO uint32_t MRC2_NSE_RGN_INDIRECT;             /**< MRC NonSecure Enable Region Indirect, offset: 0x18010 */
  __IO uint32_t MRC2_NSE_RGN_SET;                  /**< MRC NonSecure Enable Region Set, offset: 0x18014 */
  __IO uint32_t MRC2_NSE_RGN_CLR;                  /**< MRC NonSecure Enable Region Clear, offset: 0x18018 */
  __IO uint32_t MRC2_NSE_RGN_CLR_ALL;              /**< MRC NonSecure Enable Region Clear All, offset: 0x1801C */
  __IO uint32_t MRC2_GLBAC[TRDC_MGR_WKUP1_MRC2_GLBAC_COUNT]; /**< MRC Global Access Control, array offset: 0x18020, array step: 0x4 */
  struct {                                         /* offset: 0x18040, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18040, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18044, array step: 0x8 */
  } MRC2_DOM0_RGD[TRDC_MGR_WKUP1_MRC2_DOM0_RGD_COUNT];
       uint8_t RESERVED_115[64];
  __IO uint32_t MRC2_DOM0_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x180C0 */
       uint8_t RESERVED_116[124];
  struct {                                         /* offset: 0x18140, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18140, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18144, array step: 0x8 */
  } MRC2_DOM1_RGD[TRDC_MGR_WKUP1_MRC2_DOM1_RGD_COUNT];
       uint8_t RESERVED_117[64];
  __IO uint32_t MRC2_DOM1_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x181C0 */
       uint8_t RESERVED_118[124];
  struct {                                         /* offset: 0x18240, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18240, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18244, array step: 0x8 */
  } MRC2_DOM2_RGD[TRDC_MGR_WKUP1_MRC2_DOM2_RGD_COUNT];
       uint8_t RESERVED_119[64];
  __IO uint32_t MRC2_DOM2_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x182C0 */
       uint8_t RESERVED_120[124];
  struct {                                         /* offset: 0x18340, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18340, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18344, array step: 0x8 */
  } MRC2_DOM3_RGD[TRDC_MGR_WKUP1_MRC2_DOM3_RGD_COUNT];
       uint8_t RESERVED_121[64];
  __IO uint32_t MRC2_DOM3_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x183C0 */
       uint8_t RESERVED_122[124];
  struct {                                         /* offset: 0x18440, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18440, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18444, array step: 0x8 */
  } MRC2_DOM4_RGD[TRDC_MGR_WKUP1_MRC2_DOM4_RGD_COUNT];
       uint8_t RESERVED_123[64];
  __IO uint32_t MRC2_DOM4_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x184C0 */
       uint8_t RESERVED_124[124];
  struct {                                         /* offset: 0x18540, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18540, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18544, array step: 0x8 */
  } MRC2_DOM5_RGD[TRDC_MGR_WKUP1_MRC2_DOM5_RGD_COUNT];
       uint8_t RESERVED_125[64];
  __IO uint32_t MRC2_DOM5_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x185C0 */
       uint8_t RESERVED_126[124];
  struct {                                         /* offset: 0x18640, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18640, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18644, array step: 0x8 */
  } MRC2_DOM6_RGD[TRDC_MGR_WKUP1_MRC2_DOM6_RGD_COUNT];
       uint8_t RESERVED_127[64];
  __IO uint32_t MRC2_DOM6_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x186C0 */
       uint8_t RESERVED_128[124];
  struct {                                         /* offset: 0x18740, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18740, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18744, array step: 0x8 */
  } MRC2_DOM7_RGD[TRDC_MGR_WKUP1_MRC2_DOM7_RGD_COUNT];
       uint8_t RESERVED_129[64];
  __IO uint32_t MRC2_DOM7_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x187C0 */
       uint8_t RESERVED_130[124];
  struct {                                         /* offset: 0x18840, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18840, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18844, array step: 0x8 */
  } MRC2_DOM8_RGD[TRDC_MGR_WKUP1_MRC2_DOM8_RGD_COUNT];
       uint8_t RESERVED_131[64];
  __IO uint32_t MRC2_DOM8_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x188C0 */
       uint8_t RESERVED_132[124];
  struct {                                         /* offset: 0x18940, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18940, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18944, array step: 0x8 */
  } MRC2_DOM9_RGD[TRDC_MGR_WKUP1_MRC2_DOM9_RGD_COUNT];
       uint8_t RESERVED_133[64];
  __IO uint32_t MRC2_DOM9_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x189C0 */
       uint8_t RESERVED_134[124];
  struct {                                         /* offset: 0x18A40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18A40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18A44, array step: 0x8 */
  } MRC2_DOM10_RGD[TRDC_MGR_WKUP1_MRC2_DOM10_RGD_COUNT];
       uint8_t RESERVED_135[64];
  __IO uint32_t MRC2_DOM10_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x18AC0 */
       uint8_t RESERVED_136[124];
  struct {                                         /* offset: 0x18B40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18B40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18B44, array step: 0x8 */
  } MRC2_DOM11_RGD[TRDC_MGR_WKUP1_MRC2_DOM11_RGD_COUNT];
       uint8_t RESERVED_137[64];
  __IO uint32_t MRC2_DOM11_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x18BC0 */
       uint8_t RESERVED_138[124];
  struct {                                         /* offset: 0x18C40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18C40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18C44, array step: 0x8 */
  } MRC2_DOM12_RGD[TRDC_MGR_WKUP1_MRC2_DOM12_RGD_COUNT];
       uint8_t RESERVED_139[64];
  __IO uint32_t MRC2_DOM12_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x18CC0 */
       uint8_t RESERVED_140[124];
  struct {                                         /* offset: 0x18D40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18D40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18D44, array step: 0x8 */
  } MRC2_DOM13_RGD[TRDC_MGR_WKUP1_MRC2_DOM13_RGD_COUNT];
       uint8_t RESERVED_141[64];
  __IO uint32_t MRC2_DOM13_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x18DC0 */
       uint8_t RESERVED_142[124];
  struct {                                         /* offset: 0x18E40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18E40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18E44, array step: 0x8 */
  } MRC2_DOM14_RGD[TRDC_MGR_WKUP1_MRC2_DOM14_RGD_COUNT];
       uint8_t RESERVED_143[64];
  __IO uint32_t MRC2_DOM14_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x18EC0 */
       uint8_t RESERVED_144[124];
  struct {                                         /* offset: 0x18F40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x18F40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x18F44, array step: 0x8 */
  } MRC2_DOM15_RGD[TRDC_MGR_WKUP1_MRC2_DOM15_RGD_COUNT];
       uint8_t RESERVED_145[64];
  __IO uint32_t MRC2_DOM15_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x18FC0 */
       uint8_t RESERVED_146[60];
  __I  uint32_t MRC3_GLBCFG;                       /**< MRC Global Configuration Register, offset: 0x19000 */
       uint8_t RESERVED_147[12];
  __IO uint32_t MRC3_NSE_RGN_INDIRECT;             /**< MRC NonSecure Enable Region Indirect, offset: 0x19010 */
  __IO uint32_t MRC3_NSE_RGN_SET;                  /**< MRC NonSecure Enable Region Set, offset: 0x19014 */
  __IO uint32_t MRC3_NSE_RGN_CLR;                  /**< MRC NonSecure Enable Region Clear, offset: 0x19018 */
  __IO uint32_t MRC3_NSE_RGN_CLR_ALL;              /**< MRC NonSecure Enable Region Clear All, offset: 0x1901C */
  __IO uint32_t MRC3_GLBAC[TRDC_MGR_WKUP1_MRC3_GLBAC_COUNT]; /**< MRC Global Access Control, array offset: 0x19020, array step: 0x4 */
  struct {                                         /* offset: 0x19040, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19040, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19044, array step: 0x8 */
  } MRC3_DOM0_RGD[TRDC_MGR_WKUP1_MRC3_DOM0_RGD_COUNT];
       uint8_t RESERVED_148[64];
  __IO uint32_t MRC3_DOM0_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x190C0 */
       uint8_t RESERVED_149[124];
  struct {                                         /* offset: 0x19140, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19140, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19144, array step: 0x8 */
  } MRC3_DOM1_RGD[TRDC_MGR_WKUP1_MRC3_DOM1_RGD_COUNT];
       uint8_t RESERVED_150[64];
  __IO uint32_t MRC3_DOM1_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x191C0 */
       uint8_t RESERVED_151[124];
  struct {                                         /* offset: 0x19240, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19240, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19244, array step: 0x8 */
  } MRC3_DOM2_RGD[TRDC_MGR_WKUP1_MRC3_DOM2_RGD_COUNT];
       uint8_t RESERVED_152[64];
  __IO uint32_t MRC3_DOM2_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x192C0 */
       uint8_t RESERVED_153[124];
  struct {                                         /* offset: 0x19340, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19340, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19344, array step: 0x8 */
  } MRC3_DOM3_RGD[TRDC_MGR_WKUP1_MRC3_DOM3_RGD_COUNT];
       uint8_t RESERVED_154[64];
  __IO uint32_t MRC3_DOM3_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x193C0 */
       uint8_t RESERVED_155[124];
  struct {                                         /* offset: 0x19440, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19440, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19444, array step: 0x8 */
  } MRC3_DOM4_RGD[TRDC_MGR_WKUP1_MRC3_DOM4_RGD_COUNT];
       uint8_t RESERVED_156[64];
  __IO uint32_t MRC3_DOM4_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x194C0 */
       uint8_t RESERVED_157[124];
  struct {                                         /* offset: 0x19540, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19540, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19544, array step: 0x8 */
  } MRC3_DOM5_RGD[TRDC_MGR_WKUP1_MRC3_DOM5_RGD_COUNT];
       uint8_t RESERVED_158[64];
  __IO uint32_t MRC3_DOM5_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x195C0 */
       uint8_t RESERVED_159[124];
  struct {                                         /* offset: 0x19640, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19640, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19644, array step: 0x8 */
  } MRC3_DOM6_RGD[TRDC_MGR_WKUP1_MRC3_DOM6_RGD_COUNT];
       uint8_t RESERVED_160[64];
  __IO uint32_t MRC3_DOM6_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x196C0 */
       uint8_t RESERVED_161[124];
  struct {                                         /* offset: 0x19740, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19740, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19744, array step: 0x8 */
  } MRC3_DOM7_RGD[TRDC_MGR_WKUP1_MRC3_DOM7_RGD_COUNT];
       uint8_t RESERVED_162[64];
  __IO uint32_t MRC3_DOM7_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x197C0 */
       uint8_t RESERVED_163[124];
  struct {                                         /* offset: 0x19840, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19840, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19844, array step: 0x8 */
  } MRC3_DOM8_RGD[TRDC_MGR_WKUP1_MRC3_DOM8_RGD_COUNT];
       uint8_t RESERVED_164[64];
  __IO uint32_t MRC3_DOM8_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x198C0 */
       uint8_t RESERVED_165[124];
  struct {                                         /* offset: 0x19940, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19940, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19944, array step: 0x8 */
  } MRC3_DOM9_RGD[TRDC_MGR_WKUP1_MRC3_DOM9_RGD_COUNT];
       uint8_t RESERVED_166[64];
  __IO uint32_t MRC3_DOM9_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x199C0 */
       uint8_t RESERVED_167[124];
  struct {                                         /* offset: 0x19A40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19A40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19A44, array step: 0x8 */
  } MRC3_DOM10_RGD[TRDC_MGR_WKUP1_MRC3_DOM10_RGD_COUNT];
       uint8_t RESERVED_168[64];
  __IO uint32_t MRC3_DOM10_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x19AC0 */
       uint8_t RESERVED_169[124];
  struct {                                         /* offset: 0x19B40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19B40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19B44, array step: 0x8 */
  } MRC3_DOM11_RGD[TRDC_MGR_WKUP1_MRC3_DOM11_RGD_COUNT];
       uint8_t RESERVED_170[64];
  __IO uint32_t MRC3_DOM11_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x19BC0 */
       uint8_t RESERVED_171[124];
  struct {                                         /* offset: 0x19C40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19C40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19C44, array step: 0x8 */
  } MRC3_DOM12_RGD[TRDC_MGR_WKUP1_MRC3_DOM12_RGD_COUNT];
       uint8_t RESERVED_172[64];
  __IO uint32_t MRC3_DOM12_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x19CC0 */
       uint8_t RESERVED_173[124];
  struct {                                         /* offset: 0x19D40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19D40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19D44, array step: 0x8 */
  } MRC3_DOM13_RGD[TRDC_MGR_WKUP1_MRC3_DOM13_RGD_COUNT];
       uint8_t RESERVED_174[64];
  __IO uint32_t MRC3_DOM13_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x19DC0 */
       uint8_t RESERVED_175[124];
  struct {                                         /* offset: 0x19E40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19E40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19E44, array step: 0x8 */
  } MRC3_DOM14_RGD[TRDC_MGR_WKUP1_MRC3_DOM14_RGD_COUNT];
       uint8_t RESERVED_176[64];
  __IO uint32_t MRC3_DOM14_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x19EC0 */
       uint8_t RESERVED_177[124];
  struct {                                         /* offset: 0x19F40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x19F40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x19F44, array step: 0x8 */
  } MRC3_DOM15_RGD[TRDC_MGR_WKUP1_MRC3_DOM15_RGD_COUNT];
       uint8_t RESERVED_178[64];
  __IO uint32_t MRC3_DOM15_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x19FC0 */
       uint8_t RESERVED_179[60];
  __I  uint32_t MRC4_GLBCFG;                       /**< MRC Global Configuration Register, offset: 0x1A000 */
       uint8_t RESERVED_180[12];
  __IO uint32_t MRC4_NSE_RGN_INDIRECT;             /**< MRC NonSecure Enable Region Indirect, offset: 0x1A010 */
  __IO uint32_t MRC4_NSE_RGN_SET;                  /**< MRC NonSecure Enable Region Set, offset: 0x1A014 */
  __IO uint32_t MRC4_NSE_RGN_CLR;                  /**< MRC NonSecure Enable Region Clear, offset: 0x1A018 */
  __IO uint32_t MRC4_NSE_RGN_CLR_ALL;              /**< MRC NonSecure Enable Region Clear All, offset: 0x1A01C */
  __IO uint32_t MRC4_GLBAC[TRDC_MGR_WKUP1_MRC4_GLBAC_COUNT]; /**< MRC Global Access Control, array offset: 0x1A020, array step: 0x4 */
  struct {                                         /* offset: 0x1A040, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A040, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A044, array step: 0x8 */
  } MRC4_DOM0_RGD[TRDC_MGR_WKUP1_MRC4_DOM0_RGD_COUNT];
       uint8_t RESERVED_181[64];
  __IO uint32_t MRC4_DOM0_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A0C0 */
       uint8_t RESERVED_182[124];
  struct {                                         /* offset: 0x1A140, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A140, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A144, array step: 0x8 */
  } MRC4_DOM1_RGD[TRDC_MGR_WKUP1_MRC4_DOM1_RGD_COUNT];
       uint8_t RESERVED_183[64];
  __IO uint32_t MRC4_DOM1_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A1C0 */
       uint8_t RESERVED_184[124];
  struct {                                         /* offset: 0x1A240, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A240, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A244, array step: 0x8 */
  } MRC4_DOM2_RGD[TRDC_MGR_WKUP1_MRC4_DOM2_RGD_COUNT];
       uint8_t RESERVED_185[64];
  __IO uint32_t MRC4_DOM2_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A2C0 */
       uint8_t RESERVED_186[124];
  struct {                                         /* offset: 0x1A340, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A340, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A344, array step: 0x8 */
  } MRC4_DOM3_RGD[TRDC_MGR_WKUP1_MRC4_DOM3_RGD_COUNT];
       uint8_t RESERVED_187[64];
  __IO uint32_t MRC4_DOM3_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A3C0 */
       uint8_t RESERVED_188[124];
  struct {                                         /* offset: 0x1A440, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A440, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A444, array step: 0x8 */
  } MRC4_DOM4_RGD[TRDC_MGR_WKUP1_MRC4_DOM4_RGD_COUNT];
       uint8_t RESERVED_189[64];
  __IO uint32_t MRC4_DOM4_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A4C0 */
       uint8_t RESERVED_190[124];
  struct {                                         /* offset: 0x1A540, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A540, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A544, array step: 0x8 */
  } MRC4_DOM5_RGD[TRDC_MGR_WKUP1_MRC4_DOM5_RGD_COUNT];
       uint8_t RESERVED_191[64];
  __IO uint32_t MRC4_DOM5_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A5C0 */
       uint8_t RESERVED_192[124];
  struct {                                         /* offset: 0x1A640, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A640, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A644, array step: 0x8 */
  } MRC4_DOM6_RGD[TRDC_MGR_WKUP1_MRC4_DOM6_RGD_COUNT];
       uint8_t RESERVED_193[64];
  __IO uint32_t MRC4_DOM6_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A6C0 */
       uint8_t RESERVED_194[124];
  struct {                                         /* offset: 0x1A740, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A740, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A744, array step: 0x8 */
  } MRC4_DOM7_RGD[TRDC_MGR_WKUP1_MRC4_DOM7_RGD_COUNT];
       uint8_t RESERVED_195[64];
  __IO uint32_t MRC4_DOM7_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A7C0 */
       uint8_t RESERVED_196[124];
  struct {                                         /* offset: 0x1A840, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A840, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A844, array step: 0x8 */
  } MRC4_DOM8_RGD[TRDC_MGR_WKUP1_MRC4_DOM8_RGD_COUNT];
       uint8_t RESERVED_197[64];
  __IO uint32_t MRC4_DOM8_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A8C0 */
       uint8_t RESERVED_198[124];
  struct {                                         /* offset: 0x1A940, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1A940, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1A944, array step: 0x8 */
  } MRC4_DOM9_RGD[TRDC_MGR_WKUP1_MRC4_DOM9_RGD_COUNT];
       uint8_t RESERVED_199[64];
  __IO uint32_t MRC4_DOM9_RGD_NSE;                 /**< MRC Region Descriptor NonSecure Enable, offset: 0x1A9C0 */
       uint8_t RESERVED_200[124];
  struct {                                         /* offset: 0x1AA40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1AA40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1AA44, array step: 0x8 */
  } MRC4_DOM10_RGD[TRDC_MGR_WKUP1_MRC4_DOM10_RGD_COUNT];
       uint8_t RESERVED_201[64];
  __IO uint32_t MRC4_DOM10_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x1AAC0 */
       uint8_t RESERVED_202[124];
  struct {                                         /* offset: 0x1AB40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1AB40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1AB44, array step: 0x8 */
  } MRC4_DOM11_RGD[TRDC_MGR_WKUP1_MRC4_DOM11_RGD_COUNT];
       uint8_t RESERVED_203[64];
  __IO uint32_t MRC4_DOM11_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x1ABC0 */
       uint8_t RESERVED_204[124];
  struct {                                         /* offset: 0x1AC40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1AC40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1AC44, array step: 0x8 */
  } MRC4_DOM12_RGD[TRDC_MGR_WKUP1_MRC4_DOM12_RGD_COUNT];
       uint8_t RESERVED_205[64];
  __IO uint32_t MRC4_DOM12_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x1ACC0 */
       uint8_t RESERVED_206[124];
  struct {                                         /* offset: 0x1AD40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1AD40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1AD44, array step: 0x8 */
  } MRC4_DOM13_RGD[TRDC_MGR_WKUP1_MRC4_DOM13_RGD_COUNT];
       uint8_t RESERVED_207[64];
  __IO uint32_t MRC4_DOM13_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x1ADC0 */
       uint8_t RESERVED_208[124];
  struct {                                         /* offset: 0x1AE40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1AE40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1AE44, array step: 0x8 */
  } MRC4_DOM14_RGD[TRDC_MGR_WKUP1_MRC4_DOM14_RGD_COUNT];
       uint8_t RESERVED_209[64];
  __IO uint32_t MRC4_DOM14_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x1AEC0 */
       uint8_t RESERVED_210[124];
  struct {                                         /* offset: 0x1AF40, array step: 0x8 */
    __IO uint32_t W0;                                /**< MRC Region Descriptor Word 0, array offset: 0x1AF40, array step: 0x8 */
    __IO uint32_t W1;                                /**< MRC Region Descriptor Word 1, array offset: 0x1AF44, array step: 0x8 */
  } MRC4_DOM15_RGD[TRDC_MGR_WKUP1_MRC4_DOM15_RGD_COUNT];
       uint8_t RESERVED_211[64];
  __IO uint32_t MRC4_DOM15_RGD_NSE;                /**< MRC Region Descriptor NonSecure Enable, offset: 0x1AFC0 */
} TRDC_MGR_WKUP1_Type;

/* ----------------------------------------------------------------------------
   -- TRDC_MGR_WKUP1 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TRDC_MGR_WKUP1_Register_Masks TRDC_MGR_WKUP1 Register Masks
 * @{
 */

/*! @name TRDC_CR - TRDC Register */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_CR_GVLDM_MASK        (0x1U)
#define TRDC_MGR_WKUP1_TRDC_CR_GVLDM_SHIFT       (0U)
/*! GVLDM - Global Valid for Domain Assignment Controllers
 *  0b0..TRDC DACs are disabled.
 *  0b1..TRDC DACs are enabled.
 */
#define TRDC_MGR_WKUP1_TRDC_CR_GVLDM(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_CR_GVLDM_SHIFT)) & TRDC_MGR_WKUP1_TRDC_CR_GVLDM_MASK)

#define TRDC_MGR_WKUP1_TRDC_CR_HRL_MASK          (0x1EU)
#define TRDC_MGR_WKUP1_TRDC_CR_HRL_SHIFT         (1U)
/*! HRL - Hardware Revision Level */
#define TRDC_MGR_WKUP1_TRDC_CR_HRL(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_CR_HRL_SHIFT)) & TRDC_MGR_WKUP1_TRDC_CR_HRL_MASK)

#define TRDC_MGR_WKUP1_TRDC_CR_GVLDB_MASK        (0x4000U)
#define TRDC_MGR_WKUP1_TRDC_CR_GVLDB_SHIFT       (14U)
/*! GVLDB - Global Valid for Memory Block Checkers
 *  0b0..TRDC MBCs are disabled.
 *  0b1..TRDC MBCs are enabled.
 */
#define TRDC_MGR_WKUP1_TRDC_CR_GVLDB(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_CR_GVLDB_SHIFT)) & TRDC_MGR_WKUP1_TRDC_CR_GVLDB_MASK)

#define TRDC_MGR_WKUP1_TRDC_CR_GVLDR_MASK        (0x8000U)
#define TRDC_MGR_WKUP1_TRDC_CR_GVLDR_SHIFT       (15U)
/*! GVLDR - Global Valid for Memory Region Checkers
 *  0b0..TRDC MRCs are disabled.
 *  0b1..TRDC MRCs are enabled.
 */
#define TRDC_MGR_WKUP1_TRDC_CR_GVLDR(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_CR_GVLDR_SHIFT)) & TRDC_MGR_WKUP1_TRDC_CR_GVLDR_MASK)

#define TRDC_MGR_WKUP1_TRDC_CR_LK1_MASK          (0x40000000U)
#define TRDC_MGR_WKUP1_TRDC_CR_LK1_SHIFT         (30U)
/*! LK1 - Lock Status
 *  0b0..The CR can be written by any secure privileged write.
 *  0b1..The CR is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_TRDC_CR_LK1(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_CR_LK1_SHIFT)) & TRDC_MGR_WKUP1_TRDC_CR_LK1_MASK)
/*! @} */

/*! @name TRDC_HWCFG0 - TRDC Hardware Configuration Register 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NDID_MASK     (0x1FU)
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NDID_SHIFT    (0U)
/*! NDID - Number of domains */
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NDID(x)       (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG0_NDID_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG0_NDID_MASK)

#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMSTR_MASK    (0xFF00U)
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMSTR_SHIFT   (8U)
/*! NMSTR - Number of bus masters */
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMSTR(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG0_NMSTR_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG0_NMSTR_MASK)

#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMBC_MASK     (0xF0000U)
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMBC_SHIFT    (16U)
/*! NMBC - Number of MBCs */
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMBC(x)       (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG0_NMBC_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG0_NMBC_MASK)

#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMRC_MASK     (0x1F000000U)
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMRC_SHIFT    (24U)
/*! NMRC - Number of MRCs */
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_NMRC(x)       (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG0_NMRC_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG0_NMRC_MASK)

#define TRDC_MGR_WKUP1_TRDC_HWCFG0_MID_MASK      (0xE0000000U)
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_MID_SHIFT     (29U)
/*! MID - Module ID */
#define TRDC_MGR_WKUP1_TRDC_HWCFG0_MID(x)        (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG0_MID_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG0_MID_MASK)
/*! @} */

/*! @name TRDC_HWCFG1 - TRDC Hardware Configuration Register 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_HWCFG1_DID_MASK      (0xFU)
#define TRDC_MGR_WKUP1_TRDC_HWCFG1_DID_SHIFT     (0U)
/*! DID - Domain identifier number */
#define TRDC_MGR_WKUP1_TRDC_HWCFG1_DID(x)        (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG1_DID_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG1_DID_MASK)
/*! @} */

/*! @name TRDC_HWCFG2 - TRDC Hardware Configuration Register 2 */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_HWCFG2_PIDPn_MASK    (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_TRDC_HWCFG2_PIDPn_SHIFT   (0U)
/*! PIDPn - Process identifier present */
#define TRDC_MGR_WKUP1_TRDC_HWCFG2_PIDPn(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG2_PIDPn_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG2_PIDPn_MASK)
/*! @} */

/*! @name TRDC_HWCFG3 - TRDC Hardware Configuration Register 3 */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_HWCFG3_PIDPn_MASK    (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_TRDC_HWCFG3_PIDPn_SHIFT   (0U)
/*! PIDPn - Process identifier present */
#define TRDC_MGR_WKUP1_TRDC_HWCFG3_PIDPn(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_HWCFG3_PIDPn_SHIFT)) & TRDC_MGR_WKUP1_TRDC_HWCFG3_PIDPn_MASK)
/*! @} */

/*! @name DACFG0 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG0_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG0_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG0_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG0_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG0_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG0_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG0_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG0_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG0_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG0_NCM_MASK)
/*! @} */

/*! @name DACFG1 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG1_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG1_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG1_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG1_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG1_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG1_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG1_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG1_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG1_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG1_NCM_MASK)
/*! @} */

/*! @name DACFG2 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG2_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG2_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG2_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG2_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG2_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG2_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG2_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG2_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG2_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG2_NCM_MASK)
/*! @} */

/*! @name DACFG3 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG3_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG3_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG3_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG3_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG3_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG3_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG3_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG3_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG3_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG3_NCM_MASK)
/*! @} */

/*! @name DACFG4 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG4_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG4_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG4_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG4_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG4_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG4_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG4_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG4_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG4_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG4_NCM_MASK)
/*! @} */

/*! @name DACFG5 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG5_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG5_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG5_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG5_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG5_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG5_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG5_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG5_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG5_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG5_NCM_MASK)
/*! @} */

/*! @name DACFG6 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG6_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG6_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG6_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG6_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG6_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG6_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG6_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG6_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG6_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG6_NCM_MASK)
/*! @} */

/*! @name DACFG7 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG7_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG7_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG7_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG7_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG7_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG7_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG7_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG7_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG7_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG7_NCM_MASK)
/*! @} */

/*! @name DACFG8 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG8_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG8_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG8_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG8_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG8_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG8_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG8_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG8_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG8_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG8_NCM_MASK)
/*! @} */

/*! @name DACFG9 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG9_NMDAR_MASK         (0xFU)
#define TRDC_MGR_WKUP1_DACFG9_NMDAR_SHIFT        (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG9_NMDAR(x)           (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG9_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG9_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG9_NCM_MASK           (0x80U)
#define TRDC_MGR_WKUP1_DACFG9_NCM_SHIFT          (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG9_NCM(x)             (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG9_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG9_NCM_MASK)
/*! @} */

/*! @name DACFG10 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG10_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG10_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG10_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG10_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG10_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG10_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG10_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG10_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG10_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG10_NCM_MASK)
/*! @} */

/*! @name DACFG11 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG11_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG11_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG11_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG11_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG11_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG11_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG11_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG11_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG11_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG11_NCM_MASK)
/*! @} */

/*! @name DACFG12 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG12_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG12_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG12_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG12_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG12_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG12_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG12_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG12_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG12_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG12_NCM_MASK)
/*! @} */

/*! @name DACFG13 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG13_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG13_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG13_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG13_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG13_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG13_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG13_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG13_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG13_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG13_NCM_MASK)
/*! @} */

/*! @name DACFG14 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG14_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG14_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG14_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG14_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG14_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG14_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG14_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG14_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG14_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG14_NCM_MASK)
/*! @} */

/*! @name DACFG15 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG15_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG15_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG15_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG15_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG15_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG15_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG15_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG15_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG15_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG15_NCM_MASK)
/*! @} */

/*! @name DACFG16 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG16_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG16_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG16_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG16_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG16_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG16_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG16_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG16_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG16_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG16_NCM_MASK)
/*! @} */

/*! @name DACFG17 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG17_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG17_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG17_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG17_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG17_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG17_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG17_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG17_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG17_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG17_NCM_MASK)
/*! @} */

/*! @name DACFG18 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG18_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG18_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG18_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG18_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG18_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG18_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG18_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG18_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG18_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG18_NCM_MASK)
/*! @} */

/*! @name DACFG19 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG19_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG19_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG19_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG19_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG19_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG19_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG19_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG19_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG19_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG19_NCM_MASK)
/*! @} */

/*! @name DACFG20 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG20_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG20_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG20_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG20_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG20_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG20_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG20_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG20_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG20_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG20_NCM_MASK)
/*! @} */

/*! @name DACFG21 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG21_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG21_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG21_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG21_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG21_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG21_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG21_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG21_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG21_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG21_NCM_MASK)
/*! @} */

/*! @name DACFG22 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG22_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG22_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG22_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG22_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG22_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG22_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG22_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG22_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG22_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG22_NCM_MASK)
/*! @} */

/*! @name DACFG23 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG23_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG23_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG23_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG23_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG23_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG23_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG23_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG23_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG23_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG23_NCM_MASK)
/*! @} */

/*! @name DACFG24 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG24_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG24_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG24_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG24_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG24_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG24_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG24_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG24_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG24_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG24_NCM_MASK)
/*! @} */

/*! @name DACFG25 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG25_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG25_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG25_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG25_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG25_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG25_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG25_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG25_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG25_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG25_NCM_MASK)
/*! @} */

/*! @name DACFG26 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG26_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG26_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG26_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG26_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG26_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG26_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG26_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG26_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG26_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG26_NCM_MASK)
/*! @} */

/*! @name DACFG27 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG27_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG27_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG27_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG27_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG27_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG27_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG27_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG27_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG27_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG27_NCM_MASK)
/*! @} */

/*! @name DACFG28 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG28_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG28_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG28_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG28_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG28_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG28_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG28_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG28_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG28_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG28_NCM_MASK)
/*! @} */

/*! @name DACFG29 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG29_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG29_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG29_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG29_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG29_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG29_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG29_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG29_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG29_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG29_NCM_MASK)
/*! @} */

/*! @name DACFG30 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG30_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG30_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG30_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG30_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG30_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG30_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG30_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG30_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG30_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG30_NCM_MASK)
/*! @} */

/*! @name DACFG31 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG31_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG31_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG31_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG31_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG31_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG31_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG31_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG31_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG31_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG31_NCM_MASK)
/*! @} */

/*! @name DACFG32 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG32_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG32_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG32_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG32_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG32_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG32_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG32_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG32_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG32_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG32_NCM_MASK)
/*! @} */

/*! @name DACFG33 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG33_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG33_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG33_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG33_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG33_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG33_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG33_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG33_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG33_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG33_NCM_MASK)
/*! @} */

/*! @name DACFG34 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG34_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG34_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG34_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG34_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG34_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG34_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG34_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG34_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG34_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG34_NCM_MASK)
/*! @} */

/*! @name DACFG35 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG35_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG35_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG35_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG35_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG35_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG35_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG35_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG35_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG35_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG35_NCM_MASK)
/*! @} */

/*! @name DACFG36 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG36_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG36_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG36_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG36_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG36_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG36_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG36_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG36_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG36_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG36_NCM_MASK)
/*! @} */

/*! @name DACFG37 - Domain Assignment Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_DACFG37_NMDAR_MASK        (0xFU)
#define TRDC_MGR_WKUP1_DACFG37_NMDAR_SHIFT       (0U)
/*! NMDAR - Number of master domain assignment registers for bus master m */
#define TRDC_MGR_WKUP1_DACFG37_NMDAR(x)          (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG37_NMDAR_SHIFT)) & TRDC_MGR_WKUP1_DACFG37_NMDAR_MASK)

#define TRDC_MGR_WKUP1_DACFG37_NCM_MASK          (0x80U)
#define TRDC_MGR_WKUP1_DACFG37_NCM_SHIFT         (7U)
/*! NCM - Non-CPU Master
 *  0b0..Bus master is a processor.
 *  0b1..Bus master is a non-processor.
 */
#define TRDC_MGR_WKUP1_DACFG37_NCM(x)            (((uint8_t)(((uint8_t)(x)) << TRDC_MGR_WKUP1_DACFG37_NCM_SHIFT)) & TRDC_MGR_WKUP1_DACFG37_NCM_MASK)
/*! @} */

/*! @name TRDC_IDAU_CR - TRDC IDAU Control Register */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_VLD_MASK     (0x1U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_VLD_SHIFT    (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_VLD(x)       (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_VLD_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_VLD_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_CFGSECEXT_MASK (0x8U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_CFGSECEXT_SHIFT (3U)
/*! CFGSECEXT - Configure Security Extension
 *  0b0..Armv8M Security Extension is disabled
 *  0b1..Armv8-M Security Extension is enabled
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_CFGSECEXT(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_CFGSECEXT_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_CFGSECEXT_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUSDIS_MASK (0x10U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUSDIS_SHIFT (4U)
/*! MPUSDIS - Secure Memory Protection Unit Disabled
 *  0b0..Secure MPU is enabled
 *  0b1..Secure MPU is disabled
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUSDIS(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUSDIS_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUSDIS_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUNSDIS_MASK (0x20U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUNSDIS_SHIFT (5U)
/*! MPUNSDIS - NonSecure Memory Protection Unit Disabled
 *  0b0..Nonsecure MPU is enabled
 *  0b1..Nonsecure MPU is disabled
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUNSDIS(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUNSDIS_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_MPUNSDIS_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_SAUDIS_MASK  (0x40U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_SAUDIS_SHIFT (6U)
/*! SAUDIS - Security Attribution Unit Disable
 *  0b0..SAU is enabled
 *  0b1..SAU is disabled
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_SAUDIS(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_SAUDIS_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_SAUDIS_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSVTAIRCR_MASK (0x100U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSVTAIRCR_SHIFT (8U)
/*! LKSVTAIRCR - Lock Secure VTOR, Application interrupt and Reset Control Registers
 *  0b0..Unlock these registers
 *  0b1..Disable writes to the VTOR_S, AIRCR[PRIS], and AIRCR[BFHFNMINS] registers
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSVTAIRCR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSVTAIRCR_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSVTAIRCR_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSVTOR_MASK (0x200U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSVTOR_SHIFT (9U)
/*! LKNSVTOR - Lock Nonsecure Vector Table Offset Register
 *  0b0..Unlock this register
 *  0b1..Disable writes to the VTOR_NS register
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSVTOR(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSVTOR_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSVTOR_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSMPU_MASK  (0x400U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSMPU_SHIFT (10U)
/*! LKSMPU - Lock Secure MPU
 *  0b0..Unlock these registers
 *  0b1..Disable writes to the MPU_CTRL, MPU_RNR, MPU_RBAR, MPU_RLAR, MPU_RBAR_An and MPU_RLAR_An from software or
 *       from a debug agent connected to the processor in Secure state
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSMPU(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSMPU_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSMPU_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSMPU_MASK (0x800U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSMPU_SHIFT (11U)
/*! LKNSMPU - Lock Nonsecure MPU
 *  0b0..Unlock these registers
 *  0b1..Disable writes to the MPU_CTRL_NS, MPU_RNR_NS, MPU_RBAR_NS, MPU_RLAR_NS, MPU_RBAR_A_NSn and
 *       MPU_RLAR_A_NSn from software or from a debug agent connected to the processor
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSMPU(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSMPU_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKNSMPU_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSAU_MASK   (0x1000U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSAU_SHIFT  (12U)
/*! LKSAU - Lock SAU
 *  0b0..Unlock these registers
 *  0b1..Disable writes to the SAU_CTRL, SAU_RNR, SAU_RBAR and SAU_RLAR registers from software or from a debug agent connected to the processor
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSAU(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSAU_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_LKSAU_MASK)

#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_PCURRNS_MASK (0x80000000U)
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_PCURRNS_SHIFT (31U)
/*! PCURRNS - Processor current security
 *  0b0..Processor is in Secure state
 *  0b1..Processor is in Nonsecure state
 */
#define TRDC_MGR_WKUP1_TRDC_IDAU_CR_PCURRNS(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_IDAU_CR_PCURRNS_SHIFT)) & TRDC_MGR_WKUP1_TRDC_IDAU_CR_PCURRNS_MASK)
/*! @} */

/*! @name TRDC_FLW_CTL - TRDC FLW Control */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_FLW_CTL_LK_MASK      (0x40000000U)
#define TRDC_MGR_WKUP1_TRDC_FLW_CTL_LK_SHIFT     (30U)
/*! LK - Lock bit
 *  0b0..FLW registers may be modified.
 *  0b1..FLW registers are locked until the next reset.
 */
#define TRDC_MGR_WKUP1_TRDC_FLW_CTL_LK(x)        (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_FLW_CTL_LK_SHIFT)) & TRDC_MGR_WKUP1_TRDC_FLW_CTL_LK_MASK)

#define TRDC_MGR_WKUP1_TRDC_FLW_CTL_V_MASK       (0x80000000U)
#define TRDC_MGR_WKUP1_TRDC_FLW_CTL_V_SHIFT      (31U)
/*! V - Valid bit
 *  0b0..FLW function is disabled.
 *  0b1..FLW function is enabled.
 */
#define TRDC_MGR_WKUP1_TRDC_FLW_CTL_V(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_FLW_CTL_V_SHIFT)) & TRDC_MGR_WKUP1_TRDC_FLW_CTL_V_MASK)
/*! @} */

/*! @name TRDC_FLW_PBASE - TRDC FLW Physical Base */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_FLW_PBASE_PBASE_MASK (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_TRDC_FLW_PBASE_PBASE_SHIFT (0U)
/*! PBASE - Physical base address */
#define TRDC_MGR_WKUP1_TRDC_FLW_PBASE_PBASE(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_FLW_PBASE_PBASE_SHIFT)) & TRDC_MGR_WKUP1_TRDC_FLW_PBASE_PBASE_MASK)
/*! @} */

/*! @name TRDC_FLW_ABASE - TRDC FLW Array Base */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_L_MASK (0x3F8000U)
#define TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_L_SHIFT (15U)
/*! ABASE_L - Array base address low */
#define TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_L(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_L_SHIFT)) & TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_L_MASK)

#define TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_H_MASK (0xFFC00000U)
#define TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_H_SHIFT (22U)
/*! ABASE_H - Array base address high */
#define TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_H(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_H_SHIFT)) & TRDC_MGR_WKUP1_TRDC_FLW_ABASE_ABASE_H_MASK)
/*! @} */

/*! @name TRDC_FLW_BCNT - TRDC FLW Block Count */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_FLW_BCNT_BCNT_MASK   (0x7FFFU)
#define TRDC_MGR_WKUP1_TRDC_FLW_BCNT_BCNT_SHIFT  (0U)
/*! BCNT - Block Count */
#define TRDC_MGR_WKUP1_TRDC_FLW_BCNT_BCNT(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_FLW_BCNT_BCNT_SHIFT)) & TRDC_MGR_WKUP1_TRDC_FLW_BCNT_BCNT_MASK)
/*! @} */

/*! @name TRDC_FDID - TRDC Fault Domain ID */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_FDID_FDID_MASK       (0xFU)
#define TRDC_MGR_WKUP1_TRDC_FDID_FDID_SHIFT      (0U)
/*! FDID - Domain ID of Faulted Access */
#define TRDC_MGR_WKUP1_TRDC_FDID_FDID(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_FDID_FDID_SHIFT)) & TRDC_MGR_WKUP1_TRDC_FDID_FDID_MASK)
/*! @} */

/*! @name TRDC_DERRLOC - TRDC Domain Error Location Register */
/*! @{ */

#define TRDC_MGR_WKUP1_TRDC_DERRLOC_MBCINST_MASK (0xFFU)
#define TRDC_MGR_WKUP1_TRDC_DERRLOC_MBCINST_SHIFT (0U)
/*! MBCINST - MBC instance */
#define TRDC_MGR_WKUP1_TRDC_DERRLOC_MBCINST(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_DERRLOC_MBCINST_SHIFT)) & TRDC_MGR_WKUP1_TRDC_DERRLOC_MBCINST_MASK)

#define TRDC_MGR_WKUP1_TRDC_DERRLOC_MRCINST_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_TRDC_DERRLOC_MRCINST_SHIFT (16U)
/*! MRCINST - MRC instance */
#define TRDC_MGR_WKUP1_TRDC_DERRLOC_MRCINST(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_TRDC_DERRLOC_MRCINST_SHIFT)) & TRDC_MGR_WKUP1_TRDC_DERRLOC_MRCINST_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_TRDC_DERRLOC */
#define TRDC_MGR_WKUP1_TRDC_DERRLOC_COUNT        (16U)

/*! @name W0 - MBC Domain Error Word0 Register */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_EADDR_MASK             (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_W0_EADDR_SHIFT            (0U)
/*! EADDR - Error address */
#define TRDC_MGR_WKUP1_W0_EADDR(x)               (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_EADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_EADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_W0_COUNT                  (3U)

/*! @name W1 - MBC Domain Error Word1 Register */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_EDID_MASK              (0xFU)
#define TRDC_MGR_WKUP1_W1_EDID_SHIFT             (0U)
/*! EDID - Error domain identifier */
#define TRDC_MGR_WKUP1_W1_EDID(x)                (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EDID_SHIFT)) & TRDC_MGR_WKUP1_W1_EDID_MASK)

#define TRDC_MGR_WKUP1_W1_EATR_MASK              (0x700U)
#define TRDC_MGR_WKUP1_W1_EATR_SHIFT             (8U)
/*! EATR - Error attributes
 *  0b000..Secure user mode, instruction fetch access.
 *  0b001..Secure user mode, data access.
 *  0b010..Secure privileged mode, instruction fetch access.
 *  0b011..Secure privileged mode, data access.
 *  0b100..Nonsecure user mode, instruction fetch access.
 *  0b101..Nonsecure user mode, data access.
 *  0b110..Nonsecure privileged mode, instruction fetch access.
 *  0b111..Nonsecure privileged mode, data access.
 */
#define TRDC_MGR_WKUP1_W1_EATR(x)                (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EATR_SHIFT)) & TRDC_MGR_WKUP1_W1_EATR_MASK)

#define TRDC_MGR_WKUP1_W1_ERW_MASK               (0x800U)
#define TRDC_MGR_WKUP1_W1_ERW_SHIFT              (11U)
/*! ERW - Error read/write
 *  0b0..Read access
 *  0b1..Write access
 */
#define TRDC_MGR_WKUP1_W1_ERW(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_ERW_SHIFT)) & TRDC_MGR_WKUP1_W1_ERW_MASK)

#define TRDC_MGR_WKUP1_W1_EPORT_MASK             (0x7000000U)
#define TRDC_MGR_WKUP1_W1_EPORT_SHIFT            (24U)
/*! EPORT - Error port
 *  0b000..mbcxslv0
 *  0b001..mbcxslv1
 *  0b010..mbcxslv2
 *  0b011..mbcxslv3
 */
#define TRDC_MGR_WKUP1_W1_EPORT(x)               (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EPORT_SHIFT)) & TRDC_MGR_WKUP1_W1_EPORT_MASK)

#define TRDC_MGR_WKUP1_W1_EST_MASK               (0xC0000000U)
#define TRDC_MGR_WKUP1_W1_EST_SHIFT              (30U)
/*! EST - Error state
 *  0b00..No access violation has been detected.
 *  0b01..No access violation has been detected.
 *  0b10..A single access violation has been detected.
 *  0b11..Multiple access violations for this domain have been detected by this submodule instance. Only the
 *        address and attribute information for the first error have been captured in DERR_W0_i and DERR_W1_i.
 */
#define TRDC_MGR_WKUP1_W1_EST(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EST_SHIFT)) & TRDC_MGR_WKUP1_W1_EST_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_W1_COUNT                  (3U)

/*! @name W3 - MBC Domain Error Word3 Register */
/*! @{ */

#define TRDC_MGR_WKUP1_W3_RECR_MASK              (0xC0000000U)
#define TRDC_MGR_WKUP1_W3_RECR_SHIFT             (30U)
/*! RECR - Rearm Error Capture Registers */
#define TRDC_MGR_WKUP1_W3_RECR(x)                (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W3_RECR_SHIFT)) & TRDC_MGR_WKUP1_W3_RECR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W3 */
#define TRDC_MGR_WKUP1_W3_COUNT                  (3U)

/*! @name W0 - MRC Domain Error Word0 Register */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_EADDR_MASK             (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_W0_EADDR_SHIFT            (0U)
/*! EADDR - Error address */
#define TRDC_MGR_WKUP1_W0_EADDR(x)               (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_EADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_EADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC_DERR_W0_COUNT         (5U)

/*! @name W1 - MRC Domain Error Word1 Register */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_EDID_MASK              (0xFU)
#define TRDC_MGR_WKUP1_W1_EDID_SHIFT             (0U)
/*! EDID - Error domain identifier */
#define TRDC_MGR_WKUP1_W1_EDID(x)                (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EDID_SHIFT)) & TRDC_MGR_WKUP1_W1_EDID_MASK)

#define TRDC_MGR_WKUP1_W1_EATR_MASK              (0x700U)
#define TRDC_MGR_WKUP1_W1_EATR_SHIFT             (8U)
/*! EATR - Error attributes
 *  0b000..Secure user mode, instruction fetch access.
 *  0b001..Secure user mode, data access.
 *  0b010..Secure privileged mode, instruction fetch access.
 *  0b011..Secure privileged mode, data access.
 *  0b100..Nonsecure user mode, instruction fetch access.
 *  0b101..Nonsecure user mode, data access.
 *  0b110..Nonsecure privileged mode, instruction fetch access.
 *  0b111..Nonsecure privileged mode, data access.
 */
#define TRDC_MGR_WKUP1_W1_EATR(x)                (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EATR_SHIFT)) & TRDC_MGR_WKUP1_W1_EATR_MASK)

#define TRDC_MGR_WKUP1_W1_ERW_MASK               (0x800U)
#define TRDC_MGR_WKUP1_W1_ERW_SHIFT              (11U)
/*! ERW - Error read/write
 *  0b0..Read access
 *  0b1..Write access
 */
#define TRDC_MGR_WKUP1_W1_ERW(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_ERW_SHIFT)) & TRDC_MGR_WKUP1_W1_ERW_MASK)

#define TRDC_MGR_WKUP1_W1_EPORT_MASK             (0x7000000U)
#define TRDC_MGR_WKUP1_W1_EPORT_SHIFT            (24U)
/*! EPORT - Error port */
#define TRDC_MGR_WKUP1_W1_EPORT(x)               (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EPORT_SHIFT)) & TRDC_MGR_WKUP1_W1_EPORT_MASK)

#define TRDC_MGR_WKUP1_W1_EST_MASK               (0xC0000000U)
#define TRDC_MGR_WKUP1_W1_EST_SHIFT              (30U)
/*! EST - Error state
 *  0b00..No access violation has been detected.
 *  0b01..No access violation has been detected.
 *  0b10..A single access violation has been detected.
 *  0b11..Multiple access violations for this domain have been detected by this submodule instance. Only the
 *        address and attribute information for the first error have been captured in DERR_W0_i and DERR_W1_i.
 */
#define TRDC_MGR_WKUP1_W1_EST(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_EST_SHIFT)) & TRDC_MGR_WKUP1_W1_EST_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC_DERR_W1_COUNT         (5U)

/*! @name W3 - MRC Domain Error Word3 Register */
/*! @{ */

#define TRDC_MGR_WKUP1_W3_RECR_MASK              (0xC0000000U)
#define TRDC_MGR_WKUP1_W3_RECR_SHIFT             (30U)
/*! RECR - Rearm Error Capture Registers */
#define TRDC_MGR_WKUP1_W3_RECR(x)                (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W3_RECR_SHIFT)) & TRDC_MGR_WKUP1_W3_RECR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W3 */
#define TRDC_MGR_WKUP1_MRC_DERR_W3_COUNT         (5U)

/*! @name MDA_W0_0_DFMT0 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DIDS_MASK  (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DIDS_SHIFT (4U)
/*! DIDS - DID Select
 *  0b00..Use MDAm[3:0] as the domain identifier.
 *  0b01..Use the input DID as the domain identifier.
 *  0b10..Use MDAm[3:2] concatenated with the low-order 2 bits of the input DID (DID_in[1:0]) as the domain identifier.
 *  0b11..Reserved for future use.
 */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DIDS(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DIDS_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DIDS_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SA_MASK    (0xC000U)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SA_SHIFT   (14U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_0_DFMT0_VLD_MASK)
/*! @} */

/*! @name MDA_W0_1_DFMT0 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DIDS_MASK  (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DIDS_SHIFT (4U)
/*! DIDS - DID Select
 *  0b00..Use MDAm[3:0] as the domain identifier.
 *  0b01..Use the input DID as the domain identifier.
 *  0b10..Use MDAm[3:2] concatenated with the low-order 2 bits of the input DID (DID_in[1:0]) as the domain identifier.
 *  0b11..Reserved for future use.
 */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DIDS(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DIDS_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DIDS_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SA_MASK    (0xC000U)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SA_SHIFT   (14U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_1_DFMT0_VLD_MASK)
/*! @} */

/*! @name MDA_W0_2_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_2_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_3_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_3_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_4_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_4_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_5_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_5_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_6_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_6_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_7_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_7_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_8_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_8_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_9_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DID_MASK   (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DID_SHIFT  (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_PA_MASK    (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_PA_SHIFT   (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_PA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SA_MASK    (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SA_SHIFT   (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SA(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DIDB_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DIDB(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SID_MASK   (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SID_SHIFT  (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SID(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_KPA_MASK   (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_KPA_SHIFT  (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_KPA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DFMT_MASK  (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DFMT(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_LK1_MASK   (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_LK1_SHIFT  (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_LK1(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_VLD_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_VLD_SHIFT  (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_VLD(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_9_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_10_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_10_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_11_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_11_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_12_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_12_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_13_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_13_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_14_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_14_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_15_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_15_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_16_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_16_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_17_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_17_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_18_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_18_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_19_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_19_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_20_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_20_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_21_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_21_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_22_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_22_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_23_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_23_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_24_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_24_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_25_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_25_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_26_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_26_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_27_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_27_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_28_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_28_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_29_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_29_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_30_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_30_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_31_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_31_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_32_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_32_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_33_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_33_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_34_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_34_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_35_DFMT1 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_PA_MASK   (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_PA_SHIFT  (4U)
/*! PA - Privileged attribute
 *  0b00..Force the bus attribute for this master to user.
 *  0b01..Force the bus attribute for this master to privileged.
 *  0b10..Use the bus master's privileged/user attribute directly.
 *  0b11..Use the bus master's privileged/user attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_PA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_PA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_PA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SA_MASK   (0xC0U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SA_SHIFT  (6U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DIDB_MASK (0x100U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DIDB_SHIFT (8U)
/*! DIDB - DID Bypass
 *  0b0..Use MDAn[3:0] as the domain identifier.
 *  0b1..Use the DID input as the domain identifier.
 */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DIDB(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DIDB_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DIDB_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_35_DFMT1_VLD_MASK)
/*! @} */

/*! @name MDA_W0_36_DFMT0 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DIDS_MASK (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DIDS_SHIFT (4U)
/*! DIDS - DID Select
 *  0b00..Use MDAm[3:0] as the domain identifier.
 *  0b01..Use the input DID as the domain identifier.
 *  0b10..Use MDAm[3:2] concatenated with the low-order 2 bits of the input DID (DID_in[1:0]) as the domain identifier.
 *  0b11..Reserved for future use.
 */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DIDS(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DIDS_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DIDS_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SA_MASK   (0xC000U)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SA_SHIFT  (14U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_36_DFMT0_VLD_MASK)
/*! @} */

/*! @name MDA_W0_37_DFMT0 - DAC Master Domain Assignment Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DID_MASK  (0xFU)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DID_SHIFT (0U)
/*! DID - Domain identifier */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DIDS_MASK (0x30U)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DIDS_SHIFT (4U)
/*! DIDS - DID Select
 *  0b00..Use MDAm[3:0] as the domain identifier.
 *  0b01..Use the input DID as the domain identifier.
 *  0b10..Use MDAm[3:2] concatenated with the low-order 2 bits of the input DID (DID_in[1:0]) as the domain identifier.
 *  0b11..Reserved for future use.
 */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DIDS(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DIDS_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DIDS_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SA_MASK   (0xC000U)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SA_SHIFT  (14U)
/*! SA - Secure attribute
 *  0b00..Force the bus attribute for this master to secure.
 *  0b01..Force the bus attribute for this master to nonsecure.
 *  0b10..Use the bus master's secure/nonsecure attribute directly.
 *  0b11..Use the bus master's secure/nonsecure attribute directly.
 */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SA(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SID_MASK  (0xFC00000U)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SID_SHIFT (22U)
/*! SID - Stream ID */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SID(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SID_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_SID_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_KPA_MASK  (0x10000000U)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_KPA_SHIFT (28U)
/*! KPA - Known Physical Address
 *  0b0..The address is non-physical and requires SMMU translation.
 *  0b1..The address is physical and bypasses any downstream SMMU.
 */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_KPA(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_KPA_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_KPA_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DFMT_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DFMT_SHIFT (29U)
/*! DFMT - Domain format
 *  0b0..Processor-core domain assignment
 *  0b1..Non-processor domain assignment
 */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DFMT(x)   (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DFMT_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_DFMT_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_LK1_MASK  (0x40000000U)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_LK1_SHIFT (30U)
/*! LK1 - 1-bit Lock
 *  0b0..Register can be written by any secure privileged write.
 *  0b1..Register is locked (read-only) until the next reset.
 */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_LK1(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_LK1_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_LK1_MASK)

#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_VLD_MASK  (0x80000000U)
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_VLD_SHIFT (31U)
/*! VLD - Valid
 *  0b0..The Wr domain assignment is invalid.
 *  0b1..The Wr domain assignment is valid.
 */
#define TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_VLD(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_VLD_SHIFT)) & TRDC_MGR_WKUP1_MDA_W0_37_DFMT0_VLD_MASK)
/*! @} */

/*! @name MBC0_MEM_GLBCFG - MBC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_NBLKS_MASK (0x3FFU)
#define TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_NBLKS_SHIFT (0U)
/*! NBLKS - Number of blocks in this memory */
#define TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_NBLKS(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_NBLKS_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_NBLKS_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_SIZE_LOG2_MASK (0x1F0000U)
#define TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_SIZE_LOG2_SHIFT (16U)
/*! SIZE_LOG2 - Log2 size per block */
#define TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_SIZE_LOG2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_SIZE_LOG2_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_SIZE_LOG2_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG */
#define TRDC_MGR_WKUP1_MBC0_MEM_GLBCFG_COUNT     (4U)

/*! @name MBC0_NSE_BLK_INDEX - MBC NonSecure Enable Block Index */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_AI_MASK (0x1U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_AI_SHIFT (0U)
/*! AI - Auto Increment
 *  0b0..No effect.
 *  0b1..Add 1 to the WNDX field after the register write.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_AI(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_AI_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_AI_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_WNDX_MASK (0x3CU)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_WNDX_SHIFT (2U)
/*! WNDX - Word index into the block NSE bitmap. It selects the BLK_NSE_Wn register, where WNDX determines the value of n. */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_WNDX(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_WNDX_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_WNDX_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_MEM_SEL_MASK (0xF00U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_MEM_SEL_SHIFT (8U)
/*! MEM_SEL - Memory Select */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_MEM_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_MEM_SEL_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_MEM_SEL_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL0_MASK (0x10000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL0_SHIFT (16U)
/*! DID_SEL0 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL0_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL0_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL1_MASK (0x20000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL1_SHIFT (17U)
/*! DID_SEL1 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL1_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL1_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL2_MASK (0x40000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL2_SHIFT (18U)
/*! DID_SEL2 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL2_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL2_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL3_MASK (0x80000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL3_SHIFT (19U)
/*! DID_SEL3 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL3_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL3_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL4_MASK (0x100000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL4_SHIFT (20U)
/*! DID_SEL4 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL4_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL4_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL5_MASK (0x200000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL5_SHIFT (21U)
/*! DID_SEL5 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL5_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL5_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL6_MASK (0x400000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL6_SHIFT (22U)
/*! DID_SEL6 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL6_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL6_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL7_MASK (0x800000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL7_SHIFT (23U)
/*! DID_SEL7 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL7_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL7_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL8_MASK (0x1000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL8_SHIFT (24U)
/*! DID_SEL8 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL8(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL8_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL8_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL9_MASK (0x2000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL9_SHIFT (25U)
/*! DID_SEL9 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL9(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL9_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL9_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL10_MASK (0x4000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL10_SHIFT (26U)
/*! DID_SEL10 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL10(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL10_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL10_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL11_MASK (0x8000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL11_SHIFT (27U)
/*! DID_SEL11 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL11(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL11_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL11_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL12_MASK (0x10000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL12_SHIFT (28U)
/*! DID_SEL12 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL12(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL12_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL12_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL13_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL13_SHIFT (29U)
/*! DID_SEL13 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL13(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL13_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL13_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL14_MASK (0x40000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL14_SHIFT (30U)
/*! DID_SEL14 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL14(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL14_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL14_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL15_MASK (0x80000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL15_SHIFT (31U)
/*! DID_SEL15 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL15(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL15_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_INDEX_DID_SEL15_MASK)
/*! @} */

/*! @name MBC0_NSE_BLK_SET - MBC NonSecure Enable Block Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_SET_W1SET_MASK (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_SET_W1SET_MASK)
/*! @} */

/*! @name MBC0_NSE_BLK_CLR - MBC NonSecure Enable Block Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_W1CLR_MASK (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_W1CLR_MASK)
/*! @} */

/*! @name MBC0_NSE_BLK_CLR_ALL - MBC NonSecure Enable Block Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_MEMSEL_MASK (0xF00U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_MEMSEL_SHIFT (8U)
/*! MEMSEL - Memory Select */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_MEMSEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_MEMSEL_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_MEMSEL_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL0_MASK (0x10000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL0_SHIFT (16U)
/*! DID_SEL0 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL0_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL0_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL1_MASK (0x20000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL1_SHIFT (17U)
/*! DID_SEL1 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL1_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL1_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL2_MASK (0x40000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL2_SHIFT (18U)
/*! DID_SEL2 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL2_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL2_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL3_MASK (0x80000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL3_SHIFT (19U)
/*! DID_SEL3 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL3_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL3_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL4_MASK (0x100000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL4_SHIFT (20U)
/*! DID_SEL4 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL4_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL4_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL5_MASK (0x200000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL5_SHIFT (21U)
/*! DID_SEL5 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL5_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL5_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL6_MASK (0x400000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL6_SHIFT (22U)
/*! DID_SEL6 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL6_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL6_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL7_MASK (0x800000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL7_SHIFT (23U)
/*! DID_SEL7 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL7_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL7_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL8_MASK (0x1000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL8_SHIFT (24U)
/*! DID_SEL8 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL8(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL8_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL8_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL9_MASK (0x2000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL9_SHIFT (25U)
/*! DID_SEL9 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL9(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL9_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL9_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL10_MASK (0x4000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL10_SHIFT (26U)
/*! DID_SEL10 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL10(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL10_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL10_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL11_MASK (0x8000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL11_SHIFT (27U)
/*! DID_SEL11 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL11(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL11_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL11_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL12_MASK (0x10000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL12_SHIFT (28U)
/*! DID_SEL12 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL12(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL12_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL12_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL13_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL13_SHIFT (29U)
/*! DID_SEL13 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL13(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL13_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL13_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL14_MASK (0x40000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL14_SHIFT (30U)
/*! DID_SEL14 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL14(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL14_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL14_MASK)

#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL15_MASK (0x80000000U)
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL15_SHIFT (31U)
/*! DID_SEL15 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL15(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL15_SHIFT)) & TRDC_MGR_WKUP1_MBC0_NSE_BLK_CLR_ALL_DID_SEL15_MASK)
/*! @} */

/*! @name MBC0_MEMN_GLBAC - MBC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUX_MASK  (0x1U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUX_SHIFT (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUW_MASK  (0x2U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUW_SHIFT (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUR_MASK  (0x4U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUR_SHIFT (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPX_MASK  (0x10U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPX_SHIFT (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPW_MASK  (0x20U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPW_SHIFT (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPR_MASK  (0x40U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPR_SHIFT (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUX_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUX_SHIFT (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUW_MASK  (0x200U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUW_SHIFT (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUR_MASK  (0x400U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUR_SHIFT (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPX_MASK  (0x1000U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPX_SHIFT (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPW_MASK  (0x2000U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPW_SHIFT (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPR_MASK  (0x4000U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPR_SHIFT (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_LK_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_LK_SHIFT  (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_LK(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_LK_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC */
#define TRDC_MGR_WKUP1_MBC0_MEMN_GLBAC_COUNT     (8U)

/*! @name MBC1_MEM_GLBCFG - MBC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_NBLKS_MASK (0x3FFU)
#define TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_NBLKS_SHIFT (0U)
/*! NBLKS - Number of blocks in this memory */
#define TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_NBLKS(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_NBLKS_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_NBLKS_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_SIZE_LOG2_MASK (0x1F0000U)
#define TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_SIZE_LOG2_SHIFT (16U)
/*! SIZE_LOG2 - Log2 size per block */
#define TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_SIZE_LOG2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_SIZE_LOG2_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_SIZE_LOG2_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG */
#define TRDC_MGR_WKUP1_MBC1_MEM_GLBCFG_COUNT     (4U)

/*! @name MBC1_NSE_BLK_INDEX - MBC NonSecure Enable Block Index */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_AI_MASK (0x1U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_AI_SHIFT (0U)
/*! AI - Auto Increment
 *  0b0..No effect.
 *  0b1..Add 1 to the WNDX field after the register write.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_AI(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_AI_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_AI_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_WNDX_MASK (0x3CU)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_WNDX_SHIFT (2U)
/*! WNDX - Word index into the block NSE bitmap. It selects the BLK_NSE_Wn register, where WNDX determines the value of n. */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_WNDX(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_WNDX_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_WNDX_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_MEM_SEL_MASK (0xF00U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_MEM_SEL_SHIFT (8U)
/*! MEM_SEL - Memory Select */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_MEM_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_MEM_SEL_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_MEM_SEL_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL0_MASK (0x10000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL0_SHIFT (16U)
/*! DID_SEL0 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL0_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL0_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL1_MASK (0x20000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL1_SHIFT (17U)
/*! DID_SEL1 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL1_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL1_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL2_MASK (0x40000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL2_SHIFT (18U)
/*! DID_SEL2 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL2_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL2_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL3_MASK (0x80000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL3_SHIFT (19U)
/*! DID_SEL3 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL3_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL3_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL4_MASK (0x100000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL4_SHIFT (20U)
/*! DID_SEL4 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL4_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL4_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL5_MASK (0x200000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL5_SHIFT (21U)
/*! DID_SEL5 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL5_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL5_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL6_MASK (0x400000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL6_SHIFT (22U)
/*! DID_SEL6 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL6_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL6_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL7_MASK (0x800000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL7_SHIFT (23U)
/*! DID_SEL7 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL7_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL7_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL8_MASK (0x1000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL8_SHIFT (24U)
/*! DID_SEL8 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL8(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL8_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL8_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL9_MASK (0x2000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL9_SHIFT (25U)
/*! DID_SEL9 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL9(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL9_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL9_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL10_MASK (0x4000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL10_SHIFT (26U)
/*! DID_SEL10 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL10(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL10_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL10_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL11_MASK (0x8000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL11_SHIFT (27U)
/*! DID_SEL11 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL11(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL11_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL11_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL12_MASK (0x10000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL12_SHIFT (28U)
/*! DID_SEL12 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL12(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL12_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL12_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL13_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL13_SHIFT (29U)
/*! DID_SEL13 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL13(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL13_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL13_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL14_MASK (0x40000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL14_SHIFT (30U)
/*! DID_SEL14 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL14(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL14_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL14_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL15_MASK (0x80000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL15_SHIFT (31U)
/*! DID_SEL15 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL15(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL15_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_INDEX_DID_SEL15_MASK)
/*! @} */

/*! @name MBC1_NSE_BLK_SET - MBC NonSecure Enable Block Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_SET_W1SET_MASK (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_SET_W1SET_MASK)
/*! @} */

/*! @name MBC1_NSE_BLK_CLR - MBC NonSecure Enable Block Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_W1CLR_MASK (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_W1CLR_MASK)
/*! @} */

/*! @name MBC1_NSE_BLK_CLR_ALL - MBC NonSecure Enable Block Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_MEMSEL_MASK (0xF00U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_MEMSEL_SHIFT (8U)
/*! MEMSEL - Memory Select */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_MEMSEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_MEMSEL_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_MEMSEL_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL0_MASK (0x10000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL0_SHIFT (16U)
/*! DID_SEL0 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL0_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL0_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL1_MASK (0x20000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL1_SHIFT (17U)
/*! DID_SEL1 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL1_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL1_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL2_MASK (0x40000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL2_SHIFT (18U)
/*! DID_SEL2 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL2_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL2_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL3_MASK (0x80000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL3_SHIFT (19U)
/*! DID_SEL3 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL3_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL3_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL4_MASK (0x100000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL4_SHIFT (20U)
/*! DID_SEL4 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL4_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL4_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL5_MASK (0x200000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL5_SHIFT (21U)
/*! DID_SEL5 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL5_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL5_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL6_MASK (0x400000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL6_SHIFT (22U)
/*! DID_SEL6 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL6_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL6_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL7_MASK (0x800000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL7_SHIFT (23U)
/*! DID_SEL7 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL7_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL7_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL8_MASK (0x1000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL8_SHIFT (24U)
/*! DID_SEL8 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL8(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL8_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL8_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL9_MASK (0x2000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL9_SHIFT (25U)
/*! DID_SEL9 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL9(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL9_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL9_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL10_MASK (0x4000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL10_SHIFT (26U)
/*! DID_SEL10 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL10(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL10_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL10_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL11_MASK (0x8000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL11_SHIFT (27U)
/*! DID_SEL11 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL11(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL11_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL11_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL12_MASK (0x10000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL12_SHIFT (28U)
/*! DID_SEL12 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL12(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL12_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL12_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL13_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL13_SHIFT (29U)
/*! DID_SEL13 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL13(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL13_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL13_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL14_MASK (0x40000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL14_SHIFT (30U)
/*! DID_SEL14 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL14(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL14_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL14_MASK)

#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL15_MASK (0x80000000U)
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL15_SHIFT (31U)
/*! DID_SEL15 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL15(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL15_SHIFT)) & TRDC_MGR_WKUP1_MBC1_NSE_BLK_CLR_ALL_DID_SEL15_MASK)
/*! @} */

/*! @name MBC1_MEMN_GLBAC - MBC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUX_MASK  (0x1U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUX_SHIFT (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUW_MASK  (0x2U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUW_SHIFT (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUR_MASK  (0x4U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUR_SHIFT (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPX_MASK  (0x10U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPX_SHIFT (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPW_MASK  (0x20U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPW_SHIFT (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPR_MASK  (0x40U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPR_SHIFT (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUX_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUX_SHIFT (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUW_MASK  (0x200U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUW_SHIFT (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUR_MASK  (0x400U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUR_SHIFT (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPX_MASK  (0x1000U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPX_SHIFT (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPW_MASK  (0x2000U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPW_SHIFT (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPR_MASK  (0x4000U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPR_SHIFT (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_LK_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_LK_SHIFT  (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_LK(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_LK_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC */
#define TRDC_MGR_WKUP1_MBC1_MEMN_GLBAC_COUNT     (8U)

/*! @name MBC2_MEM_GLBCFG - MBC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_NBLKS_MASK (0x3FFU)
#define TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_NBLKS_SHIFT (0U)
/*! NBLKS - Number of blocks in this memory */
#define TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_NBLKS(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_NBLKS_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_NBLKS_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_SIZE_LOG2_MASK (0x1F0000U)
#define TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_SIZE_LOG2_SHIFT (16U)
/*! SIZE_LOG2 - Log2 size per block */
#define TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_SIZE_LOG2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_SIZE_LOG2_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_SIZE_LOG2_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG */
#define TRDC_MGR_WKUP1_MBC2_MEM_GLBCFG_COUNT     (4U)

/*! @name MBC2_NSE_BLK_INDEX - MBC NonSecure Enable Block Index */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_AI_MASK (0x1U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_AI_SHIFT (0U)
/*! AI - Auto Increment
 *  0b0..No effect.
 *  0b1..Add 1 to the WNDX field after the register write.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_AI(x)  (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_AI_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_AI_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_WNDX_MASK (0x3CU)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_WNDX_SHIFT (2U)
/*! WNDX - Word index into the block NSE bitmap. It selects the BLK_NSE_Wn register, where WNDX determines the value of n. */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_WNDX(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_WNDX_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_WNDX_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_MEM_SEL_MASK (0xF00U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_MEM_SEL_SHIFT (8U)
/*! MEM_SEL - Memory Select */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_MEM_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_MEM_SEL_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_MEM_SEL_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL0_MASK (0x10000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL0_SHIFT (16U)
/*! DID_SEL0 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL0_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL0_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL1_MASK (0x20000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL1_SHIFT (17U)
/*! DID_SEL1 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL1_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL1_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL2_MASK (0x40000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL2_SHIFT (18U)
/*! DID_SEL2 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL2_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL2_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL3_MASK (0x80000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL3_SHIFT (19U)
/*! DID_SEL3 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL3_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL3_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL4_MASK (0x100000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL4_SHIFT (20U)
/*! DID_SEL4 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL4_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL4_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL5_MASK (0x200000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL5_SHIFT (21U)
/*! DID_SEL5 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL5_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL5_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL6_MASK (0x400000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL6_SHIFT (22U)
/*! DID_SEL6 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL6_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL6_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL7_MASK (0x800000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL7_SHIFT (23U)
/*! DID_SEL7 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL7_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL7_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL8_MASK (0x1000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL8_SHIFT (24U)
/*! DID_SEL8 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL8(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL8_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL8_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL9_MASK (0x2000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL9_SHIFT (25U)
/*! DID_SEL9 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL9(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL9_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL9_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL10_MASK (0x4000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL10_SHIFT (26U)
/*! DID_SEL10 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL10(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL10_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL10_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL11_MASK (0x8000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL11_SHIFT (27U)
/*! DID_SEL11 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL11(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL11_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL11_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL12_MASK (0x10000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL12_SHIFT (28U)
/*! DID_SEL12 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL12(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL12_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL12_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL13_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL13_SHIFT (29U)
/*! DID_SEL13 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL13(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL13_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL13_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL14_MASK (0x40000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL14_SHIFT (30U)
/*! DID_SEL14 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL14(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL14_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL14_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL15_MASK (0x80000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL15_SHIFT (31U)
/*! DID_SEL15 - DID Select
 *  0b0..No effect.
 *  0b1..Selects NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL15(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL15_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_INDEX_DID_SEL15_MASK)
/*! @} */

/*! @name MBC2_NSE_BLK_SET - MBC NonSecure Enable Block Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_SET_W1SET_MASK (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_SET_W1SET_MASK)
/*! @} */

/*! @name MBC2_NSE_BLK_CLR - MBC NonSecure Enable Block Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_W1CLR_MASK (0xFFFFFFFFU)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_W1CLR_MASK)
/*! @} */

/*! @name MBC2_NSE_BLK_CLR_ALL - MBC NonSecure Enable Block Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_MEMSEL_MASK (0xF00U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_MEMSEL_SHIFT (8U)
/*! MEMSEL - Memory Select */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_MEMSEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_MEMSEL_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_MEMSEL_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL0_MASK (0x10000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL0_SHIFT (16U)
/*! DID_SEL0 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL0_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL0_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL1_MASK (0x20000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL1_SHIFT (17U)
/*! DID_SEL1 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL1_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL1_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL2_MASK (0x40000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL2_SHIFT (18U)
/*! DID_SEL2 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL2_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL2_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL3_MASK (0x80000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL3_SHIFT (19U)
/*! DID_SEL3 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL3_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL3_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL4_MASK (0x100000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL4_SHIFT (20U)
/*! DID_SEL4 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL4_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL4_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL5_MASK (0x200000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL5_SHIFT (21U)
/*! DID_SEL5 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL5_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL5_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL6_MASK (0x400000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL6_SHIFT (22U)
/*! DID_SEL6 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL6_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL6_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL7_MASK (0x800000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL7_SHIFT (23U)
/*! DID_SEL7 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL7_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL7_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL8_MASK (0x1000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL8_SHIFT (24U)
/*! DID_SEL8 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL8(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL8_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL8_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL9_MASK (0x2000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL9_SHIFT (25U)
/*! DID_SEL9 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL9(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL9_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL9_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL10_MASK (0x4000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL10_SHIFT (26U)
/*! DID_SEL10 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL10(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL10_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL10_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL11_MASK (0x8000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL11_SHIFT (27U)
/*! DID_SEL11 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL11(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL11_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL11_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL12_MASK (0x10000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL12_SHIFT (28U)
/*! DID_SEL12 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL12(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL12_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL12_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL13_MASK (0x20000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL13_SHIFT (29U)
/*! DID_SEL13 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL13(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL13_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL13_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL14_MASK (0x40000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL14_SHIFT (30U)
/*! DID_SEL14 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL14(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL14_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL14_MASK)

#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL15_MASK (0x80000000U)
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL15_SHIFT (31U)
/*! DID_SEL15 - DID Select
 *  0b0..No effect.
 *  0b1..Clear all NSE bits for this domain.
 */
#define TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL15(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL15_SHIFT)) & TRDC_MGR_WKUP1_MBC2_NSE_BLK_CLR_ALL_DID_SEL15_MASK)
/*! @} */

/*! @name MBC2_MEMN_GLBAC - MBC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUX_MASK  (0x1U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUX_SHIFT (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUW_MASK  (0x2U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUW_SHIFT (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUR_MASK  (0x4U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUR_SHIFT (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPX_MASK  (0x10U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPX_SHIFT (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPW_MASK  (0x20U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPW_SHIFT (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPR_MASK  (0x40U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPR_SHIFT (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUX_MASK  (0x100U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUX_SHIFT (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUW_MASK  (0x200U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUW_SHIFT (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUR_MASK  (0x400U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUR_SHIFT (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPX_MASK  (0x1000U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPX_SHIFT (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPX(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPW_MASK  (0x2000U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPW_SHIFT (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPW(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPR_MASK  (0x4000U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPR_SHIFT (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPR(x)    (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_LK_MASK   (0x80000000U)
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_LK_SHIFT  (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_LK(x)     (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_LK_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC */
#define TRDC_MGR_WKUP1_MBC2_MEMN_GLBAC_COUNT     (8U)

/*! @name MRC0_GLBCFG - MRC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_GLBCFG_NRGNS_MASK    (0x1FU)
#define TRDC_MGR_WKUP1_MRC0_GLBCFG_NRGNS_SHIFT   (0U)
/*! NRGNS - Number of regions [1-16] */
#define TRDC_MGR_WKUP1_MRC0_GLBCFG_NRGNS(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBCFG_NRGNS_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBCFG_NRGNS_MASK)
/*! @} */

/*! @name MRC0_NSE_RGN_INDIRECT - MRC NonSecure Enable Region Indirect */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_INDIRECT_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_INDIRECT_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_INDIRECT_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_NSE_RGN_INDIRECT_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC0_NSE_RGN_INDIRECT_DID_SEL_MASK)
/*! @} */

/*! @name MRC0_NSE_RGN_SET - MRC NonSecure Enable Region Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_SET_W1SET_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_NSE_RGN_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MRC0_NSE_RGN_SET_W1SET_MASK)
/*! @} */

/*! @name MRC0_NSE_RGN_CLR - MRC NonSecure Enable Region Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_W1CLR_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_W1CLR_MASK)
/*! @} */

/*! @name MRC0_NSE_RGN_CLR_ALL - MRC NonSecure Enable Region Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_ALL_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_ALL_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_ALL_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_ALL_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC0_NSE_RGN_CLR_ALL_DID_SEL_MASK)
/*! @} */

/*! @name MRC0_GLBAC - MRC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUX_MASK       (0x1U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUX_SHIFT      (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUW_MASK       (0x2U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUW_SHIFT      (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUR_MASK       (0x4U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUR_SHIFT      (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPX_MASK       (0x10U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPX_SHIFT      (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPW_MASK       (0x20U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPW_SHIFT      (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPR_MASK       (0x40U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPR_SHIFT      (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_NPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUX_MASK       (0x100U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUX_SHIFT      (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUW_MASK       (0x200U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUW_SHIFT      (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUR_MASK       (0x400U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUR_SHIFT      (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPX_MASK       (0x1000U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPX_SHIFT      (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPW_MASK       (0x2000U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPW_SHIFT      (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPR_MASK       (0x4000U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPR_SHIFT      (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_SPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MRC0_GLBAC_LK_MASK        (0x80000000U)
#define TRDC_MGR_WKUP1_MRC0_GLBAC_LK_SHIFT       (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked (read-only) and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MRC0_GLBAC_LK(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MRC0_GLBAC_LK_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM0_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM0_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM1_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM1_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM2_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM2_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM3_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM3_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM4_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM4_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM5_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM5_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM6_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM6_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM7_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM7_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM8_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM8_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_W1_COUNT    (8U)

/*! @name MRC0_DOM9_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM9_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_W1_COUNT   (8U)

/*! @name MRC0_DOM10_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM10_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_W1_COUNT   (8U)

/*! @name MRC0_DOM11_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM11_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_W1_COUNT   (8U)

/*! @name MRC0_DOM12_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM12_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_W1_COUNT   (8U)

/*! @name MRC0_DOM13_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM13_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_W1_COUNT   (8U)

/*! @name MRC0_DOM14_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM14_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_W1_COUNT   (8U)

/*! @name MRC0_DOM15_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC0_DOM15_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name MRC1_GLBCFG - MRC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_GLBCFG_NRGNS_MASK    (0x1FU)
#define TRDC_MGR_WKUP1_MRC1_GLBCFG_NRGNS_SHIFT   (0U)
/*! NRGNS - Number of regions [1-16] */
#define TRDC_MGR_WKUP1_MRC1_GLBCFG_NRGNS(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBCFG_NRGNS_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBCFG_NRGNS_MASK)
/*! @} */

/*! @name MRC1_NSE_RGN_INDIRECT - MRC NonSecure Enable Region Indirect */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_INDIRECT_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_INDIRECT_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_INDIRECT_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_NSE_RGN_INDIRECT_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC1_NSE_RGN_INDIRECT_DID_SEL_MASK)
/*! @} */

/*! @name MRC1_NSE_RGN_SET - MRC NonSecure Enable Region Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_SET_W1SET_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_NSE_RGN_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MRC1_NSE_RGN_SET_W1SET_MASK)
/*! @} */

/*! @name MRC1_NSE_RGN_CLR - MRC NonSecure Enable Region Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_W1CLR_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_W1CLR_MASK)
/*! @} */

/*! @name MRC1_NSE_RGN_CLR_ALL - MRC NonSecure Enable Region Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_ALL_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_ALL_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_ALL_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_ALL_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC1_NSE_RGN_CLR_ALL_DID_SEL_MASK)
/*! @} */

/*! @name MRC1_GLBAC - MRC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUX_MASK       (0x1U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUX_SHIFT      (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUW_MASK       (0x2U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUW_SHIFT      (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUR_MASK       (0x4U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUR_SHIFT      (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPX_MASK       (0x10U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPX_SHIFT      (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPW_MASK       (0x20U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPW_SHIFT      (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPR_MASK       (0x40U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPR_SHIFT      (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_NPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUX_MASK       (0x100U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUX_SHIFT      (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUW_MASK       (0x200U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUW_SHIFT      (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUR_MASK       (0x400U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUR_SHIFT      (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPX_MASK       (0x1000U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPX_SHIFT      (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPW_MASK       (0x2000U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPW_SHIFT      (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPR_MASK       (0x4000U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPR_SHIFT      (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_SPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MRC1_GLBAC_LK_MASK        (0x80000000U)
#define TRDC_MGR_WKUP1_MRC1_GLBAC_LK_SHIFT       (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked (read-only) and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MRC1_GLBAC_LK(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MRC1_GLBAC_LK_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM0_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM0_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM1_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM1_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM2_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM2_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM3_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM3_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM4_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM4_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM5_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM5_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM6_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM6_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM7_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM7_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM8_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM8_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_W1_COUNT    (8U)

/*! @name MRC1_DOM9_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM9_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_W1_COUNT   (8U)

/*! @name MRC1_DOM10_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM10_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_W1_COUNT   (8U)

/*! @name MRC1_DOM11_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM11_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_W1_COUNT   (8U)

/*! @name MRC1_DOM12_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM12_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_W1_COUNT   (8U)

/*! @name MRC1_DOM13_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM13_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_W1_COUNT   (8U)

/*! @name MRC1_DOM14_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM14_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_W1_COUNT   (8U)

/*! @name MRC1_DOM15_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC1_DOM15_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name MRC2_GLBCFG - MRC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_GLBCFG_NRGNS_MASK    (0x1FU)
#define TRDC_MGR_WKUP1_MRC2_GLBCFG_NRGNS_SHIFT   (0U)
/*! NRGNS - Number of regions [1-16] */
#define TRDC_MGR_WKUP1_MRC2_GLBCFG_NRGNS(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBCFG_NRGNS_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBCFG_NRGNS_MASK)
/*! @} */

/*! @name MRC2_NSE_RGN_INDIRECT - MRC NonSecure Enable Region Indirect */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_INDIRECT_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_INDIRECT_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_INDIRECT_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_NSE_RGN_INDIRECT_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC2_NSE_RGN_INDIRECT_DID_SEL_MASK)
/*! @} */

/*! @name MRC2_NSE_RGN_SET - MRC NonSecure Enable Region Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_SET_W1SET_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_NSE_RGN_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MRC2_NSE_RGN_SET_W1SET_MASK)
/*! @} */

/*! @name MRC2_NSE_RGN_CLR - MRC NonSecure Enable Region Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_W1CLR_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_W1CLR_MASK)
/*! @} */

/*! @name MRC2_NSE_RGN_CLR_ALL - MRC NonSecure Enable Region Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_ALL_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_ALL_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_ALL_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_ALL_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC2_NSE_RGN_CLR_ALL_DID_SEL_MASK)
/*! @} */

/*! @name MRC2_GLBAC - MRC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUX_MASK       (0x1U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUX_SHIFT      (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUW_MASK       (0x2U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUW_SHIFT      (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUR_MASK       (0x4U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUR_SHIFT      (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPX_MASK       (0x10U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPX_SHIFT      (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPW_MASK       (0x20U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPW_SHIFT      (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPR_MASK       (0x40U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPR_SHIFT      (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_NPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUX_MASK       (0x100U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUX_SHIFT      (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUW_MASK       (0x200U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUW_SHIFT      (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUR_MASK       (0x400U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUR_SHIFT      (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPX_MASK       (0x1000U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPX_SHIFT      (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPW_MASK       (0x2000U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPW_SHIFT      (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPR_MASK       (0x4000U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPR_SHIFT      (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_SPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MRC2_GLBAC_LK_MASK        (0x80000000U)
#define TRDC_MGR_WKUP1_MRC2_GLBAC_LK_SHIFT       (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked (read-only) and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MRC2_GLBAC_LK(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MRC2_GLBAC_LK_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM0_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM0_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM1_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM1_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM2_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM2_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM3_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM3_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM4_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM4_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM5_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM5_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM6_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM6_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM7_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM7_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM8_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM8_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_W1_COUNT    (8U)

/*! @name MRC2_DOM9_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM9_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_W1_COUNT   (8U)

/*! @name MRC2_DOM10_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM10_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_W1_COUNT   (8U)

/*! @name MRC2_DOM11_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM11_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_W1_COUNT   (8U)

/*! @name MRC2_DOM12_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM12_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_W1_COUNT   (8U)

/*! @name MRC2_DOM13_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM13_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_W1_COUNT   (8U)

/*! @name MRC2_DOM14_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM14_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_W1_COUNT   (8U)

/*! @name MRC2_DOM15_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC2_DOM15_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name MRC3_GLBCFG - MRC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_GLBCFG_NRGNS_MASK    (0x1FU)
#define TRDC_MGR_WKUP1_MRC3_GLBCFG_NRGNS_SHIFT   (0U)
/*! NRGNS - Number of regions [1-16] */
#define TRDC_MGR_WKUP1_MRC3_GLBCFG_NRGNS(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBCFG_NRGNS_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBCFG_NRGNS_MASK)
/*! @} */

/*! @name MRC3_NSE_RGN_INDIRECT - MRC NonSecure Enable Region Indirect */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_INDIRECT_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_INDIRECT_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_INDIRECT_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_NSE_RGN_INDIRECT_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC3_NSE_RGN_INDIRECT_DID_SEL_MASK)
/*! @} */

/*! @name MRC3_NSE_RGN_SET - MRC NonSecure Enable Region Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_SET_W1SET_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_NSE_RGN_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MRC3_NSE_RGN_SET_W1SET_MASK)
/*! @} */

/*! @name MRC3_NSE_RGN_CLR - MRC NonSecure Enable Region Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_W1CLR_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_W1CLR_MASK)
/*! @} */

/*! @name MRC3_NSE_RGN_CLR_ALL - MRC NonSecure Enable Region Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_ALL_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_ALL_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_ALL_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_ALL_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC3_NSE_RGN_CLR_ALL_DID_SEL_MASK)
/*! @} */

/*! @name MRC3_GLBAC - MRC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUX_MASK       (0x1U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUX_SHIFT      (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUW_MASK       (0x2U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUW_SHIFT      (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUR_MASK       (0x4U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUR_SHIFT      (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPX_MASK       (0x10U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPX_SHIFT      (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPW_MASK       (0x20U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPW_SHIFT      (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPR_MASK       (0x40U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPR_SHIFT      (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_NPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUX_MASK       (0x100U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUX_SHIFT      (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUW_MASK       (0x200U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUW_SHIFT      (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUR_MASK       (0x400U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUR_SHIFT      (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPX_MASK       (0x1000U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPX_SHIFT      (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPW_MASK       (0x2000U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPW_SHIFT      (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPR_MASK       (0x4000U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPR_SHIFT      (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_SPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MRC3_GLBAC_LK_MASK        (0x80000000U)
#define TRDC_MGR_WKUP1_MRC3_GLBAC_LK_SHIFT       (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked (read-only) and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MRC3_GLBAC_LK(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MRC3_GLBAC_LK_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM0_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM0_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM1_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM1_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM2_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM2_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM3_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM3_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM4_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM4_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM5_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM5_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM6_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM6_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM7_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM7_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM8_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM8_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_W1_COUNT    (8U)

/*! @name MRC3_DOM9_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM9_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_W1_COUNT   (8U)

/*! @name MRC3_DOM10_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM10_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_W1_COUNT   (8U)

/*! @name MRC3_DOM11_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM11_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_W1_COUNT   (8U)

/*! @name MRC3_DOM12_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM12_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_W1_COUNT   (8U)

/*! @name MRC3_DOM13_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM13_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_W1_COUNT   (8U)

/*! @name MRC3_DOM14_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM14_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_W1_COUNT   (8U)

/*! @name MRC3_DOM15_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC3_DOM15_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name MRC4_GLBCFG - MRC Global Configuration Register */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_GLBCFG_NRGNS_MASK    (0x1FU)
#define TRDC_MGR_WKUP1_MRC4_GLBCFG_NRGNS_SHIFT   (0U)
/*! NRGNS - Number of regions [1-16] */
#define TRDC_MGR_WKUP1_MRC4_GLBCFG_NRGNS(x)      (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBCFG_NRGNS_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBCFG_NRGNS_MASK)
/*! @} */

/*! @name MRC4_NSE_RGN_INDIRECT - MRC NonSecure Enable Region Indirect */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_INDIRECT_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_INDIRECT_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_INDIRECT_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_NSE_RGN_INDIRECT_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC4_NSE_RGN_INDIRECT_DID_SEL_MASK)
/*! @} */

/*! @name MRC4_NSE_RGN_SET - MRC NonSecure Enable Region Set */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_SET_W1SET_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_SET_W1SET_SHIFT (0U)
/*! W1SET - Write-1 Set */
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_SET_W1SET(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_NSE_RGN_SET_W1SET_SHIFT)) & TRDC_MGR_WKUP1_MRC4_NSE_RGN_SET_W1SET_MASK)
/*! @} */

/*! @name MRC4_NSE_RGN_CLR - MRC NonSecure Enable Region Clear */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_W1CLR_MASK (0xFFFFU)
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_W1CLR_SHIFT (0U)
/*! W1CLR - Write-1 Clear */
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_W1CLR(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_W1CLR_SHIFT)) & TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_W1CLR_MASK)
/*! @} */

/*! @name MRC4_NSE_RGN_CLR_ALL - MRC NonSecure Enable Region Clear All */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_ALL_DID_SEL_MASK (0xFFFF0000U)
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_ALL_DID_SEL_SHIFT (16U)
/*! DID_SEL - DID Select */
#define TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_ALL_DID_SEL(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_ALL_DID_SEL_SHIFT)) & TRDC_MGR_WKUP1_MRC4_NSE_RGN_CLR_ALL_DID_SEL_MASK)
/*! @} */

/*! @name MRC4_GLBAC - MRC Global Access Control */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUX_MASK       (0x1U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUX_SHIFT      (0U)
/*! NUX - NonsecureUser Execute
 *  0b0..Execute access is not allowed in Nonsecure User mode.
 *  0b1..Execute access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_NUX_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_NUX_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUW_MASK       (0x2U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUW_SHIFT      (1U)
/*! NUW - NonsecureUser Write
 *  0b0..Write access is not allowed in Nonsecure User mode.
 *  0b1..Write access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_NUW_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_NUW_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUR_MASK       (0x4U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUR_SHIFT      (2U)
/*! NUR - NonsecureUser Read
 *  0b0..Read access is not allowed in Nonsecure User mode.
 *  0b1..Read access is allowed in Nonsecure User mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_NUR_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_NUR_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPX_MASK       (0x10U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPX_SHIFT      (4U)
/*! NPX - NonsecurePriv Execute
 *  0b0..Execute access is not allowed in Nonsecure Privilege mode.
 *  0b1..Execute access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_NPX_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_NPX_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPW_MASK       (0x20U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPW_SHIFT      (5U)
/*! NPW - NonsecurePriv Write
 *  0b0..Write access is not allowed in Nonsecure Privilege mode.
 *  0b1..Write access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_NPW_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_NPW_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPR_MASK       (0x40U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPR_SHIFT      (6U)
/*! NPR - NonsecurePriv Read
 *  0b0..Read access is not allowed in Nonsecure Privilege mode.
 *  0b1..Read access is allowed in Nonsecure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_NPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_NPR_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_NPR_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUX_MASK       (0x100U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUX_SHIFT      (8U)
/*! SUX - SecureUser Execute
 *  0b0..Execute access is not allowed in Secure User mode.
 *  0b1..Execute access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_SUX_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_SUX_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUW_MASK       (0x200U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUW_SHIFT      (9U)
/*! SUW - SecureUser Write
 *  0b0..Write access is not allowed in Secure User mode.
 *  0b1..Write access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_SUW_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_SUW_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUR_MASK       (0x400U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUR_SHIFT      (10U)
/*! SUR - SecureUser Read
 *  0b0..Read access is not allowed in Secure User mode.
 *  0b1..Read access is allowed in Secure User mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SUR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_SUR_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_SUR_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPX_MASK       (0x1000U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPX_SHIFT      (12U)
/*! SPX - SecurePriv Execute
 *  0b0..Execute access is not allowed in Secure Privilege mode.
 *  0b1..Execute access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPX(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_SPX_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_SPX_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPW_MASK       (0x2000U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPW_SHIFT      (13U)
/*! SPW - SecurePriv Write
 *  0b0..Write access is not allowed in Secure Privilege mode.
 *  0b1..Write access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPW(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_SPW_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_SPW_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPR_MASK       (0x4000U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPR_SHIFT      (14U)
/*! SPR - SecurePriv Read
 *  0b0..Read access is not allowed in Secure Privilege mode.
 *  0b1..Read access is allowed in Secure Privilege mode.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_SPR(x)         (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_SPR_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_SPR_MASK)

#define TRDC_MGR_WKUP1_MRC4_GLBAC_LK_MASK        (0x80000000U)
#define TRDC_MGR_WKUP1_MRC4_GLBAC_LK_SHIFT       (31U)
/*! LK - LOCK
 *  0b0..This register is not locked and can be altered.
 *  0b1..This register is locked (read-only) and cannot be altered.
 */
#define TRDC_MGR_WKUP1_MRC4_GLBAC_LK(x)          (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_GLBAC_LK_SHIFT)) & TRDC_MGR_WKUP1_MRC4_GLBAC_LK_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM0_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM0_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM1_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM1_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM2_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM2_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM3_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM3_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM4_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM4_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM5_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM5_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM6_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM6_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM7_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM7_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM8_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM8_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_W0_COUNT    (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_W1_COUNT    (8U)

/*! @name MRC4_DOM9_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM9_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_W1_COUNT   (8U)

/*! @name MRC4_DOM10_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM10_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_W1_COUNT   (8U)

/*! @name MRC4_DOM11_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM11_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_W1_COUNT   (8U)

/*! @name MRC4_DOM12_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM12_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_W1_COUNT   (8U)

/*! @name MRC4_DOM13_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM13_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_W1_COUNT   (8U)

/*! @name MRC4_DOM14_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM14_RGD_NSE_BIT7_MASK)
/*! @} */

/*! @name W0 - MRC Region Descriptor Word 0 */
/*! @{ */

#define TRDC_MGR_WKUP1_W0_MRACSEL_MASK           (0x7U)
#define TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT          (0U)
/*! MRACSEL - Memory Region Access Control Select
 *  0b000..Select MRC_GLBAC0 access control policy
 *  0b001..Select MRC_GLBAC1 access control policy
 *  0b010..Select MRC_GLBAC2 access control policy
 *  0b011..Select MRC_GLBAC3 access control policy
 *  0b100..Select MRC_GLBAC4 access control policy
 *  0b101..Select MRC_GLBAC5 access control policy
 *  0b110..Select MRC_GLBAC6 access control policy
 *  0b111..Select MRC_GLBAC7 access control policy
 */
#define TRDC_MGR_WKUP1_W0_MRACSEL(x)             (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_MRACSEL_SHIFT)) & TRDC_MGR_WKUP1_W0_MRACSEL_MASK)

#define TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK         (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT        (12U)
/*! STRT_ADDR - Start Address */
#define TRDC_MGR_WKUP1_W0_STRT_ADDR(x)           (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W0_STRT_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W0_STRT_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W0 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_W0_COUNT   (8U)

/*! @name W1 - MRC Region Descriptor Word 1 */
/*! @{ */

#define TRDC_MGR_WKUP1_W1_VLD_MASK               (0x1U)
#define TRDC_MGR_WKUP1_W1_VLD_SHIFT              (0U)
/*! VLD - Valid */
#define TRDC_MGR_WKUP1_W1_VLD(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_VLD_SHIFT)) & TRDC_MGR_WKUP1_W1_VLD_MASK)

#define TRDC_MGR_WKUP1_W1_NSE_MASK               (0x10U)
#define TRDC_MGR_WKUP1_W1_NSE_SHIFT              (4U)
/*! NSE - NonSecure Enable
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in this register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_W1_NSE(x)                 (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_NSE_SHIFT)) & TRDC_MGR_WKUP1_W1_NSE_MASK)

#define TRDC_MGR_WKUP1_W1_END_ADDR_MASK          (0xFFFFF000U)
#define TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT         (12U)
/*! END_ADDR - End Address */
#define TRDC_MGR_WKUP1_W1_END_ADDR(x)            (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_W1_END_ADDR_SHIFT)) & TRDC_MGR_WKUP1_W1_END_ADDR_MASK)
/*! @} */

/* The count of TRDC_MGR_WKUP1_W1 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_W1_COUNT   (8U)

/*! @name MRC4_DOM15_RGD_NSE - MRC Region Descriptor NonSecure Enable */
/*! @{ */

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT0_MASK (0x1U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT0_SHIFT (0U)
/*! BIT0 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT0(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT0_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT0_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT1_MASK (0x2U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT1_SHIFT (1U)
/*! BIT1 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT1(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT1_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT1_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT2_MASK (0x4U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT2_SHIFT (2U)
/*! BIT2 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT2(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT2_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT2_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT3_MASK (0x8U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT3_SHIFT (3U)
/*! BIT3 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT3(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT3_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT3_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT4_MASK (0x10U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT4_SHIFT (4U)
/*! BIT4 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT4(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT4_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT4_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT5_MASK (0x20U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT5_SHIFT (5U)
/*! BIT5 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT5(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT5_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT5_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT6_MASK (0x40U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT6_SHIFT (6U)
/*! BIT6 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT6(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT6_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT6_MASK)

#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT7_MASK (0x80U)
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT7_SHIFT (7U)
/*! BIT7 - Bit n NonSecure Enable [n = 0 - 15]
 *  0b0..Secure accesses to region r are based on corresponding MRACSEL field in this register
 *       (MRCm_DOMd_RGDr_Ww[MRACSEL]), nonsecure accesses to region r are not allowed.
 *  0b1..Secure accesses to region r are not allowed, nonsecure accesses to region r are based on corresponding
 *       MRACSEL field in register (MRCm_DOMd_RGDr_Ww[MRACSEL]).
 */
#define TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT7(x) (((uint32_t)(((uint32_t)(x)) << TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT7_SHIFT)) & TRDC_MGR_WKUP1_MRC4_DOM15_RGD_NSE_BIT7_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group TRDC_MGR_WKUP1_Register_Masks */


/*!
 * @}
 */ /* end of group TRDC_MGR_WKUP1_Peripheral_Access_Layer */


/*
** End of section using anonymous unions
*/

#if defined(__ARMCC_VERSION)
  #if (__ARMCC_VERSION >= 6010050)
    #pragma clang diagnostic pop
  #else
    #pragma pop
  #endif
#elif defined(__GNUC__)
  /* leave anonymous unions enabled */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=default
#else
  #error Not supported compiler type
#endif

/*!
 * @}
 */ /* end of group Peripheral_access_layer */


#endif  /* TRDC_MGR_WKUP1_H_ */

