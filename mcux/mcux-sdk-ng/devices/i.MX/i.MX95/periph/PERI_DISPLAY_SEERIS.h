/*
** ###################################################################
**     Processors:          MIMX9594AVZXN_ca55
**                          MIMX9594AVZXN_cm33
**                          MIMX9594AVZXN_cm7
**                          MIMX9596AVTXN_ca55
**                          MIMX9596AVTXN_cm33
**                          MIMX9596AVTXN_cm7
**                          MIMX9596AVYXN_ca55
**                          MIMX9596AVYXN_cm33
**                          MIMX9596AVYXN_cm7
**                          MIMX9596AVZXN_ca55
**                          MIMX9596AVZXN_cm33
**                          MIMX9596AVZXN_cm7
**                          MIMX9596CVTXN_ca55
**                          MIMX9596CVTXN_cm33
**                          MIMX9596CVTXN_cm7
**                          MIMX9596CVYXN_ca55
**                          MIMX9596CVYXN_cm33
**                          MIMX9596CVYXN_cm7
**                          MIMX9596CVZXN_ca55
**                          MIMX9596CVZXN_cm33
**                          MIMX9596CVZXN_cm7
**                          MIMX9596DVTXN_ca55
**                          MIMX9596DVTXN_cm33
**                          MIMX9596DVTXN_cm7
**                          MIMX9596DVYXN_ca55
**                          MIMX9596DVYXN_cm33
**                          MIMX9596DVYXN_cm7
**                          MIMX9596DVYXQ_ca55
**                          MIMX9596DVYXQ_cm33
**                          MIMX9596DVYXQ_cm7
**                          MIMX9596DVZXN_ca55
**                          MIMX9596DVZXN_cm33
**                          MIMX9596DVZXN_cm7
**                          MIMX9596XVTXN_ca55
**                          MIMX9596XVTXN_cm33
**                          MIMX9596XVTXN_cm7
**                          MIMX9596XVYXN_ca55
**                          MIMX9596XVYXN_cm33
**                          MIMX9596XVYXN_cm7
**                          MIMX9596XVZXN_ca55
**                          MIMX9596XVZXN_cm33
**                          MIMX9596XVZXN_cm7
**
**     Version:             rev. 1.0, 2023-01-10
**     Build:               b240728
**
**     Abstract:
**         CMSIS Peripheral Access Layer for DISPLAY_SEERIS
**
**     Copyright 1997-2016 Freescale Semiconductor, Inc.
**     Copyright 2016-2024 NXP
**     SPDX-License-Identifier: BSD-3-Clause
**
**     http:                 www.nxp.com
**     mail:                 support@nxp.com
**
**     Revisions:
**     - rev. 1.0 (2023-01-10)
**         Initial version.
**
** ###################################################################
*/

/*!
 * @file DISPLAY_SEERIS.h
 * @version 1.0
 * @date 2023-01-10
 * @brief CMSIS Peripheral Access Layer for DISPLAY_SEERIS
 *
 * CMSIS Peripheral Access Layer for DISPLAY_SEERIS
 */

#if !defined(DISPLAY_SEERIS_H_)
#define DISPLAY_SEERIS_H_                        /**< Symbol preventing repeated inclusion */

#if (defined(CPU_MIMX9594AVZXN_ca55))
#include "MIMX9594_ca55_COMMON.h"
#elif (defined(CPU_MIMX9594AVZXN_cm33))
#include "MIMX9594_cm33_COMMON.h"
#elif (defined(CPU_MIMX9594AVZXN_cm7))
#include "MIMX9594_cm7_COMMON.h"
#elif (defined(CPU_MIMX9596AVTXN_ca55) || defined(CPU_MIMX9596AVYXN_ca55) || defined(CPU_MIMX9596AVZXN_ca55) || defined(CPU_MIMX9596CVTXN_ca55) || defined(CPU_MIMX9596CVYXN_ca55) || defined(CPU_MIMX9596CVZXN_ca55) || defined(CPU_MIMX9596DVTXN_ca55) || defined(CPU_MIMX9596DVYXN_ca55) || defined(CPU_MIMX9596DVYXQ_ca55) || defined(CPU_MIMX9596DVZXN_ca55) || defined(CPU_MIMX9596XVTXN_ca55) || defined(CPU_MIMX9596XVYXN_ca55) || defined(CPU_MIMX9596XVZXN_ca55))
#include "MIMX9596_ca55_COMMON.h"
#elif (defined(CPU_MIMX9596AVTXN_cm33) || defined(CPU_MIMX9596AVYXN_cm33) || defined(CPU_MIMX9596AVZXN_cm33) || defined(CPU_MIMX9596CVTXN_cm33) || defined(CPU_MIMX9596CVYXN_cm33) || defined(CPU_MIMX9596CVZXN_cm33) || defined(CPU_MIMX9596DVTXN_cm33) || defined(CPU_MIMX9596DVYXN_cm33) || defined(CPU_MIMX9596DVYXQ_cm33) || defined(CPU_MIMX9596DVZXN_cm33) || defined(CPU_MIMX9596XVTXN_cm33) || defined(CPU_MIMX9596XVYXN_cm33) || defined(CPU_MIMX9596XVZXN_cm33))
#include "MIMX9596_cm33_COMMON.h"
#elif (defined(CPU_MIMX9596AVTXN_cm7) || defined(CPU_MIMX9596AVYXN_cm7) || defined(CPU_MIMX9596AVZXN_cm7) || defined(CPU_MIMX9596CVTXN_cm7) || defined(CPU_MIMX9596CVYXN_cm7) || defined(CPU_MIMX9596CVZXN_cm7) || defined(CPU_MIMX9596DVTXN_cm7) || defined(CPU_MIMX9596DVYXN_cm7) || defined(CPU_MIMX9596DVYXQ_cm7) || defined(CPU_MIMX9596DVZXN_cm7) || defined(CPU_MIMX9596XVTXN_cm7) || defined(CPU_MIMX9596XVYXN_cm7) || defined(CPU_MIMX9596XVZXN_cm7))
#include "MIMX9596_cm7_COMMON.h"
#else
  #error "No valid CPU defined!"
#endif

/* ----------------------------------------------------------------------------
   -- Device Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Peripheral_access_layer Device Peripheral Access Layer
 * @{
 */


/*
** Start of section using anonymous unions
*/

#if defined(__ARMCC_VERSION)
  #if (__ARMCC_VERSION >= 6010050)
    #pragma clang diagnostic push
  #else
    #pragma push
    #pragma anon_unions
  #endif
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=extended
#else
  #error Not supported compiler type
#endif

/* ----------------------------------------------------------------------------
   -- DISPLAY_SEERIS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DISPLAY_SEERIS_Peripheral_Access_Layer DISPLAY_SEERIS Peripheral Access Layer
 * @{
 */

/** DISPLAY_SEERIS - Size of Registers Arrays */
#define DISPLAY_SEERIS_CMDSEQ_HIF_COUNT           64u
#define DISPLAY_SEERIS_GENERALPURPOSE_GENERALPURPOSE_COUNT 32u
#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_COUNT     256u
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_COUNT 64u
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_COUNT 64u
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_COUNT 65u
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_COUNT 2048u
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_COUNT 2048u
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORPALETTE_COUNT 256u
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORPALETTE_COUNT 256u
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORPALETTE_COUNT 256u
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDRAM_COUNT 1024u
#define DISPLAY_SEERIS_DISENG_LUT3D0_LUT_COUNT    2048u
#define DISPLAY_SEERIS_DISENG_LUT3D1_LUT_COUNT    2048u

/** DISPLAY_SEERIS - Register Layout Typedef */
typedef struct {
  __IO uint32_t COMCTRL_IPIDENTIFIER;              /**< IP Identifier for this SEERIS derivate., offset: 0x0 */
       uint8_t RESERVED_0[4092];
  __O  uint32_t IRQ_LOCKUNLOCK;                    /**< Register to change the protection status of this address block., offset: 0x1000 */
  __I  uint32_t IRQ_LOCKSTATUS;                    /**< Protection status of this address block., offset: 0x1004 */
  __IO uint32_t IRQ_INTERRUPTENABLE0;              /**< Interrupt Enable register 0., offset: 0x1008 */
  __IO uint32_t IRQ_INTERRUPTENABLE1;              /**< Interrupt Enable register 1., offset: 0x100C */
  __IO uint32_t IRQ_INTERRUPTENABLE2;              /**< Interrupt Enable register 2., offset: 0x1010 */
  __O  uint32_t IRQ_INTERRUPTPRESET0;              /**< Interrupt Preset register 0, offset: 0x1014 */
  __O  uint32_t IRQ_INTERRUPTPRESET1;              /**< Interrupt Preset register 1, offset: 0x1018 */
  __O  uint32_t IRQ_INTERRUPTPRESET2;              /**< Interrupt Preset register 2, offset: 0x101C */
  __O  uint32_t IRQ_INTERRUPTCLEAR0;               /**< Interrupt Clear register 0, offset: 0x1020 */
  __O  uint32_t IRQ_INTERRUPTCLEAR1;               /**< Interrupt Clear register 1, offset: 0x1024 */
  __O  uint32_t IRQ_INTERRUPTCLEAR2;               /**< Interrupt Clear register 2, offset: 0x1028 */
  __I  uint32_t IRQ_INTERRUPTSTATUS0;              /**< Interrupt Status register 0, offset: 0x102C */
  __I  uint32_t IRQ_INTERRUPTSTATUS1;              /**< Interrupt Status register 1, offset: 0x1030 */
  __I  uint32_t IRQ_INTERRUPTSTATUS2;              /**< Interrupt Status register 2, offset: 0x1034 */
       uint8_t RESERVED_1[4040];
  __O  uint32_t DOMAINMASK_MASKLOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x2000 */
  __I  uint32_t DOMAINMASK_MASKLOCKSTATUS;         /**< Protection status of this address block., offset: 0x2004 */
  __IO uint32_t DOMAINMASK_STORE9_DOMAIN_MASK0;    /**< Pixel Engine domain mask 0 for endpoint store9., offset: 0x2008 */
  __IO uint32_t DOMAINMASK_EXTDST0_DOMAIN_MASK0;   /**< Pixel Engine domain mask 0 for endpoint extdst0., offset: 0x200C */
  __IO uint32_t DOMAINMASK_EXTDST4_DOMAIN_MASK0;   /**< Pixel Engine domain mask 0 for endpoint extdst4., offset: 0x2010 */
  __IO uint32_t DOMAINMASK_EXTDST1_DOMAIN_MASK0;   /**< Pixel Engine domain mask 0 for endpoint extdst1., offset: 0x2014 */
  __IO uint32_t DOMAINMASK_EXTDST5_DOMAIN_MASK0;   /**< Pixel Engine domain mask 0 for endpoint extdst5., offset: 0x2018 */
  __IO uint32_t DOMAINMASK_SEERIS_DISPLAY_STATIC;  /**< Global settings for SEERIS Display configuration., offset: 0x201C */
  __IO uint32_t DOMAINMASK_EXTDST0_STATIC;         /**< Static pixel engine configuration for extdst0, offset: 0x2020 */
  __IO uint32_t DOMAINMASK_EXTDST4_STATIC;         /**< Static pixel engine configuration for extdst4, offset: 0x2024 */
  __IO uint32_t DOMAINMASK_EXTDST1_STATIC;         /**< Static pixel engine configuration for extdst1, offset: 0x2028 */
  __IO uint32_t DOMAINMASK_EXTDST5_STATIC;         /**< Static pixel engine configuration for extdst5, offset: 0x202C */
       uint8_t RESERVED_2[4048];
  __O  uint32_t CMDSEQMASK_MASKLOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x3000 */
  __I  uint32_t CMDSEQMASK_MASKLOCKSTATUS;         /**< Protection status of this address block., offset: 0x3004 */
  __IO uint32_t CMDSEQMASK_CMDSEQ_ACCESS_MASK0;    /**< Each bit describes whether register in the corresponding 64kByte address block is allowed to be written from the command sequencer., offset: 0x3008 */
  __IO uint32_t CMDSEQMASK_CMDSEQ_ACCESS_MASK1;    /**< Each bit describes whether register in the corresponding 64kByte address block is allowed to be written from the command sequencer., offset: 0x300C */
       uint8_t RESERVED_3[53232];
  __IO uint32_t CMDSEQ_HIF[DISPLAY_SEERIS_CMDSEQ_HIF_COUNT]; /**< Command input buffer, array offset: 0x10000, array step: 0x4 */
  __O  uint32_t CMDSEQ_LOCKUNLOCKHIF;              /**< Register to change the protection status of this address block., offset: 0x10100 */
  __I  uint32_t CMDSEQ_LOCKSTATUSHIF;              /**< Protection status of this address block., offset: 0x10104 */
       uint8_t RESERVED_4[120];
  __O  uint32_t CMDSEQ_LOCKUNLOCK;                 /**< Register to change the protection status of this address block., offset: 0x10180 */
  __I  uint32_t CMDSEQ_LOCKSTATUS;                 /**< Protection status of this address block., offset: 0x10184 */
  __IO uint32_t CMDSEQ_BUFFERADDRESS;              /**< Command buffer address register, offset: 0x10188 */
  __IO uint32_t CMDSEQ_BUFFERADDRESSMSB;           /**< Command buffer address register, offset: 0x1018C */
  __IO uint32_t CMDSEQ_BUFFERSIZE;                 /**< Command buffer size register, offset: 0x10190 */
  __IO uint32_t CMDSEQ_WATERMARKCONTROL;           /**< Watermark Control register, offset: 0x10194 */
  __O  uint32_t CMDSEQ_CONTROL;                    /**< Control register, offset: 0x10198 */
  __I  uint32_t CMDSEQ_STATUS;                     /**< Status register, offset: 0x1019C */
  __IO uint32_t CMDSEQ_PREFETCHWINDOWSTART;        /**< PrefetchWindowStart register, offset: 0x101A0 */
  __IO uint32_t CMDSEQ_PREFETCHWINDOWSTARTMSB;     /**< PrefetchWindowStart register MSB bits, offset: 0x101A4 */
  __IO uint32_t CMDSEQ_PREFETCHWINDOWEND;          /**< PrefetchWindowEnd register, offset: 0x101A8 */
  __IO uint32_t CMDSEQ_PREFETCHWINDOWENDMSB;       /**< PrefetchWindowEnd register MSB bits, offset: 0x101AC */
       uint8_t RESERVED_5[3664];
  __O  uint32_t CMDSEQIRQ_LOCKUNLOCK;              /**< Register to change the protection status of this address block., offset: 0x11000 */
  __I  uint32_t CMDSEQIRQ_LOCKSTATUS;              /**< Protection status of this address block., offset: 0x11004 */
  __IO uint32_t CMDSEQIRQ_INTERRUPTENABLE0;        /**< Interrupt Enable register 0., offset: 0x11008 */
  __IO uint32_t CMDSEQIRQ_INTERRUPTENABLE1;        /**< Interrupt Enable register 1., offset: 0x1100C */
  __IO uint32_t CMDSEQIRQ_INTERRUPTENABLE2;        /**< Interrupt Enable register 2., offset: 0x11010 */
  __O  uint32_t CMDSEQIRQ_INTERRUPTPRESET0;        /**< Interrupt Preset register 0, offset: 0x11014 */
  __O  uint32_t CMDSEQIRQ_INTERRUPTPRESET1;        /**< Interrupt Preset register 1, offset: 0x11018 */
  __O  uint32_t CMDSEQIRQ_INTERRUPTPRESET2;        /**< Interrupt Preset register 2, offset: 0x1101C */
  __O  uint32_t CMDSEQIRQ_INTERRUPTCLEAR0;         /**< Interrupt Clear register 0, offset: 0x11020 */
  __O  uint32_t CMDSEQIRQ_INTERRUPTCLEAR1;         /**< Interrupt Clear register 1, offset: 0x11024 */
  __O  uint32_t CMDSEQIRQ_INTERRUPTCLEAR2;         /**< Interrupt Clear register 2, offset: 0x11028 */
  __I  uint32_t CMDSEQIRQ_INTERRUPTSTATUS0;        /**< Interrupt Status register 0, offset: 0x1102C */
  __I  uint32_t CMDSEQIRQ_INTERRUPTSTATUS1;        /**< Interrupt Status register 1, offset: 0x11030 */
  __I  uint32_t CMDSEQIRQ_INTERRUPTSTATUS2;        /**< Interrupt Status register 2, offset: 0x11034 */
       uint8_t RESERVED_6[4040];
  __IO uint32_t GENERALPURPOSE_GENERALPURPOSE[DISPLAY_SEERIS_GENERALPURPOSE_GENERALPURPOSE_COUNT]; /**< General purpose config memory, array offset: 0x12000, array step: 0x4 */
       uint8_t RESERVED_7[57216];
  __IO uint32_t XPC_CONTROL;                       /**< Global XPC control register, offset: 0x20000 */
  __IO uint32_t XPC_TIMER;                         /**< Timer control register, offset: 0x20004 */
  __IO uint32_t XPC_MEASUREMENTTIMECONTROL;        /**< Timer divider control register, offset: 0x20008 */
  __IO uint32_t XPC_SW_TAG;                        /**< Tag register, offset: 0x2000C */
  __I  uint32_t XPC_MEASUREMENTTIME;               /**< Measurement time register, offset: 0x20010 */
  __I  uint32_t XPC_GLOBAL_COUNTER;                /**< Global counter register, offset: 0x20014 */
  __IO uint32_t XPC_MU00_SWITCH;                   /**< Measurement unit 00 switch register, offset: 0x20018 */
  __I  uint32_t XPC_MU00_DATA_COUNTER;             /**< Measurement unit 00 data counter register, offset: 0x2001C */
  __I  uint32_t XPC_MU00_BUSY_COUNTER;             /**< Measurement unit 00 busy counter register, offset: 0x20020 */
  __I  uint32_t XPC_MU00_TRANSFER_COUNTER;         /**< Measurement unit 00 transfer counter register, offset: 0x20024 */
  __I  uint32_t XPC_MU00_ADDRBUSY_COUNTER;         /**< Measurement unit 00 address busy counter register, offset: 0x20028 */
  __I  uint32_t XPC_MU00_LATENCY_COUNTER;          /**< Measurement unit 00 latency counter register, offset: 0x2002C */
  __IO uint32_t XPC_MU01_SWITCH;                   /**< Measurement unit 01 switch register, offset: 0x20030 */
  __I  uint32_t XPC_MU01_DATA_COUNTER;             /**< Measurement unit 01 data counter register, offset: 0x20034 */
  __I  uint32_t XPC_MU01_BUSY_COUNTER;             /**< Measurement unit 01 busy counter register, offset: 0x20038 */
  __I  uint32_t XPC_MU01_TRANSFER_COUNTER;         /**< Measurement unit 01 transfer counter register, offset: 0x2003C */
  __I  uint32_t XPC_MU01_ADDRBUSY_COUNTER;         /**< Measurement unit 01 address busy counter register, offset: 0x20040 */
  __I  uint32_t XPC_MU01_LATENCY_COUNTER;          /**< Measurement unit 01 latency counter register, offset: 0x20044 */
  __IO uint32_t XPC_MU02_SWITCH;                   /**< Measurement unit 02 switch register, offset: 0x20048 */
  __I  uint32_t XPC_MU02_DATA_COUNTER;             /**< Measurement unit 02 data counter register, offset: 0x2004C */
  __I  uint32_t XPC_MU02_BUSY_COUNTER;             /**< Measurement unit 02 busy counter register, offset: 0x20050 */
  __I  uint32_t XPC_MU02_TRANSFER_COUNTER;         /**< Measurement unit 02 transfer counter register, offset: 0x20054 */
  __I  uint32_t XPC_MU02_ADDRBUSY_COUNTER;         /**< Measurement unit 02 address busy counter register, offset: 0x20058 */
  __I  uint32_t XPC_MU02_LATENCY_COUNTER;          /**< Measurement unit 02 latency counter register, offset: 0x2005C */
  __IO uint32_t XPC_MU03_SWITCH;                   /**< Measurement unit 03 switch register, offset: 0x20060 */
  __I  uint32_t XPC_MU03_DATA_COUNTER;             /**< Measurement unit 03 data counter register, offset: 0x20064 */
  __I  uint32_t XPC_MU03_BUSY_COUNTER;             /**< Measurement unit 03 busy counter register, offset: 0x20068 */
  __I  uint32_t XPC_MU03_TRANSFER_COUNTER;         /**< Measurement unit 03 transfer counter register, offset: 0x2006C */
  __I  uint32_t XPC_MU03_ADDRBUSY_COUNTER;         /**< Measurement unit 03 address busy counter register, offset: 0x20070 */
  __I  uint32_t XPC_MU03_LATENCY_COUNTER;          /**< Measurement unit 03 latency counter register, offset: 0x20074 */
  __IO uint32_t XPC_MU04_SWITCH;                   /**< Measurement unit 04 switch register, offset: 0x20078 */
  __I  uint32_t XPC_MU04_DATA_COUNTER;             /**< Measurement unit 04 data counter register, offset: 0x2007C */
  __I  uint32_t XPC_MU04_BUSY_COUNTER;             /**< Measurement unit 04 busy counter register, offset: 0x20080 */
  __I  uint32_t XPC_MU04_TRANSFER_COUNTER;         /**< Measurement unit 04 transfer counter register, offset: 0x20084 */
  __I  uint32_t XPC_MU04_ADDRBUSY_COUNTER;         /**< Measurement unit 04 address busy counter register, offset: 0x20088 */
  __I  uint32_t XPC_MU04_LATENCY_COUNTER;          /**< Measurement unit 04 latency counter register, offset: 0x2008C */
       uint8_t RESERVED_8[69488];
  __O  uint32_t BLITIRQ_LOCKUNLOCK;                /**< Register to change the protection status of this address block., offset: 0x31000 */
  __I  uint32_t BLITIRQ_LOCKSTATUS;                /**< Protection status of this address block., offset: 0x31004 */
  __IO uint32_t BLITIRQ_INTERRUPTENABLE0;          /**< Interrupt Enable register 0., offset: 0x31008 */
  __IO uint32_t BLITIRQ_INTERRUPTENABLE1;          /**< Interrupt Enable register 1., offset: 0x3100C */
  __IO uint32_t BLITIRQ_INTERRUPTENABLE2;          /**< Interrupt Enable register 2., offset: 0x31010 */
  __O  uint32_t BLITIRQ_INTERRUPTPRESET0;          /**< Interrupt Preset register 0, offset: 0x31014 */
  __O  uint32_t BLITIRQ_INTERRUPTPRESET1;          /**< Interrupt Preset register 1, offset: 0x31018 */
  __O  uint32_t BLITIRQ_INTERRUPTPRESET2;          /**< Interrupt Preset register 2, offset: 0x3101C */
  __O  uint32_t BLITIRQ_INTERRUPTCLEAR0;           /**< Interrupt Clear register 0, offset: 0x31020 */
  __O  uint32_t BLITIRQ_INTERRUPTCLEAR1;           /**< Interrupt Clear register 1, offset: 0x31024 */
  __O  uint32_t BLITIRQ_INTERRUPTCLEAR2;           /**< Interrupt Clear register 2, offset: 0x31028 */
  __I  uint32_t BLITIRQ_INTERRUPTSTATUS0;          /**< Interrupt Status register 0, offset: 0x3102C */
  __I  uint32_t BLITIRQ_INTERRUPTSTATUS1;          /**< Interrupt Status register 1, offset: 0x31030 */
  __I  uint32_t BLITIRQ_INTERRUPTSTATUS2;          /**< Interrupt Status register 2, offset: 0x31034 */
       uint8_t RESERVED_9[61384];
  __O  uint32_t PIXENG_ROP9_LOCKUNLOCK;            /**< Register to change the protection status of this address block., offset: 0x40000 */
  __I  uint32_t PIXENG_ROP9_LOCKSTATUS;            /**< Protection status of this address block., offset: 0x40004 */
  __IO uint32_t PIXENG_ROP9_STATICCONTROL;         /**< Raster Operation static control register, offset: 0x40008 */
  __IO uint32_t PIXENG_ROP9_CONTROL;               /**< Raster Operation control register, offset: 0x4000C */
  __IO uint32_t PIXENG_ROP9_RASTEROPERATIONINDICES; /**< ROP operation indices, offset: 0x40010 */
  __I  uint32_t PIXENG_ROP9_PRIMCONTROLWORD;       /**< Value of last received primary control word, offset: 0x40014 */
  __I  uint32_t PIXENG_ROP9_SECCONTROLWORD;        /**< Value of last received secondary control word, offset: 0x40018 */
  __I  uint32_t PIXENG_ROP9_TERTCONTROLWORD;       /**< Value of last received tertiary control word, offset: 0x4001C */
       uint8_t RESERVED_10[4064];
  __O  uint32_t PIXENG_ROP9CFG_ROP9_LOCKUNLOCK;    /**< Register to change the protection status of this address block., offset: 0x41000 */
  __I  uint32_t PIXENG_ROP9CFG_ROP9_LOCKSTATUS;    /**< Protection status of this address block., offset: 0x41004 */
  __IO uint32_t PIXENG_ROP9CFG_ROP9_DYNAMIC;       /**< Dynamic pixel engine configuration for rop9, offset: 0x41008 */
  __I  uint32_t PIXENG_ROP9CFG_ROP9_STATUS;        /**< Status information for pixel engine configuration of rop9, offset: 0x4100C */
       uint8_t RESERVED_11[61424];
  __O  uint32_t PIXENG_CLUT9_LOCKUNLOCK;           /**< Register to change the protection status of this address block., offset: 0x50000 */
  __I  uint32_t PIXENG_CLUT9_LOCKSTATUS;           /**< Protection status of this address block., offset: 0x50004 */
  __IO uint32_t PIXENG_CLUT9_STATICCONTROL;        /**< CLUT static control register, offset: 0x50008 */
  __IO uint32_t PIXENG_CLUT9_UNSHADOWEDCONTROL;    /**< CLUT unshadowed control register, offset: 0x5000C */
  __IO uint32_t PIXENG_CLUT9_CONTROL;              /**< CLUT control register, offset: 0x50010 */
  __IO uint32_t PIXENG_CLUT9_STATUS;               /**< CLUT status register, offset: 0x50014 */
  __I  uint32_t PIXENG_CLUT9_LASTCONTROLWORD;      /**< Value of last received control word, for debugging, offset: 0x50018 */
       uint8_t RESERVED_12[996];
  __IO uint32_t PIXENG_CLUT9_LUT[DISPLAY_SEERIS_PIXENG_CLUT9_LUT_COUNT]; /**< Look Up Table, array offset: 0x50400, array step: 0x4 */
       uint8_t RESERVED_13[2048];
  __O  uint32_t PIXENG_CLUT9CFG_CLUT9_LOCKUNLOCK;  /**< Register to change the protection status of this address block., offset: 0x51000 */
  __I  uint32_t PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS;  /**< Protection status of this address block., offset: 0x51004 */
  __IO uint32_t PIXENG_CLUT9CFG_CLUT9_DYNAMIC;     /**< Dynamic pixel engine configuration for clut9, offset: 0x51008 */
  __I  uint32_t PIXENG_CLUT9CFG_CLUT9_STATUS;      /**< Status information for pixel engine configuration of clut9, offset: 0x5100C */
       uint8_t RESERVED_14[61424];
  __O  uint32_t PIXENG_MATRIX9_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x60000 */
  __I  uint32_t PIXENG_MATRIX9_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x60004 */
  __IO uint32_t PIXENG_MATRIX9_STATICCONTROL;      /**< Color Matrix static control register, offset: 0x60008 */
  __IO uint32_t PIXENG_MATRIX9_CONTROL;            /**< Color Matrix control register, offset: 0x6000C */
  __IO uint32_t PIXENG_MATRIX9_RED0;               /**< Matrix values for calculation of the red output value., offset: 0x60010 */
  __IO uint32_t PIXENG_MATRIX9_RED1;               /**< Matrix values for calculation of the red output value., offset: 0x60014 */
  __IO uint32_t PIXENG_MATRIX9_GREEN0;             /**< Matrix values for calculation of the green output value., offset: 0x60018 */
  __IO uint32_t PIXENG_MATRIX9_GREEN1;             /**< Matrix values for calculation of the green output value., offset: 0x6001C */
  __IO uint32_t PIXENG_MATRIX9_BLUE0;              /**< Matrix values for calculation of the blue output value., offset: 0x60020 */
  __IO uint32_t PIXENG_MATRIX9_BLUE1;              /**< Matrix values for calculation of the blue output value., offset: 0x60024 */
  __IO uint32_t PIXENG_MATRIX9_ALPHA0;             /**< Matrix values for calculation of the alpha output value., offset: 0x60028 */
  __IO uint32_t PIXENG_MATRIX9_ALPHA1;             /**< Matrix values for calculation of the alpha output value., offset: 0x6002C */
  __IO uint32_t PIXENG_MATRIX9_OFFSETVECTOR0;      /**< Offset vectors for red and green output., offset: 0x60030 */
  __IO uint32_t PIXENG_MATRIX9_OFFSETVECTOR1;      /**< Offset vectors for blue and alpha output., offset: 0x60034 */
  __I  uint32_t PIXENG_MATRIX9_LASTCONTROLWORD;    /**< Value of last received control word, for debugging., offset: 0x60038 */
       uint8_t RESERVED_15[4036];
  __O  uint32_t PIXENG_MATRIX9CFG_MATRIX9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x61000 */
  __I  uint32_t PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS; /**< Protection status of this address block., offset: 0x61004 */
  __IO uint32_t PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC; /**< Dynamic pixel engine configuration for matrix9, offset: 0x61008 */
  __I  uint32_t PIXENG_MATRIX9CFG_MATRIX9_STATUS;  /**< Status information for pixel engine configuration of matrix9, offset: 0x6100C */
       uint8_t RESERVED_16[61424];
  __O  uint32_t PIXENG_BLITBLEND9_LOCKUNLOCK;      /**< Register to change the protection status of this address block., offset: 0x70000 */
  __I  uint32_t PIXENG_BLITBLEND9_LOCKSTATUS;      /**< Protection status of this address block., offset: 0x70004 */
  __IO uint32_t PIXENG_BLITBLEND9_STATICCONTROL;   /**< BlitBlend static control register, offset: 0x70008 */
  __IO uint32_t PIXENG_BLITBLEND9_CONTROL;         /**< BlitBlend control register, offset: 0x7000C */
  __IO uint32_t PIXENG_BLITBLEND9_NEUTRALBORDER;   /**< Neutral border setup register, offset: 0x70010 */
  __IO uint32_t PIXENG_BLITBLEND9_CONSTANTCOLOR;   /**< Constant color register, offset: 0x70014 */
  __IO uint32_t PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION; /**< Open GL RGB blending factors, offset: 0x70018 */
  __IO uint32_t PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION; /**< Open GL RGB blending factors, offset: 0x7001C */
  __IO uint32_t PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION; /**< Open GL RGB blending factors, offset: 0x70020 */
  __IO uint32_t PIXENG_BLITBLEND9_ALPHABLENDFUNCTION; /**< Open GL alpha blending factors, offset: 0x70024 */
  __IO uint32_t PIXENG_BLITBLEND9_BLENDMODE1;      /**< Open GL and Open VG blending modes for colors red and green, offset: 0x70028 */
  __IO uint32_t PIXENG_BLITBLEND9_BLENDMODE2;      /**< Open GL and Open VG blending modes for color blue and alpha, offset: 0x7002C */
  __IO uint32_t PIXENG_BLITBLEND9_DIRECTSETUP;     /**< Direct Control of the BlitBlend Datapath multiplexers, do not change, offset: 0x70030 */
  __I  uint32_t PIXENG_BLITBLEND9_PRIMCONTROLWORD; /**< Value of last received primary control word, offset: 0x70034 */
  __I  uint32_t PIXENG_BLITBLEND9_SECCONTROLWORD;  /**< Value of last received secondary control word, offset: 0x70038 */
       uint8_t RESERVED_17[4036];
  __O  uint32_t PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x71000 */
  __I  uint32_t PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS; /**< Protection status of this address block., offset: 0x71004 */
  __IO uint32_t PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC; /**< Dynamic pixel engine configuration for blitblend9, offset: 0x71008 */
  __I  uint32_t PIXENG_BLITBLEND9CFG_BLITBLEND9_STATUS; /**< Status information for pixel engine configuration of blitblend9, offset: 0x7100C */
       uint8_t RESERVED_18[61424];
  __O  uint32_t PIXENG_FETCHROT9_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x80000 */
  __I  uint32_t PIXENG_FETCHROT9_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x80004 */
  __IO uint32_t PIXENG_FETCHROT9_STATICCONTROL;    /**< Common static control options., offset: 0x80008 */
  __IO uint32_t PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x8000C */
  __IO uint32_t PIXENG_FETCHROT9_RINGBUFSTARTADDR0; /**< Ring buffer setup for layer 0., offset: 0x80010 */
  __IO uint32_t PIXENG_FETCHROT9_RINGBUFSTARTADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x80014 */
  __IO uint32_t PIXENG_FETCHROT9_RINGBUFWRAPADDR0; /**< Ring buffer setup for layer 0., offset: 0x80018 */
  __IO uint32_t PIXENG_FETCHROT9_RINGBUFWRAPADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x8001C */
  __IO uint32_t PIXENG_FETCHROT9_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x80020 */
  __IO uint32_t PIXENG_FETCHROT9_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x80024 */
  __IO uint32_t PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x80028 */
  __IO uint32_t PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x8002C */
  __IO uint32_t PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x80030 */
  __IO uint32_t PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x80034 */
  __IO uint32_t PIXENG_FETCHROT9_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x80038 */
  __IO uint32_t PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x8003C */
  __IO uint32_t PIXENG_FETCHROT9_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x80040 */
  __IO uint32_t PIXENG_FETCHROT9_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x80044 */
  __IO uint32_t PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x80048 */
  __IO uint32_t PIXENG_FETCHROT9_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x8004C */
  __IO uint32_t PIXENG_FETCHROT9_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x80050 */
       uint8_t RESERVED_19[4];
  __IO uint32_t PIXENG_FETCHROT9_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x80058 */
  __IO uint32_t PIXENG_FETCHROT9_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x8005C */
  __IO uint32_t PIXENG_FETCHROT9_WARPCONTROL;      /**< Warping control options., offset: 0x80060 */
  __IO uint32_t PIXENG_FETCHROT9_AFFINESTARTX;     /**< Start value X for affine warping., offset: 0x80064 */
  __IO uint32_t PIXENG_FETCHROT9_AFFINESTARTY;     /**< Start value Y for affine warping., offset: 0x80068 */
  __IO uint32_t PIXENG_FETCHROT9_AFFINEDELTAXX;    /**< DeltaXX increment for affine warping., offset: 0x8006C */
  __IO uint32_t PIXENG_FETCHROT9_AFFINEDELTAXY;    /**< DeltaXY increment for affine warping., offset: 0x80070 */
  __IO uint32_t PIXENG_FETCHROT9_AFFINEDELTAYX;    /**< DeltaYX increment for affine warping., offset: 0x80074 */
  __IO uint32_t PIXENG_FETCHROT9_AFFINEDELTAYY;    /**< DeltaYY increment for affine warping., offset: 0x80078 */
  __IO uint32_t PIXENG_FETCHROT9_ARBSTARTX;        /**< Start value X for arbitrary warping., offset: 0x8007C */
  __IO uint32_t PIXENG_FETCHROT9_ARBSTARTY;        /**< Start value Y for arbitrary warping., offset: 0x80080 */
  __IO uint32_t PIXENG_FETCHROT9_ARBDELTA;         /**< Start values for delta incrementation of arbitrary warping., offset: 0x80084 */
  __IO uint32_t PIXENG_FETCHROT9_FIRPOSITIONS;     /**< FIR sequence control register., offset: 0x80088 */
  __IO uint32_t PIXENG_FETCHROT9_FIRCOEFFICIENTS;  /**< FIR coefficients register., offset: 0x8008C */
  __IO uint32_t PIXENG_FETCHROT9_CONTROL;          /**< Shared common control settings for all layers., offset: 0x80090 */
  __O  uint32_t PIXENG_FETCHROT9_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x80094 */
  __O  uint32_t PIXENG_FETCHROT9_START;            /**< Frame start trigger., offset: 0x80098 */
  __I  uint32_t PIXENG_FETCHROT9_FETCHTYPE;        /**< Fetch unit type., offset: 0x8009C */
  __I  uint32_t PIXENG_FETCHROT9_READADDRESS0;     /**< Ring buffer synchronization for layer 0., offset: 0x800A0 */
  __I  uint32_t PIXENG_FETCHROT9_READADDRESSMSB0;  /**< Ring buffer synchronization for layer 0., offset: 0x800A4 */
  __I  uint32_t PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x800A8 */
  __IO uint32_t PIXENG_FETCHROT9_STATUS;           /**< Status informations., offset: 0x800AC */
  __I  uint32_t PIXENG_FETCHROT9_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x800B0 */
  __I  uint32_t PIXENG_FETCHROT9_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x800B4 */
  __I  uint32_t PIXENG_FETCHROT9_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x800B8 */
  __I  uint32_t PIXENG_FETCHROT9_WARPLINEOFFSET;   /**< Offest between current used line and reference line., offset: 0x800BC */
       uint8_t RESERVED_20[64];
  __IO uint32_t PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0[DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_COUNT]; /**< Warp x interpolator table., array offset: 0x80100, array step: 0x4 */
  __IO uint32_t PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1[DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_COUNT]; /**< Warp x interpolator table., array offset: 0x80200, array step: 0x4 */
       uint8_t RESERVED_21[256];
  __IO uint32_t PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0[DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_COUNT]; /**< Warp y interpolator table., array offset: 0x80400, array step: 0x4 */
       uint8_t RESERVED_22[252];
  __IO uint32_t PIXENG_FETCHROT9_WRPT_TBL_CONTROL; /**< Warping reference point table, write select., offset: 0x80600 */
       uint8_t RESERVED_23[6652];
  __IO uint32_t PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0[DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_COUNT]; /**< Warp reference points table 0., array offset: 0x82000, array step: 0x4 */
  __IO uint32_t PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1[DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_COUNT]; /**< Warp reference points table 1., array offset: 0x84000, array step: 0x4 */
  __O  uint32_t PIXENG_FETCHROT9CFG_FETCHROT9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x86000 */
  __I  uint32_t PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS; /**< Protection status of this address block., offset: 0x86004 */
  __IO uint32_t PIXENG_FETCHROT9CFG_FETCHROT9_DYNAMIC; /**< Dynamic pixel engine configuration for fetchrot9, offset: 0x86008 */
  __I  uint32_t PIXENG_FETCHROT9CFG_FETCHROT9_STATUS; /**< Status information for pixel engine configuration of fetchrot9, offset: 0x8600C */
       uint8_t RESERVED_24[40944];
  __O  uint32_t PIXENG_FETCHDECODE9_LOCKUNLOCK;    /**< Register to change the protection status of this address block., offset: 0x90000 */
  __I  uint32_t PIXENG_FETCHDECODE9_LOCKSTATUS;    /**< Protection status of this address block., offset: 0x90004 */
  __IO uint32_t PIXENG_FETCHDECODE9_STATICCONTROL; /**< Common static control options., offset: 0x90008 */
  __IO uint32_t PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x9000C */
  __IO uint32_t PIXENG_FETCHDECODE9_RINGBUFSTARTADDR0; /**< Ring buffer setup for layer 0., offset: 0x90010 */
  __IO uint32_t PIXENG_FETCHDECODE9_RINGBUFSTARTADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x90014 */
  __IO uint32_t PIXENG_FETCHDECODE9_RINGBUFWRAPADDR0; /**< Ring buffer setup for layer 0., offset: 0x90018 */
  __IO uint32_t PIXENG_FETCHDECODE9_RINGBUFWRAPADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x9001C */
  __IO uint32_t PIXENG_FETCHDECODE9_FRAMEPROPERTIES0; /**< Frame property setup for layer 0., offset: 0x90020 */
       uint8_t RESERVED_25[4];
  __IO uint32_t PIXENG_FETCHDECODE9_BASEADDRESS0;  /**< Source buffer base address of layer 0., offset: 0x90028 */
  __IO uint32_t PIXENG_FETCHDECODE9_BASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x9002C */
  __IO uint32_t PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x90030 */
  __IO uint32_t PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x90034 */
  __IO uint32_t PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x90038 */
  __IO uint32_t PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x9003C */
  __IO uint32_t PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x90040 */
  __IO uint32_t PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x90044 */
  __IO uint32_t PIXENG_FETCHDECODE9_LAYEROFFSET0;  /**< Position of layer 0 within the destination frame., offset: 0x90048 */
  __IO uint32_t PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x9004C */
  __IO uint32_t PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x90050 */
  __IO uint32_t PIXENG_FETCHDECODE9_CONSTANTCOLOR0; /**< Constant color for layer 0., offset: 0x90054 */
  __IO uint32_t PIXENG_FETCHDECODE9_LAYERPROPERTY0; /**< Common properties of layer 0., offset: 0x90058 */
       uint8_t RESERVED_26[4];
  __IO uint32_t PIXENG_FETCHDECODE9_FRAMEDIMENSIONS; /**< Output frame dimension., offset: 0x90060 */
  __IO uint32_t PIXENG_FETCHDECODE9_FRAMERESAMPLING; /**< Resampling options for output frame., offset: 0x90064 */
  __IO uint32_t PIXENG_FETCHDECODE9_DECODECONTROL; /**< Control options for RLAD decompression., offset: 0x90068 */
  __IO uint32_t PIXENG_FETCHDECODE9_SOURCEBUFFERLENGTH; /**< Source buffer length for compressed data., offset: 0x9006C */
  __IO uint32_t PIXENG_FETCHDECODE9_CONTROL;       /**< Shared common control settings for all layers., offset: 0x90070 */
  __O  uint32_t PIXENG_FETCHDECODE9_CONTROLTRIGGER; /**< Shadow load trigger., offset: 0x90074 */
  __O  uint32_t PIXENG_FETCHDECODE9_START;         /**< Frame start trigger., offset: 0x90078 */
  __I  uint32_t PIXENG_FETCHDECODE9_FETCHTYPE;     /**< Fetch unit type., offset: 0x9007C */
  __IO uint32_t PIXENG_FETCHDECODE9_DECODERSTATUS; /**< Status information of the RLAD decoder., offset: 0x90080 */
       uint8_t RESERVED_27[4];
  __I  uint32_t PIXENG_FETCHDECODE9_READADDRESS0;  /**< Ring buffer synchronization for layer 0., offset: 0x90088 */
  __I  uint32_t PIXENG_FETCHDECODE9_READADDRESSMSB0; /**< Ring buffer synchronization for layer 0., offset: 0x9008C */
  __I  uint32_t PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x90090 */
  __IO uint32_t PIXENG_FETCHDECODE9_STATUS;        /**< Status informations., offset: 0x90094 */
  __I  uint32_t PIXENG_FETCHDECODE9_CURBASEADDRESS0; /**< Current Working BaseAddress for layer 0., offset: 0x90098 */
  __I  uint32_t PIXENG_FETCHDECODE9_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x9009C */
  __I  uint32_t PIXENG_FETCHDECODE9_HIDDENSTATUS;  /**< Hidden status informations., offset: 0x900A0 */
       uint8_t RESERVED_28[860];
  __IO uint32_t PIXENG_FETCHDECODE9_COLORPALETTE[DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORPALETTE_COUNT]; /**< Color palette look up table., array offset: 0x90400, array step: 0x4 */
       uint8_t RESERVED_29[2048];
  __O  uint32_t PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x91000 */
  __I  uint32_t PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS; /**< Protection status of this address block., offset: 0x91004 */
  __IO uint32_t PIXENG_FETCHDECODE9CFG_FETCHDECODE9_DYNAMIC; /**< Dynamic pixel engine configuration for fetchdecode9, offset: 0x91008 */
  __I  uint32_t PIXENG_FETCHDECODE9CFG_FETCHDECODE9_STATUS; /**< Status information for pixel engine configuration of fetchdecode9, offset: 0x9100C */
       uint8_t RESERVED_30[61424];
  __O  uint32_t PIXENG_FETCHECO9_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0xA0000 */
  __I  uint32_t PIXENG_FETCHECO9_LOCKSTATUS;       /**< Protection status of this address block., offset: 0xA0004 */
  __IO uint32_t PIXENG_FETCHECO9_STATICCONTROL;    /**< Common static control options., offset: 0xA0008 */
  __IO uint32_t PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0xA000C */
  __IO uint32_t PIXENG_FETCHECO9_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0xA0010 */
  __IO uint32_t PIXENG_FETCHECO9_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0xA0014 */
  __IO uint32_t PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0xA0018 */
  __IO uint32_t PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0xA001C */
  __IO uint32_t PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0xA0020 */
  __IO uint32_t PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0xA0024 */
  __IO uint32_t PIXENG_FETCHECO9_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0xA0028 */
  __IO uint32_t PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0xA002C */
  __IO uint32_t PIXENG_FETCHECO9_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0xA0030 */
  __IO uint32_t PIXENG_FETCHECO9_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0xA0034 */
  __IO uint32_t PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0xA0038 */
  __IO uint32_t PIXENG_FETCHECO9_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0xA003C */
  __IO uint32_t PIXENG_FETCHECO9_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0xA0040 */
       uint8_t RESERVED_31[4];
  __IO uint32_t PIXENG_FETCHECO9_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0xA0048 */
  __IO uint32_t PIXENG_FETCHECO9_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0xA004C */
  __IO uint32_t PIXENG_FETCHECO9_CONTROL;          /**< Shared common control settings for all layers., offset: 0xA0050 */
  __O  uint32_t PIXENG_FETCHECO9_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0xA0054 */
  __O  uint32_t PIXENG_FETCHECO9_START;            /**< Frame start trigger., offset: 0xA0058 */
  __I  uint32_t PIXENG_FETCHECO9_FETCHTYPE;        /**< Fetch unit type., offset: 0xA005C */
  __I  uint32_t PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0xA0060 */
       uint8_t RESERVED_32[4];
  __I  uint32_t PIXENG_FETCHECO9_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0xA0068 */
  __I  uint32_t PIXENG_FETCHECO9_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0xA006C */
  __I  uint32_t PIXENG_FETCHECO9_HIDDENSTATUS;     /**< Hidden status informations., offset: 0xA0070 */
       uint8_t RESERVED_33[3980];
  __O  uint32_t PIXENG_FETCHECO9CFG_FETCHECO9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0xA1000 */
  __I  uint32_t PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS; /**< Protection status of this address block., offset: 0xA1004 */
  __I  uint32_t PIXENG_FETCHECO9CFG_FETCHECO9_STATUS; /**< Status information for pixel engine configuration of fetcheco9, offset: 0xA1008 */
       uint8_t RESERVED_34[61428];
  __O  uint32_t PIXENG_HSCALER9_LOCKUNLOCK;        /**< Register to change the protection status of this address block., offset: 0xB0000 */
  __I  uint32_t PIXENG_HSCALER9_LOCKSTATUS;        /**< Protection status of this address block., offset: 0xB0004 */
  __IO uint32_t PIXENG_HSCALER9_STATICCONTROL;     /**< Static control settings that must typically be setup once only., offset: 0xB0008 */
  __IO uint32_t PIXENG_HSCALER9_SETUP1;            /**< Phase interpolator setup., offset: 0xB000C */
  __IO uint32_t PIXENG_HSCALER9_SETUP2;            /**< Phase interpolator setup., offset: 0xB0010 */
  __IO uint32_t PIXENG_HSCALER9_CONTROL;           /**< Scaler operation control., offset: 0xB0014 */
       uint8_t RESERVED_35[4072];
  __O  uint32_t PIXENG_HSCALER9CFG_HSCALER9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0xB1000 */
  __I  uint32_t PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS; /**< Protection status of this address block., offset: 0xB1004 */
  __IO uint32_t PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC; /**< Dynamic pixel engine configuration for hscaler9, offset: 0xB1008 */
  __I  uint32_t PIXENG_HSCALER9CFG_HSCALER9_STATUS; /**< Status information for pixel engine configuration of hscaler9, offset: 0xB100C */
       uint8_t RESERVED_36[61424];
  __O  uint32_t PIXENG_VSCALER9_LOCKUNLOCK;        /**< Register to change the protection status of this address block., offset: 0xC0000 */
  __I  uint32_t PIXENG_VSCALER9_LOCKSTATUS;        /**< Protection status of this address block., offset: 0xC0004 */
  __IO uint32_t PIXENG_VSCALER9_STATICCONTROL;     /**< Static control settings that must typically be setup once only., offset: 0xC0008 */
  __IO uint32_t PIXENG_VSCALER9_SETUP1;            /**< Phase interpolator setup., offset: 0xC000C */
  __IO uint32_t PIXENG_VSCALER9_SETUP2;            /**< Phase interpolator setup, selected if input and output field polarity is 0., offset: 0xC0010 */
  __IO uint32_t PIXENG_VSCALER9_CONTROL;           /**< Scaler operation control., offset: 0xC0014 */
       uint8_t RESERVED_37[4072];
  __O  uint32_t PIXENG_VSCALER9CFG_VSCALER9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0xC1000 */
  __I  uint32_t PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS; /**< Protection status of this address block., offset: 0xC1004 */
  __IO uint32_t PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC; /**< Dynamic pixel engine configuration for vscaler9, offset: 0xC1008 */
  __I  uint32_t PIXENG_VSCALER9CFG_VSCALER9_STATUS; /**< Status information for pixel engine configuration of vscaler9, offset: 0xC100C */
       uint8_t RESERVED_38[61424];
  __O  uint32_t PIXENG_FILTER9_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0xD0000 */
  __I  uint32_t PIXENG_FILTER9_LOCKSTATUS;         /**< Protection status of this address block., offset: 0xD0004 */
  __IO uint32_t PIXENG_FILTER9_STATICCONTROL;      /**< Static control settings that must typically be setup once only., offset: 0xD0008 */
  __IO uint32_t PIXENG_FILTER9_CONTROL;            /**< Filter operation main control., offset: 0xD000C */
  __IO uint32_t PIXENG_FILTER9_FIR_CONTROL;        /**< FIR filter operation control., offset: 0xD0010 */
  __IO uint32_t PIXENG_FILTER9_COEFFICIENTS0;      /**< FIR coefficients[column][row] for 5x5 window for filter_mode FIR., offset: 0xD0014 */
  __IO uint32_t PIXENG_FILTER9_COEFFICIENTS1;      /**< FIR coefficients[column][row] for 5x5 window for filter_mode FIR., offset: 0xD0018 */
  __IO uint32_t PIXENG_FILTER9_COEFFICIENTS2;      /**< FIR coefficients[column][row] for 5x5 window for filter_mode FIR., offset: 0xD001C */
  __IO uint32_t PIXENG_FILTER9_COEFFICIENTS3;      /**< FIR coefficients[column][row] for 5x5 window for filter_mode FIR., offset: 0xD0020 */
  __IO uint32_t PIXENG_FILTER9_COEFFICIENTS4;      /**< FIR coefficients[column][row] for 5x5 window for filter_mode FIR., offset: 0xD0024 */
  __IO uint32_t PIXENG_FILTER9_COEFFICIENTS5;      /**< FIR coefficients[column][row] for 5x5 window for filter_mode FIR., offset: 0xD0028 */
  __IO uint32_t PIXENG_FILTER9_COEFFICIENTS6;      /**< FIR coefficients[column][row] for 5x5 window for filter_mode FIR., offset: 0xD002C */
       uint8_t RESERVED_39[4048];
  __O  uint32_t PIXENG_FILTER9CFG_FILTER9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0xD1000 */
  __I  uint32_t PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS; /**< Protection status of this address block., offset: 0xD1004 */
  __IO uint32_t PIXENG_FILTER9CFG_FILTER9_DYNAMIC; /**< Dynamic pixel engine configuration for filter9, offset: 0xD1008 */
  __I  uint32_t PIXENG_FILTER9CFG_FILTER9_STATUS;  /**< Status information for pixel engine configuration of filter9, offset: 0xD100C */
       uint8_t RESERVED_40[61424];
  __O  uint32_t PIXENG_STORE9_LOCKUNLOCK;          /**< Register to change the protection status of this address block., offset: 0xE0000 */
  __I  uint32_t PIXENG_STORE9_LOCKSTATUS;          /**< Protection status of this address block., offset: 0xE0004 */
  __IO uint32_t PIXENG_STORE9_STATICCONTROL;       /**< Store unit static control register., offset: 0xE0008 */
  __IO uint32_t PIXENG_STORE9_BURSTBUFFERMANAGEMENT; /**< Burst Buffer setup register., offset: 0xE000C */
  __IO uint32_t PIXENG_STORE9_RINGBUFSTARTADDR;    /**< Ring buffer setup for destination., offset: 0xE0010 */
  __IO uint32_t PIXENG_STORE9_RINGBUFSTARTADDRMSB; /**< Ring buffer setup for destination., offset: 0xE0014 */
  __IO uint32_t PIXENG_STORE9_RINGBUFWRAPADDR;     /**< Ring buffer setup for destination., offset: 0xE0018 */
  __IO uint32_t PIXENG_STORE9_RINGBUFWRAPADDRMSB;  /**< Ring buffer setup for destination., offset: 0xE001C */
  __IO uint32_t PIXENG_STORE9_BASEADDRESS0;        /**< Destination buffer 0 base address., offset: 0xE0020 */
  __IO uint32_t PIXENG_STORE9_BASEADDRESSMSB0;     /**< Destination buffer 0 base address., offset: 0xE0024 */
  __IO uint32_t PIXENG_STORE9_AUTOUPDATEBASEADDRESS0; /**< Destination buffer 0 base address for auto update feature., offset: 0xE0028 */
  __IO uint32_t PIXENG_STORE9_AUTOUPDATEBASEADDRESSMSB0; /**< Destination buffer 0 base address for auto update feature., offset: 0xE002C */
  __IO uint32_t PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0; /**< Destination buffer 0 attributes., offset: 0xE0030 */
       uint8_t RESERVED_41[4];
  __IO uint32_t PIXENG_STORE9_BASEADDRESS1;        /**< Destination buffer 1 base address., offset: 0xE0038 */
  __IO uint32_t PIXENG_STORE9_BASEADDRESSMSB1;     /**< Destination buffer 1 base address., offset: 0xE003C */
  __IO uint32_t PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1; /**< Destination buffer 1 attributes., offset: 0xE0040 */
       uint8_t RESERVED_42[4];
  __IO uint32_t PIXENG_STORE9_BASEADDRESS2;        /**< Destination buffer 2 base address., offset: 0xE0048 */
  __IO uint32_t PIXENG_STORE9_BASEADDRESSMSB2;     /**< Destination buffer 2 base address (upper 8 bits)., offset: 0xE004C */
  __IO uint32_t PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2; /**< Destination buffer 2 attributes., offset: 0xE0050 */
  __IO uint32_t PIXENG_STORE9_DESTINATIONBUFFERDIMENSION; /**< Destination buffer dimension., offset: 0xE0054 */
  __IO uint32_t PIXENG_STORE9_FRAMEOFFSET;         /**< Offset between destination frame and buffer., offset: 0xE0058 */
  __IO uint32_t PIXENG_STORE9_COLORCOMPONENTBITS;  /**< Color component size of destination buffer, offset: 0xE005C */
  __IO uint32_t PIXENG_STORE9_COLORCOMPONENTSHIFT; /**< Color component offset of destination buffer., offset: 0xE0060 */
  __IO uint32_t PIXENG_STORE9_CONTROL;             /**< Store unit dynamic control register, offset: 0xE0064 */
  __O  uint32_t PIXENG_STORE9_START;               /**< Store unit start register, offset: 0xE0068 */
       uint8_t RESERVED_43[4];
  __I  uint32_t PIXENG_STORE9_WRITEADDRESS;        /**< Ring buffer synchronization., offset: 0xE0070 */
  __I  uint32_t PIXENG_STORE9_WRITEADDRESSMSB;     /**< Ring buffer synchronization., offset: 0xE0074 */
  __I  uint32_t PIXENG_STORE9_FRAMEPROPERTIES;     /**< Ring buffer synchronization., offset: 0xE0078 */
  __I  uint32_t PIXENG_STORE9_BURSTBUFFERPROPERTIES; /**< Burst Buffer Property register, offset: 0xE007C */
  __I  uint32_t PIXENG_STORE9_LASTCONTROLWORD;     /**< Shows the last control word received, offset: 0xE0080 */
  __I  uint32_t PIXENG_STORE9_PERFCOUNTER;         /**< Performance counter result, offset: 0xE0084 */
  __IO uint32_t PIXENG_STORE9_STATUS;              /**< Shows status information, offset: 0xE0088 */
       uint8_t RESERVED_44[3956];
  __O  uint32_t PIXENG_STORE9CFG_STORE9_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0xE1000 */
  __I  uint32_t PIXENG_STORE9CFG_STORE9_LOCKSTATUS; /**< Protection status of this address block., offset: 0xE1004 */
  __IO uint32_t PIXENG_STORE9CFG_STORE9_STATIC;    /**< Static pixel engine configuration for store9, offset: 0xE1008 */
  __IO uint32_t PIXENG_STORE9CFG_STORE9_DYNAMIC;   /**< Dynamic pixel engine configuration for store9, offset: 0xE100C */
  __IO uint32_t PIXENG_STORE9CFG_STORE9_REQUEST;   /**< ShadowLoadRequest register for endpoint store9, offset: 0xE1010 */
  __O  uint32_t PIXENG_STORE9CFG_STORE9_TRIGGER;   /**< Trigger bits for pixel engine configuration of store9, offset: 0xE1014 */
  __I  uint32_t PIXENG_STORE9CFG_STORE9_STATUS;    /**< Status information for pixel engine configuration of store9, offset: 0xE1018 */
       uint8_t RESERVED_45[61412];
  __O  uint32_t PIXENG_CONSTFRAME0_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0xF0000 */
  __I  uint32_t PIXENG_CONSTFRAME0_LOCKSTATUS;     /**< Protection status of this address block., offset: 0xF0004 */
  __IO uint32_t PIXENG_CONSTFRAME0_STATICCONTROL;  /**< ConstFrame unit static control register, offset: 0xF0008 */
  __IO uint32_t PIXENG_CONSTFRAME0_FRAMEDIMENSIONS; /**< Output frame dimensions., offset: 0xF000C */
  __IO uint32_t PIXENG_CONSTFRAME0_CONSTANTCOLOR;  /**< Color of output frame., offset: 0xF0010 */
  __O  uint32_t PIXENG_CONSTFRAME0_CONTROLTRIGGER; /**< ConstFrame unit trigger register, offset: 0xF0014 */
  __O  uint32_t PIXENG_CONSTFRAME0_START;          /**< ConstFrame unit start register, offset: 0xF0018 */
  __I  uint32_t PIXENG_CONSTFRAME0_STATUS;         /**< Shows status information, offset: 0xF001C */
       uint8_t RESERVED_46[4064];
  __O  uint32_t PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0xF1000 */
  __I  uint32_t PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS; /**< Protection status of this address block., offset: 0xF1004 */
  __I  uint32_t PIXENG_CONSTFRAME0CFG_CONSTFRAME0_STATUS; /**< Status information for pixel engine configuration of constframe0, offset: 0xF1008 */
       uint8_t RESERVED_47[61428];
  __O  uint32_t PIXENG_CONSTFRAME4_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x100000 */
  __I  uint32_t PIXENG_CONSTFRAME4_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x100004 */
  __IO uint32_t PIXENG_CONSTFRAME4_STATICCONTROL;  /**< ConstFrame unit static control register, offset: 0x100008 */
  __IO uint32_t PIXENG_CONSTFRAME4_FRAMEDIMENSIONS; /**< Output frame dimensions., offset: 0x10000C */
  __IO uint32_t PIXENG_CONSTFRAME4_CONSTANTCOLOR;  /**< Color of output frame., offset: 0x100010 */
  __O  uint32_t PIXENG_CONSTFRAME4_CONTROLTRIGGER; /**< ConstFrame unit trigger register, offset: 0x100014 */
  __O  uint32_t PIXENG_CONSTFRAME4_START;          /**< ConstFrame unit start register, offset: 0x100018 */
  __I  uint32_t PIXENG_CONSTFRAME4_STATUS;         /**< Shows status information, offset: 0x10001C */
       uint8_t RESERVED_48[4064];
  __O  uint32_t PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x101000 */
  __I  uint32_t PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS; /**< Protection status of this address block., offset: 0x101004 */
  __I  uint32_t PIXENG_CONSTFRAME4CFG_CONSTFRAME4_STATUS; /**< Status information for pixel engine configuration of constframe4, offset: 0x101008 */
       uint8_t RESERVED_49[61428];
  __O  uint32_t PIXENG_EXTDST0_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x110000 */
  __I  uint32_t PIXENG_EXTDST0_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x110004 */
  __IO uint32_t PIXENG_EXTDST0_STATICCONTROL;      /**< External Destination static control register, offset: 0x110008 */
  __IO uint32_t PIXENG_EXTDST0_CONTROL;            /**< External Destination shadowed control register, offset: 0x11000C */
  __O  uint32_t PIXENG_EXTDST0_SOFTWAREKICK;       /**< External Destination software kick, offset: 0x110010 */
  __IO uint32_t PIXENG_EXTDST0_STATUS;             /**< External Destination Unit current status, offset: 0x110014 */
  __I  uint32_t PIXENG_EXTDST0_CONTROLWORD;        /**< Value of last received control word, offset: 0x110018 */
  __I  uint32_t PIXENG_EXTDST0_CURPIXELCNT;        /**< pixel count of currently running frame, offset: 0x11001C */
  __I  uint32_t PIXENG_EXTDST0_LASTPIXELCNT;       /**< pixel count between last two control words, offset: 0x110020 */
  __I  uint32_t PIXENG_EXTDST0_PERFCOUNTER;        /**< Performance counter result, offset: 0x110024 */
       uint8_t RESERVED_50[4056];
  __O  uint32_t PIXENG_EXTDST0CFG_EXTDST0_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x111000 */
  __I  uint32_t PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS; /**< Protection status of this address block., offset: 0x111004 */
  __IO uint32_t PIXENG_EXTDST0CFG_EXTDST0_STATIC;  /**< Static pixel engine configuration for extdst0, offset: 0x111008 */
  __IO uint32_t PIXENG_EXTDST0CFG_EXTDST0_DYNAMIC; /**< Dynamic pixel engine configuration for extdst0, offset: 0x11100C */
  __IO uint32_t PIXENG_EXTDST0CFG_EXTDST0_REQUEST; /**< ShadowLoadRequest register for endpoint extdst0, offset: 0x111010 */
  __O  uint32_t PIXENG_EXTDST0CFG_EXTDST0_TRIGGER; /**< Trigger bits for pixel engine configuration of extdst0, offset: 0x111014 */
  __I  uint32_t PIXENG_EXTDST0CFG_EXTDST0_STATUS;  /**< Status information for pixel engine configuration of extdst0, offset: 0x111018 */
       uint8_t RESERVED_51[61412];
  __O  uint32_t PIXENG_EXTDST4_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x120000 */
  __I  uint32_t PIXENG_EXTDST4_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x120004 */
  __IO uint32_t PIXENG_EXTDST4_STATICCONTROL;      /**< External Destination static control register, offset: 0x120008 */
  __IO uint32_t PIXENG_EXTDST4_CONTROL;            /**< External Destination shadowed control register, offset: 0x12000C */
  __O  uint32_t PIXENG_EXTDST4_SOFTWAREKICK;       /**< External Destination software kick, offset: 0x120010 */
  __IO uint32_t PIXENG_EXTDST4_STATUS;             /**< External Destination Unit current status, offset: 0x120014 */
  __I  uint32_t PIXENG_EXTDST4_CONTROLWORD;        /**< Value of last received control word, offset: 0x120018 */
  __I  uint32_t PIXENG_EXTDST4_CURPIXELCNT;        /**< pixel count of currently running frame, offset: 0x12001C */
  __I  uint32_t PIXENG_EXTDST4_LASTPIXELCNT;       /**< pixel count between last two control words, offset: 0x120020 */
  __I  uint32_t PIXENG_EXTDST4_PERFCOUNTER;        /**< Performance counter result, offset: 0x120024 */
       uint8_t RESERVED_52[4056];
  __O  uint32_t PIXENG_EXTDST4CFG_EXTDST4_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x121000 */
  __I  uint32_t PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS; /**< Protection status of this address block., offset: 0x121004 */
  __IO uint32_t PIXENG_EXTDST4CFG_EXTDST4_STATIC;  /**< Static pixel engine configuration for extdst4, offset: 0x121008 */
  __IO uint32_t PIXENG_EXTDST4CFG_EXTDST4_DYNAMIC; /**< Dynamic pixel engine configuration for extdst4, offset: 0x12100C */
  __IO uint32_t PIXENG_EXTDST4CFG_EXTDST4_REQUEST; /**< ShadowLoadRequest register for endpoint extdst4, offset: 0x121010 */
  __O  uint32_t PIXENG_EXTDST4CFG_EXTDST4_TRIGGER; /**< Trigger bits for pixel engine configuration of extdst4, offset: 0x121014 */
  __I  uint32_t PIXENG_EXTDST4CFG_EXTDST4_STATUS;  /**< Status information for pixel engine configuration of extdst4, offset: 0x121018 */
       uint8_t RESERVED_53[61412];
  __O  uint32_t PIXENG_CONSTFRAME1_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x130000 */
  __I  uint32_t PIXENG_CONSTFRAME1_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x130004 */
  __IO uint32_t PIXENG_CONSTFRAME1_STATICCONTROL;  /**< ConstFrame unit static control register, offset: 0x130008 */
  __IO uint32_t PIXENG_CONSTFRAME1_FRAMEDIMENSIONS; /**< Output frame dimensions., offset: 0x13000C */
  __IO uint32_t PIXENG_CONSTFRAME1_CONSTANTCOLOR;  /**< Color of output frame., offset: 0x130010 */
  __O  uint32_t PIXENG_CONSTFRAME1_CONTROLTRIGGER; /**< ConstFrame unit trigger register, offset: 0x130014 */
  __O  uint32_t PIXENG_CONSTFRAME1_START;          /**< ConstFrame unit start register, offset: 0x130018 */
  __I  uint32_t PIXENG_CONSTFRAME1_STATUS;         /**< Shows status information, offset: 0x13001C */
       uint8_t RESERVED_54[4064];
  __O  uint32_t PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x131000 */
  __I  uint32_t PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS; /**< Protection status of this address block., offset: 0x131004 */
  __I  uint32_t PIXENG_CONSTFRAME1CFG_CONSTFRAME1_STATUS; /**< Status information for pixel engine configuration of constframe1, offset: 0x131008 */
       uint8_t RESERVED_55[61428];
  __O  uint32_t PIXENG_CONSTFRAME5_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x140000 */
  __I  uint32_t PIXENG_CONSTFRAME5_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x140004 */
  __IO uint32_t PIXENG_CONSTFRAME5_STATICCONTROL;  /**< ConstFrame unit static control register, offset: 0x140008 */
  __IO uint32_t PIXENG_CONSTFRAME5_FRAMEDIMENSIONS; /**< Output frame dimensions., offset: 0x14000C */
  __IO uint32_t PIXENG_CONSTFRAME5_CONSTANTCOLOR;  /**< Color of output frame., offset: 0x140010 */
  __O  uint32_t PIXENG_CONSTFRAME5_CONTROLTRIGGER; /**< ConstFrame unit trigger register, offset: 0x140014 */
  __O  uint32_t PIXENG_CONSTFRAME5_START;          /**< ConstFrame unit start register, offset: 0x140018 */
  __I  uint32_t PIXENG_CONSTFRAME5_STATUS;         /**< Shows status information, offset: 0x14001C */
       uint8_t RESERVED_56[4064];
  __O  uint32_t PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x141000 */
  __I  uint32_t PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS; /**< Protection status of this address block., offset: 0x141004 */
  __I  uint32_t PIXENG_CONSTFRAME5CFG_CONSTFRAME5_STATUS; /**< Status information for pixel engine configuration of constframe5, offset: 0x141008 */
       uint8_t RESERVED_57[61428];
  __O  uint32_t PIXENG_EXTDST1_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x150000 */
  __I  uint32_t PIXENG_EXTDST1_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x150004 */
  __IO uint32_t PIXENG_EXTDST1_STATICCONTROL;      /**< External Destination static control register, offset: 0x150008 */
  __IO uint32_t PIXENG_EXTDST1_CONTROL;            /**< External Destination shadowed control register, offset: 0x15000C */
  __O  uint32_t PIXENG_EXTDST1_SOFTWAREKICK;       /**< External Destination software kick, offset: 0x150010 */
  __IO uint32_t PIXENG_EXTDST1_STATUS;             /**< External Destination Unit current status, offset: 0x150014 */
  __I  uint32_t PIXENG_EXTDST1_CONTROLWORD;        /**< Value of last received control word, offset: 0x150018 */
  __I  uint32_t PIXENG_EXTDST1_CURPIXELCNT;        /**< pixel count of currently running frame, offset: 0x15001C */
  __I  uint32_t PIXENG_EXTDST1_LASTPIXELCNT;       /**< pixel count between last two control words, offset: 0x150020 */
  __I  uint32_t PIXENG_EXTDST1_PERFCOUNTER;        /**< Performance counter result, offset: 0x150024 */
       uint8_t RESERVED_58[4056];
  __O  uint32_t PIXENG_EXTDST1CFG_EXTDST1_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x151000 */
  __I  uint32_t PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS; /**< Protection status of this address block., offset: 0x151004 */
  __IO uint32_t PIXENG_EXTDST1CFG_EXTDST1_STATIC;  /**< Static pixel engine configuration for extdst1, offset: 0x151008 */
  __IO uint32_t PIXENG_EXTDST1CFG_EXTDST1_DYNAMIC; /**< Dynamic pixel engine configuration for extdst1, offset: 0x15100C */
  __IO uint32_t PIXENG_EXTDST1CFG_EXTDST1_REQUEST; /**< ShadowLoadRequest register for endpoint extdst1, offset: 0x151010 */
  __O  uint32_t PIXENG_EXTDST1CFG_EXTDST1_TRIGGER; /**< Trigger bits for pixel engine configuration of extdst1, offset: 0x151014 */
  __I  uint32_t PIXENG_EXTDST1CFG_EXTDST1_STATUS;  /**< Status information for pixel engine configuration of extdst1, offset: 0x151018 */
       uint8_t RESERVED_59[61412];
  __O  uint32_t PIXENG_EXTDST5_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x160000 */
  __I  uint32_t PIXENG_EXTDST5_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x160004 */
  __IO uint32_t PIXENG_EXTDST5_STATICCONTROL;      /**< External Destination static control register, offset: 0x160008 */
  __IO uint32_t PIXENG_EXTDST5_CONTROL;            /**< External Destination shadowed control register, offset: 0x16000C */
  __O  uint32_t PIXENG_EXTDST5_SOFTWAREKICK;       /**< External Destination software kick, offset: 0x160010 */
  __IO uint32_t PIXENG_EXTDST5_STATUS;             /**< External Destination Unit current status, offset: 0x160014 */
  __I  uint32_t PIXENG_EXTDST5_CONTROLWORD;        /**< Value of last received control word, offset: 0x160018 */
  __I  uint32_t PIXENG_EXTDST5_CURPIXELCNT;        /**< pixel count of currently running frame, offset: 0x16001C */
  __I  uint32_t PIXENG_EXTDST5_LASTPIXELCNT;       /**< pixel count between last two control words, offset: 0x160020 */
  __I  uint32_t PIXENG_EXTDST5_PERFCOUNTER;        /**< Performance counter result, offset: 0x160024 */
       uint8_t RESERVED_60[4056];
  __O  uint32_t PIXENG_EXTDST5CFG_EXTDST5_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x161000 */
  __I  uint32_t PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS; /**< Protection status of this address block., offset: 0x161004 */
  __IO uint32_t PIXENG_EXTDST5CFG_EXTDST5_STATIC;  /**< Static pixel engine configuration for extdst5, offset: 0x161008 */
  __IO uint32_t PIXENG_EXTDST5CFG_EXTDST5_DYNAMIC; /**< Dynamic pixel engine configuration for extdst5, offset: 0x16100C */
  __IO uint32_t PIXENG_EXTDST5CFG_EXTDST5_REQUEST; /**< ShadowLoadRequest register for endpoint extdst5, offset: 0x161010 */
  __O  uint32_t PIXENG_EXTDST5CFG_EXTDST5_TRIGGER; /**< Trigger bits for pixel engine configuration of extdst5, offset: 0x161014 */
  __I  uint32_t PIXENG_EXTDST5CFG_EXTDST5_STATUS;  /**< Status information for pixel engine configuration of extdst5, offset: 0x161018 */
       uint8_t RESERVED_61[61412];
  __O  uint32_t PIXENG_LAYERBLEND1_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x170000 */
  __I  uint32_t PIXENG_LAYERBLEND1_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x170004 */
  __IO uint32_t PIXENG_LAYERBLEND1_STATICCONTROL;  /**< Static control settings., offset: 0x170008 */
  __IO uint32_t PIXENG_LAYERBLEND1_CONTROL;        /**< Common control settings., offset: 0x17000C */
  __IO uint32_t PIXENG_LAYERBLEND1_BLENDCONTROL;   /**< Options for blend operations, offset: 0x170010 */
  __IO uint32_t PIXENG_LAYERBLEND1_POSITION;       /**< Position of secondary (overlay) input frame, offset: 0x170014 */
  __I  uint32_t PIXENG_LAYERBLEND1_PRIMCONTROLWORD; /**< Value of last received primary (background) control word, for debugging, offset: 0x170018 */
  __I  uint32_t PIXENG_LAYERBLEND1_SECCONTROLWORD; /**< Value of last received secondary (overlay) control word, for debugging, offset: 0x17001C */
       uint8_t RESERVED_62[4064];
  __O  uint32_t PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x171000 */
  __I  uint32_t PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS; /**< Protection status of this address block., offset: 0x171004 */
  __IO uint32_t PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC; /**< Dynamic pixel engine configuration for layerblend1, offset: 0x171008 */
  __I  uint32_t PIXENG_LAYERBLEND1CFG_LAYERBLEND1_STATUS; /**< Status information for pixel engine configuration of layerblend1, offset: 0x17100C */
       uint8_t RESERVED_63[61424];
  __O  uint32_t PIXENG_LAYERBLEND2_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x180000 */
  __I  uint32_t PIXENG_LAYERBLEND2_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x180004 */
  __IO uint32_t PIXENG_LAYERBLEND2_STATICCONTROL;  /**< Static control settings., offset: 0x180008 */
  __IO uint32_t PIXENG_LAYERBLEND2_CONTROL;        /**< Common control settings., offset: 0x18000C */
  __IO uint32_t PIXENG_LAYERBLEND2_BLENDCONTROL;   /**< Options for blend operations, offset: 0x180010 */
  __IO uint32_t PIXENG_LAYERBLEND2_POSITION;       /**< Position of secondary (overlay) input frame, offset: 0x180014 */
  __I  uint32_t PIXENG_LAYERBLEND2_PRIMCONTROLWORD; /**< Value of last received primary (background) control word, for debugging, offset: 0x180018 */
  __I  uint32_t PIXENG_LAYERBLEND2_SECCONTROLWORD; /**< Value of last received secondary (overlay) control word, for debugging, offset: 0x18001C */
       uint8_t RESERVED_64[4064];
  __O  uint32_t PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x181000 */
  __I  uint32_t PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS; /**< Protection status of this address block., offset: 0x181004 */
  __IO uint32_t PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC; /**< Dynamic pixel engine configuration for layerblend2, offset: 0x181008 */
  __I  uint32_t PIXENG_LAYERBLEND2CFG_LAYERBLEND2_STATUS; /**< Status information for pixel engine configuration of layerblend2, offset: 0x18100C */
       uint8_t RESERVED_65[61424];
  __O  uint32_t PIXENG_LAYERBLEND3_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x190000 */
  __I  uint32_t PIXENG_LAYERBLEND3_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x190004 */
  __IO uint32_t PIXENG_LAYERBLEND3_STATICCONTROL;  /**< Static control settings., offset: 0x190008 */
  __IO uint32_t PIXENG_LAYERBLEND3_CONTROL;        /**< Common control settings., offset: 0x19000C */
  __IO uint32_t PIXENG_LAYERBLEND3_BLENDCONTROL;   /**< Options for blend operations, offset: 0x190010 */
  __IO uint32_t PIXENG_LAYERBLEND3_POSITION;       /**< Position of secondary (overlay) input frame, offset: 0x190014 */
  __I  uint32_t PIXENG_LAYERBLEND3_PRIMCONTROLWORD; /**< Value of last received primary (background) control word, for debugging, offset: 0x190018 */
  __I  uint32_t PIXENG_LAYERBLEND3_SECCONTROLWORD; /**< Value of last received secondary (overlay) control word, for debugging, offset: 0x19001C */
       uint8_t RESERVED_66[4064];
  __O  uint32_t PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x191000 */
  __I  uint32_t PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS; /**< Protection status of this address block., offset: 0x191004 */
  __IO uint32_t PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC; /**< Dynamic pixel engine configuration for layerblend3, offset: 0x191008 */
  __I  uint32_t PIXENG_LAYERBLEND3CFG_LAYERBLEND3_STATUS; /**< Status information for pixel engine configuration of layerblend3, offset: 0x19100C */
       uint8_t RESERVED_67[61424];
  __O  uint32_t PIXENG_LAYERBLEND4_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x1A0000 */
  __I  uint32_t PIXENG_LAYERBLEND4_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x1A0004 */
  __IO uint32_t PIXENG_LAYERBLEND4_STATICCONTROL;  /**< Static control settings., offset: 0x1A0008 */
  __IO uint32_t PIXENG_LAYERBLEND4_CONTROL;        /**< Common control settings., offset: 0x1A000C */
  __IO uint32_t PIXENG_LAYERBLEND4_BLENDCONTROL;   /**< Options for blend operations, offset: 0x1A0010 */
  __IO uint32_t PIXENG_LAYERBLEND4_POSITION;       /**< Position of secondary (overlay) input frame, offset: 0x1A0014 */
  __I  uint32_t PIXENG_LAYERBLEND4_PRIMCONTROLWORD; /**< Value of last received primary (background) control word, for debugging, offset: 0x1A0018 */
  __I  uint32_t PIXENG_LAYERBLEND4_SECCONTROLWORD; /**< Value of last received secondary (overlay) control word, for debugging, offset: 0x1A001C */
       uint8_t RESERVED_68[4064];
  __O  uint32_t PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x1A1000 */
  __I  uint32_t PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS; /**< Protection status of this address block., offset: 0x1A1004 */
  __IO uint32_t PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC; /**< Dynamic pixel engine configuration for layerblend4, offset: 0x1A1008 */
  __I  uint32_t PIXENG_LAYERBLEND4CFG_LAYERBLEND4_STATUS; /**< Status information for pixel engine configuration of layerblend4, offset: 0x1A100C */
       uint8_t RESERVED_69[61424];
  __O  uint32_t PIXENG_LAYERBLEND5_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x1B0000 */
  __I  uint32_t PIXENG_LAYERBLEND5_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x1B0004 */
  __IO uint32_t PIXENG_LAYERBLEND5_STATICCONTROL;  /**< Static control settings., offset: 0x1B0008 */
  __IO uint32_t PIXENG_LAYERBLEND5_CONTROL;        /**< Common control settings., offset: 0x1B000C */
  __IO uint32_t PIXENG_LAYERBLEND5_BLENDCONTROL;   /**< Options for blend operations, offset: 0x1B0010 */
  __IO uint32_t PIXENG_LAYERBLEND5_POSITION;       /**< Position of secondary (overlay) input frame, offset: 0x1B0014 */
  __I  uint32_t PIXENG_LAYERBLEND5_PRIMCONTROLWORD; /**< Value of last received primary (background) control word, for debugging, offset: 0x1B0018 */
  __I  uint32_t PIXENG_LAYERBLEND5_SECCONTROLWORD; /**< Value of last received secondary (overlay) control word, for debugging, offset: 0x1B001C */
       uint8_t RESERVED_70[4064];
  __O  uint32_t PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x1B1000 */
  __I  uint32_t PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS; /**< Protection status of this address block., offset: 0x1B1004 */
  __IO uint32_t PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC; /**< Dynamic pixel engine configuration for layerblend5, offset: 0x1B1008 */
  __I  uint32_t PIXENG_LAYERBLEND5CFG_LAYERBLEND5_STATUS; /**< Status information for pixel engine configuration of layerblend5, offset: 0x1B100C */
       uint8_t RESERVED_71[61424];
  __O  uint32_t PIXENG_LAYERBLEND6_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x1C0000 */
  __I  uint32_t PIXENG_LAYERBLEND6_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x1C0004 */
  __IO uint32_t PIXENG_LAYERBLEND6_STATICCONTROL;  /**< Static control settings., offset: 0x1C0008 */
  __IO uint32_t PIXENG_LAYERBLEND6_CONTROL;        /**< Common control settings., offset: 0x1C000C */
  __IO uint32_t PIXENG_LAYERBLEND6_BLENDCONTROL;   /**< Options for blend operations, offset: 0x1C0010 */
  __IO uint32_t PIXENG_LAYERBLEND6_POSITION;       /**< Position of secondary (overlay) input frame, offset: 0x1C0014 */
  __I  uint32_t PIXENG_LAYERBLEND6_PRIMCONTROLWORD; /**< Value of last received primary (background) control word, for debugging, offset: 0x1C0018 */
  __I  uint32_t PIXENG_LAYERBLEND6_SECCONTROLWORD; /**< Value of last received secondary (overlay) control word, for debugging, offset: 0x1C001C */
       uint8_t RESERVED_72[4064];
  __O  uint32_t PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x1C1000 */
  __I  uint32_t PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS; /**< Protection status of this address block., offset: 0x1C1004 */
  __IO uint32_t PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC; /**< Dynamic pixel engine configuration for layerblend6, offset: 0x1C1008 */
  __I  uint32_t PIXENG_LAYERBLEND6CFG_LAYERBLEND6_STATUS; /**< Status information for pixel engine configuration of layerblend6, offset: 0x1C100C */
       uint8_t RESERVED_73[61424];
  __O  uint32_t PIXENG_FETCHLAYER0_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x1D0000 */
  __I  uint32_t PIXENG_FETCHLAYER0_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x1D0004 */
  __IO uint32_t PIXENG_FETCHLAYER0_STATICCONTROL;  /**< Common static control options., offset: 0x1D0008 */
  __IO uint32_t PIXENG_FETCHLAYER0_SHDLDREQCONTROL; /**< Shadow load request flags for each layer. Static control options., offset: 0x1D000C */
  __IO uint32_t PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x1D0010 */
       uint8_t RESERVED_74[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS0;   /**< Source buffer base address of layer 0., offset: 0x1D0018 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x1D001C */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x1D0020 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x1D0024 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x1D0028 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x1D002C */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x1D0030 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x1D0034 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET0;   /**< Position of layer 0 within the destination frame., offset: 0x1D0038 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x1D003C */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x1D0040 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR0; /**< Constant color for layer 0., offset: 0x1D0044 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY0; /**< Common properties of layer 0., offset: 0x1D0048 */
       uint8_t RESERVED_75[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS1;   /**< Source buffer base address of layer 1., offset: 0x1D0050 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB1; /**< Source buffer base address of layer 1., offset: 0x1D0054 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS1; /**< Source buffer base address of layer 1., offset: 0x1D0058 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB1; /**< Source buffer base address of layer 1., offset: 0x1D005C */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1; /**< Source buffer attributes for layer 1., offset: 0x1D0060 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1; /**< Source buffer dimensions of layer 1., offset: 0x1D0064 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1; /**< Size of color components for RGB, YUV and index formats (layer 1)., offset: 0x1D0068 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1; /**< Bit position of color components for RGB, YUV and index formats (layer 1)., offset: 0x1D006C */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET1;   /**< Position of layer 1 within the destination frame., offset: 0x1D0070 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1; /**< Clip window position for layer 1., offset: 0x1D0074 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1; /**< Clip window size for layer 1., offset: 0x1D0078 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR1; /**< Constant color for layer 1., offset: 0x1D007C */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY1; /**< Common properties of layer 1., offset: 0x1D0080 */
       uint8_t RESERVED_76[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS2;   /**< Source buffer base address of layer 2., offset: 0x1D0088 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB2; /**< Source buffer base address of layer 2., offset: 0x1D008C */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS2; /**< Source buffer base address of layer 2., offset: 0x1D0090 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB2; /**< Source buffer base address of layer 2., offset: 0x1D0094 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2; /**< Source buffer attributes for layer 2., offset: 0x1D0098 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2; /**< Source buffer dimensions of layer 2., offset: 0x1D009C */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2; /**< Size of color components for RGB, YUV and index formats (layer 2)., offset: 0x1D00A0 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2; /**< Bit position of color components for RGB, YUV and index formats (layer 2)., offset: 0x1D00A4 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET2;   /**< Position of layer 2 within the destination frame., offset: 0x1D00A8 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2; /**< Clip window position for layer 2., offset: 0x1D00AC */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2; /**< Clip window size for layer 2., offset: 0x1D00B0 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR2; /**< Constant color for layer 2., offset: 0x1D00B4 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY2; /**< Common properties of layer 2., offset: 0x1D00B8 */
       uint8_t RESERVED_77[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS3;   /**< Source buffer base address of layer 3., offset: 0x1D00C0 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB3; /**< Source buffer base address of layer 3., offset: 0x1D00C4 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS3; /**< Source buffer base address of layer 3., offset: 0x1D00C8 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB3; /**< Source buffer base address of layer 3., offset: 0x1D00CC */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3; /**< Source buffer attributes for layer 3., offset: 0x1D00D0 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3; /**< Source buffer dimensions of layer 3., offset: 0x1D00D4 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3; /**< Size of color components for RGB, YUV and index formats (layer 3)., offset: 0x1D00D8 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3; /**< Bit position of color components for RGB, YUV and index formats (layer 3)., offset: 0x1D00DC */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET3;   /**< Position of layer 3 within the destination frame., offset: 0x1D00E0 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3; /**< Clip window position for layer 3., offset: 0x1D00E4 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3; /**< Clip window size for layer 3., offset: 0x1D00E8 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR3; /**< Constant color for layer 3., offset: 0x1D00EC */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY3; /**< Common properties of layer 3., offset: 0x1D00F0 */
       uint8_t RESERVED_78[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS4;   /**< Source buffer base address of layer 4., offset: 0x1D00F8 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB4; /**< Source buffer base address of layer 4., offset: 0x1D00FC */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS4; /**< Source buffer base address of layer 4., offset: 0x1D0100 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB4; /**< Source buffer base address of layer 4., offset: 0x1D0104 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4; /**< Source buffer attributes for layer 4., offset: 0x1D0108 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4; /**< Source buffer dimensions of layer 4., offset: 0x1D010C */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4; /**< Size of color components for RGB, YUV and index formats (layer 4)., offset: 0x1D0110 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4; /**< Bit position of color components for RGB, YUV and index formats (layer 4)., offset: 0x1D0114 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET4;   /**< Position of layer 4 within the destination frame., offset: 0x1D0118 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4; /**< Clip window position for layer 4., offset: 0x1D011C */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4; /**< Clip window size for layer 4., offset: 0x1D0120 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR4; /**< Constant color for layer 4., offset: 0x1D0124 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY4; /**< Common properties of layer 4., offset: 0x1D0128 */
       uint8_t RESERVED_79[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS5;   /**< Source buffer base address of layer 5., offset: 0x1D0130 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB5; /**< Source buffer base address of layer 5., offset: 0x1D0134 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS5; /**< Source buffer base address of layer 5., offset: 0x1D0138 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB5; /**< Source buffer base address of layer 5., offset: 0x1D013C */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5; /**< Source buffer attributes for layer 5., offset: 0x1D0140 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5; /**< Source buffer dimensions of layer 5., offset: 0x1D0144 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5; /**< Size of color components for RGB, YUV and index formats (layer 5)., offset: 0x1D0148 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5; /**< Bit position of color components for RGB, YUV and index formats (layer 5)., offset: 0x1D014C */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET5;   /**< Position of layer 5 within the destination frame., offset: 0x1D0150 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5; /**< Clip window position for layer 5., offset: 0x1D0154 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5; /**< Clip window size for layer 5., offset: 0x1D0158 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR5; /**< Constant color for layer 5., offset: 0x1D015C */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY5; /**< Common properties of layer 5., offset: 0x1D0160 */
       uint8_t RESERVED_80[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS6;   /**< Source buffer base address of layer 6., offset: 0x1D0168 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB6; /**< Source buffer base address of layer 6., offset: 0x1D016C */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS6; /**< Source buffer base address of layer 6., offset: 0x1D0170 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB6; /**< Source buffer base address of layer 6., offset: 0x1D0174 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6; /**< Source buffer attributes for layer 6., offset: 0x1D0178 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6; /**< Source buffer dimensions of layer 6., offset: 0x1D017C */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6; /**< Size of color components for RGB, YUV and index formats (layer 6)., offset: 0x1D0180 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6; /**< Bit position of color components for RGB, YUV and index formats (layer 6)., offset: 0x1D0184 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET6;   /**< Position of layer 6 within the destination frame., offset: 0x1D0188 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6; /**< Clip window position for layer 6., offset: 0x1D018C */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6; /**< Clip window size for layer 6., offset: 0x1D0190 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR6; /**< Constant color for layer 6., offset: 0x1D0194 */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY6; /**< Common properties of layer 6., offset: 0x1D0198 */
       uint8_t RESERVED_81[4];
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESS7;   /**< Source buffer base address of layer 7., offset: 0x1D01A0 */
  __IO uint32_t PIXENG_FETCHLAYER0_BASEADDRESSMSB7; /**< Source buffer base address of layer 7., offset: 0x1D01A4 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS7; /**< Source buffer base address of layer 7., offset: 0x1D01A8 */
  __IO uint32_t PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB7; /**< Source buffer base address of layer 7., offset: 0x1D01AC */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7; /**< Source buffer attributes for layer 7., offset: 0x1D01B0 */
  __IO uint32_t PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7; /**< Source buffer dimensions of layer 7., offset: 0x1D01B4 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7; /**< Size of color components for RGB, YUV and index formats (layer 7)., offset: 0x1D01B8 */
  __IO uint32_t PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7; /**< Bit position of color components for RGB, YUV and index formats (layer 7)., offset: 0x1D01BC */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYEROFFSET7;   /**< Position of layer 7 within the destination frame., offset: 0x1D01C0 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7; /**< Clip window position for layer 7., offset: 0x1D01C4 */
  __IO uint32_t PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7; /**< Clip window size for layer 7., offset: 0x1D01C8 */
  __IO uint32_t PIXENG_FETCHLAYER0_CONSTANTCOLOR7; /**< Constant color for layer 7., offset: 0x1D01CC */
  __IO uint32_t PIXENG_FETCHLAYER0_LAYERPROPERTY7; /**< Common properties of layer 7., offset: 0x1D01D0 */
       uint8_t RESERVED_82[4];
  __IO uint32_t PIXENG_FETCHLAYER0_FRAMEDIMENSIONS; /**< Output frame dimension., offset: 0x1D01D8 */
  __IO uint32_t PIXENG_FETCHLAYER0_FRAMERESAMPLING; /**< Resampling options for output frame., offset: 0x1D01DC */
  __IO uint32_t PIXENG_FETCHLAYER0_CONTROL;        /**< Shared common control settings for all layers., offset: 0x1D01E0 */
  __IO uint32_t PIXENG_FETCHLAYER0_TRIGGERENABLE;  /**< Shadow load enable flags for all layers., offset: 0x1D01E4 */
  __O  uint32_t PIXENG_FETCHLAYER0_CONTROLTRIGGER; /**< Shadow load trigger., offset: 0x1D01E8 */
  __O  uint32_t PIXENG_FETCHLAYER0_START;          /**< Frame start trigger., offset: 0x1D01EC */
  __I  uint32_t PIXENG_FETCHLAYER0_FETCHTYPE;      /**< Fetch unit type., offset: 0x1D01F0 */
       uint8_t RESERVED_83[4];
  __I  uint32_t PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x1D01F8 */
  __IO uint32_t PIXENG_FETCHLAYER0_STATUS;         /**< Status informations., offset: 0x1D01FC */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS0; /**< Current Working BaseAddress for layer 0., offset: 0x1D0200 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x1D0204 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS1; /**< Source buffer base address of layer 1., offset: 0x1D0208 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB1; /**< MSB bits of Current Working BaseAddress for layer 1., offset: 0x1D020C */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS2; /**< Source buffer base address of layer 2., offset: 0x1D0210 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB2; /**< MSB bits of Current Working BaseAddress for layer 2., offset: 0x1D0214 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS3; /**< Source buffer base address of layer 3., offset: 0x1D0218 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB3; /**< MSB bits of Current Working BaseAddress for layer 3., offset: 0x1D021C */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS4; /**< Source buffer base address of layer 4., offset: 0x1D0220 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB4; /**< MSB bits of Current Working BaseAddress for layer 4., offset: 0x1D0224 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS5; /**< Source buffer base address of layer 5., offset: 0x1D0228 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB5; /**< MSB bits of Current Working BaseAddress for layer 5., offset: 0x1D022C */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS6; /**< Source buffer base address of layer 6., offset: 0x1D0230 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB6; /**< MSB bits of Current Working BaseAddress for layer 6., offset: 0x1D0234 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESS7; /**< Source buffer base address of layer 7., offset: 0x1D0238 */
  __I  uint32_t PIXENG_FETCHLAYER0_CURBASEADDRESSMSB7; /**< MSB bits of Current Working BaseAddress for layer 7., offset: 0x1D023C */
  __I  uint32_t PIXENG_FETCHLAYER0_HIDDENSTATUS;   /**< Hidden status informations., offset: 0x1D0240 */
       uint8_t RESERVED_84[444];
  __IO uint32_t PIXENG_FETCHLAYER0_COLORPALETTE[DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORPALETTE_COUNT]; /**< Color palette look up table., array offset: 0x1D0400, array step: 0x4 */
       uint8_t RESERVED_85[2048];
  __O  uint32_t PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x1D1000 */
  __I  uint32_t PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS; /**< Protection status of this address block., offset: 0x1D1004 */
  __I  uint32_t PIXENG_FETCHLAYER0CFG_FETCHLAYER0_STATUS; /**< Status information for pixel engine configuration of fetchlayer0, offset: 0x1D1008 */
       uint8_t RESERVED_86[61428];
  __O  uint32_t PIXENG_FETCHLAYER1_LOCKUNLOCK;     /**< Register to change the protection status of this address block., offset: 0x1E0000 */
  __I  uint32_t PIXENG_FETCHLAYER1_LOCKSTATUS;     /**< Protection status of this address block., offset: 0x1E0004 */
  __IO uint32_t PIXENG_FETCHLAYER1_STATICCONTROL;  /**< Common static control options., offset: 0x1E0008 */
  __IO uint32_t PIXENG_FETCHLAYER1_SHDLDREQCONTROL; /**< Shadow load request flags for each layer. Static control options., offset: 0x1E000C */
  __IO uint32_t PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x1E0010 */
       uint8_t RESERVED_87[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS0;   /**< Source buffer base address of layer 0., offset: 0x1E0018 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x1E001C */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x1E0020 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x1E0024 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x1E0028 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x1E002C */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x1E0030 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x1E0034 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET0;   /**< Position of layer 0 within the destination frame., offset: 0x1E0038 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x1E003C */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x1E0040 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR0; /**< Constant color for layer 0., offset: 0x1E0044 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY0; /**< Common properties of layer 0., offset: 0x1E0048 */
       uint8_t RESERVED_88[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS1;   /**< Source buffer base address of layer 1., offset: 0x1E0050 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB1; /**< Source buffer base address of layer 1., offset: 0x1E0054 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS1; /**< Source buffer base address of layer 1., offset: 0x1E0058 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB1; /**< Source buffer base address of layer 1., offset: 0x1E005C */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1; /**< Source buffer attributes for layer 1., offset: 0x1E0060 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1; /**< Source buffer dimensions of layer 1., offset: 0x1E0064 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1; /**< Size of color components for RGB, YUV and index formats (layer 1)., offset: 0x1E0068 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1; /**< Bit position of color components for RGB, YUV and index formats (layer 1)., offset: 0x1E006C */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET1;   /**< Position of layer 1 within the destination frame., offset: 0x1E0070 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1; /**< Clip window position for layer 1., offset: 0x1E0074 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1; /**< Clip window size for layer 1., offset: 0x1E0078 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR1; /**< Constant color for layer 1., offset: 0x1E007C */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY1; /**< Common properties of layer 1., offset: 0x1E0080 */
       uint8_t RESERVED_89[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS2;   /**< Source buffer base address of layer 2., offset: 0x1E0088 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB2; /**< Source buffer base address of layer 2., offset: 0x1E008C */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS2; /**< Source buffer base address of layer 2., offset: 0x1E0090 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB2; /**< Source buffer base address of layer 2., offset: 0x1E0094 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2; /**< Source buffer attributes for layer 2., offset: 0x1E0098 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2; /**< Source buffer dimensions of layer 2., offset: 0x1E009C */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2; /**< Size of color components for RGB, YUV and index formats (layer 2)., offset: 0x1E00A0 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2; /**< Bit position of color components for RGB, YUV and index formats (layer 2)., offset: 0x1E00A4 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET2;   /**< Position of layer 2 within the destination frame., offset: 0x1E00A8 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2; /**< Clip window position for layer 2., offset: 0x1E00AC */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2; /**< Clip window size for layer 2., offset: 0x1E00B0 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR2; /**< Constant color for layer 2., offset: 0x1E00B4 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY2; /**< Common properties of layer 2., offset: 0x1E00B8 */
       uint8_t RESERVED_90[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS3;   /**< Source buffer base address of layer 3., offset: 0x1E00C0 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB3; /**< Source buffer base address of layer 3., offset: 0x1E00C4 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS3; /**< Source buffer base address of layer 3., offset: 0x1E00C8 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB3; /**< Source buffer base address of layer 3., offset: 0x1E00CC */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3; /**< Source buffer attributes for layer 3., offset: 0x1E00D0 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3; /**< Source buffer dimensions of layer 3., offset: 0x1E00D4 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3; /**< Size of color components for RGB, YUV and index formats (layer 3)., offset: 0x1E00D8 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3; /**< Bit position of color components for RGB, YUV and index formats (layer 3)., offset: 0x1E00DC */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET3;   /**< Position of layer 3 within the destination frame., offset: 0x1E00E0 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3; /**< Clip window position for layer 3., offset: 0x1E00E4 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3; /**< Clip window size for layer 3., offset: 0x1E00E8 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR3; /**< Constant color for layer 3., offset: 0x1E00EC */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY3; /**< Common properties of layer 3., offset: 0x1E00F0 */
       uint8_t RESERVED_91[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS4;   /**< Source buffer base address of layer 4., offset: 0x1E00F8 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB4; /**< Source buffer base address of layer 4., offset: 0x1E00FC */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS4; /**< Source buffer base address of layer 4., offset: 0x1E0100 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB4; /**< Source buffer base address of layer 4., offset: 0x1E0104 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4; /**< Source buffer attributes for layer 4., offset: 0x1E0108 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4; /**< Source buffer dimensions of layer 4., offset: 0x1E010C */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4; /**< Size of color components for RGB, YUV and index formats (layer 4)., offset: 0x1E0110 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4; /**< Bit position of color components for RGB, YUV and index formats (layer 4)., offset: 0x1E0114 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET4;   /**< Position of layer 4 within the destination frame., offset: 0x1E0118 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4; /**< Clip window position for layer 4., offset: 0x1E011C */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4; /**< Clip window size for layer 4., offset: 0x1E0120 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR4; /**< Constant color for layer 4., offset: 0x1E0124 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY4; /**< Common properties of layer 4., offset: 0x1E0128 */
       uint8_t RESERVED_92[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS5;   /**< Source buffer base address of layer 5., offset: 0x1E0130 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB5; /**< Source buffer base address of layer 5., offset: 0x1E0134 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS5; /**< Source buffer base address of layer 5., offset: 0x1E0138 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB5; /**< Source buffer base address of layer 5., offset: 0x1E013C */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5; /**< Source buffer attributes for layer 5., offset: 0x1E0140 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5; /**< Source buffer dimensions of layer 5., offset: 0x1E0144 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5; /**< Size of color components for RGB, YUV and index formats (layer 5)., offset: 0x1E0148 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5; /**< Bit position of color components for RGB, YUV and index formats (layer 5)., offset: 0x1E014C */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET5;   /**< Position of layer 5 within the destination frame., offset: 0x1E0150 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5; /**< Clip window position for layer 5., offset: 0x1E0154 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5; /**< Clip window size for layer 5., offset: 0x1E0158 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR5; /**< Constant color for layer 5., offset: 0x1E015C */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY5; /**< Common properties of layer 5., offset: 0x1E0160 */
       uint8_t RESERVED_93[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS6;   /**< Source buffer base address of layer 6., offset: 0x1E0168 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB6; /**< Source buffer base address of layer 6., offset: 0x1E016C */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS6; /**< Source buffer base address of layer 6., offset: 0x1E0170 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB6; /**< Source buffer base address of layer 6., offset: 0x1E0174 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6; /**< Source buffer attributes for layer 6., offset: 0x1E0178 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6; /**< Source buffer dimensions of layer 6., offset: 0x1E017C */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6; /**< Size of color components for RGB, YUV and index formats (layer 6)., offset: 0x1E0180 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6; /**< Bit position of color components for RGB, YUV and index formats (layer 6)., offset: 0x1E0184 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET6;   /**< Position of layer 6 within the destination frame., offset: 0x1E0188 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6; /**< Clip window position for layer 6., offset: 0x1E018C */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6; /**< Clip window size for layer 6., offset: 0x1E0190 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR6; /**< Constant color for layer 6., offset: 0x1E0194 */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY6; /**< Common properties of layer 6., offset: 0x1E0198 */
       uint8_t RESERVED_94[4];
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESS7;   /**< Source buffer base address of layer 7., offset: 0x1E01A0 */
  __IO uint32_t PIXENG_FETCHLAYER1_BASEADDRESSMSB7; /**< Source buffer base address of layer 7., offset: 0x1E01A4 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS7; /**< Source buffer base address of layer 7., offset: 0x1E01A8 */
  __IO uint32_t PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB7; /**< Source buffer base address of layer 7., offset: 0x1E01AC */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7; /**< Source buffer attributes for layer 7., offset: 0x1E01B0 */
  __IO uint32_t PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7; /**< Source buffer dimensions of layer 7., offset: 0x1E01B4 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7; /**< Size of color components for RGB, YUV and index formats (layer 7)., offset: 0x1E01B8 */
  __IO uint32_t PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7; /**< Bit position of color components for RGB, YUV and index formats (layer 7)., offset: 0x1E01BC */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYEROFFSET7;   /**< Position of layer 7 within the destination frame., offset: 0x1E01C0 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7; /**< Clip window position for layer 7., offset: 0x1E01C4 */
  __IO uint32_t PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7; /**< Clip window size for layer 7., offset: 0x1E01C8 */
  __IO uint32_t PIXENG_FETCHLAYER1_CONSTANTCOLOR7; /**< Constant color for layer 7., offset: 0x1E01CC */
  __IO uint32_t PIXENG_FETCHLAYER1_LAYERPROPERTY7; /**< Common properties of layer 7., offset: 0x1E01D0 */
       uint8_t RESERVED_95[4];
  __IO uint32_t PIXENG_FETCHLAYER1_FRAMEDIMENSIONS; /**< Output frame dimension., offset: 0x1E01D8 */
  __IO uint32_t PIXENG_FETCHLAYER1_FRAMERESAMPLING; /**< Resampling options for output frame., offset: 0x1E01DC */
  __IO uint32_t PIXENG_FETCHLAYER1_CONTROL;        /**< Shared common control settings for all layers., offset: 0x1E01E0 */
  __IO uint32_t PIXENG_FETCHLAYER1_TRIGGERENABLE;  /**< Shadow load enable flags for all layers., offset: 0x1E01E4 */
  __O  uint32_t PIXENG_FETCHLAYER1_CONTROLTRIGGER; /**< Shadow load trigger., offset: 0x1E01E8 */
  __O  uint32_t PIXENG_FETCHLAYER1_START;          /**< Frame start trigger., offset: 0x1E01EC */
  __I  uint32_t PIXENG_FETCHLAYER1_FETCHTYPE;      /**< Fetch unit type., offset: 0x1E01F0 */
       uint8_t RESERVED_96[4];
  __I  uint32_t PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x1E01F8 */
  __IO uint32_t PIXENG_FETCHLAYER1_STATUS;         /**< Status informations., offset: 0x1E01FC */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS0; /**< Current Working BaseAddress for layer 0., offset: 0x1E0200 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x1E0204 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS1; /**< Source buffer base address of layer 1., offset: 0x1E0208 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB1; /**< MSB bits of Current Working BaseAddress for layer 1., offset: 0x1E020C */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS2; /**< Source buffer base address of layer 2., offset: 0x1E0210 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB2; /**< MSB bits of Current Working BaseAddress for layer 2., offset: 0x1E0214 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS3; /**< Source buffer base address of layer 3., offset: 0x1E0218 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB3; /**< MSB bits of Current Working BaseAddress for layer 3., offset: 0x1E021C */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS4; /**< Source buffer base address of layer 4., offset: 0x1E0220 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB4; /**< MSB bits of Current Working BaseAddress for layer 4., offset: 0x1E0224 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS5; /**< Source buffer base address of layer 5., offset: 0x1E0228 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB5; /**< MSB bits of Current Working BaseAddress for layer 5., offset: 0x1E022C */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS6; /**< Source buffer base address of layer 6., offset: 0x1E0230 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB6; /**< MSB bits of Current Working BaseAddress for layer 6., offset: 0x1E0234 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESS7; /**< Source buffer base address of layer 7., offset: 0x1E0238 */
  __I  uint32_t PIXENG_FETCHLAYER1_CURBASEADDRESSMSB7; /**< MSB bits of Current Working BaseAddress for layer 7., offset: 0x1E023C */
  __I  uint32_t PIXENG_FETCHLAYER1_HIDDENSTATUS;   /**< Hidden status informations., offset: 0x1E0240 */
       uint8_t RESERVED_97[444];
  __IO uint32_t PIXENG_FETCHLAYER1_COLORPALETTE[DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORPALETTE_COUNT]; /**< Color palette look up table., array offset: 0x1E0400, array step: 0x4 */
       uint8_t RESERVED_98[2048];
  __O  uint32_t PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x1E1000 */
  __I  uint32_t PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS; /**< Protection status of this address block., offset: 0x1E1004 */
  __I  uint32_t PIXENG_FETCHLAYER1CFG_FETCHLAYER1_STATUS; /**< Status information for pixel engine configuration of fetchlayer1, offset: 0x1E1008 */
       uint8_t RESERVED_99[61428];
  __O  uint32_t PIXENG_FETCHYUV3_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x1F0000 */
  __I  uint32_t PIXENG_FETCHYUV3_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x1F0004 */
  __IO uint32_t PIXENG_FETCHYUV3_STATICCONTROL;    /**< Common static control options., offset: 0x1F0008 */
  __IO uint32_t PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x1F000C */
  __IO uint32_t PIXENG_FETCHYUV3_RINGBUFSTARTADDR0; /**< Ring buffer setup for layer 0., offset: 0x1F0010 */
  __IO uint32_t PIXENG_FETCHYUV3_RINGBUFSTARTADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x1F0014 */
  __IO uint32_t PIXENG_FETCHYUV3_RINGBUFWRAPADDR0; /**< Ring buffer setup for layer 0., offset: 0x1F0018 */
  __IO uint32_t PIXENG_FETCHYUV3_RINGBUFWRAPADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x1F001C */
  __IO uint32_t PIXENG_FETCHYUV3_FRAMEPROPERTIES0; /**< Frame property setup for layer 0., offset: 0x1F0020 */
       uint8_t RESERVED_100[4];
  __IO uint32_t PIXENG_FETCHYUV3_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x1F0028 */
  __IO uint32_t PIXENG_FETCHYUV3_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x1F002C */
  __IO uint32_t PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x1F0030 */
  __IO uint32_t PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x1F0034 */
  __IO uint32_t PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x1F0038 */
  __IO uint32_t PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x1F003C */
  __IO uint32_t PIXENG_FETCHYUV3_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x1F0040 */
  __IO uint32_t PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x1F0044 */
  __IO uint32_t PIXENG_FETCHYUV3_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x1F0048 */
  __IO uint32_t PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x1F004C */
  __IO uint32_t PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x1F0050 */
  __IO uint32_t PIXENG_FETCHYUV3_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x1F0054 */
  __IO uint32_t PIXENG_FETCHYUV3_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x1F0058 */
       uint8_t RESERVED_101[4];
  __IO uint32_t PIXENG_FETCHYUV3_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x1F0060 */
  __IO uint32_t PIXENG_FETCHYUV3_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x1F0064 */
  __IO uint32_t PIXENG_FETCHYUV3_CONTROL;          /**< Shared common control settings for all layers., offset: 0x1F0068 */
  __O  uint32_t PIXENG_FETCHYUV3_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x1F006C */
  __O  uint32_t PIXENG_FETCHYUV3_START;            /**< Frame start trigger., offset: 0x1F0070 */
  __I  uint32_t PIXENG_FETCHYUV3_FETCHTYPE;        /**< Fetch unit type., offset: 0x1F0074 */
  __I  uint32_t PIXENG_FETCHYUV3_READADDRESS0;     /**< Ring buffer synchronization for layer 0., offset: 0x1F0078 */
  __I  uint32_t PIXENG_FETCHYUV3_READADDRESSMSB0;  /**< Ring buffer synchronization for layer 0., offset: 0x1F007C */
  __I  uint32_t PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x1F0080 */
  __IO uint32_t PIXENG_FETCHYUV3_STATUS;           /**< Status informations., offset: 0x1F0084 */
  __I  uint32_t PIXENG_FETCHYUV3_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x1F0088 */
  __I  uint32_t PIXENG_FETCHYUV3_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x1F008C */
  __I  uint32_t PIXENG_FETCHYUV3_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x1F0090 */
       uint8_t RESERVED_102[3948];
  __O  uint32_t PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x1F1000 */
  __I  uint32_t PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS; /**< Protection status of this address block., offset: 0x1F1004 */
  __IO uint32_t PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC; /**< Dynamic pixel engine configuration for fetchyuv3, offset: 0x1F1008 */
  __I  uint32_t PIXENG_FETCHYUV3CFG_FETCHYUV3_STATUS; /**< Status information for pixel engine configuration of fetchyuv3, offset: 0x1F100C */
       uint8_t RESERVED_103[61424];
  __O  uint32_t PIXENG_FETCHYUV0_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x200000 */
  __I  uint32_t PIXENG_FETCHYUV0_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x200004 */
  __IO uint32_t PIXENG_FETCHYUV0_STATICCONTROL;    /**< Common static control options., offset: 0x200008 */
  __IO uint32_t PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x20000C */
  __IO uint32_t PIXENG_FETCHYUV0_RINGBUFSTARTADDR0; /**< Ring buffer setup for layer 0., offset: 0x200010 */
  __IO uint32_t PIXENG_FETCHYUV0_RINGBUFSTARTADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x200014 */
  __IO uint32_t PIXENG_FETCHYUV0_RINGBUFWRAPADDR0; /**< Ring buffer setup for layer 0., offset: 0x200018 */
  __IO uint32_t PIXENG_FETCHYUV0_RINGBUFWRAPADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x20001C */
  __IO uint32_t PIXENG_FETCHYUV0_FRAMEPROPERTIES0; /**< Frame property setup for layer 0., offset: 0x200020 */
       uint8_t RESERVED_104[4];
  __IO uint32_t PIXENG_FETCHYUV0_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x200028 */
  __IO uint32_t PIXENG_FETCHYUV0_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x20002C */
  __IO uint32_t PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x200030 */
  __IO uint32_t PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x200034 */
  __IO uint32_t PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x200038 */
  __IO uint32_t PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x20003C */
  __IO uint32_t PIXENG_FETCHYUV0_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x200040 */
  __IO uint32_t PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x200044 */
  __IO uint32_t PIXENG_FETCHYUV0_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x200048 */
  __IO uint32_t PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x20004C */
  __IO uint32_t PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x200050 */
  __IO uint32_t PIXENG_FETCHYUV0_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x200054 */
  __IO uint32_t PIXENG_FETCHYUV0_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x200058 */
       uint8_t RESERVED_105[4];
  __IO uint32_t PIXENG_FETCHYUV0_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x200060 */
  __IO uint32_t PIXENG_FETCHYUV0_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x200064 */
  __IO uint32_t PIXENG_FETCHYUV0_CONTROL;          /**< Shared common control settings for all layers., offset: 0x200068 */
  __O  uint32_t PIXENG_FETCHYUV0_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x20006C */
  __O  uint32_t PIXENG_FETCHYUV0_START;            /**< Frame start trigger., offset: 0x200070 */
  __I  uint32_t PIXENG_FETCHYUV0_FETCHTYPE;        /**< Fetch unit type., offset: 0x200074 */
  __I  uint32_t PIXENG_FETCHYUV0_READADDRESS0;     /**< Ring buffer synchronization for layer 0., offset: 0x200078 */
  __I  uint32_t PIXENG_FETCHYUV0_READADDRESSMSB0;  /**< Ring buffer synchronization for layer 0., offset: 0x20007C */
  __I  uint32_t PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x200080 */
  __IO uint32_t PIXENG_FETCHYUV0_STATUS;           /**< Status informations., offset: 0x200084 */
  __I  uint32_t PIXENG_FETCHYUV0_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x200088 */
  __I  uint32_t PIXENG_FETCHYUV0_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x20008C */
  __I  uint32_t PIXENG_FETCHYUV0_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x200090 */
       uint8_t RESERVED_106[3948];
  __O  uint32_t PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x201000 */
  __I  uint32_t PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS; /**< Protection status of this address block., offset: 0x201004 */
  __IO uint32_t PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC; /**< Dynamic pixel engine configuration for fetchyuv0, offset: 0x201008 */
  __I  uint32_t PIXENG_FETCHYUV0CFG_FETCHYUV0_STATUS; /**< Status information for pixel engine configuration of fetchyuv0, offset: 0x20100C */
       uint8_t RESERVED_107[61424];
  __O  uint32_t PIXENG_FETCHECO0_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x210000 */
  __I  uint32_t PIXENG_FETCHECO0_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x210004 */
  __IO uint32_t PIXENG_FETCHECO0_STATICCONTROL;    /**< Common static control options., offset: 0x210008 */
  __IO uint32_t PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x21000C */
  __IO uint32_t PIXENG_FETCHECO0_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x210010 */
  __IO uint32_t PIXENG_FETCHECO0_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x210014 */
  __IO uint32_t PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x210018 */
  __IO uint32_t PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x21001C */
  __IO uint32_t PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x210020 */
  __IO uint32_t PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x210024 */
  __IO uint32_t PIXENG_FETCHECO0_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x210028 */
  __IO uint32_t PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x21002C */
  __IO uint32_t PIXENG_FETCHECO0_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x210030 */
  __IO uint32_t PIXENG_FETCHECO0_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x210034 */
  __IO uint32_t PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x210038 */
  __IO uint32_t PIXENG_FETCHECO0_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x21003C */
  __IO uint32_t PIXENG_FETCHECO0_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x210040 */
       uint8_t RESERVED_108[4];
  __IO uint32_t PIXENG_FETCHECO0_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x210048 */
  __IO uint32_t PIXENG_FETCHECO0_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x21004C */
  __IO uint32_t PIXENG_FETCHECO0_CONTROL;          /**< Shared common control settings for all layers., offset: 0x210050 */
  __O  uint32_t PIXENG_FETCHECO0_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x210054 */
  __O  uint32_t PIXENG_FETCHECO0_START;            /**< Frame start trigger., offset: 0x210058 */
  __I  uint32_t PIXENG_FETCHECO0_FETCHTYPE;        /**< Fetch unit type., offset: 0x21005C */
  __I  uint32_t PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x210060 */
       uint8_t RESERVED_109[4];
  __I  uint32_t PIXENG_FETCHECO0_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x210068 */
  __I  uint32_t PIXENG_FETCHECO0_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x21006C */
  __I  uint32_t PIXENG_FETCHECO0_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x210070 */
       uint8_t RESERVED_110[3980];
  __O  uint32_t PIXENG_FETCHECO0CFG_FETCHECO0_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x211000 */
  __I  uint32_t PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS; /**< Protection status of this address block., offset: 0x211004 */
  __I  uint32_t PIXENG_FETCHECO0CFG_FETCHECO0_STATUS; /**< Status information for pixel engine configuration of fetcheco0, offset: 0x211008 */
       uint8_t RESERVED_111[61428];
  __O  uint32_t PIXENG_FETCHYUV1_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x220000 */
  __I  uint32_t PIXENG_FETCHYUV1_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x220004 */
  __IO uint32_t PIXENG_FETCHYUV1_STATICCONTROL;    /**< Common static control options., offset: 0x220008 */
  __IO uint32_t PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x22000C */
  __IO uint32_t PIXENG_FETCHYUV1_RINGBUFSTARTADDR0; /**< Ring buffer setup for layer 0., offset: 0x220010 */
  __IO uint32_t PIXENG_FETCHYUV1_RINGBUFSTARTADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x220014 */
  __IO uint32_t PIXENG_FETCHYUV1_RINGBUFWRAPADDR0; /**< Ring buffer setup for layer 0., offset: 0x220018 */
  __IO uint32_t PIXENG_FETCHYUV1_RINGBUFWRAPADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x22001C */
  __IO uint32_t PIXENG_FETCHYUV1_FRAMEPROPERTIES0; /**< Frame property setup for layer 0., offset: 0x220020 */
       uint8_t RESERVED_112[4];
  __IO uint32_t PIXENG_FETCHYUV1_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x220028 */
  __IO uint32_t PIXENG_FETCHYUV1_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x22002C */
  __IO uint32_t PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x220030 */
  __IO uint32_t PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x220034 */
  __IO uint32_t PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x220038 */
  __IO uint32_t PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x22003C */
  __IO uint32_t PIXENG_FETCHYUV1_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x220040 */
  __IO uint32_t PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x220044 */
  __IO uint32_t PIXENG_FETCHYUV1_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x220048 */
  __IO uint32_t PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x22004C */
  __IO uint32_t PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x220050 */
  __IO uint32_t PIXENG_FETCHYUV1_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x220054 */
  __IO uint32_t PIXENG_FETCHYUV1_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x220058 */
       uint8_t RESERVED_113[4];
  __IO uint32_t PIXENG_FETCHYUV1_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x220060 */
  __IO uint32_t PIXENG_FETCHYUV1_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x220064 */
  __IO uint32_t PIXENG_FETCHYUV1_CONTROL;          /**< Shared common control settings for all layers., offset: 0x220068 */
  __O  uint32_t PIXENG_FETCHYUV1_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x22006C */
  __O  uint32_t PIXENG_FETCHYUV1_START;            /**< Frame start trigger., offset: 0x220070 */
  __I  uint32_t PIXENG_FETCHYUV1_FETCHTYPE;        /**< Fetch unit type., offset: 0x220074 */
  __I  uint32_t PIXENG_FETCHYUV1_READADDRESS0;     /**< Ring buffer synchronization for layer 0., offset: 0x220078 */
  __I  uint32_t PIXENG_FETCHYUV1_READADDRESSMSB0;  /**< Ring buffer synchronization for layer 0., offset: 0x22007C */
  __I  uint32_t PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x220080 */
  __IO uint32_t PIXENG_FETCHYUV1_STATUS;           /**< Status informations., offset: 0x220084 */
  __I  uint32_t PIXENG_FETCHYUV1_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x220088 */
  __I  uint32_t PIXENG_FETCHYUV1_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x22008C */
  __I  uint32_t PIXENG_FETCHYUV1_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x220090 */
       uint8_t RESERVED_114[3948];
  __O  uint32_t PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x221000 */
  __I  uint32_t PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS; /**< Protection status of this address block., offset: 0x221004 */
  __IO uint32_t PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC; /**< Dynamic pixel engine configuration for fetchyuv1, offset: 0x221008 */
  __I  uint32_t PIXENG_FETCHYUV1CFG_FETCHYUV1_STATUS; /**< Status information for pixel engine configuration of fetchyuv1, offset: 0x22100C */
       uint8_t RESERVED_115[61424];
  __O  uint32_t PIXENG_FETCHECO1_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x230000 */
  __I  uint32_t PIXENG_FETCHECO1_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x230004 */
  __IO uint32_t PIXENG_FETCHECO1_STATICCONTROL;    /**< Common static control options., offset: 0x230008 */
  __IO uint32_t PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x23000C */
  __IO uint32_t PIXENG_FETCHECO1_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x230010 */
  __IO uint32_t PIXENG_FETCHECO1_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x230014 */
  __IO uint32_t PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x230018 */
  __IO uint32_t PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x23001C */
  __IO uint32_t PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x230020 */
  __IO uint32_t PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x230024 */
  __IO uint32_t PIXENG_FETCHECO1_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x230028 */
  __IO uint32_t PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x23002C */
  __IO uint32_t PIXENG_FETCHECO1_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x230030 */
  __IO uint32_t PIXENG_FETCHECO1_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x230034 */
  __IO uint32_t PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x230038 */
  __IO uint32_t PIXENG_FETCHECO1_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x23003C */
  __IO uint32_t PIXENG_FETCHECO1_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x230040 */
       uint8_t RESERVED_116[4];
  __IO uint32_t PIXENG_FETCHECO1_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x230048 */
  __IO uint32_t PIXENG_FETCHECO1_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x23004C */
  __IO uint32_t PIXENG_FETCHECO1_CONTROL;          /**< Shared common control settings for all layers., offset: 0x230050 */
  __O  uint32_t PIXENG_FETCHECO1_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x230054 */
  __O  uint32_t PIXENG_FETCHECO1_START;            /**< Frame start trigger., offset: 0x230058 */
  __I  uint32_t PIXENG_FETCHECO1_FETCHTYPE;        /**< Fetch unit type., offset: 0x23005C */
  __I  uint32_t PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x230060 */
       uint8_t RESERVED_117[4];
  __I  uint32_t PIXENG_FETCHECO1_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x230068 */
  __I  uint32_t PIXENG_FETCHECO1_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x23006C */
  __I  uint32_t PIXENG_FETCHECO1_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x230070 */
       uint8_t RESERVED_118[3980];
  __O  uint32_t PIXENG_FETCHECO1CFG_FETCHECO1_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x231000 */
  __I  uint32_t PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS; /**< Protection status of this address block., offset: 0x231004 */
  __I  uint32_t PIXENG_FETCHECO1CFG_FETCHECO1_STATUS; /**< Status information for pixel engine configuration of fetcheco1, offset: 0x231008 */
       uint8_t RESERVED_119[61428];
  __O  uint32_t PIXENG_FETCHYUV2_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x240000 */
  __I  uint32_t PIXENG_FETCHYUV2_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x240004 */
  __IO uint32_t PIXENG_FETCHYUV2_STATICCONTROL;    /**< Common static control options., offset: 0x240008 */
  __IO uint32_t PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x24000C */
  __IO uint32_t PIXENG_FETCHYUV2_RINGBUFSTARTADDR0; /**< Ring buffer setup for layer 0., offset: 0x240010 */
  __IO uint32_t PIXENG_FETCHYUV2_RINGBUFSTARTADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x240014 */
  __IO uint32_t PIXENG_FETCHYUV2_RINGBUFWRAPADDR0; /**< Ring buffer setup for layer 0., offset: 0x240018 */
  __IO uint32_t PIXENG_FETCHYUV2_RINGBUFWRAPADDRMSB0; /**< Ring buffer setup for layer 0., offset: 0x24001C */
  __IO uint32_t PIXENG_FETCHYUV2_FRAMEPROPERTIES0; /**< Frame property setup for layer 0., offset: 0x240020 */
       uint8_t RESERVED_120[4];
  __IO uint32_t PIXENG_FETCHYUV2_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x240028 */
  __IO uint32_t PIXENG_FETCHYUV2_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x24002C */
  __IO uint32_t PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x240030 */
  __IO uint32_t PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x240034 */
  __IO uint32_t PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x240038 */
  __IO uint32_t PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x24003C */
  __IO uint32_t PIXENG_FETCHYUV2_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x240040 */
  __IO uint32_t PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x240044 */
  __IO uint32_t PIXENG_FETCHYUV2_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x240048 */
  __IO uint32_t PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x24004C */
  __IO uint32_t PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x240050 */
  __IO uint32_t PIXENG_FETCHYUV2_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x240054 */
  __IO uint32_t PIXENG_FETCHYUV2_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x240058 */
       uint8_t RESERVED_121[4];
  __IO uint32_t PIXENG_FETCHYUV2_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x240060 */
  __IO uint32_t PIXENG_FETCHYUV2_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x240064 */
  __IO uint32_t PIXENG_FETCHYUV2_CONTROL;          /**< Shared common control settings for all layers., offset: 0x240068 */
  __O  uint32_t PIXENG_FETCHYUV2_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x24006C */
  __O  uint32_t PIXENG_FETCHYUV2_START;            /**< Frame start trigger., offset: 0x240070 */
  __I  uint32_t PIXENG_FETCHYUV2_FETCHTYPE;        /**< Fetch unit type., offset: 0x240074 */
  __I  uint32_t PIXENG_FETCHYUV2_READADDRESS0;     /**< Ring buffer synchronization for layer 0., offset: 0x240078 */
  __I  uint32_t PIXENG_FETCHYUV2_READADDRESSMSB0;  /**< Ring buffer synchronization for layer 0., offset: 0x24007C */
  __I  uint32_t PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x240080 */
  __IO uint32_t PIXENG_FETCHYUV2_STATUS;           /**< Status informations., offset: 0x240084 */
  __I  uint32_t PIXENG_FETCHYUV2_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x240088 */
  __I  uint32_t PIXENG_FETCHYUV2_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x24008C */
  __I  uint32_t PIXENG_FETCHYUV2_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x240090 */
       uint8_t RESERVED_122[3948];
  __O  uint32_t PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x241000 */
  __I  uint32_t PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS; /**< Protection status of this address block., offset: 0x241004 */
  __IO uint32_t PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC; /**< Dynamic pixel engine configuration for fetchyuv2, offset: 0x241008 */
  __I  uint32_t PIXENG_FETCHYUV2CFG_FETCHYUV2_STATUS; /**< Status information for pixel engine configuration of fetchyuv2, offset: 0x24100C */
       uint8_t RESERVED_123[61424];
  __O  uint32_t PIXENG_FETCHECO2_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x250000 */
  __I  uint32_t PIXENG_FETCHECO2_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x250004 */
  __IO uint32_t PIXENG_FETCHECO2_STATICCONTROL;    /**< Common static control options., offset: 0x250008 */
  __IO uint32_t PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT; /**< AXI interface buffer management register, offset: 0x25000C */
  __IO uint32_t PIXENG_FETCHECO2_BASEADDRESS0;     /**< Source buffer base address of layer 0., offset: 0x250010 */
  __IO uint32_t PIXENG_FETCHECO2_BASEADDRESSMSB0;  /**< Source buffer base address of layer 0., offset: 0x250014 */
  __IO uint32_t PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESS0; /**< Source buffer base address of layer 0., offset: 0x250018 */
  __IO uint32_t PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESSMSB0; /**< Source buffer base address of layer 0., offset: 0x25001C */
  __IO uint32_t PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0; /**< Source buffer attributes for layer 0., offset: 0x250020 */
  __IO uint32_t PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0; /**< Source buffer dimension of layer 0., offset: 0x250024 */
  __IO uint32_t PIXENG_FETCHECO2_COLORCOMPONENTBITS0; /**< Size of color components for RGB, YUV and index formats (layer 0)., offset: 0x250028 */
  __IO uint32_t PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0; /**< Bit position of color components for RGB, YUV and index formats (layer 0)., offset: 0x25002C */
  __IO uint32_t PIXENG_FETCHECO2_LAYEROFFSET0;     /**< Position of layer 0 within the destination frame., offset: 0x250030 */
  __IO uint32_t PIXENG_FETCHECO2_CLIPWINDOWOFFSET0; /**< Clip window position for layer 0., offset: 0x250034 */
  __IO uint32_t PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0; /**< Clip window size for layer 0., offset: 0x250038 */
  __IO uint32_t PIXENG_FETCHECO2_CONSTANTCOLOR0;   /**< Constant color for layer 0., offset: 0x25003C */
  __IO uint32_t PIXENG_FETCHECO2_LAYERPROPERTY0;   /**< Common properties of layer 0., offset: 0x250040 */
       uint8_t RESERVED_124[4];
  __IO uint32_t PIXENG_FETCHECO2_FRAMEDIMENSIONS;  /**< Output frame dimension., offset: 0x250048 */
  __IO uint32_t PIXENG_FETCHECO2_FRAMERESAMPLING;  /**< Resampling options for output frame., offset: 0x25004C */
  __IO uint32_t PIXENG_FETCHECO2_CONTROL;          /**< Shared common control settings for all layers., offset: 0x250050 */
  __O  uint32_t PIXENG_FETCHECO2_CONTROLTRIGGER;   /**< Shadow load trigger., offset: 0x250054 */
  __O  uint32_t PIXENG_FETCHECO2_START;            /**< Frame start trigger., offset: 0x250058 */
  __I  uint32_t PIXENG_FETCHECO2_FETCHTYPE;        /**< Fetch unit type., offset: 0x25005C */
  __I  uint32_t PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES; /**< Burst buffer properties., offset: 0x250060 */
       uint8_t RESERVED_125[4];
  __I  uint32_t PIXENG_FETCHECO2_CURBASEADDRESS0;  /**< Current Working BaseAddress for layer 0., offset: 0x250068 */
  __I  uint32_t PIXENG_FETCHECO2_CURBASEADDRESSMSB0; /**< MSB bits of Current Working BaseAddress for layer 0., offset: 0x25006C */
  __I  uint32_t PIXENG_FETCHECO2_HIDDENSTATUS;     /**< Hidden status informations., offset: 0x250070 */
       uint8_t RESERVED_126[3980];
  __O  uint32_t PIXENG_FETCHECO2CFG_FETCHECO2_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x251000 */
  __I  uint32_t PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS; /**< Protection status of this address block., offset: 0x251004 */
  __I  uint32_t PIXENG_FETCHECO2CFG_FETCHECO2_STATUS; /**< Status information for pixel engine configuration of fetcheco2, offset: 0x251008 */
       uint8_t RESERVED_127[61428];
  __O  uint32_t PIXENG_MATRIX4_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x260000 */
  __I  uint32_t PIXENG_MATRIX4_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x260004 */
  __IO uint32_t PIXENG_MATRIX4_STATICCONTROL;      /**< Color Matrix static control register, offset: 0x260008 */
  __IO uint32_t PIXENG_MATRIX4_CONTROL;            /**< Color Matrix control register, offset: 0x26000C */
  __IO uint32_t PIXENG_MATRIX4_RED0;               /**< Matrix values for calculation of the red output value., offset: 0x260010 */
  __IO uint32_t PIXENG_MATRIX4_RED1;               /**< Matrix values for calculation of the red output value., offset: 0x260014 */
  __IO uint32_t PIXENG_MATRIX4_GREEN0;             /**< Matrix values for calculation of the green output value., offset: 0x260018 */
  __IO uint32_t PIXENG_MATRIX4_GREEN1;             /**< Matrix values for calculation of the green output value., offset: 0x26001C */
  __IO uint32_t PIXENG_MATRIX4_BLUE0;              /**< Matrix values for calculation of the blue output value., offset: 0x260020 */
  __IO uint32_t PIXENG_MATRIX4_BLUE1;              /**< Matrix values for calculation of the blue output value., offset: 0x260024 */
  __IO uint32_t PIXENG_MATRIX4_ALPHA0;             /**< Matrix values for calculation of the alpha output value., offset: 0x260028 */
  __IO uint32_t PIXENG_MATRIX4_ALPHA1;             /**< Matrix values for calculation of the alpha output value., offset: 0x26002C */
  __IO uint32_t PIXENG_MATRIX4_OFFSETVECTOR0;      /**< Offset vectors for red and green output., offset: 0x260030 */
  __IO uint32_t PIXENG_MATRIX4_OFFSETVECTOR1;      /**< Offset vectors for blue and alpha output., offset: 0x260034 */
  __I  uint32_t PIXENG_MATRIX4_LASTCONTROLWORD;    /**< Value of last received control word, for debugging., offset: 0x260038 */
       uint8_t RESERVED_128[4036];
  __O  uint32_t PIXENG_MATRIX4CFG_MATRIX4_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x261000 */
  __I  uint32_t PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS; /**< Protection status of this address block., offset: 0x261004 */
  __IO uint32_t PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC; /**< Dynamic pixel engine configuration for matrix4, offset: 0x261008 */
  __I  uint32_t PIXENG_MATRIX4CFG_MATRIX4_STATUS;  /**< Status information for pixel engine configuration of matrix4, offset: 0x26100C */
       uint8_t RESERVED_129[61424];
  __O  uint32_t PIXENG_HSCALER4_LOCKUNLOCK;        /**< Register to change the protection status of this address block., offset: 0x270000 */
  __I  uint32_t PIXENG_HSCALER4_LOCKSTATUS;        /**< Protection status of this address block., offset: 0x270004 */
  __IO uint32_t PIXENG_HSCALER4_STATICCONTROL;     /**< Static control settings that must typically be setup once only., offset: 0x270008 */
  __IO uint32_t PIXENG_HSCALER4_SETUP1;            /**< Phase interpolator setup., offset: 0x27000C */
  __IO uint32_t PIXENG_HSCALER4_SETUP2;            /**< Phase interpolator setup., offset: 0x270010 */
  __IO uint32_t PIXENG_HSCALER4_CONTROL;           /**< Scaler operation control., offset: 0x270014 */
       uint8_t RESERVED_130[4072];
  __O  uint32_t PIXENG_HSCALER4CFG_HSCALER4_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x271000 */
  __I  uint32_t PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS; /**< Protection status of this address block., offset: 0x271004 */
  __IO uint32_t PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC; /**< Dynamic pixel engine configuration for hscaler4, offset: 0x271008 */
  __I  uint32_t PIXENG_HSCALER4CFG_HSCALER4_STATUS; /**< Status information for pixel engine configuration of hscaler4, offset: 0x27100C */
       uint8_t RESERVED_131[61424];
  __O  uint32_t PIXENG_VSCALER4_LOCKUNLOCK;        /**< Register to change the protection status of this address block., offset: 0x280000 */
  __I  uint32_t PIXENG_VSCALER4_LOCKSTATUS;        /**< Protection status of this address block., offset: 0x280004 */
  __IO uint32_t PIXENG_VSCALER4_STATICCONTROL;     /**< Static control settings that must typically be setup once only., offset: 0x280008 */
  __IO uint32_t PIXENG_VSCALER4_SETUP1;            /**< Phase interpolator setup., offset: 0x28000C */
  __IO uint32_t PIXENG_VSCALER4_SETUP2;            /**< Phase interpolator setup, selected if input and output field polarity is 0., offset: 0x280010 */
  __IO uint32_t PIXENG_VSCALER4_CONTROL;           /**< Scaler operation control., offset: 0x280014 */
       uint8_t RESERVED_132[4072];
  __O  uint32_t PIXENG_VSCALER4CFG_VSCALER4_LOCKUNLOCK; /**< Register to change the protection status of this address block., offset: 0x281000 */
  __I  uint32_t PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS; /**< Protection status of this address block., offset: 0x281004 */
  __IO uint32_t PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC; /**< Dynamic pixel engine configuration for vscaler4, offset: 0x281008 */
  __I  uint32_t PIXENG_VSCALER4CFG_VSCALER4_STATUS; /**< Status information for pixel engine configuration of vscaler4, offset: 0x28100C */
       uint8_t RESERVED_133[126960];
  __O  uint32_t DISENG_DOMAINBLEND0_LOCKUNLOCK;    /**< Register to change the protection status of this address block., offset: 0x2A0000 */
  __I  uint32_t DISENG_DOMAINBLEND0_LOCKSTATUS;    /**< Protection status of this address block., offset: 0x2A0004 */
  __IO uint32_t DISENG_DOMAINBLEND0_STATICCONTROL; /**< Static control settings., offset: 0x2A0008 */
  __O  uint32_t DISENG_DOMAINBLEND0_CONTROLTRIGGER; /**< Shadow load and sequence complete triggers., offset: 0x2A000C */
  __IO uint32_t DISENG_DOMAINBLEND0_MODECONTROL;   /**< Operation mode of the domainblend, offset: 0x2A0010 */
  __IO uint32_t DISENG_DOMAINBLEND0_ALPHACONTROL;  /**< Alpha mask settings., offset: 0x2A0014 */
  __IO uint32_t DISENG_DOMAINBLEND0_BLENDCONTROL;  /**< Options for blend operations, offset: 0x2A0018 */
  __I  uint32_t DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK; /**< The status of primary and secondary sources waiting for pixels., offset: 0x2A001C */
  __O  uint32_t DISENG_DOMAINBLEND0_LOCKUP_CLEAR;  /**< The register can be used to internally reset domainblend if it gets stuck by pending pixels from one source., offset: 0x2A0020 */
  __IO uint32_t DISENG_DOMAINBLEND0_DELAY_COUNTER_EN; /**< The register enables the delay and error counters that report on the delay on prim and sec sources., offset: 0x2A0024 */
  __I  uint32_t DISENG_DOMAINBLEND0_DELAY_COUNTER_PRIM; /**< The number of inavtive clock cycles during which the domainblend is waiting for pixels from primary source., offset: 0x2A0028 */
  __I  uint32_t DISENG_DOMAINBLEND0_DELAY_COUNTER_SEC; /**< The number of inavtive clock cycles during which the domainblend is waiting for pixels from secondary source., offset: 0x2A002C */
  __I  uint32_t DISENG_DOMAINBLEND0_ERROR_COUNTER_PRIM; /**< The number of inavtive clock cycles on the primary source till the synchronization loss of domainblend., offset: 0x2A0030 */
  __I  uint32_t DISENG_DOMAINBLEND0_ERROR_COUNTER_SEC; /**< The number of inavtive clock cycles on the secondary source till the synchronization loss of domainblend., offset: 0x2A0034 */
  __I  uint32_t DISENG_DOMAINBLEND0_SOURCE_STATUS; /**< Source protocol error detection for primary and secondary sources, offset: 0x2A0038 */
  __O  uint32_t DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR; /**< Clearing source protocol error status for both primary and secondary sources, offset: 0x2A003C */
  __I  uint32_t DISENG_DOMAINBLEND0_PRIMCONTROLWORD; /**< Value of last received primary control word, for debugging, offset: 0x2A0040 */
  __I  uint32_t DISENG_DOMAINBLEND0_SECCONTROLWORD; /**< Value of last received secondary control word, for debugging, offset: 0x2A0044 */
       uint8_t RESERVED_134[65464];
  __O  uint32_t DISENG_FRAMEGEN0_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x2B0000 */
  __I  uint32_t DISENG_FRAMEGEN0_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x2B0004 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSTCTRL;         /**< FrameGen Static Control Register, offset: 0x2B0008 */
  __IO uint32_t DISENG_FRAMEGEN0_HTCFG1;           /**< FrameGen Horizontal Timing Config Register 1, offset: 0x2B000C */
  __IO uint32_t DISENG_FRAMEGEN0_HTCFG2;           /**< FrameGen Horizontal Timing Config Register 2, offset: 0x2B0010 */
  __IO uint32_t DISENG_FRAMEGEN0_VTCFG1;           /**< FrameGen Vertical Timing Config Register 1, offset: 0x2B0014 */
  __IO uint32_t DISENG_FRAMEGEN0_VTCFG2;           /**< FrameGen Vertical Timing Config Register 2, offset: 0x2B0018 */
  __IO uint32_t DISENG_FRAMEGEN0_INT0CONFIG;       /**< Coordinates of the trigger point for generation of the Int0 interrupt signal, offset: 0x2B001C */
  __IO uint32_t DISENG_FRAMEGEN0_INT1CONFIG;       /**< Coordinates of the trigger point for generation of the Int1 interrupt signal, offset: 0x2B0020 */
  __IO uint32_t DISENG_FRAMEGEN0_INT2CONFIG;       /**< Coordinates of the trigger point for generation of the Int2 interrupt signal, offset: 0x2B0024 */
  __IO uint32_t DISENG_FRAMEGEN0_INT3CONFIG;       /**< Coordinates of the trigger point for generation of the Int3 interrupt signal, offset: 0x2B0028 */
  __IO uint32_t DISENG_FRAMEGEN0_PKICKCONFIG;      /**< Coordinates of the trigger point for generation of the primary kick signal, offset: 0x2B002C */
  __IO uint32_t DISENG_FRAMEGEN0_SKICKCONFIG;      /**< Coordinates of the trigger point for generation of the secondary kick signal, offset: 0x2B0030 */
  __IO uint32_t DISENG_FRAMEGEN0_SECSTATCONFIG;    /**< Configuration register for controlling the behaviour of the SecSyncStat field in the FgSecChStat register., offset: 0x2B0034 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR1;          /**< FrameGen Skew Regulation Control Register 1., offset: 0x2B0038 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR2;          /**< FrameGen Skew Regulation Control Register 2, offset: 0x2B003C */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR3;          /**< FrameGen Skew Regulation Control Register 3, offset: 0x2B0040 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR4;          /**< FrameGen Skew Regulation Control Register 4, offset: 0x2B0044 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR5;          /**< FrameGen Skew Regulation Control Register 5, offset: 0x2B0048 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR6;          /**< FrameGen Skew Regulation Control Register 6, offset: 0x2B004C */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR7;          /**< FrameGen Skew Regulation Control Register 7, offset: 0x2B0050 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR8;          /**< FrameGen Skew Regulation Control Register 8, offset: 0x2B0054 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR9;          /**< FrameGen Skew Regulation Control Register 9, offset: 0x2B0058 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR10;         /**< FrameGen Skew Regulation Control Register 10, offset: 0x2B005C */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR11;         /**< FrameGen Skew Regulation Control Register 11, offset: 0x2B0060 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR12;         /**< FrameGen Skew Regulation Control Register 12, offset: 0x2B0064 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR13;         /**< FrameGen Skew Regulation Control Register 13, offset: 0x2B0068 */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR14;         /**< FrameGen Skew Regulation Control Register 14, offset: 0x2B006C */
  __IO uint32_t DISENG_FRAMEGEN0_FGSRCR15;         /**< FrameGen Skew Regulation Control Register 15, offset: 0x2B0070 */
  __IO uint32_t DISENG_FRAMEGEN0_FGKSDR;           /**< FrameGen Kick System Debug Register, offset: 0x2B0074 */
  __IO uint32_t DISENG_FRAMEGEN0_PACFG;            /**< FrameGen Primary Area Config Register 1 (shadowed), offset: 0x2B0078 */
  __IO uint32_t DISENG_FRAMEGEN0_SACFG;            /**< FrameGen Secondary Area Config Register 1 (shadowed), offset: 0x2B007C */
  __IO uint32_t DISENG_FRAMEGEN0_FGINCTRL;         /**< FrameGen Input Control Register (shadowed), offset: 0x2B0080 */
  __IO uint32_t DISENG_FRAMEGEN0_FGINCTRLPANIC;    /**< FrameGen Input Control Panic Register (shadowed), offset: 0x2B0084 */
  __IO uint32_t DISENG_FRAMEGEN0_FGCCR;            /**< FrameGen Constant Color Register (shadowed), offset: 0x2B0088 */
  __IO uint32_t DISENG_FRAMEGEN0_FGENABLE;         /**< FrameGen Enable Register, offset: 0x2B008C */
  __O  uint32_t DISENG_FRAMEGEN0_FGSLR;            /**< FrameGen Shadow Load Register, offset: 0x2B0090 */
  __I  uint32_t DISENG_FRAMEGEN0_FGENSTS;          /**< FrameGen Enable Status Register, offset: 0x2B0094 */
  __I  uint32_t DISENG_FRAMEGEN0_FGTIMESTAMP;      /**< Time stamp status., offset: 0x2B0098 */
  __I  uint32_t DISENG_FRAMEGEN0_FGCHSTAT;         /**< FrameGen Channel Status Register, offset: 0x2B009C */
  __O  uint32_t DISENG_FRAMEGEN0_FGCHSTATCLR;      /**< FrameGen Channel Status Clear Register, offset: 0x2B00A0 */
  __I  uint32_t DISENG_FRAMEGEN0_FGSKEWMON;        /**< FrameGen Skew Monitor Register for Secondary Channel Skew Control, offset: 0x2B00A4 */
  __I  uint32_t DISENG_FRAMEGEN0_FGPFIFOMIN;       /**< FrameGen Primary FIFO Min Fill Register, offset: 0x2B00A8 */
  __I  uint32_t DISENG_FRAMEGEN0_FGPFIFOMAX;       /**< FrameGen Primary FIFO Max Fill Register, offset: 0x2B00AC */
  __O  uint32_t DISENG_FRAMEGEN0_FGPFIFOFILLCLR;   /**< FrameGen Primary FIFO Fill Clear Register, offset: 0x2B00B0 */
  __IO uint32_t DISENG_FRAMEGEN0_FGPFIFOTRES;      /**< FrameGen Primary FIFO Thresholds, offset: 0x2B00B4 */
  __I  uint32_t DISENG_FRAMEGEN0_FGSFIFOMIN;       /**< FrameGen Secondary FIFO Min Fill Register, offset: 0x2B00B8 */
  __I  uint32_t DISENG_FRAMEGEN0_FGSFIFOMAX;       /**< FrameGen Secondary FIFO Max Fill Register, offset: 0x2B00BC */
  __O  uint32_t DISENG_FRAMEGEN0_FGSFIFOFILLCLR;   /**< FrameGen Secondary FIFO Fill Clear Register, offset: 0x2B00C0 */
  __I  uint32_t DISENG_FRAMEGEN0_FGSREPD;          /**< FrameGen Skew Regulation ExtraPolation Debug Register, offset: 0x2B00C4 */
  __I  uint32_t DISENG_FRAMEGEN0_FGSRFTD;          /**< FrameGen Skew Regulation Frame Total Debug Register, offset: 0x2B00C8 */
  __I  uint32_t DISENG_FRAMEGEN0_FGSRCSHTOTAL;     /**< FrameGen Skew Regulation External Sync HTotal Debug Register, offset: 0x2B00CC */
  __I  uint32_t DISENG_FRAMEGEN0_FGSRCLOCKDIV;     /**< FrameGen Skew Regulation External PLL Clock divider, offset: 0x2B00D0 */
  __I  uint32_t DISENG_FRAMEGEN0_FGSL;             /**< FrameGen Scanline Register, offset: 0x2B00D4 */
       uint8_t RESERVED_135[65320];
  __O  uint32_t DISENG_IDHASH0_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x2C0000 */
  __I  uint32_t DISENG_IDHASH0_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x2C0004 */
  __IO uint32_t DISENG_IDHASH0_STATICCONTROL;      /**< Global configuration, offset: 0x2C0008 */
  __IO uint32_t DISENG_IDHASH0_PANICTHRESHOLD;     /**< Set and reset thresholds applying to Window_Panic interrupts and status bits, offset: 0x2C000C */
  __IO uint32_t DISENG_IDHASH0_PANICCOLOR;         /**< Overlay color for evaluation windows in panic mode, offset: 0x2C0010 */
  __IO uint32_t DISENG_IDHASH0_SHADOWLOAD;         /**< Shadow load control register, offset: 0x2C0014 */
  __IO uint32_t DISENG_IDHASH0_CONTINUOUSMODE;     /**< Idhash operation mode control, offset: 0x2C0018 */
  __I  uint32_t DISENG_IDHASH0_IDHASH_STATUS;      /**< Idhash status, offset: 0x2C001C */
  __IO uint32_t DISENG_IDHASH0_RUN_STATUS;         /**< Idhash evaluation status, offset: 0x2C0020 */
  __IO uint32_t DISENG_IDHASH0_CONTROL_WINDOW0;    /**< Window 0, Control settings, offset: 0x2C0024 */
  __IO uint32_t DISENG_IDHASH0_UPPERLEFT_WINDOW0;  /**< Window 0, Upper Left Coordinates, offset: 0x2C0028 */
  __IO uint32_t DISENG_IDHASH0_LOWERRIGHT_WINDOW0; /**< Window 0, Lower Right Coordinates, offset: 0x2C002C */
  __IO uint32_t DISENG_IDHASH0_TILE_WINDOW0;       /**< Window 0, Tile dimensions, offset: 0x2C0030 */
  __IO uint32_t DISENG_IDHASH0_ADDRESS_WINDOW0;    /**< Window 0, Memory word Address for Idhash, offset: 0x2C0034 */
  __IO uint32_t DISENG_IDHASH0_CONFIG_WINDOW0;     /**< Window 0, Idhash Configuration settings, offset: 0x2C0038 */
  __IO uint32_t DISENG_IDHASH0_LIMITS_WINDOW0;     /**< Window 0, check Limit settings, offset: 0x2C003C */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_WINDOW0; /**< Window 0, Foregound 0 Color settings. Used for Telltale mode and Icon Mode., offset: 0x2C0040 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0; /**< Window 0, check Limit settings for Telltale mode or for foreground color 0 in icon mode., offset: 0x2C0044 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_WINDOW0; /**< Window 0, Foregound 1 Color settings, Used for Icon Mode., offset: 0x2C0048 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0; /**< Window 0, check Limit settings for foreground color 1 in icon mode., offset: 0x2C004C */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_WINDOW0; /**< Window 0, Foregound 2 Color settings, offset: 0x2C0050 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0; /**< Window 0, check Limit settings for foreground color 2 in icon mode., offset: 0x2C0054 */
  __IO uint32_t DISENG_IDHASH0_IDX_TABLE_WINDOW0;  /**< Window 0, Index Table, offset: 0x2C0058 */
  __IO uint32_t DISENG_IDHASH0_CONTROL_WINDOW1;    /**< Window 1, Control settings, offset: 0x2C005C */
  __IO uint32_t DISENG_IDHASH0_UPPERLEFT_WINDOW1;  /**< Window 1, Upper Left Coordinates, offset: 0x2C0060 */
  __IO uint32_t DISENG_IDHASH0_LOWERRIGHT_WINDOW1; /**< Window 1, Lower Right Coordinates, offset: 0x2C0064 */
  __IO uint32_t DISENG_IDHASH0_TILE_WINDOW1;       /**< Window 1, Tile dimensions, offset: 0x2C0068 */
  __IO uint32_t DISENG_IDHASH0_ADDRESS_WINDOW1;    /**< Window 1, Memory word Address for Idhash, offset: 0x2C006C */
  __IO uint32_t DISENG_IDHASH0_CONFIG_WINDOW1;     /**< Window 1, Idhash Configuration settings, offset: 0x2C0070 */
  __IO uint32_t DISENG_IDHASH0_LIMITS_WINDOW1;     /**< Window 1, check Limit settings, offset: 0x2C0074 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_WINDOW1; /**< Window 1, Foregound 0 Color settings. Used for Telltale mode and Icon Mode., offset: 0x2C0078 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1; /**< Window 1, check Limit settings for Telltale mode or for foreground color 0 in icon mode., offset: 0x2C007C */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_WINDOW1; /**< Window 1, Foregound 1 Color settings, Used for Icon Mode., offset: 0x2C0080 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1; /**< Window 1, check Limit settings for foreground color 1 in icon mode., offset: 0x2C0084 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_WINDOW1; /**< Window 1, Foregound 2 Color settings, offset: 0x2C0088 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1; /**< Window 1, check Limit settings for foreground color 2 in icon mode., offset: 0x2C008C */
  __IO uint32_t DISENG_IDHASH0_IDX_TABLE_WINDOW1;  /**< Window 1, Index Table, offset: 0x2C0090 */
  __IO uint32_t DISENG_IDHASH0_CONTROL_WINDOW2;    /**< Window 2, Control settings, offset: 0x2C0094 */
  __IO uint32_t DISENG_IDHASH0_UPPERLEFT_WINDOW2;  /**< Window 2, Upper Left Coordinates, offset: 0x2C0098 */
  __IO uint32_t DISENG_IDHASH0_LOWERRIGHT_WINDOW2; /**< Window 2, Lower Right Coordinates, offset: 0x2C009C */
  __IO uint32_t DISENG_IDHASH0_TILE_WINDOW2;       /**< Window 2, Tile dimensions, offset: 0x2C00A0 */
  __IO uint32_t DISENG_IDHASH0_ADDRESS_WINDOW2;    /**< Window 2, Memory word Address for Idhash, offset: 0x2C00A4 */
  __IO uint32_t DISENG_IDHASH0_CONFIG_WINDOW2;     /**< Window 2, Idhash Configuration settings, offset: 0x2C00A8 */
  __IO uint32_t DISENG_IDHASH0_LIMITS_WINDOW2;     /**< Window 2, check Limit settings, offset: 0x2C00AC */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_WINDOW2; /**< Window 2, Foregound 0 Color settings. Used for Telltale mode and Icon Mode., offset: 0x2C00B0 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2; /**< Window 2, check Limit settings for Telltale mode or for foreground color 0 in icon mode., offset: 0x2C00B4 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_WINDOW2; /**< Window 2, Foregound 1 Color settings, Used for Icon Mode., offset: 0x2C00B8 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2; /**< Window 2, check Limit settings for foreground color 1 in icon mode., offset: 0x2C00BC */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_WINDOW2; /**< Window 2, Foregound 2 Color settings, offset: 0x2C00C0 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2; /**< Window 2, check Limit settings for foreground color 2 in icon mode., offset: 0x2C00C4 */
  __IO uint32_t DISENG_IDHASH0_IDX_TABLE_WINDOW2;  /**< Window 2, Index Table, offset: 0x2C00C8 */
  __IO uint32_t DISENG_IDHASH0_CONTROL_WINDOW3;    /**< Window 3, Control settings, offset: 0x2C00CC */
  __IO uint32_t DISENG_IDHASH0_UPPERLEFT_WINDOW3;  /**< Window 3, Upper Left Coordinates, offset: 0x2C00D0 */
  __IO uint32_t DISENG_IDHASH0_LOWERRIGHT_WINDOW3; /**< Window 3, Lower Right Coordinates, offset: 0x2C00D4 */
  __IO uint32_t DISENG_IDHASH0_TILE_WINDOW3;       /**< Window 3, Tile dimensions, offset: 0x2C00D8 */
  __IO uint32_t DISENG_IDHASH0_ADDRESS_WINDOW3;    /**< Window 3, Memory word Address for Idhash, offset: 0x2C00DC */
  __IO uint32_t DISENG_IDHASH0_CONFIG_WINDOW3;     /**< Window 3, Idhash Configuration settings, offset: 0x2C00E0 */
  __IO uint32_t DISENG_IDHASH0_LIMITS_WINDOW3;     /**< Window 3, check Limit settings, offset: 0x2C00E4 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_WINDOW3; /**< Window 3, Foregound 0 Color settings. Used for Telltale mode and Icon Mode., offset: 0x2C00E8 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3; /**< Window 3, check Limit settings for Telltale mode or for foreground color 0 in icon mode., offset: 0x2C00EC */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_WINDOW3; /**< Window 3, Foregound 1 Color settings, Used for Icon Mode., offset: 0x2C00F0 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3; /**< Window 3, check Limit settings for foreground color 1 in icon mode., offset: 0x2C00F4 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_WINDOW3; /**< Window 3, Foregound 2 Color settings, offset: 0x2C00F8 */
  __IO uint32_t DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3; /**< Window 3, check Limit settings for foreground color 2 in icon mode., offset: 0x2C00FC */
  __IO uint32_t DISENG_IDHASH0_IDX_TABLE_WINDOW3;  /**< Window 3, Index Table, offset: 0x2C0100 */
       uint8_t RESERVED_136[3836];
  __IO uint32_t DISENG_IDHASH0_IDRAM[DISPLAY_SEERIS_DISENG_IDHASH0_IDRAM_COUNT]; /**< SRAM, usage according to module register setup., array offset: 0x2C1000, array step: 0x4 */
       uint8_t RESERVED_137[4096];
  __O  uint32_t DISENG_IDHASH0CFG_LOCKUNLOCK0;     /**< Register to change the protection status of this address block., offset: 0x2C3000 */
  __I  uint32_t DISENG_IDHASH0CFG_LOCKSTATUS0;     /**< Protection status of this address block., offset: 0x2C3004 */
  __IO uint32_t DISENG_IDHASH0CFG_SRCSELECT;       /**< Tap selection for IDHash0., offset: 0x2C3008 */
       uint8_t RESERVED_138[53236];
  __O  uint32_t DISENG_SIG0_LOCKUNLOCK;            /**< Register to change the protection status of this address block, offset: 0x2D0000 */
  __I  uint32_t DISENG_SIG0_LOCKSTATUS;            /**< Protection status of this address block, offset: 0x2D0004 */
  __IO uint32_t DISENG_SIG0_STATICCONTROL;         /**< Global configuration, offset: 0x2D0008 */
  __IO uint32_t DISENG_SIG0_ERRORTHRESHOLD;        /**< Set and reset thresholds applying to Window_Error and Cluster_Error interrupts and status bits, offset: 0x2D000C */
  __IO uint32_t DISENG_SIG0_MATCHTHRESHOLD;        /**< Set and reset thresholds applying to Match interrupt and status bits, offset: 0x2D0010 */
  __IO uint32_t DISENG_SIG0_PANICCOLOR;            /**< Overlay color for evaluation windows in panic mode, offset: 0x2D0014 */
  __IO uint32_t DISENG_SIG0_SHADOWLOAD;            /**< Shadow load control register, offset: 0x2D0018 */
  __IO uint32_t DISENG_SIG0_CONTINUOUSMODE;        /**< Signature operation mode control, offset: 0x2D001C */
  __O  uint32_t DISENG_SIG0_SOFTWAREKICK;          /**< Signature measurement trigger, offset: 0x2D0020 */
  __IO uint32_t DISENG_SIG0_SKIPWINDOW;            /**< Enable skipping window feature., offset: 0x2D0024 */
  __I  uint32_t DISENG_SIG0_STATUS;                /**< Signature evaluation status, offset: 0x2D0028 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW0;       /**< Window 0, Control settings, offset: 0x2D002C */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW0;     /**< Window 0, Upper Left Coordinates, offset: 0x2D0030 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW0;    /**< Window 0, Lower Right Coordinates, offset: 0x2D0034 */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW0;         /**< Window 0, Reference CRC Value of Red Channel, offset: 0x2D0038 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW0;         /**< Window 0, Reference CRC Value of Green Channel, offset: 0x2D003C */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW0;         /**< Window 0, Reference CRC Value of Blue Channel, offset: 0x2D0040 */
  __IO uint32_t DISENG_SIG0_STATS0_WINDOW0;        /**< Controls of Statistics Block 0, Window 0, offset: 0x2D0044 */
  __IO uint32_t DISENG_SIG0_STATS1_WINDOW0;        /**< Controls of Statistics Block 0, Window 0, offset: 0x2D0048 */
  __IO uint32_t DISENG_SIG0_MIN_REDSUM_WINDOW0;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2D004C */
  __IO uint32_t DISENG_SIG0_MIN_GREENSUM_WINDOW0;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2D0050 */
  __IO uint32_t DISENG_SIG0_MIN_BLUESUM_WINDOW0;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2D0054 */
  __IO uint32_t DISENG_SIG0_MIN_LUMSUM_WINDOW0;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2D0058 */
  __IO uint32_t DISENG_SIG0_MAX_REDSUM_WINDOW0;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2D005C */
  __IO uint32_t DISENG_SIG0_MAX_GREENSUM_WINDOW0;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2D0060 */
  __IO uint32_t DISENG_SIG0_MAX_BLUESUM_WINDOW0;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2D0064 */
  __IO uint32_t DISENG_SIG0_MAX_LUMSUM_WINDOW0;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2D0068 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW1;       /**< Window 1, Control settings, offset: 0x2D006C */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW1;     /**< Window 1, Upper Left Coordinates, offset: 0x2D0070 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW1;    /**< Window 1, Lower Right Coordinates, offset: 0x2D0074 */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW1;         /**< Window 1, Reference CRC Value of Red Channel, offset: 0x2D0078 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW1;         /**< Window 1, Reference CRC Value of Green Channel, offset: 0x2D007C */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW1;         /**< Window 1, Reference CRC Value of Blue Channel, offset: 0x2D0080 */
  __IO uint32_t DISENG_SIG0_STATS0_WINDOW1;        /**< Controls of Statistics Block 0, Window 1, offset: 0x2D0084 */
  __IO uint32_t DISENG_SIG0_STATS1_WINDOW1;        /**< Controls of Statistics Block 0, Window 1, offset: 0x2D0088 */
  __IO uint32_t DISENG_SIG0_MIN_REDSUM_WINDOW1;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2D008C */
  __IO uint32_t DISENG_SIG0_MIN_GREENSUM_WINDOW1;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2D0090 */
  __IO uint32_t DISENG_SIG0_MIN_BLUESUM_WINDOW1;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2D0094 */
  __IO uint32_t DISENG_SIG0_MIN_LUMSUM_WINDOW1;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2D0098 */
  __IO uint32_t DISENG_SIG0_MAX_REDSUM_WINDOW1;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2D009C */
  __IO uint32_t DISENG_SIG0_MAX_GREENSUM_WINDOW1;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2D00A0 */
  __IO uint32_t DISENG_SIG0_MAX_BLUESUM_WINDOW1;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2D00A4 */
  __IO uint32_t DISENG_SIG0_MAX_LUMSUM_WINDOW1;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2D00A8 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW2;       /**< Window 2, Control settings, offset: 0x2D00AC */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW2;     /**< Window 2, Upper Left Coordinates, offset: 0x2D00B0 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW2;    /**< Window 2, Lower Right Coordinates, offset: 0x2D00B4 */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW2;         /**< Window 2, Reference CRC Value of Red Channel, offset: 0x2D00B8 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW2;         /**< Window 2, Reference CRC Value of Green Channel, offset: 0x2D00BC */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW2;         /**< Window 2, Reference CRC Value of Blue Channel, offset: 0x2D00C0 */
  __IO uint32_t DISENG_SIG0_STATS0_WINDOW2;        /**< Controls of Statistics Block 0, Window 2, offset: 0x2D00C4 */
  __IO uint32_t DISENG_SIG0_STATS1_WINDOW2;        /**< Controls of Statistics Block 0, Window 2, offset: 0x2D00C8 */
  __IO uint32_t DISENG_SIG0_MIN_REDSUM_WINDOW2;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2D00CC */
  __IO uint32_t DISENG_SIG0_MIN_GREENSUM_WINDOW2;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2D00D0 */
  __IO uint32_t DISENG_SIG0_MIN_BLUESUM_WINDOW2;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2D00D4 */
  __IO uint32_t DISENG_SIG0_MIN_LUMSUM_WINDOW2;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2D00D8 */
  __IO uint32_t DISENG_SIG0_MAX_REDSUM_WINDOW2;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2D00DC */
  __IO uint32_t DISENG_SIG0_MAX_GREENSUM_WINDOW2;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2D00E0 */
  __IO uint32_t DISENG_SIG0_MAX_BLUESUM_WINDOW2;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2D00E4 */
  __IO uint32_t DISENG_SIG0_MAX_LUMSUM_WINDOW2;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2D00E8 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW3;       /**< Window 3, Control settings, offset: 0x2D00EC */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW3;     /**< Window 3, Upper Left Coordinates, offset: 0x2D00F0 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW3;    /**< Window 3, Lower Right Coordinates, offset: 0x2D00F4 */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW3;         /**< Window 3, Reference CRC Value of Red Channel, offset: 0x2D00F8 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW3;         /**< Window 3, Reference CRC Value of Green Channel, offset: 0x2D00FC */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW3;         /**< Window 3, Reference CRC Value of Blue Channel, offset: 0x2D0100 */
  __IO uint32_t DISENG_SIG0_STATS0_WINDOW3;        /**< Controls of Statistics Block 0, Window 3, offset: 0x2D0104 */
  __IO uint32_t DISENG_SIG0_STATS1_WINDOW3;        /**< Controls of Statistics Block 0, Window 3, offset: 0x2D0108 */
  __IO uint32_t DISENG_SIG0_MIN_REDSUM_WINDOW3;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2D010C */
  __IO uint32_t DISENG_SIG0_MIN_GREENSUM_WINDOW3;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2D0110 */
  __IO uint32_t DISENG_SIG0_MIN_BLUESUM_WINDOW3;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2D0114 */
  __IO uint32_t DISENG_SIG0_MIN_LUMSUM_WINDOW3;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2D0118 */
  __IO uint32_t DISENG_SIG0_MAX_REDSUM_WINDOW3;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2D011C */
  __IO uint32_t DISENG_SIG0_MAX_GREENSUM_WINDOW3;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2D0120 */
  __IO uint32_t DISENG_SIG0_MAX_BLUESUM_WINDOW3;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2D0124 */
  __IO uint32_t DISENG_SIG0_MAX_LUMSUM_WINDOW3;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2D0128 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW4;       /**< Window 4, Control settings, offset: 0x2D012C */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW4;     /**< Window 4, Upper Left Coordinates, offset: 0x2D0130 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW4;    /**< Window 4, Lower Right Coordinates, offset: 0x2D0134 */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW4;         /**< Window 4, Reference CRC Value of Red Channel, offset: 0x2D0138 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW4;         /**< Window 4, Reference CRC Value of Green Channel, offset: 0x2D013C */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW4;         /**< Window 4, Reference CRC Value of Blue Channel, offset: 0x2D0140 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW5;       /**< Window 5, Control settings, offset: 0x2D0144 */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW5;     /**< Window 5, Upper Left Coordinates, offset: 0x2D0148 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW5;    /**< Window 5, Lower Right Coordinates, offset: 0x2D014C */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW5;         /**< Window 5, Reference CRC Value of Red Channel, offset: 0x2D0150 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW5;         /**< Window 5, Reference CRC Value of Green Channel, offset: 0x2D0154 */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW5;         /**< Window 5, Reference CRC Value of Blue Channel, offset: 0x2D0158 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW6;       /**< Window 6, Control settings, offset: 0x2D015C */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW6;     /**< Window 6, Upper Left Coordinates, offset: 0x2D0160 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW6;    /**< Window 6, Lower Right Coordinates, offset: 0x2D0164 */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW6;         /**< Window 6, Reference CRC Value of Red Channel, offset: 0x2D0168 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW6;         /**< Window 6, Reference CRC Value of Green Channel, offset: 0x2D016C */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW6;         /**< Window 6, Reference CRC Value of Blue Channel, offset: 0x2D0170 */
  __IO uint32_t DISENG_SIG0_CONTROL_WINDOW7;       /**< Window 7, Control settings, offset: 0x2D0174 */
  __IO uint32_t DISENG_SIG0_UPPERLEFT_WINDOW7;     /**< Window 7, Upper Left Coordinates, offset: 0x2D0178 */
  __IO uint32_t DISENG_SIG0_LOWERRIGHT_WINDOW7;    /**< Window 7, Lower Right Coordinates, offset: 0x2D017C */
  __IO uint32_t DISENG_SIG0_REF_R_WINDOW7;         /**< Window 7, Reference CRC Value of Red Channel, offset: 0x2D0180 */
  __IO uint32_t DISENG_SIG0_REF_G_WINDOW7;         /**< Window 7, Reference CRC Value of Green Channel, offset: 0x2D0184 */
  __IO uint32_t DISENG_SIG0_REF_B_WINDOW7;         /**< Window 7, Reference CRC Value of Blue Channel, offset: 0x2D0188 */
  __IO uint32_t DISENG_SIG0_CONTROL_CLUSTER0;      /**< Cluster 0, Control settings, offset: 0x2D018C */
  __IO uint32_t DISENG_SIG0_PIX0_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 0, offset: 0x2D0190 */
  __IO uint32_t DISENG_SIG0_PIX1_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 1, offset: 0x2D0194 */
  __IO uint32_t DISENG_SIG0_PIX2_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 2, offset: 0x2D0198 */
  __IO uint32_t DISENG_SIG0_PIX3_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 3, offset: 0x2D019C */
  __IO uint32_t DISENG_SIG0_REF0_CLUSTER0;         /**< Cluster 0, Reference Vector 0, offset: 0x2D01A0 */
  __IO uint32_t DISENG_SIG0_REF1_CLUSTER0;         /**< Cluster 0, Reference Vector 1, offset: 0x2D01A4 */
  __IO uint32_t DISENG_SIG0_CONTROL_CLUSTER1;      /**< Cluster 1, Control settings, offset: 0x2D01A8 */
  __IO uint32_t DISENG_SIG0_PIX0_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 0, offset: 0x2D01AC */
  __IO uint32_t DISENG_SIG0_PIX1_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 1, offset: 0x2D01B0 */
  __IO uint32_t DISENG_SIG0_PIX2_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 2, offset: 0x2D01B4 */
  __IO uint32_t DISENG_SIG0_PIX3_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 3, offset: 0x2D01B8 */
  __IO uint32_t DISENG_SIG0_REF0_CLUSTER1;         /**< Cluster 1, Reference Vector 0, offset: 0x2D01BC */
  __IO uint32_t DISENG_SIG0_REF1_CLUSTER1;         /**< Cluster 1, Reference Vector 1, offset: 0x2D01C0 */
  __IO uint32_t DISENG_SIG0_CONTROL_CLUSTER2;      /**< Cluster 2, Control settings, offset: 0x2D01C4 */
  __IO uint32_t DISENG_SIG0_PIX0_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 0, offset: 0x2D01C8 */
  __IO uint32_t DISENG_SIG0_PIX1_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 1, offset: 0x2D01CC */
  __IO uint32_t DISENG_SIG0_PIX2_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 2, offset: 0x2D01D0 */
  __IO uint32_t DISENG_SIG0_PIX3_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 3, offset: 0x2D01D4 */
  __IO uint32_t DISENG_SIG0_REF0_CLUSTER2;         /**< Cluster 2, Reference Vector 0, offset: 0x2D01D8 */
  __IO uint32_t DISENG_SIG0_REF1_CLUSTER2;         /**< Cluster 2, Reference Vector 1, offset: 0x2D01DC */
  __IO uint32_t DISENG_SIG0_CONTROL_CLUSTER3;      /**< Cluster 3, Control settings, offset: 0x2D01E0 */
  __IO uint32_t DISENG_SIG0_PIX0_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 0, offset: 0x2D01E4 */
  __IO uint32_t DISENG_SIG0_PIX1_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 1, offset: 0x2D01E8 */
  __IO uint32_t DISENG_SIG0_PIX2_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 2, offset: 0x2D01EC */
  __IO uint32_t DISENG_SIG0_PIX3_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 3, offset: 0x2D01F0 */
  __IO uint32_t DISENG_SIG0_REF0_CLUSTER3;         /**< Cluster 3, Reference Vector 0, offset: 0x2D01F4 */
  __IO uint32_t DISENG_SIG0_REF1_CLUSTER3;         /**< Cluster 3, Reference Vector 1, offset: 0x2D01F8 */
       uint8_t RESERVED_139[516];
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW0;         /**< Window 0, Measured CRC Value of Red Channel, offset: 0x2D0400 */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW0;         /**< Window 0, Measured CRC Value of Green Channel, offset: 0x2D0404 */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW0;         /**< Window 0, Measured CRC Value of Blue Channel, offset: 0x2D0408 */
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW1;         /**< Window 1, Measured CRC Value of Red Channel, offset: 0x2D040C */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW1;         /**< Window 1, Measured CRC Value of Green Channel, offset: 0x2D0410 */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW1;         /**< Window 1, Measured CRC Value of Blue Channel, offset: 0x2D0414 */
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW2;         /**< Window 2, Measured CRC Value of Red Channel, offset: 0x2D0418 */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW2;         /**< Window 2, Measured CRC Value of Green Channel, offset: 0x2D041C */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW2;         /**< Window 2, Measured CRC Value of Blue Channel, offset: 0x2D0420 */
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW3;         /**< Window 3, Measured CRC Value of Red Channel, offset: 0x2D0424 */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW3;         /**< Window 3, Measured CRC Value of Green Channel, offset: 0x2D0428 */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW3;         /**< Window 3, Measured CRC Value of Blue Channel, offset: 0x2D042C */
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW4;         /**< Window 4, Measured CRC Value of Red Channel, offset: 0x2D0430 */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW4;         /**< Window 4, Measured CRC Value of Green Channel, offset: 0x2D0434 */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW4;         /**< Window 4, Measured CRC Value of Blue Channel, offset: 0x2D0438 */
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW5;         /**< Window 5, Measured CRC Value of Red Channel, offset: 0x2D043C */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW5;         /**< Window 5, Measured CRC Value of Green Channel, offset: 0x2D0440 */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW5;         /**< Window 5, Measured CRC Value of Blue Channel, offset: 0x2D0444 */
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW6;         /**< Window 6, Measured CRC Value of Red Channel, offset: 0x2D0448 */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW6;         /**< Window 6, Measured CRC Value of Green Channel, offset: 0x2D044C */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW6;         /**< Window 6, Measured CRC Value of Blue Channel, offset: 0x2D0450 */
  __I  uint32_t DISENG_SIG0_CRC_R_WINDOW7;         /**< Window 7, Measured CRC Value of Red Channel, offset: 0x2D0454 */
  __I  uint32_t DISENG_SIG0_CRC_G_WINDOW7;         /**< Window 7, Measured CRC Value of Green Channel, offset: 0x2D0458 */
  __I  uint32_t DISENG_SIG0_CRC_B_WINDOW7;         /**< Window 7, Measured CRC Value of Blue Channel, offset: 0x2D045C */
  __I  uint32_t DISENG_SIG0_STATUS_CLUSTER0;       /**< Cluster 0, Status, offset: 0x2D0460 */
  __I  uint32_t DISENG_SIG0_COUNTER_CLUSTER0;      /**< Cluster 0, Match and Error Counters, offset: 0x2D0464 */
  __I  uint32_t DISENG_SIG0_VECTOR0_CLUSTER0;      /**< Cluster 0, Result Vector 0, RGB bitslices[1:0], offset: 0x2D0468 */
  __I  uint32_t DISENG_SIG0_VECTOR1_CLUSTER0;      /**< Cluster 0, Result Vector 1, RGB bitslices[3:2], offset: 0x2D046C */
  __I  uint32_t DISENG_SIG0_VECTOR2_CLUSTER0;      /**< Cluster 0, Result Vector 2, RGB bitslices[5:4], offset: 0x2D0470 */
  __I  uint32_t DISENG_SIG0_VECTOR3_CLUSTER0;      /**< Cluster 0, Result Vector 3, RGB bitslices[7:6], offset: 0x2D0474 */
  __I  uint32_t DISENG_SIG0_STATUS_CLUSTER1;       /**< Cluster 1, Status, offset: 0x2D0478 */
  __I  uint32_t DISENG_SIG0_COUNTER_CLUSTER1;      /**< Cluster 1, Match and Error Counters, offset: 0x2D047C */
  __I  uint32_t DISENG_SIG0_VECTOR0_CLUSTER1;      /**< Cluster 1, Result Vector 0, RGB bitslices[1:0], offset: 0x2D0480 */
  __I  uint32_t DISENG_SIG0_VECTOR1_CLUSTER1;      /**< Cluster 1, Result Vector 1, RGB bitslices[3:2], offset: 0x2D0484 */
  __I  uint32_t DISENG_SIG0_VECTOR2_CLUSTER1;      /**< Cluster 1, Result Vector 2, RGB bitslices[5:4], offset: 0x2D0488 */
  __I  uint32_t DISENG_SIG0_VECTOR3_CLUSTER1;      /**< Cluster 1, Result Vector 3, RGB bitslices[7:6], offset: 0x2D048C */
  __I  uint32_t DISENG_SIG0_STATUS_CLUSTER2;       /**< Cluster 2, Status, offset: 0x2D0490 */
  __I  uint32_t DISENG_SIG0_COUNTER_CLUSTER2;      /**< Cluster 2, Match and Error Counters, offset: 0x2D0494 */
  __I  uint32_t DISENG_SIG0_VECTOR0_CLUSTER2;      /**< Cluster 2, Result Vector 0, RGB bitslices[1:0], offset: 0x2D0498 */
  __I  uint32_t DISENG_SIG0_VECTOR1_CLUSTER2;      /**< Cluster 2, Result Vector 1, RGB bitslices[3:2], offset: 0x2D049C */
  __I  uint32_t DISENG_SIG0_VECTOR2_CLUSTER2;      /**< Cluster 2, Result Vector 2, RGB bitslices[5:4], offset: 0x2D04A0 */
  __I  uint32_t DISENG_SIG0_VECTOR3_CLUSTER2;      /**< Cluster 2, Result Vector 3, RGB bitslices[7:6], offset: 0x2D04A4 */
  __I  uint32_t DISENG_SIG0_STATUS_CLUSTER3;       /**< Cluster 3, Status, offset: 0x2D04A8 */
  __I  uint32_t DISENG_SIG0_COUNTER_CLUSTER3;      /**< Cluster 3, Match and Error Counters, offset: 0x2D04AC */
  __I  uint32_t DISENG_SIG0_VECTOR0_CLUSTER3;      /**< Cluster 3, Result Vector 0, RGB bitslices[1:0], offset: 0x2D04B0 */
  __I  uint32_t DISENG_SIG0_VECTOR1_CLUSTER3;      /**< Cluster 3, Result Vector 1, RGB bitslices[3:2], offset: 0x2D04B4 */
  __I  uint32_t DISENG_SIG0_VECTOR2_CLUSTER3;      /**< Cluster 3, Result Vector 2, RGB bitslices[5:4], offset: 0x2D04B8 */
  __I  uint32_t DISENG_SIG0_VECTOR3_CLUSTER3;      /**< Cluster 3, Result Vector 3, RGB bitslices[7:6], offset: 0x2D04BC */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS0_WIN0;    /**< Pixel Counter Register, Statistics Block 0, Window 0, offset: 0x2D04C0 */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS0_WIN0;    /**< Pixel Max Values Register, Statistics Block 0, Window 0, offset: 0x2D04C4 */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS0_WIN0;    /**< Pixel Min Values Register, Statistics Block 0, Window 0, offset: 0x2D04C8 */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS0_WIN0;    /**< Red Component Sum Register, Statistics Block 0, Window 0, offset: 0x2D04CC */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS0_WIN0;  /**< Green Component Sum Register, Statistics Block 0, Window 0, offset: 0x2D04D0 */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS0_WIN0;   /**< Blue Component Sum Register, Statistics Block 0, Window 0, offset: 0x2D04D4 */
  __I  uint32_t DISENG_SIG0_LUMSUM_STATS0_WIN0;    /**< Luminance Sum Register, Statistics Block 0, Window 0, offset: 0x2D04D8 */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS1_WIN0;    /**< Pixel Counter Register, Statistics Block 1, Window 0, offset: 0x2D04DC */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS1_WIN0;    /**< Pixel Max Values Register, Statistics Block 1, Window 0, offset: 0x2D04E0 */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS1_WIN0;    /**< Pixel Min Values Register, Statistics Block 1, Window 0, offset: 0x2D04E4 */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS1_WIN0;    /**< Red Component Sum Register, Statistics Block 1, Window 0, offset: 0x2D04E8 */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS1_WIN0;  /**< Green Component Sum Register, Statistics Block 1, Window 0, offset: 0x2D04EC */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS1_WIN0;   /**< Blue Component Sum Register, Statistics Block 1, Window 0, offset: 0x2D04F0 */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS0_WIN1;    /**< Pixel Counter Register, Statistics Block 0, Window 1, offset: 0x2D04F4 */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS0_WIN1;    /**< Pixel Max Values Register, Statistics Block 0, Window 1, offset: 0x2D04F8 */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS0_WIN1;    /**< Pixel Min Values Register, Statistics Block 0, Window 1, offset: 0x2D04FC */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS0_WIN1;    /**< Red Component Sum Register, Statistics Block 0, Window 1, offset: 0x2D0500 */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS0_WIN1;  /**< Green Component Sum Register, Statistics Block 0, Window 1, offset: 0x2D0504 */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS0_WIN1;   /**< Blue Component Sum Register, Statistics Block 0, Window 1, offset: 0x2D0508 */
  __I  uint32_t DISENG_SIG0_LUMSUM_STATS0_WIN1;    /**< Luminance Sum Register, Statistics Block 0, Window 1, offset: 0x2D050C */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS1_WIN1;    /**< Pixel Counter Register, Statistics Block 1, Window 1, offset: 0x2D0510 */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS1_WIN1;    /**< Pixel Max Values Register, Statistics Block 1, Window 1, offset: 0x2D0514 */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS1_WIN1;    /**< Pixel Min Values Register, Statistics Block 1, Window 1, offset: 0x2D0518 */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS1_WIN1;    /**< Red Component Sum Register, Statistics Block 1, Window 1, offset: 0x2D051C */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS1_WIN1;  /**< Green Component Sum Register, Statistics Block 1, Window 1, offset: 0x2D0520 */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS1_WIN1;   /**< Blue Component Sum Register, Statistics Block 1, Window 1, offset: 0x2D0524 */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS0_WIN2;    /**< Pixel Counter Register, Statistics Block 0, Window 2, offset: 0x2D0528 */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS0_WIN2;    /**< Pixel Max Values Register, Statistics Block 0, Window 2, offset: 0x2D052C */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS0_WIN2;    /**< Pixel Min Values Register, Statistics Block 0, Window 2, offset: 0x2D0530 */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS0_WIN2;    /**< Red Component Sum Register, Statistics Block 0, Window 2, offset: 0x2D0534 */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS0_WIN2;  /**< Green Component Sum Register, Statistics Block 0, Window 2, offset: 0x2D0538 */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS0_WIN2;   /**< Blue Component Sum Register, Statistics Block 0, Window 2, offset: 0x2D053C */
  __I  uint32_t DISENG_SIG0_LUMSUM_STATS0_WIN2;    /**< Luminance Sum Register, Statistics Block 0, Window 2, offset: 0x2D0540 */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS1_WIN2;    /**< Pixel Counter Register, Statistics Block 1, Window 2, offset: 0x2D0544 */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS1_WIN2;    /**< Pixel Max Values Register, Statistics Block 1, Window 2, offset: 0x2D0548 */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS1_WIN2;    /**< Pixel Min Values Register, Statistics Block 1, Window 2, offset: 0x2D054C */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS1_WIN2;    /**< Red Component Sum Register, Statistics Block 1, Window 2, offset: 0x2D0550 */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS1_WIN2;  /**< Green Component Sum Register, Statistics Block 1, Window 2, offset: 0x2D0554 */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS1_WIN2;   /**< Blue Component Sum Register, Statistics Block 1, Window 2, offset: 0x2D0558 */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS0_WIN3;    /**< Pixel Counter Register, Statistics Block 0, Window 3, offset: 0x2D055C */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS0_WIN3;    /**< Pixel Max Values Register, Statistics Block 0, Window 3, offset: 0x2D0560 */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS0_WIN3;    /**< Pixel Min Values Register, Statistics Block 0, Window 3, offset: 0x2D0564 */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS0_WIN3;    /**< Red Component Sum Register, Statistics Block 0, Window 3, offset: 0x2D0568 */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS0_WIN3;  /**< Green Component Sum Register, Statistics Block 0, Window 3, offset: 0x2D056C */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS0_WIN3;   /**< Blue Component Sum Register, Statistics Block 0, Window 3, offset: 0x2D0570 */
  __I  uint32_t DISENG_SIG0_LUMSUM_STATS0_WIN3;    /**< Luminance Sum Register, Statistics Block 0, Window 3, offset: 0x2D0574 */
  __I  uint32_t DISENG_SIG0_PIXCNT_STATS1_WIN3;    /**< Pixel Counter Register, Statistics Block 1, Window 3, offset: 0x2D0578 */
  __I  uint32_t DISENG_SIG0_PIXMAX_STATS1_WIN3;    /**< Pixel Max Values Register, Statistics Block 1, Window 3, offset: 0x2D057C */
  __I  uint32_t DISENG_SIG0_PIXMIN_STATS1_WIN3;    /**< Pixel Min Values Register, Statistics Block 1, Window 3, offset: 0x2D0580 */
  __I  uint32_t DISENG_SIG0_REDSUM_STATS1_WIN3;    /**< Red Component Sum Register, Statistics Block 1, Window 3, offset: 0x2D0584 */
  __I  uint32_t DISENG_SIG0_GREENSUM_STATS1_WIN3;  /**< Green Component Sum Register, Statistics Block 1, Window 3, offset: 0x2D0588 */
  __I  uint32_t DISENG_SIG0_BLUESUM_STATS1_WIN3;   /**< Blue Component Sum Register, Statistics Block 1, Window 3, offset: 0x2D058C */
       uint8_t RESERVED_140[2672];
  __O  uint32_t DISENG_SIG0CFG_LOCKUNLOCK0;        /**< Register to change the protection status of this address block., offset: 0x2D1000 */
  __I  uint32_t DISENG_SIG0CFG_LOCKSTATUS0;        /**< Protection status of this address block., offset: 0x2D1004 */
  __IO uint32_t DISENG_SIG0CFG_SRCSELECT;          /**< Tap selection for sig0., offset: 0x2D1008 */
       uint8_t RESERVED_141[61428];
  __O  uint32_t DISENG_SIG2_LOCKUNLOCK;            /**< Register to change the protection status of this address block, offset: 0x2E0000 */
  __I  uint32_t DISENG_SIG2_LOCKSTATUS;            /**< Protection status of this address block, offset: 0x2E0004 */
  __IO uint32_t DISENG_SIG2_STATICCONTROL;         /**< Global configuration, offset: 0x2E0008 */
  __IO uint32_t DISENG_SIG2_ERRORTHRESHOLD;        /**< Set and reset thresholds applying to Window_Error and Cluster_Error interrupts and status bits, offset: 0x2E000C */
  __IO uint32_t DISENG_SIG2_MATCHTHRESHOLD;        /**< Set and reset thresholds applying to Match interrupt and status bits, offset: 0x2E0010 */
  __IO uint32_t DISENG_SIG2_PANICCOLOR;            /**< Overlay color for evaluation windows in panic mode, offset: 0x2E0014 */
  __IO uint32_t DISENG_SIG2_SHADOWLOAD;            /**< Shadow load control register, offset: 0x2E0018 */
  __IO uint32_t DISENG_SIG2_CONTINUOUSMODE;        /**< Signature operation mode control, offset: 0x2E001C */
  __O  uint32_t DISENG_SIG2_SOFTWAREKICK;          /**< Signature measurement trigger, offset: 0x2E0020 */
  __IO uint32_t DISENG_SIG2_SKIPWINDOW;            /**< Enable skipping window feature., offset: 0x2E0024 */
  __I  uint32_t DISENG_SIG2_STATUS;                /**< Signature evaluation status, offset: 0x2E0028 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW0;       /**< Window 0, Control settings, offset: 0x2E002C */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW0;     /**< Window 0, Upper Left Coordinates, offset: 0x2E0030 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW0;    /**< Window 0, Lower Right Coordinates, offset: 0x2E0034 */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW0;         /**< Window 0, Reference CRC Value of Red Channel, offset: 0x2E0038 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW0;         /**< Window 0, Reference CRC Value of Green Channel, offset: 0x2E003C */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW0;         /**< Window 0, Reference CRC Value of Blue Channel, offset: 0x2E0040 */
  __IO uint32_t DISENG_SIG2_STATS0_WINDOW0;        /**< Controls of Statistics Block 0, Window 0, offset: 0x2E0044 */
  __IO uint32_t DISENG_SIG2_STATS1_WINDOW0;        /**< Controls of Statistics Block 0, Window 0, offset: 0x2E0048 */
  __IO uint32_t DISENG_SIG2_MIN_REDSUM_WINDOW0;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2E004C */
  __IO uint32_t DISENG_SIG2_MIN_GREENSUM_WINDOW0;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2E0050 */
  __IO uint32_t DISENG_SIG2_MIN_BLUESUM_WINDOW0;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2E0054 */
  __IO uint32_t DISENG_SIG2_MIN_LUMSUM_WINDOW0;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2E0058 */
  __IO uint32_t DISENG_SIG2_MAX_REDSUM_WINDOW0;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2E005C */
  __IO uint32_t DISENG_SIG2_MAX_GREENSUM_WINDOW0;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2E0060 */
  __IO uint32_t DISENG_SIG2_MAX_BLUESUM_WINDOW0;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2E0064 */
  __IO uint32_t DISENG_SIG2_MAX_LUMSUM_WINDOW0;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2E0068 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW1;       /**< Window 1, Control settings, offset: 0x2E006C */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW1;     /**< Window 1, Upper Left Coordinates, offset: 0x2E0070 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW1;    /**< Window 1, Lower Right Coordinates, offset: 0x2E0074 */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW1;         /**< Window 1, Reference CRC Value of Red Channel, offset: 0x2E0078 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW1;         /**< Window 1, Reference CRC Value of Green Channel, offset: 0x2E007C */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW1;         /**< Window 1, Reference CRC Value of Blue Channel, offset: 0x2E0080 */
  __IO uint32_t DISENG_SIG2_STATS0_WINDOW1;        /**< Controls of Statistics Block 0, Window 1, offset: 0x2E0084 */
  __IO uint32_t DISENG_SIG2_STATS1_WINDOW1;        /**< Controls of Statistics Block 0, Window 1, offset: 0x2E0088 */
  __IO uint32_t DISENG_SIG2_MIN_REDSUM_WINDOW1;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2E008C */
  __IO uint32_t DISENG_SIG2_MIN_GREENSUM_WINDOW1;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2E0090 */
  __IO uint32_t DISENG_SIG2_MIN_BLUESUM_WINDOW1;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2E0094 */
  __IO uint32_t DISENG_SIG2_MIN_LUMSUM_WINDOW1;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2E0098 */
  __IO uint32_t DISENG_SIG2_MAX_REDSUM_WINDOW1;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2E009C */
  __IO uint32_t DISENG_SIG2_MAX_GREENSUM_WINDOW1;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2E00A0 */
  __IO uint32_t DISENG_SIG2_MAX_BLUESUM_WINDOW1;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2E00A4 */
  __IO uint32_t DISENG_SIG2_MAX_LUMSUM_WINDOW1;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2E00A8 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW2;       /**< Window 2, Control settings, offset: 0x2E00AC */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW2;     /**< Window 2, Upper Left Coordinates, offset: 0x2E00B0 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW2;    /**< Window 2, Lower Right Coordinates, offset: 0x2E00B4 */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW2;         /**< Window 2, Reference CRC Value of Red Channel, offset: 0x2E00B8 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW2;         /**< Window 2, Reference CRC Value of Green Channel, offset: 0x2E00BC */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW2;         /**< Window 2, Reference CRC Value of Blue Channel, offset: 0x2E00C0 */
  __IO uint32_t DISENG_SIG2_STATS0_WINDOW2;        /**< Controls of Statistics Block 0, Window 2, offset: 0x2E00C4 */
  __IO uint32_t DISENG_SIG2_STATS1_WINDOW2;        /**< Controls of Statistics Block 0, Window 2, offset: 0x2E00C8 */
  __IO uint32_t DISENG_SIG2_MIN_REDSUM_WINDOW2;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2E00CC */
  __IO uint32_t DISENG_SIG2_MIN_GREENSUM_WINDOW2;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2E00D0 */
  __IO uint32_t DISENG_SIG2_MIN_BLUESUM_WINDOW2;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2E00D4 */
  __IO uint32_t DISENG_SIG2_MIN_LUMSUM_WINDOW2;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2E00D8 */
  __IO uint32_t DISENG_SIG2_MAX_REDSUM_WINDOW2;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2E00DC */
  __IO uint32_t DISENG_SIG2_MAX_GREENSUM_WINDOW2;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2E00E0 */
  __IO uint32_t DISENG_SIG2_MAX_BLUESUM_WINDOW2;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2E00E4 */
  __IO uint32_t DISENG_SIG2_MAX_LUMSUM_WINDOW2;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2E00E8 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW3;       /**< Window 3, Control settings, offset: 0x2E00EC */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW3;     /**< Window 3, Upper Left Coordinates, offset: 0x2E00F0 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW3;    /**< Window 3, Lower Right Coordinates, offset: 0x2E00F4 */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW3;         /**< Window 3, Reference CRC Value of Red Channel, offset: 0x2E00F8 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW3;         /**< Window 3, Reference CRC Value of Green Channel, offset: 0x2E00FC */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW3;         /**< Window 3, Reference CRC Value of Blue Channel, offset: 0x2E0100 */
  __IO uint32_t DISENG_SIG2_STATS0_WINDOW3;        /**< Controls of Statistics Block 0, Window 3, offset: 0x2E0104 */
  __IO uint32_t DISENG_SIG2_STATS1_WINDOW3;        /**< Controls of Statistics Block 0, Window 3, offset: 0x2E0108 */
  __IO uint32_t DISENG_SIG2_MIN_REDSUM_WINDOW3;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x2E010C */
  __IO uint32_t DISENG_SIG2_MIN_GREENSUM_WINDOW3;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x2E0110 */
  __IO uint32_t DISENG_SIG2_MIN_BLUESUM_WINDOW3;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x2E0114 */
  __IO uint32_t DISENG_SIG2_MIN_LUMSUM_WINDOW3;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x2E0118 */
  __IO uint32_t DISENG_SIG2_MAX_REDSUM_WINDOW3;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x2E011C */
  __IO uint32_t DISENG_SIG2_MAX_GREENSUM_WINDOW3;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x2E0120 */
  __IO uint32_t DISENG_SIG2_MAX_BLUESUM_WINDOW3;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x2E0124 */
  __IO uint32_t DISENG_SIG2_MAX_LUMSUM_WINDOW3;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x2E0128 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW4;       /**< Window 4, Control settings, offset: 0x2E012C */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW4;     /**< Window 4, Upper Left Coordinates, offset: 0x2E0130 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW4;    /**< Window 4, Lower Right Coordinates, offset: 0x2E0134 */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW4;         /**< Window 4, Reference CRC Value of Red Channel, offset: 0x2E0138 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW4;         /**< Window 4, Reference CRC Value of Green Channel, offset: 0x2E013C */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW4;         /**< Window 4, Reference CRC Value of Blue Channel, offset: 0x2E0140 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW5;       /**< Window 5, Control settings, offset: 0x2E0144 */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW5;     /**< Window 5, Upper Left Coordinates, offset: 0x2E0148 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW5;    /**< Window 5, Lower Right Coordinates, offset: 0x2E014C */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW5;         /**< Window 5, Reference CRC Value of Red Channel, offset: 0x2E0150 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW5;         /**< Window 5, Reference CRC Value of Green Channel, offset: 0x2E0154 */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW5;         /**< Window 5, Reference CRC Value of Blue Channel, offset: 0x2E0158 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW6;       /**< Window 6, Control settings, offset: 0x2E015C */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW6;     /**< Window 6, Upper Left Coordinates, offset: 0x2E0160 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW6;    /**< Window 6, Lower Right Coordinates, offset: 0x2E0164 */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW6;         /**< Window 6, Reference CRC Value of Red Channel, offset: 0x2E0168 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW6;         /**< Window 6, Reference CRC Value of Green Channel, offset: 0x2E016C */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW6;         /**< Window 6, Reference CRC Value of Blue Channel, offset: 0x2E0170 */
  __IO uint32_t DISENG_SIG2_CONTROL_WINDOW7;       /**< Window 7, Control settings, offset: 0x2E0174 */
  __IO uint32_t DISENG_SIG2_UPPERLEFT_WINDOW7;     /**< Window 7, Upper Left Coordinates, offset: 0x2E0178 */
  __IO uint32_t DISENG_SIG2_LOWERRIGHT_WINDOW7;    /**< Window 7, Lower Right Coordinates, offset: 0x2E017C */
  __IO uint32_t DISENG_SIG2_REF_R_WINDOW7;         /**< Window 7, Reference CRC Value of Red Channel, offset: 0x2E0180 */
  __IO uint32_t DISENG_SIG2_REF_G_WINDOW7;         /**< Window 7, Reference CRC Value of Green Channel, offset: 0x2E0184 */
  __IO uint32_t DISENG_SIG2_REF_B_WINDOW7;         /**< Window 7, Reference CRC Value of Blue Channel, offset: 0x2E0188 */
  __IO uint32_t DISENG_SIG2_CONTROL_CLUSTER0;      /**< Cluster 0, Control settings, offset: 0x2E018C */
  __IO uint32_t DISENG_SIG2_PIX0_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 0, offset: 0x2E0190 */
  __IO uint32_t DISENG_SIG2_PIX1_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 1, offset: 0x2E0194 */
  __IO uint32_t DISENG_SIG2_PIX2_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 2, offset: 0x2E0198 */
  __IO uint32_t DISENG_SIG2_PIX3_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 3, offset: 0x2E019C */
  __IO uint32_t DISENG_SIG2_REF0_CLUSTER0;         /**< Cluster 0, Reference Vector 0, offset: 0x2E01A0 */
  __IO uint32_t DISENG_SIG2_REF1_CLUSTER0;         /**< Cluster 0, Reference Vector 1, offset: 0x2E01A4 */
  __IO uint32_t DISENG_SIG2_CONTROL_CLUSTER1;      /**< Cluster 1, Control settings, offset: 0x2E01A8 */
  __IO uint32_t DISENG_SIG2_PIX0_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 0, offset: 0x2E01AC */
  __IO uint32_t DISENG_SIG2_PIX1_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 1, offset: 0x2E01B0 */
  __IO uint32_t DISENG_SIG2_PIX2_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 2, offset: 0x2E01B4 */
  __IO uint32_t DISENG_SIG2_PIX3_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 3, offset: 0x2E01B8 */
  __IO uint32_t DISENG_SIG2_REF0_CLUSTER1;         /**< Cluster 1, Reference Vector 0, offset: 0x2E01BC */
  __IO uint32_t DISENG_SIG2_REF1_CLUSTER1;         /**< Cluster 1, Reference Vector 1, offset: 0x2E01C0 */
  __IO uint32_t DISENG_SIG2_CONTROL_CLUSTER2;      /**< Cluster 2, Control settings, offset: 0x2E01C4 */
  __IO uint32_t DISENG_SIG2_PIX0_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 0, offset: 0x2E01C8 */
  __IO uint32_t DISENG_SIG2_PIX1_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 1, offset: 0x2E01CC */
  __IO uint32_t DISENG_SIG2_PIX2_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 2, offset: 0x2E01D0 */
  __IO uint32_t DISENG_SIG2_PIX3_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 3, offset: 0x2E01D4 */
  __IO uint32_t DISENG_SIG2_REF0_CLUSTER2;         /**< Cluster 2, Reference Vector 0, offset: 0x2E01D8 */
  __IO uint32_t DISENG_SIG2_REF1_CLUSTER2;         /**< Cluster 2, Reference Vector 1, offset: 0x2E01DC */
  __IO uint32_t DISENG_SIG2_CONTROL_CLUSTER3;      /**< Cluster 3, Control settings, offset: 0x2E01E0 */
  __IO uint32_t DISENG_SIG2_PIX0_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 0, offset: 0x2E01E4 */
  __IO uint32_t DISENG_SIG2_PIX1_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 1, offset: 0x2E01E8 */
  __IO uint32_t DISENG_SIG2_PIX2_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 2, offset: 0x2E01EC */
  __IO uint32_t DISENG_SIG2_PIX3_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 3, offset: 0x2E01F0 */
  __IO uint32_t DISENG_SIG2_REF0_CLUSTER3;         /**< Cluster 3, Reference Vector 0, offset: 0x2E01F4 */
  __IO uint32_t DISENG_SIG2_REF1_CLUSTER3;         /**< Cluster 3, Reference Vector 1, offset: 0x2E01F8 */
       uint8_t RESERVED_142[516];
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW0;         /**< Window 0, Measured CRC Value of Red Channel, offset: 0x2E0400 */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW0;         /**< Window 0, Measured CRC Value of Green Channel, offset: 0x2E0404 */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW0;         /**< Window 0, Measured CRC Value of Blue Channel, offset: 0x2E0408 */
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW1;         /**< Window 1, Measured CRC Value of Red Channel, offset: 0x2E040C */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW1;         /**< Window 1, Measured CRC Value of Green Channel, offset: 0x2E0410 */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW1;         /**< Window 1, Measured CRC Value of Blue Channel, offset: 0x2E0414 */
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW2;         /**< Window 2, Measured CRC Value of Red Channel, offset: 0x2E0418 */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW2;         /**< Window 2, Measured CRC Value of Green Channel, offset: 0x2E041C */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW2;         /**< Window 2, Measured CRC Value of Blue Channel, offset: 0x2E0420 */
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW3;         /**< Window 3, Measured CRC Value of Red Channel, offset: 0x2E0424 */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW3;         /**< Window 3, Measured CRC Value of Green Channel, offset: 0x2E0428 */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW3;         /**< Window 3, Measured CRC Value of Blue Channel, offset: 0x2E042C */
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW4;         /**< Window 4, Measured CRC Value of Red Channel, offset: 0x2E0430 */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW4;         /**< Window 4, Measured CRC Value of Green Channel, offset: 0x2E0434 */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW4;         /**< Window 4, Measured CRC Value of Blue Channel, offset: 0x2E0438 */
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW5;         /**< Window 5, Measured CRC Value of Red Channel, offset: 0x2E043C */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW5;         /**< Window 5, Measured CRC Value of Green Channel, offset: 0x2E0440 */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW5;         /**< Window 5, Measured CRC Value of Blue Channel, offset: 0x2E0444 */
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW6;         /**< Window 6, Measured CRC Value of Red Channel, offset: 0x2E0448 */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW6;         /**< Window 6, Measured CRC Value of Green Channel, offset: 0x2E044C */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW6;         /**< Window 6, Measured CRC Value of Blue Channel, offset: 0x2E0450 */
  __I  uint32_t DISENG_SIG2_CRC_R_WINDOW7;         /**< Window 7, Measured CRC Value of Red Channel, offset: 0x2E0454 */
  __I  uint32_t DISENG_SIG2_CRC_G_WINDOW7;         /**< Window 7, Measured CRC Value of Green Channel, offset: 0x2E0458 */
  __I  uint32_t DISENG_SIG2_CRC_B_WINDOW7;         /**< Window 7, Measured CRC Value of Blue Channel, offset: 0x2E045C */
  __I  uint32_t DISENG_SIG2_STATUS_CLUSTER0;       /**< Cluster 0, Status, offset: 0x2E0460 */
  __I  uint32_t DISENG_SIG2_COUNTER_CLUSTER0;      /**< Cluster 0, Match and Error Counters, offset: 0x2E0464 */
  __I  uint32_t DISENG_SIG2_VECTOR0_CLUSTER0;      /**< Cluster 0, Result Vector 0, RGB bitslices[1:0], offset: 0x2E0468 */
  __I  uint32_t DISENG_SIG2_VECTOR1_CLUSTER0;      /**< Cluster 0, Result Vector 1, RGB bitslices[3:2], offset: 0x2E046C */
  __I  uint32_t DISENG_SIG2_VECTOR2_CLUSTER0;      /**< Cluster 0, Result Vector 2, RGB bitslices[5:4], offset: 0x2E0470 */
  __I  uint32_t DISENG_SIG2_VECTOR3_CLUSTER0;      /**< Cluster 0, Result Vector 3, RGB bitslices[7:6], offset: 0x2E0474 */
  __I  uint32_t DISENG_SIG2_STATUS_CLUSTER1;       /**< Cluster 1, Status, offset: 0x2E0478 */
  __I  uint32_t DISENG_SIG2_COUNTER_CLUSTER1;      /**< Cluster 1, Match and Error Counters, offset: 0x2E047C */
  __I  uint32_t DISENG_SIG2_VECTOR0_CLUSTER1;      /**< Cluster 1, Result Vector 0, RGB bitslices[1:0], offset: 0x2E0480 */
  __I  uint32_t DISENG_SIG2_VECTOR1_CLUSTER1;      /**< Cluster 1, Result Vector 1, RGB bitslices[3:2], offset: 0x2E0484 */
  __I  uint32_t DISENG_SIG2_VECTOR2_CLUSTER1;      /**< Cluster 1, Result Vector 2, RGB bitslices[5:4], offset: 0x2E0488 */
  __I  uint32_t DISENG_SIG2_VECTOR3_CLUSTER1;      /**< Cluster 1, Result Vector 3, RGB bitslices[7:6], offset: 0x2E048C */
  __I  uint32_t DISENG_SIG2_STATUS_CLUSTER2;       /**< Cluster 2, Status, offset: 0x2E0490 */
  __I  uint32_t DISENG_SIG2_COUNTER_CLUSTER2;      /**< Cluster 2, Match and Error Counters, offset: 0x2E0494 */
  __I  uint32_t DISENG_SIG2_VECTOR0_CLUSTER2;      /**< Cluster 2, Result Vector 0, RGB bitslices[1:0], offset: 0x2E0498 */
  __I  uint32_t DISENG_SIG2_VECTOR1_CLUSTER2;      /**< Cluster 2, Result Vector 1, RGB bitslices[3:2], offset: 0x2E049C */
  __I  uint32_t DISENG_SIG2_VECTOR2_CLUSTER2;      /**< Cluster 2, Result Vector 2, RGB bitslices[5:4], offset: 0x2E04A0 */
  __I  uint32_t DISENG_SIG2_VECTOR3_CLUSTER2;      /**< Cluster 2, Result Vector 3, RGB bitslices[7:6], offset: 0x2E04A4 */
  __I  uint32_t DISENG_SIG2_STATUS_CLUSTER3;       /**< Cluster 3, Status, offset: 0x2E04A8 */
  __I  uint32_t DISENG_SIG2_COUNTER_CLUSTER3;      /**< Cluster 3, Match and Error Counters, offset: 0x2E04AC */
  __I  uint32_t DISENG_SIG2_VECTOR0_CLUSTER3;      /**< Cluster 3, Result Vector 0, RGB bitslices[1:0], offset: 0x2E04B0 */
  __I  uint32_t DISENG_SIG2_VECTOR1_CLUSTER3;      /**< Cluster 3, Result Vector 1, RGB bitslices[3:2], offset: 0x2E04B4 */
  __I  uint32_t DISENG_SIG2_VECTOR2_CLUSTER3;      /**< Cluster 3, Result Vector 2, RGB bitslices[5:4], offset: 0x2E04B8 */
  __I  uint32_t DISENG_SIG2_VECTOR3_CLUSTER3;      /**< Cluster 3, Result Vector 3, RGB bitslices[7:6], offset: 0x2E04BC */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS0_WIN0;    /**< Pixel Counter Register, Statistics Block 0, Window 0, offset: 0x2E04C0 */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS0_WIN0;    /**< Pixel Max Values Register, Statistics Block 0, Window 0, offset: 0x2E04C4 */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS0_WIN0;    /**< Pixel Min Values Register, Statistics Block 0, Window 0, offset: 0x2E04C8 */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS0_WIN0;    /**< Red Component Sum Register, Statistics Block 0, Window 0, offset: 0x2E04CC */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS0_WIN0;  /**< Green Component Sum Register, Statistics Block 0, Window 0, offset: 0x2E04D0 */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS0_WIN0;   /**< Blue Component Sum Register, Statistics Block 0, Window 0, offset: 0x2E04D4 */
  __I  uint32_t DISENG_SIG2_LUMSUM_STATS0_WIN0;    /**< Luminance Sum Register, Statistics Block 0, Window 0, offset: 0x2E04D8 */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS1_WIN0;    /**< Pixel Counter Register, Statistics Block 1, Window 0, offset: 0x2E04DC */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS1_WIN0;    /**< Pixel Max Values Register, Statistics Block 1, Window 0, offset: 0x2E04E0 */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS1_WIN0;    /**< Pixel Min Values Register, Statistics Block 1, Window 0, offset: 0x2E04E4 */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS1_WIN0;    /**< Red Component Sum Register, Statistics Block 1, Window 0, offset: 0x2E04E8 */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS1_WIN0;  /**< Green Component Sum Register, Statistics Block 1, Window 0, offset: 0x2E04EC */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS1_WIN0;   /**< Blue Component Sum Register, Statistics Block 1, Window 0, offset: 0x2E04F0 */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS0_WIN1;    /**< Pixel Counter Register, Statistics Block 0, Window 1, offset: 0x2E04F4 */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS0_WIN1;    /**< Pixel Max Values Register, Statistics Block 0, Window 1, offset: 0x2E04F8 */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS0_WIN1;    /**< Pixel Min Values Register, Statistics Block 0, Window 1, offset: 0x2E04FC */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS0_WIN1;    /**< Red Component Sum Register, Statistics Block 0, Window 1, offset: 0x2E0500 */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS0_WIN1;  /**< Green Component Sum Register, Statistics Block 0, Window 1, offset: 0x2E0504 */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS0_WIN1;   /**< Blue Component Sum Register, Statistics Block 0, Window 1, offset: 0x2E0508 */
  __I  uint32_t DISENG_SIG2_LUMSUM_STATS0_WIN1;    /**< Luminance Sum Register, Statistics Block 0, Window 1, offset: 0x2E050C */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS1_WIN1;    /**< Pixel Counter Register, Statistics Block 1, Window 1, offset: 0x2E0510 */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS1_WIN1;    /**< Pixel Max Values Register, Statistics Block 1, Window 1, offset: 0x2E0514 */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS1_WIN1;    /**< Pixel Min Values Register, Statistics Block 1, Window 1, offset: 0x2E0518 */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS1_WIN1;    /**< Red Component Sum Register, Statistics Block 1, Window 1, offset: 0x2E051C */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS1_WIN1;  /**< Green Component Sum Register, Statistics Block 1, Window 1, offset: 0x2E0520 */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS1_WIN1;   /**< Blue Component Sum Register, Statistics Block 1, Window 1, offset: 0x2E0524 */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS0_WIN2;    /**< Pixel Counter Register, Statistics Block 0, Window 2, offset: 0x2E0528 */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS0_WIN2;    /**< Pixel Max Values Register, Statistics Block 0, Window 2, offset: 0x2E052C */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS0_WIN2;    /**< Pixel Min Values Register, Statistics Block 0, Window 2, offset: 0x2E0530 */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS0_WIN2;    /**< Red Component Sum Register, Statistics Block 0, Window 2, offset: 0x2E0534 */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS0_WIN2;  /**< Green Component Sum Register, Statistics Block 0, Window 2, offset: 0x2E0538 */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS0_WIN2;   /**< Blue Component Sum Register, Statistics Block 0, Window 2, offset: 0x2E053C */
  __I  uint32_t DISENG_SIG2_LUMSUM_STATS0_WIN2;    /**< Luminance Sum Register, Statistics Block 0, Window 2, offset: 0x2E0540 */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS1_WIN2;    /**< Pixel Counter Register, Statistics Block 1, Window 2, offset: 0x2E0544 */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS1_WIN2;    /**< Pixel Max Values Register, Statistics Block 1, Window 2, offset: 0x2E0548 */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS1_WIN2;    /**< Pixel Min Values Register, Statistics Block 1, Window 2, offset: 0x2E054C */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS1_WIN2;    /**< Red Component Sum Register, Statistics Block 1, Window 2, offset: 0x2E0550 */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS1_WIN2;  /**< Green Component Sum Register, Statistics Block 1, Window 2, offset: 0x2E0554 */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS1_WIN2;   /**< Blue Component Sum Register, Statistics Block 1, Window 2, offset: 0x2E0558 */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS0_WIN3;    /**< Pixel Counter Register, Statistics Block 0, Window 3, offset: 0x2E055C */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS0_WIN3;    /**< Pixel Max Values Register, Statistics Block 0, Window 3, offset: 0x2E0560 */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS0_WIN3;    /**< Pixel Min Values Register, Statistics Block 0, Window 3, offset: 0x2E0564 */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS0_WIN3;    /**< Red Component Sum Register, Statistics Block 0, Window 3, offset: 0x2E0568 */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS0_WIN3;  /**< Green Component Sum Register, Statistics Block 0, Window 3, offset: 0x2E056C */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS0_WIN3;   /**< Blue Component Sum Register, Statistics Block 0, Window 3, offset: 0x2E0570 */
  __I  uint32_t DISENG_SIG2_LUMSUM_STATS0_WIN3;    /**< Luminance Sum Register, Statistics Block 0, Window 3, offset: 0x2E0574 */
  __I  uint32_t DISENG_SIG2_PIXCNT_STATS1_WIN3;    /**< Pixel Counter Register, Statistics Block 1, Window 3, offset: 0x2E0578 */
  __I  uint32_t DISENG_SIG2_PIXMAX_STATS1_WIN3;    /**< Pixel Max Values Register, Statistics Block 1, Window 3, offset: 0x2E057C */
  __I  uint32_t DISENG_SIG2_PIXMIN_STATS1_WIN3;    /**< Pixel Min Values Register, Statistics Block 1, Window 3, offset: 0x2E0580 */
  __I  uint32_t DISENG_SIG2_REDSUM_STATS1_WIN3;    /**< Red Component Sum Register, Statistics Block 1, Window 3, offset: 0x2E0584 */
  __I  uint32_t DISENG_SIG2_GREENSUM_STATS1_WIN3;  /**< Green Component Sum Register, Statistics Block 1, Window 3, offset: 0x2E0588 */
  __I  uint32_t DISENG_SIG2_BLUESUM_STATS1_WIN3;   /**< Blue Component Sum Register, Statistics Block 1, Window 3, offset: 0x2E058C */
       uint8_t RESERVED_143[2672];
  __O  uint32_t DISENG_SIG2CFG_LOCKUNLOCK0;        /**< Register to change the protection status of this address block., offset: 0x2E1000 */
  __I  uint32_t DISENG_SIG2CFG_LOCKSTATUS0;        /**< Protection status of this address block., offset: 0x2E1004 */
  __IO uint32_t DISENG_SIG2CFG_SRCSELECT;          /**< Tap selection for sig2., offset: 0x2E1008 */
       uint8_t RESERVED_144[61428];
  __O  uint32_t DISENG_MATRIX0_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x2F0000 */
  __I  uint32_t DISENG_MATRIX0_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x2F0004 */
  __IO uint32_t DISENG_MATRIX0_STATICCONTROL;      /**< Color Matrix static control register, offset: 0x2F0008 */
  __IO uint32_t DISENG_MATRIX0_CONTROL;            /**< Color Matrix control register, offset: 0x2F000C */
  __IO uint32_t DISENG_MATRIX0_RED0;               /**< Matrix values for calculation of the red output value., offset: 0x2F0010 */
  __IO uint32_t DISENG_MATRIX0_RED1;               /**< Matrix values for calculation of the red output value., offset: 0x2F0014 */
  __IO uint32_t DISENG_MATRIX0_GREEN0;             /**< Matrix values for calculation of the green output value., offset: 0x2F0018 */
  __IO uint32_t DISENG_MATRIX0_GREEN1;             /**< Matrix values for calculation of the green output value., offset: 0x2F001C */
  __IO uint32_t DISENG_MATRIX0_BLUE0;              /**< Matrix values for calculation of the blue output value., offset: 0x2F0020 */
  __IO uint32_t DISENG_MATRIX0_BLUE1;              /**< Matrix values for calculation of the blue output value., offset: 0x2F0024 */
       uint8_t RESERVED_145[8];
  __IO uint32_t DISENG_MATRIX0_OFFSETVECTOR0;      /**< Offset vectors for red and green output., offset: 0x2F0030 */
  __IO uint32_t DISENG_MATRIX0_OFFSETVECTOR1;      /**< Offset vectors for blue and alpha output., offset: 0x2F0034 */
  __I  uint32_t DISENG_MATRIX0_LASTCONTROLWORD;    /**< Value of last received control word, for debugging., offset: 0x2F0038 */
       uint8_t RESERVED_146[65476];
  __O  uint32_t DISENG_LUT3D0_LOCKUNLOCK;          /**< Register to change the protection status of this address block., offset: 0x300000 */
  __I  uint32_t DISENG_LUT3D0_LOCKSTATUS;          /**< Protection status of this address block., offset: 0x300004 */
  __IO uint32_t DISENG_LUT3D0_STATICCONTROL;       /**< lut3d static control register, offset: 0x300008 */
  __IO uint32_t DISENG_LUT3D0_CONTROL;             /**< lut3d control register, offset: 0x30000C */
       uint8_t RESERVED_147[8176];
  __IO uint32_t DISENG_LUT3D0_LUT[DISPLAY_SEERIS_DISENG_LUT3D0_LUT_COUNT]; /**< Look Up Table, array offset: 0x302000, array step: 0x4 */
       uint8_t RESERVED_148[49152];
  __O  uint32_t DISENG_DITHER0_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x310000 */
  __I  uint32_t DISENG_DITHER0_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x310004 */
  __IO uint32_t DISENG_DITHER0_CONTROL;            /**< Dither Unit common control., offset: 0x310008 */
  __IO uint32_t DISENG_DITHER0_DITHERCONTROL10BITS; /**< Dither Unit processing control., offset: 0x31000C */
  __IO uint32_t DISENG_DITHER0_DITHERCONTROL12BITS; /**< Dither Unit processing control., offset: 0x310010 */
       uint8_t RESERVED_149[4076];
  __O  uint32_t DISENG_DITHER0CFG_LOCKUNLOCK0;     /**< Register to change the protection status of this address block., offset: 0x311000 */
  __I  uint32_t DISENG_DITHER0CFG_LOCKSTATUS0;     /**< Protection status of this address block., offset: 0x311004 */
  __IO uint32_t DISENG_DITHER0CFG_POLARITYCTRL0;   /**< Polarity control for display stream #0., offset: 0x311008 */
       uint8_t RESERVED_150[61428];
  __O  uint32_t DISENG_DOMAINBLEND1_LOCKUNLOCK;    /**< Register to change the protection status of this address block., offset: 0x320000 */
  __I  uint32_t DISENG_DOMAINBLEND1_LOCKSTATUS;    /**< Protection status of this address block., offset: 0x320004 */
  __IO uint32_t DISENG_DOMAINBLEND1_STATICCONTROL; /**< Static control settings., offset: 0x320008 */
  __O  uint32_t DISENG_DOMAINBLEND1_CONTROLTRIGGER; /**< Shadow load and sequence complete triggers., offset: 0x32000C */
  __IO uint32_t DISENG_DOMAINBLEND1_MODECONTROL;   /**< Operation mode of the domainblend, offset: 0x320010 */
  __IO uint32_t DISENG_DOMAINBLEND1_ALPHACONTROL;  /**< Alpha mask settings., offset: 0x320014 */
  __IO uint32_t DISENG_DOMAINBLEND1_BLENDCONTROL;  /**< Options for blend operations, offset: 0x320018 */
  __I  uint32_t DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK; /**< The status of primary and secondary sources waiting for pixels., offset: 0x32001C */
  __O  uint32_t DISENG_DOMAINBLEND1_LOCKUP_CLEAR;  /**< The register can be used to internally reset domainblend if it gets stuck by pending pixels from one source., offset: 0x320020 */
  __IO uint32_t DISENG_DOMAINBLEND1_DELAY_COUNTER_EN; /**< The register enables the delay and error counters that report on the delay on prim and sec sources., offset: 0x320024 */
  __I  uint32_t DISENG_DOMAINBLEND1_DELAY_COUNTER_PRIM; /**< The number of inavtive clock cycles during which the domainblend is waiting for pixels from primary source., offset: 0x320028 */
  __I  uint32_t DISENG_DOMAINBLEND1_DELAY_COUNTER_SEC; /**< The number of inavtive clock cycles during which the domainblend is waiting for pixels from secondary source., offset: 0x32002C */
  __I  uint32_t DISENG_DOMAINBLEND1_ERROR_COUNTER_PRIM; /**< The number of inavtive clock cycles on the primary source till the synchronization loss of domainblend., offset: 0x320030 */
  __I  uint32_t DISENG_DOMAINBLEND1_ERROR_COUNTER_SEC; /**< The number of inavtive clock cycles on the secondary source till the synchronization loss of domainblend., offset: 0x320034 */
  __I  uint32_t DISENG_DOMAINBLEND1_SOURCE_STATUS; /**< Source protocol error detection for primary and secondary sources, offset: 0x320038 */
  __O  uint32_t DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR; /**< Clearing source protocol error status for both primary and secondary sources, offset: 0x32003C */
  __I  uint32_t DISENG_DOMAINBLEND1_PRIMCONTROLWORD; /**< Value of last received primary control word, for debugging, offset: 0x320040 */
  __I  uint32_t DISENG_DOMAINBLEND1_SECCONTROLWORD; /**< Value of last received secondary control word, for debugging, offset: 0x320044 */
       uint8_t RESERVED_151[65464];
  __O  uint32_t DISENG_FRAMEGEN1_LOCKUNLOCK;       /**< Register to change the protection status of this address block., offset: 0x330000 */
  __I  uint32_t DISENG_FRAMEGEN1_LOCKSTATUS;       /**< Protection status of this address block., offset: 0x330004 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSTCTRL;         /**< FrameGen Static Control Register, offset: 0x330008 */
  __IO uint32_t DISENG_FRAMEGEN1_HTCFG1;           /**< FrameGen Horizontal Timing Config Register 1, offset: 0x33000C */
  __IO uint32_t DISENG_FRAMEGEN1_HTCFG2;           /**< FrameGen Horizontal Timing Config Register 2, offset: 0x330010 */
  __IO uint32_t DISENG_FRAMEGEN1_VTCFG1;           /**< FrameGen Vertical Timing Config Register 1, offset: 0x330014 */
  __IO uint32_t DISENG_FRAMEGEN1_VTCFG2;           /**< FrameGen Vertical Timing Config Register 2, offset: 0x330018 */
  __IO uint32_t DISENG_FRAMEGEN1_INT0CONFIG;       /**< Coordinates of the trigger point for generation of the Int0 interrupt signal, offset: 0x33001C */
  __IO uint32_t DISENG_FRAMEGEN1_INT1CONFIG;       /**< Coordinates of the trigger point for generation of the Int1 interrupt signal, offset: 0x330020 */
  __IO uint32_t DISENG_FRAMEGEN1_INT2CONFIG;       /**< Coordinates of the trigger point for generation of the Int2 interrupt signal, offset: 0x330024 */
  __IO uint32_t DISENG_FRAMEGEN1_INT3CONFIG;       /**< Coordinates of the trigger point for generation of the Int3 interrupt signal, offset: 0x330028 */
  __IO uint32_t DISENG_FRAMEGEN1_PKICKCONFIG;      /**< Coordinates of the trigger point for generation of the primary kick signal, offset: 0x33002C */
  __IO uint32_t DISENG_FRAMEGEN1_SKICKCONFIG;      /**< Coordinates of the trigger point for generation of the secondary kick signal, offset: 0x330030 */
  __IO uint32_t DISENG_FRAMEGEN1_SECSTATCONFIG;    /**< Configuration register for controlling the behaviour of the SecSyncStat field in the FgSecChStat register., offset: 0x330034 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR1;          /**< FrameGen Skew Regulation Control Register 1., offset: 0x330038 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR2;          /**< FrameGen Skew Regulation Control Register 2, offset: 0x33003C */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR3;          /**< FrameGen Skew Regulation Control Register 3, offset: 0x330040 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR4;          /**< FrameGen Skew Regulation Control Register 4, offset: 0x330044 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR5;          /**< FrameGen Skew Regulation Control Register 5, offset: 0x330048 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR6;          /**< FrameGen Skew Regulation Control Register 6, offset: 0x33004C */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR7;          /**< FrameGen Skew Regulation Control Register 7, offset: 0x330050 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR8;          /**< FrameGen Skew Regulation Control Register 8, offset: 0x330054 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR9;          /**< FrameGen Skew Regulation Control Register 9, offset: 0x330058 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR10;         /**< FrameGen Skew Regulation Control Register 10, offset: 0x33005C */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR11;         /**< FrameGen Skew Regulation Control Register 11, offset: 0x330060 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR12;         /**< FrameGen Skew Regulation Control Register 12, offset: 0x330064 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR13;         /**< FrameGen Skew Regulation Control Register 13, offset: 0x330068 */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR14;         /**< FrameGen Skew Regulation Control Register 14, offset: 0x33006C */
  __IO uint32_t DISENG_FRAMEGEN1_FGSRCR15;         /**< FrameGen Skew Regulation Control Register 15, offset: 0x330070 */
  __IO uint32_t DISENG_FRAMEGEN1_FGKSDR;           /**< FrameGen Kick System Debug Register, offset: 0x330074 */
  __IO uint32_t DISENG_FRAMEGEN1_PACFG;            /**< FrameGen Primary Area Config Register 1 (shadowed), offset: 0x330078 */
  __IO uint32_t DISENG_FRAMEGEN1_SACFG;            /**< FrameGen Secondary Area Config Register 1 (shadowed), offset: 0x33007C */
  __IO uint32_t DISENG_FRAMEGEN1_FGINCTRL;         /**< FrameGen Input Control Register (shadowed), offset: 0x330080 */
  __IO uint32_t DISENG_FRAMEGEN1_FGINCTRLPANIC;    /**< FrameGen Input Control Panic Register (shadowed), offset: 0x330084 */
  __IO uint32_t DISENG_FRAMEGEN1_FGCCR;            /**< FrameGen Constant Color Register (shadowed), offset: 0x330088 */
  __IO uint32_t DISENG_FRAMEGEN1_FGENABLE;         /**< FrameGen Enable Register, offset: 0x33008C */
  __O  uint32_t DISENG_FRAMEGEN1_FGSLR;            /**< FrameGen Shadow Load Register, offset: 0x330090 */
  __I  uint32_t DISENG_FRAMEGEN1_FGENSTS;          /**< FrameGen Enable Status Register, offset: 0x330094 */
  __I  uint32_t DISENG_FRAMEGEN1_FGTIMESTAMP;      /**< Time stamp status., offset: 0x330098 */
  __I  uint32_t DISENG_FRAMEGEN1_FGCHSTAT;         /**< FrameGen Channel Status Register, offset: 0x33009C */
  __O  uint32_t DISENG_FRAMEGEN1_FGCHSTATCLR;      /**< FrameGen Channel Status Clear Register, offset: 0x3300A0 */
  __I  uint32_t DISENG_FRAMEGEN1_FGSKEWMON;        /**< FrameGen Skew Monitor Register for Secondary Channel Skew Control, offset: 0x3300A4 */
  __I  uint32_t DISENG_FRAMEGEN1_FGPFIFOMIN;       /**< FrameGen Primary FIFO Min Fill Register, offset: 0x3300A8 */
  __I  uint32_t DISENG_FRAMEGEN1_FGPFIFOMAX;       /**< FrameGen Primary FIFO Max Fill Register, offset: 0x3300AC */
  __O  uint32_t DISENG_FRAMEGEN1_FGPFIFOFILLCLR;   /**< FrameGen Primary FIFO Fill Clear Register, offset: 0x3300B0 */
  __IO uint32_t DISENG_FRAMEGEN1_FGPFIFOTRES;      /**< FrameGen Primary FIFO Thresholds, offset: 0x3300B4 */
  __I  uint32_t DISENG_FRAMEGEN1_FGSFIFOMIN;       /**< FrameGen Secondary FIFO Min Fill Register, offset: 0x3300B8 */
  __I  uint32_t DISENG_FRAMEGEN1_FGSFIFOMAX;       /**< FrameGen Secondary FIFO Max Fill Register, offset: 0x3300BC */
  __O  uint32_t DISENG_FRAMEGEN1_FGSFIFOFILLCLR;   /**< FrameGen Secondary FIFO Fill Clear Register, offset: 0x3300C0 */
  __I  uint32_t DISENG_FRAMEGEN1_FGSREPD;          /**< FrameGen Skew Regulation ExtraPolation Debug Register, offset: 0x3300C4 */
  __I  uint32_t DISENG_FRAMEGEN1_FGSRFTD;          /**< FrameGen Skew Regulation Frame Total Debug Register, offset: 0x3300C8 */
  __I  uint32_t DISENG_FRAMEGEN1_FGSRCSHTOTAL;     /**< FrameGen Skew Regulation External Sync HTotal Debug Register, offset: 0x3300CC */
  __I  uint32_t DISENG_FRAMEGEN1_FGSRCLOCKDIV;     /**< FrameGen Skew Regulation External PLL Clock divider, offset: 0x3300D0 */
  __I  uint32_t DISENG_FRAMEGEN1_FGSL;             /**< FrameGen Scanline Register, offset: 0x3300D4 */
       uint8_t RESERVED_152[65320];
  __O  uint32_t DISENG_SIG1_LOCKUNLOCK;            /**< Register to change the protection status of this address block, offset: 0x340000 */
  __I  uint32_t DISENG_SIG1_LOCKSTATUS;            /**< Protection status of this address block, offset: 0x340004 */
  __IO uint32_t DISENG_SIG1_STATICCONTROL;         /**< Global configuration, offset: 0x340008 */
  __IO uint32_t DISENG_SIG1_ERRORTHRESHOLD;        /**< Set and reset thresholds applying to Window_Error and Cluster_Error interrupts and status bits, offset: 0x34000C */
  __IO uint32_t DISENG_SIG1_MATCHTHRESHOLD;        /**< Set and reset thresholds applying to Match interrupt and status bits, offset: 0x340010 */
  __IO uint32_t DISENG_SIG1_PANICCOLOR;            /**< Overlay color for evaluation windows in panic mode, offset: 0x340014 */
  __IO uint32_t DISENG_SIG1_SHADOWLOAD;            /**< Shadow load control register, offset: 0x340018 */
  __IO uint32_t DISENG_SIG1_CONTINUOUSMODE;        /**< Signature operation mode control, offset: 0x34001C */
  __O  uint32_t DISENG_SIG1_SOFTWAREKICK;          /**< Signature measurement trigger, offset: 0x340020 */
  __IO uint32_t DISENG_SIG1_SKIPWINDOW;            /**< Enable skipping window feature., offset: 0x340024 */
  __I  uint32_t DISENG_SIG1_STATUS;                /**< Signature evaluation status, offset: 0x340028 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW0;       /**< Window 0, Control settings, offset: 0x34002C */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW0;     /**< Window 0, Upper Left Coordinates, offset: 0x340030 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW0;    /**< Window 0, Lower Right Coordinates, offset: 0x340034 */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW0;         /**< Window 0, Reference CRC Value of Red Channel, offset: 0x340038 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW0;         /**< Window 0, Reference CRC Value of Green Channel, offset: 0x34003C */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW0;         /**< Window 0, Reference CRC Value of Blue Channel, offset: 0x340040 */
  __IO uint32_t DISENG_SIG1_STATS0_WINDOW0;        /**< Controls of Statistics Block 0, Window 0, offset: 0x340044 */
  __IO uint32_t DISENG_SIG1_STATS1_WINDOW0;        /**< Controls of Statistics Block 0, Window 0, offset: 0x340048 */
  __IO uint32_t DISENG_SIG1_MIN_REDSUM_WINDOW0;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x34004C */
  __IO uint32_t DISENG_SIG1_MIN_GREENSUM_WINDOW0;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x340050 */
  __IO uint32_t DISENG_SIG1_MIN_BLUESUM_WINDOW0;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x340054 */
  __IO uint32_t DISENG_SIG1_MIN_LUMSUM_WINDOW0;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x340058 */
  __IO uint32_t DISENG_SIG1_MAX_REDSUM_WINDOW0;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x34005C */
  __IO uint32_t DISENG_SIG1_MAX_GREENSUM_WINDOW0;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x340060 */
  __IO uint32_t DISENG_SIG1_MAX_BLUESUM_WINDOW0;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x340064 */
  __IO uint32_t DISENG_SIG1_MAX_LUMSUM_WINDOW0;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x340068 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW1;       /**< Window 1, Control settings, offset: 0x34006C */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW1;     /**< Window 1, Upper Left Coordinates, offset: 0x340070 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW1;    /**< Window 1, Lower Right Coordinates, offset: 0x340074 */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW1;         /**< Window 1, Reference CRC Value of Red Channel, offset: 0x340078 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW1;         /**< Window 1, Reference CRC Value of Green Channel, offset: 0x34007C */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW1;         /**< Window 1, Reference CRC Value of Blue Channel, offset: 0x340080 */
  __IO uint32_t DISENG_SIG1_STATS0_WINDOW1;        /**< Controls of Statistics Block 0, Window 1, offset: 0x340084 */
  __IO uint32_t DISENG_SIG1_STATS1_WINDOW1;        /**< Controls of Statistics Block 0, Window 1, offset: 0x340088 */
  __IO uint32_t DISENG_SIG1_MIN_REDSUM_WINDOW1;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x34008C */
  __IO uint32_t DISENG_SIG1_MIN_GREENSUM_WINDOW1;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x340090 */
  __IO uint32_t DISENG_SIG1_MIN_BLUESUM_WINDOW1;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x340094 */
  __IO uint32_t DISENG_SIG1_MIN_LUMSUM_WINDOW1;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x340098 */
  __IO uint32_t DISENG_SIG1_MAX_REDSUM_WINDOW1;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x34009C */
  __IO uint32_t DISENG_SIG1_MAX_GREENSUM_WINDOW1;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x3400A0 */
  __IO uint32_t DISENG_SIG1_MAX_BLUESUM_WINDOW1;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x3400A4 */
  __IO uint32_t DISENG_SIG1_MAX_LUMSUM_WINDOW1;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x3400A8 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW2;       /**< Window 2, Control settings, offset: 0x3400AC */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW2;     /**< Window 2, Upper Left Coordinates, offset: 0x3400B0 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW2;    /**< Window 2, Lower Right Coordinates, offset: 0x3400B4 */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW2;         /**< Window 2, Reference CRC Value of Red Channel, offset: 0x3400B8 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW2;         /**< Window 2, Reference CRC Value of Green Channel, offset: 0x3400BC */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW2;         /**< Window 2, Reference CRC Value of Blue Channel, offset: 0x3400C0 */
  __IO uint32_t DISENG_SIG1_STATS0_WINDOW2;        /**< Controls of Statistics Block 0, Window 2, offset: 0x3400C4 */
  __IO uint32_t DISENG_SIG1_STATS1_WINDOW2;        /**< Controls of Statistics Block 0, Window 2, offset: 0x3400C8 */
  __IO uint32_t DISENG_SIG1_MIN_REDSUM_WINDOW2;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x3400CC */
  __IO uint32_t DISENG_SIG1_MIN_GREENSUM_WINDOW2;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x3400D0 */
  __IO uint32_t DISENG_SIG1_MIN_BLUESUM_WINDOW2;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x3400D4 */
  __IO uint32_t DISENG_SIG1_MIN_LUMSUM_WINDOW2;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x3400D8 */
  __IO uint32_t DISENG_SIG1_MAX_REDSUM_WINDOW2;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x3400DC */
  __IO uint32_t DISENG_SIG1_MAX_GREENSUM_WINDOW2;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x3400E0 */
  __IO uint32_t DISENG_SIG1_MAX_BLUESUM_WINDOW2;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x3400E4 */
  __IO uint32_t DISENG_SIG1_MAX_LUMSUM_WINDOW2;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x3400E8 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW3;       /**< Window 3, Control settings, offset: 0x3400EC */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW3;     /**< Window 3, Upper Left Coordinates, offset: 0x3400F0 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW3;    /**< Window 3, Lower Right Coordinates, offset: 0x3400F4 */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW3;         /**< Window 3, Reference CRC Value of Red Channel, offset: 0x3400F8 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW3;         /**< Window 3, Reference CRC Value of Green Channel, offset: 0x3400FC */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW3;         /**< Window 3, Reference CRC Value of Blue Channel, offset: 0x340100 */
  __IO uint32_t DISENG_SIG1_STATS0_WINDOW3;        /**< Controls of Statistics Block 0, Window 3, offset: 0x340104 */
  __IO uint32_t DISENG_SIG1_STATS1_WINDOW3;        /**< Controls of Statistics Block 0, Window 3, offset: 0x340108 */
  __IO uint32_t DISENG_SIG1_MIN_REDSUM_WINDOW3;    /**< Minimum sum-threshold for red component of the pixels in a window., offset: 0x34010C */
  __IO uint32_t DISENG_SIG1_MIN_GREENSUM_WINDOW3;  /**< Minimum sum-threshold for green component of the pixels in a window., offset: 0x340110 */
  __IO uint32_t DISENG_SIG1_MIN_BLUESUM_WINDOW3;   /**< Minimum sum-threshold for blue component of the pixels in a window., offset: 0x340114 */
  __IO uint32_t DISENG_SIG1_MIN_LUMSUM_WINDOW3;    /**< Minimum sum-threshold for luminance of the pixels in a window., offset: 0x340118 */
  __IO uint32_t DISENG_SIG1_MAX_REDSUM_WINDOW3;    /**< Maximum sum-threshold for red component of the pixels in a window., offset: 0x34011C */
  __IO uint32_t DISENG_SIG1_MAX_GREENSUM_WINDOW3;  /**< Maximum sum-threshold for green component of the pixels in a window., offset: 0x340120 */
  __IO uint32_t DISENG_SIG1_MAX_BLUESUM_WINDOW3;   /**< Maximum sum-threshold for blue component of the pixels in a window., offset: 0x340124 */
  __IO uint32_t DISENG_SIG1_MAX_LUMSUM_WINDOW3;    /**< Maximum sum-threshold for luminance of the pixels in a window., offset: 0x340128 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW4;       /**< Window 4, Control settings, offset: 0x34012C */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW4;     /**< Window 4, Upper Left Coordinates, offset: 0x340130 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW4;    /**< Window 4, Lower Right Coordinates, offset: 0x340134 */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW4;         /**< Window 4, Reference CRC Value of Red Channel, offset: 0x340138 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW4;         /**< Window 4, Reference CRC Value of Green Channel, offset: 0x34013C */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW4;         /**< Window 4, Reference CRC Value of Blue Channel, offset: 0x340140 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW5;       /**< Window 5, Control settings, offset: 0x340144 */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW5;     /**< Window 5, Upper Left Coordinates, offset: 0x340148 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW5;    /**< Window 5, Lower Right Coordinates, offset: 0x34014C */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW5;         /**< Window 5, Reference CRC Value of Red Channel, offset: 0x340150 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW5;         /**< Window 5, Reference CRC Value of Green Channel, offset: 0x340154 */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW5;         /**< Window 5, Reference CRC Value of Blue Channel, offset: 0x340158 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW6;       /**< Window 6, Control settings, offset: 0x34015C */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW6;     /**< Window 6, Upper Left Coordinates, offset: 0x340160 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW6;    /**< Window 6, Lower Right Coordinates, offset: 0x340164 */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW6;         /**< Window 6, Reference CRC Value of Red Channel, offset: 0x340168 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW6;         /**< Window 6, Reference CRC Value of Green Channel, offset: 0x34016C */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW6;         /**< Window 6, Reference CRC Value of Blue Channel, offset: 0x340170 */
  __IO uint32_t DISENG_SIG1_CONTROL_WINDOW7;       /**< Window 7, Control settings, offset: 0x340174 */
  __IO uint32_t DISENG_SIG1_UPPERLEFT_WINDOW7;     /**< Window 7, Upper Left Coordinates, offset: 0x340178 */
  __IO uint32_t DISENG_SIG1_LOWERRIGHT_WINDOW7;    /**< Window 7, Lower Right Coordinates, offset: 0x34017C */
  __IO uint32_t DISENG_SIG1_REF_R_WINDOW7;         /**< Window 7, Reference CRC Value of Red Channel, offset: 0x340180 */
  __IO uint32_t DISENG_SIG1_REF_G_WINDOW7;         /**< Window 7, Reference CRC Value of Green Channel, offset: 0x340184 */
  __IO uint32_t DISENG_SIG1_REF_B_WINDOW7;         /**< Window 7, Reference CRC Value of Blue Channel, offset: 0x340188 */
  __IO uint32_t DISENG_SIG1_CONTROL_CLUSTER0;      /**< Cluster 0, Control settings, offset: 0x34018C */
  __IO uint32_t DISENG_SIG1_PIX0_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 0, offset: 0x340190 */
  __IO uint32_t DISENG_SIG1_PIX1_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 1, offset: 0x340194 */
  __IO uint32_t DISENG_SIG1_PIX2_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 2, offset: 0x340198 */
  __IO uint32_t DISENG_SIG1_PIX3_CLUSTER0;         /**< Cluster 0, Coordinate of Pixel 3, offset: 0x34019C */
  __IO uint32_t DISENG_SIG1_REF0_CLUSTER0;         /**< Cluster 0, Reference Vector 0, offset: 0x3401A0 */
  __IO uint32_t DISENG_SIG1_REF1_CLUSTER0;         /**< Cluster 0, Reference Vector 1, offset: 0x3401A4 */
  __IO uint32_t DISENG_SIG1_CONTROL_CLUSTER1;      /**< Cluster 1, Control settings, offset: 0x3401A8 */
  __IO uint32_t DISENG_SIG1_PIX0_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 0, offset: 0x3401AC */
  __IO uint32_t DISENG_SIG1_PIX1_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 1, offset: 0x3401B0 */
  __IO uint32_t DISENG_SIG1_PIX2_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 2, offset: 0x3401B4 */
  __IO uint32_t DISENG_SIG1_PIX3_CLUSTER1;         /**< Cluster 1, Coordinate of Pixel 3, offset: 0x3401B8 */
  __IO uint32_t DISENG_SIG1_REF0_CLUSTER1;         /**< Cluster 1, Reference Vector 0, offset: 0x3401BC */
  __IO uint32_t DISENG_SIG1_REF1_CLUSTER1;         /**< Cluster 1, Reference Vector 1, offset: 0x3401C0 */
  __IO uint32_t DISENG_SIG1_CONTROL_CLUSTER2;      /**< Cluster 2, Control settings, offset: 0x3401C4 */
  __IO uint32_t DISENG_SIG1_PIX0_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 0, offset: 0x3401C8 */
  __IO uint32_t DISENG_SIG1_PIX1_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 1, offset: 0x3401CC */
  __IO uint32_t DISENG_SIG1_PIX2_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 2, offset: 0x3401D0 */
  __IO uint32_t DISENG_SIG1_PIX3_CLUSTER2;         /**< Cluster 2, Coordinate of Pixel 3, offset: 0x3401D4 */
  __IO uint32_t DISENG_SIG1_REF0_CLUSTER2;         /**< Cluster 2, Reference Vector 0, offset: 0x3401D8 */
  __IO uint32_t DISENG_SIG1_REF1_CLUSTER2;         /**< Cluster 2, Reference Vector 1, offset: 0x3401DC */
  __IO uint32_t DISENG_SIG1_CONTROL_CLUSTER3;      /**< Cluster 3, Control settings, offset: 0x3401E0 */
  __IO uint32_t DISENG_SIG1_PIX0_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 0, offset: 0x3401E4 */
  __IO uint32_t DISENG_SIG1_PIX1_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 1, offset: 0x3401E8 */
  __IO uint32_t DISENG_SIG1_PIX2_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 2, offset: 0x3401EC */
  __IO uint32_t DISENG_SIG1_PIX3_CLUSTER3;         /**< Cluster 3, Coordinate of Pixel 3, offset: 0x3401F0 */
  __IO uint32_t DISENG_SIG1_REF0_CLUSTER3;         /**< Cluster 3, Reference Vector 0, offset: 0x3401F4 */
  __IO uint32_t DISENG_SIG1_REF1_CLUSTER3;         /**< Cluster 3, Reference Vector 1, offset: 0x3401F8 */
       uint8_t RESERVED_153[516];
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW0;         /**< Window 0, Measured CRC Value of Red Channel, offset: 0x340400 */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW0;         /**< Window 0, Measured CRC Value of Green Channel, offset: 0x340404 */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW0;         /**< Window 0, Measured CRC Value of Blue Channel, offset: 0x340408 */
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW1;         /**< Window 1, Measured CRC Value of Red Channel, offset: 0x34040C */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW1;         /**< Window 1, Measured CRC Value of Green Channel, offset: 0x340410 */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW1;         /**< Window 1, Measured CRC Value of Blue Channel, offset: 0x340414 */
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW2;         /**< Window 2, Measured CRC Value of Red Channel, offset: 0x340418 */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW2;         /**< Window 2, Measured CRC Value of Green Channel, offset: 0x34041C */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW2;         /**< Window 2, Measured CRC Value of Blue Channel, offset: 0x340420 */
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW3;         /**< Window 3, Measured CRC Value of Red Channel, offset: 0x340424 */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW3;         /**< Window 3, Measured CRC Value of Green Channel, offset: 0x340428 */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW3;         /**< Window 3, Measured CRC Value of Blue Channel, offset: 0x34042C */
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW4;         /**< Window 4, Measured CRC Value of Red Channel, offset: 0x340430 */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW4;         /**< Window 4, Measured CRC Value of Green Channel, offset: 0x340434 */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW4;         /**< Window 4, Measured CRC Value of Blue Channel, offset: 0x340438 */
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW5;         /**< Window 5, Measured CRC Value of Red Channel, offset: 0x34043C */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW5;         /**< Window 5, Measured CRC Value of Green Channel, offset: 0x340440 */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW5;         /**< Window 5, Measured CRC Value of Blue Channel, offset: 0x340444 */
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW6;         /**< Window 6, Measured CRC Value of Red Channel, offset: 0x340448 */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW6;         /**< Window 6, Measured CRC Value of Green Channel, offset: 0x34044C */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW6;         /**< Window 6, Measured CRC Value of Blue Channel, offset: 0x340450 */
  __I  uint32_t DISENG_SIG1_CRC_R_WINDOW7;         /**< Window 7, Measured CRC Value of Red Channel, offset: 0x340454 */
  __I  uint32_t DISENG_SIG1_CRC_G_WINDOW7;         /**< Window 7, Measured CRC Value of Green Channel, offset: 0x340458 */
  __I  uint32_t DISENG_SIG1_CRC_B_WINDOW7;         /**< Window 7, Measured CRC Value of Blue Channel, offset: 0x34045C */
  __I  uint32_t DISENG_SIG1_STATUS_CLUSTER0;       /**< Cluster 0, Status, offset: 0x340460 */
  __I  uint32_t DISENG_SIG1_COUNTER_CLUSTER0;      /**< Cluster 0, Match and Error Counters, offset: 0x340464 */
  __I  uint32_t DISENG_SIG1_VECTOR0_CLUSTER0;      /**< Cluster 0, Result Vector 0, RGB bitslices[1:0], offset: 0x340468 */
  __I  uint32_t DISENG_SIG1_VECTOR1_CLUSTER0;      /**< Cluster 0, Result Vector 1, RGB bitslices[3:2], offset: 0x34046C */
  __I  uint32_t DISENG_SIG1_VECTOR2_CLUSTER0;      /**< Cluster 0, Result Vector 2, RGB bitslices[5:4], offset: 0x340470 */
  __I  uint32_t DISENG_SIG1_VECTOR3_CLUSTER0;      /**< Cluster 0, Result Vector 3, RGB bitslices[7:6], offset: 0x340474 */
  __I  uint32_t DISENG_SIG1_STATUS_CLUSTER1;       /**< Cluster 1, Status, offset: 0x340478 */
  __I  uint32_t DISENG_SIG1_COUNTER_CLUSTER1;      /**< Cluster 1, Match and Error Counters, offset: 0x34047C */
  __I  uint32_t DISENG_SIG1_VECTOR0_CLUSTER1;      /**< Cluster 1, Result Vector 0, RGB bitslices[1:0], offset: 0x340480 */
  __I  uint32_t DISENG_SIG1_VECTOR1_CLUSTER1;      /**< Cluster 1, Result Vector 1, RGB bitslices[3:2], offset: 0x340484 */
  __I  uint32_t DISENG_SIG1_VECTOR2_CLUSTER1;      /**< Cluster 1, Result Vector 2, RGB bitslices[5:4], offset: 0x340488 */
  __I  uint32_t DISENG_SIG1_VECTOR3_CLUSTER1;      /**< Cluster 1, Result Vector 3, RGB bitslices[7:6], offset: 0x34048C */
  __I  uint32_t DISENG_SIG1_STATUS_CLUSTER2;       /**< Cluster 2, Status, offset: 0x340490 */
  __I  uint32_t DISENG_SIG1_COUNTER_CLUSTER2;      /**< Cluster 2, Match and Error Counters, offset: 0x340494 */
  __I  uint32_t DISENG_SIG1_VECTOR0_CLUSTER2;      /**< Cluster 2, Result Vector 0, RGB bitslices[1:0], offset: 0x340498 */
  __I  uint32_t DISENG_SIG1_VECTOR1_CLUSTER2;      /**< Cluster 2, Result Vector 1, RGB bitslices[3:2], offset: 0x34049C */
  __I  uint32_t DISENG_SIG1_VECTOR2_CLUSTER2;      /**< Cluster 2, Result Vector 2, RGB bitslices[5:4], offset: 0x3404A0 */
  __I  uint32_t DISENG_SIG1_VECTOR3_CLUSTER2;      /**< Cluster 2, Result Vector 3, RGB bitslices[7:6], offset: 0x3404A4 */
  __I  uint32_t DISENG_SIG1_STATUS_CLUSTER3;       /**< Cluster 3, Status, offset: 0x3404A8 */
  __I  uint32_t DISENG_SIG1_COUNTER_CLUSTER3;      /**< Cluster 3, Match and Error Counters, offset: 0x3404AC */
  __I  uint32_t DISENG_SIG1_VECTOR0_CLUSTER3;      /**< Cluster 3, Result Vector 0, RGB bitslices[1:0], offset: 0x3404B0 */
  __I  uint32_t DISENG_SIG1_VECTOR1_CLUSTER3;      /**< Cluster 3, Result Vector 1, RGB bitslices[3:2], offset: 0x3404B4 */
  __I  uint32_t DISENG_SIG1_VECTOR2_CLUSTER3;      /**< Cluster 3, Result Vector 2, RGB bitslices[5:4], offset: 0x3404B8 */
  __I  uint32_t DISENG_SIG1_VECTOR3_CLUSTER3;      /**< Cluster 3, Result Vector 3, RGB bitslices[7:6], offset: 0x3404BC */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS0_WIN0;    /**< Pixel Counter Register, Statistics Block 0, Window 0, offset: 0x3404C0 */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS0_WIN0;    /**< Pixel Max Values Register, Statistics Block 0, Window 0, offset: 0x3404C4 */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS0_WIN0;    /**< Pixel Min Values Register, Statistics Block 0, Window 0, offset: 0x3404C8 */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS0_WIN0;    /**< Red Component Sum Register, Statistics Block 0, Window 0, offset: 0x3404CC */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS0_WIN0;  /**< Green Component Sum Register, Statistics Block 0, Window 0, offset: 0x3404D0 */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS0_WIN0;   /**< Blue Component Sum Register, Statistics Block 0, Window 0, offset: 0x3404D4 */
  __I  uint32_t DISENG_SIG1_LUMSUM_STATS0_WIN0;    /**< Luminance Sum Register, Statistics Block 0, Window 0, offset: 0x3404D8 */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS1_WIN0;    /**< Pixel Counter Register, Statistics Block 1, Window 0, offset: 0x3404DC */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS1_WIN0;    /**< Pixel Max Values Register, Statistics Block 1, Window 0, offset: 0x3404E0 */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS1_WIN0;    /**< Pixel Min Values Register, Statistics Block 1, Window 0, offset: 0x3404E4 */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS1_WIN0;    /**< Red Component Sum Register, Statistics Block 1, Window 0, offset: 0x3404E8 */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS1_WIN0;  /**< Green Component Sum Register, Statistics Block 1, Window 0, offset: 0x3404EC */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS1_WIN0;   /**< Blue Component Sum Register, Statistics Block 1, Window 0, offset: 0x3404F0 */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS0_WIN1;    /**< Pixel Counter Register, Statistics Block 0, Window 1, offset: 0x3404F4 */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS0_WIN1;    /**< Pixel Max Values Register, Statistics Block 0, Window 1, offset: 0x3404F8 */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS0_WIN1;    /**< Pixel Min Values Register, Statistics Block 0, Window 1, offset: 0x3404FC */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS0_WIN1;    /**< Red Component Sum Register, Statistics Block 0, Window 1, offset: 0x340500 */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS0_WIN1;  /**< Green Component Sum Register, Statistics Block 0, Window 1, offset: 0x340504 */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS0_WIN1;   /**< Blue Component Sum Register, Statistics Block 0, Window 1, offset: 0x340508 */
  __I  uint32_t DISENG_SIG1_LUMSUM_STATS0_WIN1;    /**< Luminance Sum Register, Statistics Block 0, Window 1, offset: 0x34050C */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS1_WIN1;    /**< Pixel Counter Register, Statistics Block 1, Window 1, offset: 0x340510 */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS1_WIN1;    /**< Pixel Max Values Register, Statistics Block 1, Window 1, offset: 0x340514 */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS1_WIN1;    /**< Pixel Min Values Register, Statistics Block 1, Window 1, offset: 0x340518 */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS1_WIN1;    /**< Red Component Sum Register, Statistics Block 1, Window 1, offset: 0x34051C */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS1_WIN1;  /**< Green Component Sum Register, Statistics Block 1, Window 1, offset: 0x340520 */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS1_WIN1;   /**< Blue Component Sum Register, Statistics Block 1, Window 1, offset: 0x340524 */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS0_WIN2;    /**< Pixel Counter Register, Statistics Block 0, Window 2, offset: 0x340528 */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS0_WIN2;    /**< Pixel Max Values Register, Statistics Block 0, Window 2, offset: 0x34052C */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS0_WIN2;    /**< Pixel Min Values Register, Statistics Block 0, Window 2, offset: 0x340530 */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS0_WIN2;    /**< Red Component Sum Register, Statistics Block 0, Window 2, offset: 0x340534 */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS0_WIN2;  /**< Green Component Sum Register, Statistics Block 0, Window 2, offset: 0x340538 */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS0_WIN2;   /**< Blue Component Sum Register, Statistics Block 0, Window 2, offset: 0x34053C */
  __I  uint32_t DISENG_SIG1_LUMSUM_STATS0_WIN2;    /**< Luminance Sum Register, Statistics Block 0, Window 2, offset: 0x340540 */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS1_WIN2;    /**< Pixel Counter Register, Statistics Block 1, Window 2, offset: 0x340544 */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS1_WIN2;    /**< Pixel Max Values Register, Statistics Block 1, Window 2, offset: 0x340548 */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS1_WIN2;    /**< Pixel Min Values Register, Statistics Block 1, Window 2, offset: 0x34054C */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS1_WIN2;    /**< Red Component Sum Register, Statistics Block 1, Window 2, offset: 0x340550 */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS1_WIN2;  /**< Green Component Sum Register, Statistics Block 1, Window 2, offset: 0x340554 */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS1_WIN2;   /**< Blue Component Sum Register, Statistics Block 1, Window 2, offset: 0x340558 */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS0_WIN3;    /**< Pixel Counter Register, Statistics Block 0, Window 3, offset: 0x34055C */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS0_WIN3;    /**< Pixel Max Values Register, Statistics Block 0, Window 3, offset: 0x340560 */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS0_WIN3;    /**< Pixel Min Values Register, Statistics Block 0, Window 3, offset: 0x340564 */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS0_WIN3;    /**< Red Component Sum Register, Statistics Block 0, Window 3, offset: 0x340568 */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS0_WIN3;  /**< Green Component Sum Register, Statistics Block 0, Window 3, offset: 0x34056C */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS0_WIN3;   /**< Blue Component Sum Register, Statistics Block 0, Window 3, offset: 0x340570 */
  __I  uint32_t DISENG_SIG1_LUMSUM_STATS0_WIN3;    /**< Luminance Sum Register, Statistics Block 0, Window 3, offset: 0x340574 */
  __I  uint32_t DISENG_SIG1_PIXCNT_STATS1_WIN3;    /**< Pixel Counter Register, Statistics Block 1, Window 3, offset: 0x340578 */
  __I  uint32_t DISENG_SIG1_PIXMAX_STATS1_WIN3;    /**< Pixel Max Values Register, Statistics Block 1, Window 3, offset: 0x34057C */
  __I  uint32_t DISENG_SIG1_PIXMIN_STATS1_WIN3;    /**< Pixel Min Values Register, Statistics Block 1, Window 3, offset: 0x340580 */
  __I  uint32_t DISENG_SIG1_REDSUM_STATS1_WIN3;    /**< Red Component Sum Register, Statistics Block 1, Window 3, offset: 0x340584 */
  __I  uint32_t DISENG_SIG1_GREENSUM_STATS1_WIN3;  /**< Green Component Sum Register, Statistics Block 1, Window 3, offset: 0x340588 */
  __I  uint32_t DISENG_SIG1_BLUESUM_STATS1_WIN3;   /**< Blue Component Sum Register, Statistics Block 1, Window 3, offset: 0x34058C */
       uint8_t RESERVED_154[2704];
  __O  uint32_t DISENG_SIG1CFG_LOCKUNLOCK1;        /**< Register to change the protection status of this address block., offset: 0x341020 */
  __I  uint32_t DISENG_SIG1CFG_LOCKSTATUS1;        /**< Protection status of this address block., offset: 0x341024 */
  __IO uint32_t DISENG_SIG1CFG_SRCSELECT;          /**< Tap selection for Signature1., offset: 0x341028 */
       uint8_t RESERVED_155[61396];
  __O  uint32_t DISENG_LUT3D1_LOCKUNLOCK;          /**< Register to change the protection status of this address block., offset: 0x350000 */
  __I  uint32_t DISENG_LUT3D1_LOCKSTATUS;          /**< Protection status of this address block., offset: 0x350004 */
  __IO uint32_t DISENG_LUT3D1_STATICCONTROL;       /**< lut3d static control register, offset: 0x350008 */
  __IO uint32_t DISENG_LUT3D1_CONTROL;             /**< lut3d control register, offset: 0x35000C */
       uint8_t RESERVED_156[8176];
  __IO uint32_t DISENG_LUT3D1_LUT[DISPLAY_SEERIS_DISENG_LUT3D1_LUT_COUNT]; /**< Look Up Table, array offset: 0x352000, array step: 0x4 */
       uint8_t RESERVED_157[49152];
  __O  uint32_t DISENG_MATRIX1_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x360000 */
  __I  uint32_t DISENG_MATRIX1_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x360004 */
  __IO uint32_t DISENG_MATRIX1_STATICCONTROL;      /**< Color Matrix static control register, offset: 0x360008 */
  __IO uint32_t DISENG_MATRIX1_CONTROL;            /**< Color Matrix control register, offset: 0x36000C */
  __IO uint32_t DISENG_MATRIX1_RED0;               /**< Matrix values for calculation of the red output value., offset: 0x360010 */
  __IO uint32_t DISENG_MATRIX1_RED1;               /**< Matrix values for calculation of the red output value., offset: 0x360014 */
  __IO uint32_t DISENG_MATRIX1_GREEN0;             /**< Matrix values for calculation of the green output value., offset: 0x360018 */
  __IO uint32_t DISENG_MATRIX1_GREEN1;             /**< Matrix values for calculation of the green output value., offset: 0x36001C */
  __IO uint32_t DISENG_MATRIX1_BLUE0;              /**< Matrix values for calculation of the blue output value., offset: 0x360020 */
  __IO uint32_t DISENG_MATRIX1_BLUE1;              /**< Matrix values for calculation of the blue output value., offset: 0x360024 */
       uint8_t RESERVED_158[8];
  __IO uint32_t DISENG_MATRIX1_OFFSETVECTOR0;      /**< Offset vectors for red and green output., offset: 0x360030 */
  __IO uint32_t DISENG_MATRIX1_OFFSETVECTOR1;      /**< Offset vectors for blue and alpha output., offset: 0x360034 */
  __I  uint32_t DISENG_MATRIX1_LASTCONTROLWORD;    /**< Value of last received control word, for debugging., offset: 0x360038 */
       uint8_t RESERVED_159[65476];
  __O  uint32_t DISENG_DITHER1_LOCKUNLOCK;         /**< Register to change the protection status of this address block., offset: 0x370000 */
  __I  uint32_t DISENG_DITHER1_LOCKSTATUS;         /**< Protection status of this address block., offset: 0x370004 */
  __IO uint32_t DISENG_DITHER1_CONTROL;            /**< Dither Unit common control., offset: 0x370008 */
  __IO uint32_t DISENG_DITHER1_DITHERCONTROL10BITS; /**< Dither Unit processing control., offset: 0x37000C */
  __IO uint32_t DISENG_DITHER1_DITHERCONTROL12BITS; /**< Dither Unit processing control., offset: 0x370010 */
       uint8_t RESERVED_160[4108];
  __O  uint32_t DISENG_DITHER1CFG_LOCKUNLOCK1;     /**< Register to change the protection status of this address block., offset: 0x371020 */
  __I  uint32_t DISENG_DITHER1CFG_LOCKSTATUS1;     /**< Protection status of this address block., offset: 0x371024 */
  __IO uint32_t DISENG_DITHER1CFG_POLARITYCTRL1;   /**< Polarity control for display stream #1., offset: 0x371028 */
       uint8_t RESERVED_161[65492];
  __O  uint32_t DISPIRQ0_LOCKUNLOCK;               /**< Register to change the protection status of this address block., offset: 0x381000 */
  __I  uint32_t DISPIRQ0_LOCKSTATUS;               /**< Protection status of this address block., offset: 0x381004 */
  __IO uint32_t DISPIRQ0_INTERRUPTENABLE0;         /**< Interrupt Enable register 0., offset: 0x381008 */
  __IO uint32_t DISPIRQ0_INTERRUPTENABLE1;         /**< Interrupt Enable register 1., offset: 0x38100C */
  __IO uint32_t DISPIRQ0_INTERRUPTENABLE2;         /**< Interrupt Enable register 2., offset: 0x381010 */
  __O  uint32_t DISPIRQ0_INTERRUPTPRESET0;         /**< Interrupt Preset register 0, offset: 0x381014 */
  __O  uint32_t DISPIRQ0_INTERRUPTPRESET1;         /**< Interrupt Preset register 1, offset: 0x381018 */
  __O  uint32_t DISPIRQ0_INTERRUPTPRESET2;         /**< Interrupt Preset register 2, offset: 0x38101C */
  __O  uint32_t DISPIRQ0_INTERRUPTCLEAR0;          /**< Interrupt Clear register 0, offset: 0x381020 */
  __O  uint32_t DISPIRQ0_INTERRUPTCLEAR1;          /**< Interrupt Clear register 1, offset: 0x381024 */
  __O  uint32_t DISPIRQ0_INTERRUPTCLEAR2;          /**< Interrupt Clear register 2, offset: 0x381028 */
  __I  uint32_t DISPIRQ0_INTERRUPTSTATUS0;         /**< Interrupt Status register 0, offset: 0x38102C */
  __I  uint32_t DISPIRQ0_INTERRUPTSTATUS1;         /**< Interrupt Status register 1, offset: 0x381030 */
  __I  uint32_t DISPIRQ0_INTERRUPTSTATUS2;         /**< Interrupt Status register 2, offset: 0x381034 */
       uint8_t RESERVED_162[65480];
  __O  uint32_t DISPIRQ1_LOCKUNLOCK;               /**< Register to change the protection status of this address block., offset: 0x391000 */
  __I  uint32_t DISPIRQ1_LOCKSTATUS;               /**< Protection status of this address block., offset: 0x391004 */
  __IO uint32_t DISPIRQ1_INTERRUPTENABLE0;         /**< Interrupt Enable register 0., offset: 0x391008 */
  __IO uint32_t DISPIRQ1_INTERRUPTENABLE1;         /**< Interrupt Enable register 1., offset: 0x39100C */
  __IO uint32_t DISPIRQ1_INTERRUPTENABLE2;         /**< Interrupt Enable register 2., offset: 0x391010 */
  __O  uint32_t DISPIRQ1_INTERRUPTPRESET0;         /**< Interrupt Preset register 0, offset: 0x391014 */
  __O  uint32_t DISPIRQ1_INTERRUPTPRESET1;         /**< Interrupt Preset register 1, offset: 0x391018 */
  __O  uint32_t DISPIRQ1_INTERRUPTPRESET2;         /**< Interrupt Preset register 2, offset: 0x39101C */
  __O  uint32_t DISPIRQ1_INTERRUPTCLEAR0;          /**< Interrupt Clear register 0, offset: 0x391020 */
  __O  uint32_t DISPIRQ1_INTERRUPTCLEAR1;          /**< Interrupt Clear register 1, offset: 0x391024 */
  __O  uint32_t DISPIRQ1_INTERRUPTCLEAR2;          /**< Interrupt Clear register 2, offset: 0x391028 */
  __I  uint32_t DISPIRQ1_INTERRUPTSTATUS0;         /**< Interrupt Status register 0, offset: 0x39102C */
  __I  uint32_t DISPIRQ1_INTERRUPTSTATUS1;         /**< Interrupt Status register 1, offset: 0x391030 */
  __I  uint32_t DISPIRQ1_INTERRUPTSTATUS2;         /**< Interrupt Status register 2, offset: 0x391034 */
       uint8_t RESERVED_163[65480];
  __O  uint32_t DISPIRQ2_LOCKUNLOCK;               /**< Register to change the protection status of this address block., offset: 0x3A1000 */
  __I  uint32_t DISPIRQ2_LOCKSTATUS;               /**< Protection status of this address block., offset: 0x3A1004 */
  __IO uint32_t DISPIRQ2_INTERRUPTENABLE0;         /**< Interrupt Enable register 0., offset: 0x3A1008 */
  __IO uint32_t DISPIRQ2_INTERRUPTENABLE1;         /**< Interrupt Enable register 1., offset: 0x3A100C */
  __IO uint32_t DISPIRQ2_INTERRUPTENABLE2;         /**< Interrupt Enable register 2., offset: 0x3A1010 */
  __O  uint32_t DISPIRQ2_INTERRUPTPRESET0;         /**< Interrupt Preset register 0, offset: 0x3A1014 */
  __O  uint32_t DISPIRQ2_INTERRUPTPRESET1;         /**< Interrupt Preset register 1, offset: 0x3A1018 */
  __O  uint32_t DISPIRQ2_INTERRUPTPRESET2;         /**< Interrupt Preset register 2, offset: 0x3A101C */
  __O  uint32_t DISPIRQ2_INTERRUPTCLEAR0;          /**< Interrupt Clear register 0, offset: 0x3A1020 */
  __O  uint32_t DISPIRQ2_INTERRUPTCLEAR1;          /**< Interrupt Clear register 1, offset: 0x3A1024 */
  __O  uint32_t DISPIRQ2_INTERRUPTCLEAR2;          /**< Interrupt Clear register 2, offset: 0x3A1028 */
  __I  uint32_t DISPIRQ2_INTERRUPTSTATUS0;         /**< Interrupt Status register 0, offset: 0x3A102C */
  __I  uint32_t DISPIRQ2_INTERRUPTSTATUS1;         /**< Interrupt Status register 1, offset: 0x3A1030 */
  __I  uint32_t DISPIRQ2_INTERRUPTSTATUS2;         /**< Interrupt Status register 2, offset: 0x3A1034 */
       uint8_t RESERVED_164[65480];
  __O  uint32_t DISPIRQ3_LOCKUNLOCK;               /**< Register to change the protection status of this address block., offset: 0x3B1000 */
  __I  uint32_t DISPIRQ3_LOCKSTATUS;               /**< Protection status of this address block., offset: 0x3B1004 */
  __IO uint32_t DISPIRQ3_INTERRUPTENABLE0;         /**< Interrupt Enable register 0., offset: 0x3B1008 */
  __IO uint32_t DISPIRQ3_INTERRUPTENABLE1;         /**< Interrupt Enable register 1., offset: 0x3B100C */
  __IO uint32_t DISPIRQ3_INTERRUPTENABLE2;         /**< Interrupt Enable register 2., offset: 0x3B1010 */
  __O  uint32_t DISPIRQ3_INTERRUPTPRESET0;         /**< Interrupt Preset register 0, offset: 0x3B1014 */
  __O  uint32_t DISPIRQ3_INTERRUPTPRESET1;         /**< Interrupt Preset register 1, offset: 0x3B1018 */
  __O  uint32_t DISPIRQ3_INTERRUPTPRESET2;         /**< Interrupt Preset register 2, offset: 0x3B101C */
  __O  uint32_t DISPIRQ3_INTERRUPTCLEAR0;          /**< Interrupt Clear register 0, offset: 0x3B1020 */
  __O  uint32_t DISPIRQ3_INTERRUPTCLEAR1;          /**< Interrupt Clear register 1, offset: 0x3B1024 */
  __O  uint32_t DISPIRQ3_INTERRUPTCLEAR2;          /**< Interrupt Clear register 2, offset: 0x3B1028 */
  __I  uint32_t DISPIRQ3_INTERRUPTSTATUS0;         /**< Interrupt Status register 0, offset: 0x3B102C */
  __I  uint32_t DISPIRQ3_INTERRUPTSTATUS1;         /**< Interrupt Status register 1, offset: 0x3B1030 */
  __I  uint32_t DISPIRQ3_INTERRUPTSTATUS2;         /**< Interrupt Status register 2, offset: 0x3B1034 */
} DISPLAY_SEERIS_Type;

/* ----------------------------------------------------------------------------
   -- DISPLAY_SEERIS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DISPLAY_SEERIS_Register_Masks DISPLAY_SEERIS Register Masks
 * @{
 */

/*! @name COMCTRL_IPIDENTIFIER - IP Identifier for this SEERIS derivate. */
/*! @{ */

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_Reserved_MASK (0xFU)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_Reserved_SHIFT (0U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_Reserved(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_Reserved_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_Reserved_MASK)

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignDeliveryID_MASK (0xF0U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignDeliveryID_SHIFT (4U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignDeliveryID(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignDeliveryID_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignDeliveryID_MASK)

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignMaturityLevel_MASK (0xF00U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignMaturityLevel_SHIFT (8U)
/*! comctrl_DesignMaturityLevel
 *  0b0001..Pre feasibility study.
 *  0b0010..Feasibility study.
 *  0b0011..Functionality complete.
 *  0b0100..Verification complete.
 */
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignMaturityLevel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignMaturityLevel_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_DesignMaturityLevel_MASK)

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPEvolution_MASK (0xF000U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPEvolution_SHIFT (12U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPEvolution(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPEvolution_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPEvolution_MASK)

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFeatureSet_MASK (0xF0000U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFeatureSet_SHIFT (16U)
/*! comctrl_IPFeatureSet
 *  0b0001..Minimal functionality (Eco).
 *  0b0010..Reduced functionality (Light).
 *  0b0100..Advanced functionality (Plus).
 *  0b0101..Extensive functionality (eXtensive).
 *  0b0110..Standard functionality (Regular).
 */
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFeatureSet(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFeatureSet_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFeatureSet_MASK)

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPApplication_MASK (0xF00000U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPApplication_SHIFT (20U)
/*! comctrl_IPApplication
 *  0b0001..Blit Engine only.
 *  0b0010..Blit Engine and Display Controller.
 *  0b0011..Display Controller only (with direct capture).
 *  0b0100..Blit Engine, Display Controller (with direct capture), Capture Controller (buffered capture) and Drawing Engine.
 *  0b0101..Display Controller only.
 *  0b0110..Capture Controller only.
 */
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPApplication(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPApplication_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPApplication_MASK)

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPConfiguration_MASK (0xF000000U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPConfiguration_SHIFT (24U)
/*! comctrl_IPConfiguration
 *  0b0001..Graphics core only (Module).
 *  0b0010..Subsystem including a graphics core (System).
 */
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPConfiguration(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPConfiguration_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPConfiguration_MASK)

#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFamily_MASK (0xF0000000U)
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFamily_SHIFT (28U)
/*! comctrl_IPFamily
 *  0b0000..SEERIS building block generation 2010.
 *  0b0001..SEERIS building block generation 2012.
 *  0b0010..SEERIS building block generation 2013.
 */
#define DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFamily(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFamily_SHIFT)) & DISPLAY_SEERIS_COMCTRL_IPIDENTIFIER_comctrl_IPFamily_MASK)
/*! @} */

/*! @name IRQ_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_LOCKUNLOCK_irq_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_LOCKUNLOCK_irq_LockUnlock_SHIFT (0U)
/*! irq_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_IRQ_LOCKUNLOCK_irq_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_LOCKUNLOCK_irq_LockUnlock_SHIFT)) & DISPLAY_SEERIS_IRQ_LOCKUNLOCK_irq_LockUnlock_MASK)
/*! @} */

/*! @name IRQ_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_LockStatus_SHIFT)) & DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_LockStatus_MASK)

#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_IRQ_LOCKSTATUS_irq_FreezeStatus_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTENABLE0 - Interrupt Enable register 0. */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE0_irq_InterruptEnable0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE0_irq_InterruptEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE0_irq_InterruptEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTENABLE0_irq_InterruptEnable0_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTENABLE0_irq_InterruptEnable0_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTENABLE1 - Interrupt Enable register 1. */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE1_irq_InterruptEnable1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE1_irq_InterruptEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE1_irq_InterruptEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTENABLE1_irq_InterruptEnable1_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTENABLE1_irq_InterruptEnable1_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTENABLE2 - Interrupt Enable register 2. */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE2_irq_InterruptEnable2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE2_irq_InterruptEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTENABLE2_irq_InterruptEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTENABLE2_irq_InterruptEnable2_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTENABLE2_irq_InterruptEnable2_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTPRESET0 - Interrupt Preset register 0 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET0_irq_InterruptPreset0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET0_irq_InterruptPreset0_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET0_irq_InterruptPreset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTPRESET0_irq_InterruptPreset0_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTPRESET0_irq_InterruptPreset0_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTPRESET1 - Interrupt Preset register 1 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET1_irq_InterruptPreset1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET1_irq_InterruptPreset1_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET1_irq_InterruptPreset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTPRESET1_irq_InterruptPreset1_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTPRESET1_irq_InterruptPreset1_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTPRESET2 - Interrupt Preset register 2 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET2_irq_InterruptPreset2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET2_irq_InterruptPreset2_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTPRESET2_irq_InterruptPreset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTPRESET2_irq_InterruptPreset2_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTPRESET2_irq_InterruptPreset2_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTCLEAR0 - Interrupt Clear register 0 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR0_irq_InterruptClear0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR0_irq_InterruptClear0_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR0_irq_InterruptClear0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR0_irq_InterruptClear0_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR0_irq_InterruptClear0_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTCLEAR1 - Interrupt Clear register 1 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR1_irq_InterruptClear1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR1_irq_InterruptClear1_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR1_irq_InterruptClear1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR1_irq_InterruptClear1_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR1_irq_InterruptClear1_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTCLEAR2 - Interrupt Clear register 2 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR2_irq_InterruptClear2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR2_irq_InterruptClear2_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR2_irq_InterruptClear2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR2_irq_InterruptClear2_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTCLEAR2_irq_InterruptClear2_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTSTATUS0 - Interrupt Status register 0 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS0_irq_InterruptStatus0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS0_irq_InterruptStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS0_irq_InterruptStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS0_irq_InterruptStatus0_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS0_irq_InterruptStatus0_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTSTATUS1 - Interrupt Status register 1 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS1_irq_InterruptStatus1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS1_irq_InterruptStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS1_irq_InterruptStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS1_irq_InterruptStatus1_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS1_irq_InterruptStatus1_MASK)
/*! @} */

/*! @name IRQ_INTERRUPTSTATUS2 - Interrupt Status register 2 */
/*! @{ */

#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS2_irq_InterruptStatus2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS2_irq_InterruptStatus2_SHIFT (0U)
#define DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS2_irq_InterruptStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS2_irq_InterruptStatus2_SHIFT)) & DISPLAY_SEERIS_IRQ_INTERRUPTSTATUS2_irq_InterruptStatus2_MASK)
/*! @} */

/*! @name DOMAINMASK_MASKLOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKUNLOCK_domainmask_MaskLockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKUNLOCK_domainmask_MaskLockUnlock_SHIFT (0U)
/*! domainmask_MaskLockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKUNLOCK_domainmask_MaskLockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_MASKLOCKUNLOCK_domainmask_MaskLockUnlock_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_MASKLOCKUNLOCK_domainmask_MaskLockUnlock_MASK)
/*! @} */

/*! @name DOMAINMASK_MASKLOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskLockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskLockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskLockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskLockStatus_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskLockStatus_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskPrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskPrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskPrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskPrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskPrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskFreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskFreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskFreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskFreezeStatus_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_MASKLOCKSTATUS_domainmask_MaskFreezeStatus_MASK)
/*! @} */

/*! @name DOMAINMASK_STORE9_DOMAIN_MASK0 - Pixel Engine domain mask 0 for endpoint store9. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_rop9_MASK (0x1U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_rop9_SHIFT (0U)
/*! domainmask_store9_dm_rop9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_rop9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_rop9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_rop9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_clut9_MASK (0x2U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_clut9_SHIFT (1U)
/*! domainmask_store9_dm_clut9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_clut9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_clut9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_clut9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix9_MASK (0x4U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix9_SHIFT (2U)
/*! domainmask_store9_dm_matrix9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_blitblend9_MASK (0x8U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_blitblend9_SHIFT (3U)
/*! domainmask_store9_dm_blitblend9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_blitblend9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_blitblend9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_blitblend9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchrot9_MASK (0x10U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchrot9_SHIFT (4U)
/*! domainmask_store9_dm_fetchrot9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchrot9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchrot9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchrot9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchdecode9_MASK (0x20U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchdecode9_SHIFT (5U)
/*! domainmask_store9_dm_fetchdecode9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchdecode9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchdecode9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchdecode9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco9_MASK (0x40U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco9_SHIFT (6U)
/*! domainmask_store9_dm_fetcheco9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler9_MASK (0x80U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler9_SHIFT (7U)
/*! domainmask_store9_dm_hscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler9_MASK (0x100U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler9_SHIFT (8U)
/*! domainmask_store9_dm_vscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_filter9_MASK (0x200U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_filter9_SHIFT (9U)
/*! domainmask_store9_dm_filter9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_filter9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_filter9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_filter9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe0_MASK (0x400U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe0_SHIFT (10U)
/*! domainmask_store9_dm_constframe0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe4_MASK (0x800U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe4_SHIFT (11U)
/*! domainmask_store9_dm_constframe4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe1_MASK (0x1000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe1_SHIFT (12U)
/*! domainmask_store9_dm_constframe1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe5_MASK (0x2000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe5_SHIFT (13U)
/*! domainmask_store9_dm_constframe5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_constframe5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend1_MASK (0x4000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend1_SHIFT (14U)
/*! domainmask_store9_dm_layerblend1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend2_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend2_SHIFT (15U)
/*! domainmask_store9_dm_layerblend2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend3_MASK (0x10000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend3_SHIFT (16U)
/*! domainmask_store9_dm_layerblend3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend4_MASK (0x20000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend4_SHIFT (17U)
/*! domainmask_store9_dm_layerblend4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend5_MASK (0x40000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend5_SHIFT (18U)
/*! domainmask_store9_dm_layerblend5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend6_MASK (0x80000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend6_SHIFT (19U)
/*! domainmask_store9_dm_layerblend6
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend6_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_layerblend6_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer0_MASK (0x100000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer0_SHIFT (20U)
/*! domainmask_store9_dm_fetchlayer0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer1_MASK (0x200000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer1_SHIFT (21U)
/*! domainmask_store9_dm_fetchlayer1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchlayer1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv3_MASK (0x400000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv3_SHIFT (22U)
/*! domainmask_store9_dm_fetchyuv3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv0_MASK (0x800000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv0_SHIFT (23U)
/*! domainmask_store9_dm_fetchyuv0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco0_SHIFT (24U)
/*! domainmask_store9_dm_fetcheco0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv1_MASK (0x2000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv1_SHIFT (25U)
/*! domainmask_store9_dm_fetchyuv1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco1_MASK (0x4000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco1_SHIFT (26U)
/*! domainmask_store9_dm_fetcheco1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv2_MASK (0x8000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv2_SHIFT (27U)
/*! domainmask_store9_dm_fetchyuv2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetchyuv2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco2_MASK (0x10000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco2_SHIFT (28U)
/*! domainmask_store9_dm_fetcheco2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_fetcheco2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix4_MASK (0x20000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix4_SHIFT (29U)
/*! domainmask_store9_dm_matrix4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_matrix4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler4_MASK (0x40000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler4_SHIFT (30U)
/*! domainmask_store9_dm_hscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_hscaler4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler4_MASK (0x80000000U)
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler4_SHIFT (31U)
/*! domainmask_store9_dm_vscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_STORE9_DOMAIN_MASK0_domainmask_store9_dm_vscaler4_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST0_DOMAIN_MASK0 - Pixel Engine domain mask 0 for endpoint extdst0. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_rop9_MASK (0x1U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_rop9_SHIFT (0U)
/*! domainmask_extdst0_dm_rop9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_rop9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_rop9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_rop9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_clut9_MASK (0x2U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_clut9_SHIFT (1U)
/*! domainmask_extdst0_dm_clut9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_clut9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_clut9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_clut9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix9_MASK (0x4U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix9_SHIFT (2U)
/*! domainmask_extdst0_dm_matrix9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_blitblend9_MASK (0x8U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_blitblend9_SHIFT (3U)
/*! domainmask_extdst0_dm_blitblend9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_blitblend9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_blitblend9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_blitblend9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchrot9_MASK (0x10U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchrot9_SHIFT (4U)
/*! domainmask_extdst0_dm_fetchrot9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchrot9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchrot9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchrot9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchdecode9_MASK (0x20U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchdecode9_SHIFT (5U)
/*! domainmask_extdst0_dm_fetchdecode9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchdecode9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchdecode9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchdecode9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco9_MASK (0x40U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco9_SHIFT (6U)
/*! domainmask_extdst0_dm_fetcheco9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler9_MASK (0x80U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler9_SHIFT (7U)
/*! domainmask_extdst0_dm_hscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler9_MASK (0x100U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler9_SHIFT (8U)
/*! domainmask_extdst0_dm_vscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_filter9_MASK (0x200U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_filter9_SHIFT (9U)
/*! domainmask_extdst0_dm_filter9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_filter9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_filter9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_filter9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe0_MASK (0x400U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe0_SHIFT (10U)
/*! domainmask_extdst0_dm_constframe0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe4_MASK (0x800U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe4_SHIFT (11U)
/*! domainmask_extdst0_dm_constframe4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe1_MASK (0x1000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe1_SHIFT (12U)
/*! domainmask_extdst0_dm_constframe1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe5_MASK (0x2000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe5_SHIFT (13U)
/*! domainmask_extdst0_dm_constframe5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_constframe5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend1_MASK (0x4000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend1_SHIFT (14U)
/*! domainmask_extdst0_dm_layerblend1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend2_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend2_SHIFT (15U)
/*! domainmask_extdst0_dm_layerblend2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend3_MASK (0x10000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend3_SHIFT (16U)
/*! domainmask_extdst0_dm_layerblend3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend4_MASK (0x20000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend4_SHIFT (17U)
/*! domainmask_extdst0_dm_layerblend4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend5_MASK (0x40000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend5_SHIFT (18U)
/*! domainmask_extdst0_dm_layerblend5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend6_MASK (0x80000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend6_SHIFT (19U)
/*! domainmask_extdst0_dm_layerblend6
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend6_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_layerblend6_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer0_MASK (0x100000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer0_SHIFT (20U)
/*! domainmask_extdst0_dm_fetchlayer0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer1_MASK (0x200000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer1_SHIFT (21U)
/*! domainmask_extdst0_dm_fetchlayer1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchlayer1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv3_MASK (0x400000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv3_SHIFT (22U)
/*! domainmask_extdst0_dm_fetchyuv3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv0_MASK (0x800000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv0_SHIFT (23U)
/*! domainmask_extdst0_dm_fetchyuv0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco0_SHIFT (24U)
/*! domainmask_extdst0_dm_fetcheco0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv1_MASK (0x2000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv1_SHIFT (25U)
/*! domainmask_extdst0_dm_fetchyuv1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco1_MASK (0x4000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco1_SHIFT (26U)
/*! domainmask_extdst0_dm_fetcheco1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv2_MASK (0x8000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv2_SHIFT (27U)
/*! domainmask_extdst0_dm_fetchyuv2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetchyuv2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco2_MASK (0x10000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco2_SHIFT (28U)
/*! domainmask_extdst0_dm_fetcheco2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_fetcheco2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix4_MASK (0x20000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix4_SHIFT (29U)
/*! domainmask_extdst0_dm_matrix4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_matrix4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler4_MASK (0x40000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler4_SHIFT (30U)
/*! domainmask_extdst0_dm_hscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_hscaler4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler4_MASK (0x80000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler4_SHIFT (31U)
/*! domainmask_extdst0_dm_vscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_DOMAIN_MASK0_domainmask_extdst0_dm_vscaler4_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST4_DOMAIN_MASK0 - Pixel Engine domain mask 0 for endpoint extdst4. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_rop9_MASK (0x1U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_rop9_SHIFT (0U)
/*! domainmask_extdst4_dm_rop9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_rop9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_rop9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_rop9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_clut9_MASK (0x2U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_clut9_SHIFT (1U)
/*! domainmask_extdst4_dm_clut9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_clut9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_clut9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_clut9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix9_MASK (0x4U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix9_SHIFT (2U)
/*! domainmask_extdst4_dm_matrix9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_blitblend9_MASK (0x8U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_blitblend9_SHIFT (3U)
/*! domainmask_extdst4_dm_blitblend9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_blitblend9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_blitblend9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_blitblend9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchrot9_MASK (0x10U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchrot9_SHIFT (4U)
/*! domainmask_extdst4_dm_fetchrot9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchrot9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchrot9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchrot9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchdecode9_MASK (0x20U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchdecode9_SHIFT (5U)
/*! domainmask_extdst4_dm_fetchdecode9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchdecode9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchdecode9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchdecode9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco9_MASK (0x40U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco9_SHIFT (6U)
/*! domainmask_extdst4_dm_fetcheco9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler9_MASK (0x80U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler9_SHIFT (7U)
/*! domainmask_extdst4_dm_hscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler9_MASK (0x100U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler9_SHIFT (8U)
/*! domainmask_extdst4_dm_vscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_filter9_MASK (0x200U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_filter9_SHIFT (9U)
/*! domainmask_extdst4_dm_filter9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_filter9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_filter9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_filter9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe0_MASK (0x400U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe0_SHIFT (10U)
/*! domainmask_extdst4_dm_constframe0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe4_MASK (0x800U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe4_SHIFT (11U)
/*! domainmask_extdst4_dm_constframe4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe1_MASK (0x1000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe1_SHIFT (12U)
/*! domainmask_extdst4_dm_constframe1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe5_MASK (0x2000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe5_SHIFT (13U)
/*! domainmask_extdst4_dm_constframe5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_constframe5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend1_MASK (0x4000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend1_SHIFT (14U)
/*! domainmask_extdst4_dm_layerblend1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend2_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend2_SHIFT (15U)
/*! domainmask_extdst4_dm_layerblend2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend3_MASK (0x10000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend3_SHIFT (16U)
/*! domainmask_extdst4_dm_layerblend3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend4_MASK (0x20000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend4_SHIFT (17U)
/*! domainmask_extdst4_dm_layerblend4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend5_MASK (0x40000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend5_SHIFT (18U)
/*! domainmask_extdst4_dm_layerblend5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend6_MASK (0x80000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend6_SHIFT (19U)
/*! domainmask_extdst4_dm_layerblend6
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend6_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_layerblend6_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer0_MASK (0x100000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer0_SHIFT (20U)
/*! domainmask_extdst4_dm_fetchlayer0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer1_MASK (0x200000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer1_SHIFT (21U)
/*! domainmask_extdst4_dm_fetchlayer1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchlayer1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv3_MASK (0x400000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv3_SHIFT (22U)
/*! domainmask_extdst4_dm_fetchyuv3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv0_MASK (0x800000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv0_SHIFT (23U)
/*! domainmask_extdst4_dm_fetchyuv0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco0_SHIFT (24U)
/*! domainmask_extdst4_dm_fetcheco0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv1_MASK (0x2000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv1_SHIFT (25U)
/*! domainmask_extdst4_dm_fetchyuv1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco1_MASK (0x4000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco1_SHIFT (26U)
/*! domainmask_extdst4_dm_fetcheco1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv2_MASK (0x8000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv2_SHIFT (27U)
/*! domainmask_extdst4_dm_fetchyuv2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetchyuv2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco2_MASK (0x10000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco2_SHIFT (28U)
/*! domainmask_extdst4_dm_fetcheco2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_fetcheco2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix4_MASK (0x20000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix4_SHIFT (29U)
/*! domainmask_extdst4_dm_matrix4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_matrix4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler4_MASK (0x40000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler4_SHIFT (30U)
/*! domainmask_extdst4_dm_hscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_hscaler4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler4_MASK (0x80000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler4_SHIFT (31U)
/*! domainmask_extdst4_dm_vscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_DOMAIN_MASK0_domainmask_extdst4_dm_vscaler4_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST1_DOMAIN_MASK0 - Pixel Engine domain mask 0 for endpoint extdst1. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_rop9_MASK (0x1U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_rop9_SHIFT (0U)
/*! domainmask_extdst1_dm_rop9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_rop9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_rop9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_rop9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_clut9_MASK (0x2U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_clut9_SHIFT (1U)
/*! domainmask_extdst1_dm_clut9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_clut9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_clut9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_clut9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix9_MASK (0x4U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix9_SHIFT (2U)
/*! domainmask_extdst1_dm_matrix9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_blitblend9_MASK (0x8U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_blitblend9_SHIFT (3U)
/*! domainmask_extdst1_dm_blitblend9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_blitblend9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_blitblend9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_blitblend9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchrot9_MASK (0x10U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchrot9_SHIFT (4U)
/*! domainmask_extdst1_dm_fetchrot9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchrot9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchrot9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchrot9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchdecode9_MASK (0x20U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchdecode9_SHIFT (5U)
/*! domainmask_extdst1_dm_fetchdecode9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchdecode9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchdecode9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchdecode9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco9_MASK (0x40U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco9_SHIFT (6U)
/*! domainmask_extdst1_dm_fetcheco9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler9_MASK (0x80U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler9_SHIFT (7U)
/*! domainmask_extdst1_dm_hscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler9_MASK (0x100U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler9_SHIFT (8U)
/*! domainmask_extdst1_dm_vscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_filter9_MASK (0x200U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_filter9_SHIFT (9U)
/*! domainmask_extdst1_dm_filter9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_filter9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_filter9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_filter9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe0_MASK (0x400U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe0_SHIFT (10U)
/*! domainmask_extdst1_dm_constframe0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe4_MASK (0x800U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe4_SHIFT (11U)
/*! domainmask_extdst1_dm_constframe4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe1_MASK (0x1000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe1_SHIFT (12U)
/*! domainmask_extdst1_dm_constframe1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe5_MASK (0x2000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe5_SHIFT (13U)
/*! domainmask_extdst1_dm_constframe5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_constframe5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend1_MASK (0x4000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend1_SHIFT (14U)
/*! domainmask_extdst1_dm_layerblend1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend2_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend2_SHIFT (15U)
/*! domainmask_extdst1_dm_layerblend2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend3_MASK (0x10000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend3_SHIFT (16U)
/*! domainmask_extdst1_dm_layerblend3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend4_MASK (0x20000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend4_SHIFT (17U)
/*! domainmask_extdst1_dm_layerblend4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend5_MASK (0x40000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend5_SHIFT (18U)
/*! domainmask_extdst1_dm_layerblend5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend6_MASK (0x80000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend6_SHIFT (19U)
/*! domainmask_extdst1_dm_layerblend6
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend6_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_layerblend6_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer0_MASK (0x100000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer0_SHIFT (20U)
/*! domainmask_extdst1_dm_fetchlayer0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer1_MASK (0x200000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer1_SHIFT (21U)
/*! domainmask_extdst1_dm_fetchlayer1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchlayer1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv3_MASK (0x400000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv3_SHIFT (22U)
/*! domainmask_extdst1_dm_fetchyuv3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv0_MASK (0x800000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv0_SHIFT (23U)
/*! domainmask_extdst1_dm_fetchyuv0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco0_SHIFT (24U)
/*! domainmask_extdst1_dm_fetcheco0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv1_MASK (0x2000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv1_SHIFT (25U)
/*! domainmask_extdst1_dm_fetchyuv1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco1_MASK (0x4000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco1_SHIFT (26U)
/*! domainmask_extdst1_dm_fetcheco1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv2_MASK (0x8000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv2_SHIFT (27U)
/*! domainmask_extdst1_dm_fetchyuv2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetchyuv2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco2_MASK (0x10000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco2_SHIFT (28U)
/*! domainmask_extdst1_dm_fetcheco2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_fetcheco2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix4_MASK (0x20000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix4_SHIFT (29U)
/*! domainmask_extdst1_dm_matrix4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_matrix4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler4_MASK (0x40000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler4_SHIFT (30U)
/*! domainmask_extdst1_dm_hscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_hscaler4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler4_MASK (0x80000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler4_SHIFT (31U)
/*! domainmask_extdst1_dm_vscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_DOMAIN_MASK0_domainmask_extdst1_dm_vscaler4_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST5_DOMAIN_MASK0 - Pixel Engine domain mask 0 for endpoint extdst5. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_rop9_MASK (0x1U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_rop9_SHIFT (0U)
/*! domainmask_extdst5_dm_rop9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_rop9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_rop9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_rop9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_clut9_MASK (0x2U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_clut9_SHIFT (1U)
/*! domainmask_extdst5_dm_clut9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_clut9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_clut9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_clut9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix9_MASK (0x4U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix9_SHIFT (2U)
/*! domainmask_extdst5_dm_matrix9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_blitblend9_MASK (0x8U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_blitblend9_SHIFT (3U)
/*! domainmask_extdst5_dm_blitblend9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_blitblend9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_blitblend9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_blitblend9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchrot9_MASK (0x10U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchrot9_SHIFT (4U)
/*! domainmask_extdst5_dm_fetchrot9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchrot9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchrot9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchrot9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchdecode9_MASK (0x20U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchdecode9_SHIFT (5U)
/*! domainmask_extdst5_dm_fetchdecode9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchdecode9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchdecode9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchdecode9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco9_MASK (0x40U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco9_SHIFT (6U)
/*! domainmask_extdst5_dm_fetcheco9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler9_MASK (0x80U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler9_SHIFT (7U)
/*! domainmask_extdst5_dm_hscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler9_MASK (0x100U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler9_SHIFT (8U)
/*! domainmask_extdst5_dm_vscaler9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_filter9_MASK (0x200U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_filter9_SHIFT (9U)
/*! domainmask_extdst5_dm_filter9
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_filter9(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_filter9_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_filter9_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe0_MASK (0x400U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe0_SHIFT (10U)
/*! domainmask_extdst5_dm_constframe0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe4_MASK (0x800U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe4_SHIFT (11U)
/*! domainmask_extdst5_dm_constframe4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe1_MASK (0x1000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe1_SHIFT (12U)
/*! domainmask_extdst5_dm_constframe1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe5_MASK (0x2000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe5_SHIFT (13U)
/*! domainmask_extdst5_dm_constframe5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_constframe5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend1_MASK (0x4000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend1_SHIFT (14U)
/*! domainmask_extdst5_dm_layerblend1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend2_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend2_SHIFT (15U)
/*! domainmask_extdst5_dm_layerblend2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend3_MASK (0x10000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend3_SHIFT (16U)
/*! domainmask_extdst5_dm_layerblend3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend4_MASK (0x20000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend4_SHIFT (17U)
/*! domainmask_extdst5_dm_layerblend4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend5_MASK (0x40000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend5_SHIFT (18U)
/*! domainmask_extdst5_dm_layerblend5
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend5_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend5_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend6_MASK (0x80000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend6_SHIFT (19U)
/*! domainmask_extdst5_dm_layerblend6
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend6_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_layerblend6_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer0_MASK (0x100000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer0_SHIFT (20U)
/*! domainmask_extdst5_dm_fetchlayer0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer1_MASK (0x200000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer1_SHIFT (21U)
/*! domainmask_extdst5_dm_fetchlayer1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchlayer1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv3_MASK (0x400000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv3_SHIFT (22U)
/*! domainmask_extdst5_dm_fetchyuv3
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv3_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv3_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv0_MASK (0x800000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv0_SHIFT (23U)
/*! domainmask_extdst5_dm_fetchyuv0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco0_SHIFT (24U)
/*! domainmask_extdst5_dm_fetcheco0
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco0_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco0_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv1_MASK (0x2000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv1_SHIFT (25U)
/*! domainmask_extdst5_dm_fetchyuv1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco1_MASK (0x4000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco1_SHIFT (26U)
/*! domainmask_extdst5_dm_fetcheco1
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco1_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco1_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv2_MASK (0x8000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv2_SHIFT (27U)
/*! domainmask_extdst5_dm_fetchyuv2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetchyuv2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco2_MASK (0x10000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco2_SHIFT (28U)
/*! domainmask_extdst5_dm_fetcheco2
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco2_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_fetcheco2_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix4_MASK (0x20000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix4_SHIFT (29U)
/*! domainmask_extdst5_dm_matrix4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_matrix4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler4_MASK (0x40000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler4_SHIFT (30U)
/*! domainmask_extdst5_dm_hscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_hscaler4_MASK)

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler4_MASK (0x80000000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler4_SHIFT (31U)
/*! domainmask_extdst5_dm_vscaler4
 *  0b0..Module is prohibited.
 *  0b1..Module is allowed.
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler4_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_DOMAIN_MASK0_domainmask_extdst5_dm_vscaler4_MASK)
/*! @} */

/*! @name DOMAINMASK_SEERIS_DISPLAY_STATIC - Global settings for SEERIS Display configuration. */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_SEERIS_DISPLAY_STATIC_domainmask_display_pipeline_synchronization_MASK (0x1U)
#define DISPLAY_SEERIS_DOMAINMASK_SEERIS_DISPLAY_STATIC_domainmask_display_pipeline_synchronization_SHIFT (0U)
/*! domainmask_display_pipeline_synchronization
 *  0b0..Display pipeline synchronization is disabled
 *  0b1..Display pipeline synchronization is enabled
 */
#define DISPLAY_SEERIS_DOMAINMASK_SEERIS_DISPLAY_STATIC_domainmask_display_pipeline_synchronization(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_SEERIS_DISPLAY_STATIC_domainmask_display_pipeline_synchronization_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_SEERIS_DISPLAY_STATIC_domainmask_display_pipeline_synchronization_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST0_STATIC - Static pixel engine configuration for extdst0 */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_STATIC_domainmask_extdst0_is_display_master_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_STATIC_domainmask_extdst0_is_display_master_SHIFT (15U)
/*! domainmask_extdst0_is_display_master
 *  0b0..Slave Synchronizer
 *  0b1..Master Synchronizer
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST0_STATIC_domainmask_extdst0_is_display_master(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST0_STATIC_domainmask_extdst0_is_display_master_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST0_STATIC_domainmask_extdst0_is_display_master_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST4_STATIC - Static pixel engine configuration for extdst4 */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_STATIC_domainmask_extdst4_is_display_master_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_STATIC_domainmask_extdst4_is_display_master_SHIFT (15U)
/*! domainmask_extdst4_is_display_master
 *  0b0..Slave Synchronizer
 *  0b1..Master Synchronizer
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST4_STATIC_domainmask_extdst4_is_display_master(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST4_STATIC_domainmask_extdst4_is_display_master_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST4_STATIC_domainmask_extdst4_is_display_master_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST1_STATIC - Static pixel engine configuration for extdst1 */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_STATIC_domainmask_extdst1_is_display_master_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_STATIC_domainmask_extdst1_is_display_master_SHIFT (15U)
/*! domainmask_extdst1_is_display_master
 *  0b0..Slave Synchronizer
 *  0b1..Master Synchronizer
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST1_STATIC_domainmask_extdst1_is_display_master(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST1_STATIC_domainmask_extdst1_is_display_master_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST1_STATIC_domainmask_extdst1_is_display_master_MASK)
/*! @} */

/*! @name DOMAINMASK_EXTDST5_STATIC - Static pixel engine configuration for extdst5 */
/*! @{ */

#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_STATIC_domainmask_extdst5_is_display_master_MASK (0x8000U)
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_STATIC_domainmask_extdst5_is_display_master_SHIFT (15U)
/*! domainmask_extdst5_is_display_master
 *  0b0..Slave Synchronizer
 *  0b1..Master Synchronizer
 */
#define DISPLAY_SEERIS_DOMAINMASK_EXTDST5_STATIC_domainmask_extdst5_is_display_master(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DOMAINMASK_EXTDST5_STATIC_domainmask_extdst5_is_display_master_SHIFT)) & DISPLAY_SEERIS_DOMAINMASK_EXTDST5_STATIC_domainmask_extdst5_is_display_master_MASK)
/*! @} */

/*! @name CMDSEQMASK_MASKLOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKUNLOCK_cmdseqmask_MaskLockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKUNLOCK_cmdseqmask_MaskLockUnlock_SHIFT (0U)
/*! cmdseqmask_MaskLockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKUNLOCK_cmdseqmask_MaskLockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKUNLOCK_cmdseqmask_MaskLockUnlock_SHIFT)) & DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKUNLOCK_cmdseqmask_MaskLockUnlock_MASK)
/*! @} */

/*! @name CMDSEQMASK_MASKLOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskLockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskLockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskLockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskLockStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskLockStatus_MASK)

#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskPrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskPrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskPrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskPrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskPrivilegeStatus_MASK)

#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskFreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskFreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskFreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskFreezeStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQMASK_MASKLOCKSTATUS_cmdseqmask_MaskFreezeStatus_MASK)
/*! @} */

/*! @name CMDSEQMASK_CMDSEQ_ACCESS_MASK0 - Each bit describes whether register in the corresponding 64kByte address block is allowed to be written from the command sequencer. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK0_cmdseqmask_cs_access_mask0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK0_cmdseqmask_cs_access_mask0_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK0_cmdseqmask_cs_access_mask0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK0_cmdseqmask_cs_access_mask0_SHIFT)) & DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK0_cmdseqmask_cs_access_mask0_MASK)
/*! @} */

/*! @name CMDSEQMASK_CMDSEQ_ACCESS_MASK1 - Each bit describes whether register in the corresponding 64kByte address block is allowed to be written from the command sequencer. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK1_cmdseqmask_cs_access_mask1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK1_cmdseqmask_cs_access_mask1_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK1_cmdseqmask_cs_access_mask1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK1_cmdseqmask_cs_access_mask1_SHIFT)) & DISPLAY_SEERIS_CMDSEQMASK_CMDSEQ_ACCESS_MASK1_cmdseqmask_cs_access_mask1_MASK)
/*! @} */

/*! @name CMDSEQ_HIF - Command input buffer */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_HIF_cmdseq_CommandFIFO_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQ_HIF_cmdseq_CommandFIFO_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_HIF_cmdseq_CommandFIFO(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_HIF_cmdseq_CommandFIFO_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_HIF_cmdseq_CommandFIFO_MASK)
/*! @} */

/*! @name CMDSEQ_LOCKUNLOCKHIF - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCKHIF_cmdseq_LockUnlockHIF_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCKHIF_cmdseq_LockUnlockHIF_SHIFT (0U)
/*! cmdseq_LockUnlockHIF
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCKHIF_cmdseq_LockUnlockHIF(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCKHIF_cmdseq_LockUnlockHIF_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCKHIF_cmdseq_LockUnlockHIF_MASK)
/*! @} */

/*! @name CMDSEQ_LOCKSTATUSHIF - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_LockStatusHIF_MASK (0x1U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_LockStatusHIF_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_LockStatusHIF(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_LockStatusHIF_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_LockStatusHIF_MASK)

#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_PrivilegeStatusHIF_MASK (0x10U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_PrivilegeStatusHIF_SHIFT (4U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_PrivilegeStatusHIF(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_PrivilegeStatusHIF_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_PrivilegeStatusHIF_MASK)

#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_FreezeStatusHIF_MASK (0x100U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_FreezeStatusHIF_SHIFT (8U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_FreezeStatusHIF(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_FreezeStatusHIF_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKSTATUSHIF_cmdseq_FreezeStatusHIF_MASK)
/*! @} */

/*! @name CMDSEQ_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCK_cmdseq_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCK_cmdseq_LockUnlock_SHIFT (0U)
/*! cmdseq_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCK_cmdseq_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCK_cmdseq_LockUnlock_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKUNLOCK_cmdseq_LockUnlock_MASK)
/*! @} */

/*! @name CMDSEQ_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_LockStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_LockStatus_MASK)

#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_LOCKSTATUS_cmdseq_FreezeStatus_MASK)
/*! @} */

/*! @name CMDSEQ_BUFFERADDRESS - Command buffer address register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Local_MASK (0x1U)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Local_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Local(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Local_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Local_MASK)

#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Addr_MASK (0xFFFFFFE0U)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Addr_SHIFT (5U)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Addr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Addr_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESS_cmdseq_Addr_MASK)
/*! @} */

/*! @name CMDSEQ_BUFFERADDRESSMSB - Command buffer address register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESSMSB_cmdseq_AddrMSB_MASK (0xFFU)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESSMSB_cmdseq_AddrMSB_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESSMSB_cmdseq_AddrMSB(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESSMSB_cmdseq_AddrMSB_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_BUFFERADDRESSMSB_cmdseq_AddrMSB_MASK)
/*! @} */

/*! @name CMDSEQ_BUFFERSIZE - Command buffer size register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_BUFFERSIZE_cmdseq_Size_MASK (0xFFF8U)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERSIZE_cmdseq_Size_SHIFT (3U)
#define DISPLAY_SEERIS_CMDSEQ_BUFFERSIZE_cmdseq_Size(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_BUFFERSIZE_cmdseq_Size_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_BUFFERSIZE_cmdseq_Size_MASK)
/*! @} */

/*! @name CMDSEQ_WATERMARKCONTROL - Watermark Control register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_LowWM_MASK (0xFFFFU)
#define DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_LowWM_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_LowWM(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_LowWM_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_LowWM_MASK)

#define DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_HighWM_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_HighWM_SHIFT (16U)
#define DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_HighWM(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_HighWM_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_WATERMARKCONTROL_cmdseq_HighWM_MASK)
/*! @} */

/*! @name CMDSEQ_CONTROL - Control register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrAxiw_MASK (0x1U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrAxiw_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrAxiw(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrAxiw_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrAxiw_MASK)

#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrRbuf_MASK (0x4U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrRbuf_SHIFT (2U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrRbuf(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrRbuf_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrRbuf_MASK)

#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrCmdBuf_MASK (0x8U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrCmdBuf_SHIFT (3U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrCmdBuf(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrCmdBuf_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_ClrCmdBuf_MASK)

#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_Clear_MASK (0x10U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_Clear_SHIFT (4U)
#define DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_Clear(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_Clear_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_CONTROL_cmdseq_Clear_MASK)
/*! @} */

/*! @name CMDSEQ_STATUS - Status register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOSpace_MASK (0x1FFFFU)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOSpace_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOSpace(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOSpace_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOSpace_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOEmpty_MASK (0x1000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOEmpty_SHIFT (24U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOEmpty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOEmpty_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOEmpty_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOFull_MASK (0x2000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOFull_SHIFT (25U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOFull(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOFull_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOFull_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOWMState_MASK (0x4000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOWMState_SHIFT (26U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOWMState(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOWMState_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_FIFOWMState_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Watchdog_MASK (0x8000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Watchdog_SHIFT (27U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Watchdog(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Watchdog_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Watchdog_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ReadBusy_MASK (0x10000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ReadBusy_SHIFT (28U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ReadBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ReadBusy_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ReadBusy_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_WriteBusy_MASK (0x20000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_WriteBusy_SHIFT (29U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_WriteBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_WriteBusy_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_WriteBusy_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Idle_MASK (0x40000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Idle_SHIFT (30U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Idle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Idle_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_Idle_MASK)

#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ErrorHalt_MASK (0x80000000U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ErrorHalt_SHIFT (31U)
#define DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ErrorHalt(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ErrorHalt_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_STATUS_cmdseq_ErrorHalt_MASK)
/*! @} */

/*! @name CMDSEQ_PREFETCHWINDOWSTART - PrefetchWindowStart register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTART_cmdseq_PWStart_MASK (0xFFFFFFFCU)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTART_cmdseq_PWStart_SHIFT (2U)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTART_cmdseq_PWStart(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTART_cmdseq_PWStart_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTART_cmdseq_PWStart_MASK)
/*! @} */

/*! @name CMDSEQ_PREFETCHWINDOWSTARTMSB - PrefetchWindowStart register MSB bits */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTARTMSB_cmdseq_PWStartMSB_MASK (0xFFU)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTARTMSB_cmdseq_PWStartMSB_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTARTMSB_cmdseq_PWStartMSB(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTARTMSB_cmdseq_PWStartMSB_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWSTARTMSB_cmdseq_PWStartMSB_MASK)
/*! @} */

/*! @name CMDSEQ_PREFETCHWINDOWEND - PrefetchWindowEnd register */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWEND_cmdseq_PWEnd_MASK (0xFFFFFFFCU)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWEND_cmdseq_PWEnd_SHIFT (2U)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWEND_cmdseq_PWEnd(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWEND_cmdseq_PWEnd_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWEND_cmdseq_PWEnd_MASK)
/*! @} */

/*! @name CMDSEQ_PREFETCHWINDOWENDMSB - PrefetchWindowEnd register MSB bits */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWENDMSB_cmdseq_PWEndMSB_MASK (0xFFU)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWENDMSB_cmdseq_PWEndMSB_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWENDMSB_cmdseq_PWEndMSB(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWENDMSB_cmdseq_PWEndMSB_SHIFT)) & DISPLAY_SEERIS_CMDSEQ_PREFETCHWINDOWENDMSB_cmdseq_PWEndMSB_MASK)
/*! @} */

/*! @name CMDSEQIRQ_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKUNLOCK_cmdseqirq_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKUNLOCK_cmdseqirq_LockUnlock_SHIFT (0U)
/*! cmdseqirq_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKUNLOCK_cmdseqirq_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_LOCKUNLOCK_cmdseqirq_LockUnlock_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_LOCKUNLOCK_cmdseqirq_LockUnlock_MASK)
/*! @} */

/*! @name CMDSEQIRQ_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_LockStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_LockStatus_MASK)

#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_LOCKSTATUS_cmdseqirq_FreezeStatus_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTENABLE0 - Interrupt Enable register 0. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE0_cmdseqirq_InterruptEnable0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE0_cmdseqirq_InterruptEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE0_cmdseqirq_InterruptEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE0_cmdseqirq_InterruptEnable0_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE0_cmdseqirq_InterruptEnable0_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTENABLE1 - Interrupt Enable register 1. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE1_cmdseqirq_InterruptEnable1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE1_cmdseqirq_InterruptEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE1_cmdseqirq_InterruptEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE1_cmdseqirq_InterruptEnable1_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE1_cmdseqirq_InterruptEnable1_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTENABLE2 - Interrupt Enable register 2. */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE2_cmdseqirq_InterruptEnable2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE2_cmdseqirq_InterruptEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE2_cmdseqirq_InterruptEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE2_cmdseqirq_InterruptEnable2_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTENABLE2_cmdseqirq_InterruptEnable2_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTPRESET0 - Interrupt Preset register 0 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET0_cmdseqirq_InterruptPreset0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET0_cmdseqirq_InterruptPreset0_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET0_cmdseqirq_InterruptPreset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET0_cmdseqirq_InterruptPreset0_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET0_cmdseqirq_InterruptPreset0_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTPRESET1 - Interrupt Preset register 1 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET1_cmdseqirq_InterruptPreset1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET1_cmdseqirq_InterruptPreset1_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET1_cmdseqirq_InterruptPreset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET1_cmdseqirq_InterruptPreset1_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET1_cmdseqirq_InterruptPreset1_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTPRESET2 - Interrupt Preset register 2 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET2_cmdseqirq_InterruptPreset2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET2_cmdseqirq_InterruptPreset2_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET2_cmdseqirq_InterruptPreset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET2_cmdseqirq_InterruptPreset2_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTPRESET2_cmdseqirq_InterruptPreset2_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTCLEAR0 - Interrupt Clear register 0 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR0_cmdseqirq_InterruptClear0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR0_cmdseqirq_InterruptClear0_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR0_cmdseqirq_InterruptClear0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR0_cmdseqirq_InterruptClear0_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR0_cmdseqirq_InterruptClear0_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTCLEAR1 - Interrupt Clear register 1 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR1_cmdseqirq_InterruptClear1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR1_cmdseqirq_InterruptClear1_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR1_cmdseqirq_InterruptClear1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR1_cmdseqirq_InterruptClear1_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR1_cmdseqirq_InterruptClear1_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTCLEAR2 - Interrupt Clear register 2 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR2_cmdseqirq_InterruptClear2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR2_cmdseqirq_InterruptClear2_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR2_cmdseqirq_InterruptClear2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR2_cmdseqirq_InterruptClear2_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTCLEAR2_cmdseqirq_InterruptClear2_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTSTATUS0 - Interrupt Status register 0 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS0_cmdseqirq_InterruptStatus0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS0_cmdseqirq_InterruptStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS0_cmdseqirq_InterruptStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS0_cmdseqirq_InterruptStatus0_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS0_cmdseqirq_InterruptStatus0_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTSTATUS1 - Interrupt Status register 1 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS1_cmdseqirq_InterruptStatus1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS1_cmdseqirq_InterruptStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS1_cmdseqirq_InterruptStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS1_cmdseqirq_InterruptStatus1_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS1_cmdseqirq_InterruptStatus1_MASK)
/*! @} */

/*! @name CMDSEQIRQ_INTERRUPTSTATUS2 - Interrupt Status register 2 */
/*! @{ */

#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS2_cmdseqirq_InterruptStatus2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS2_cmdseqirq_InterruptStatus2_SHIFT (0U)
#define DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS2_cmdseqirq_InterruptStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS2_cmdseqirq_InterruptStatus2_SHIFT)) & DISPLAY_SEERIS_CMDSEQIRQ_INTERRUPTSTATUS2_cmdseqirq_InterruptStatus2_MASK)
/*! @} */

/*! @name GENERALPURPOSE_GENERALPURPOSE - General purpose config memory */
/*! @{ */

#define DISPLAY_SEERIS_GENERALPURPOSE_GENERALPURPOSE_generalpurpose_GeneralPurpose_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_GENERALPURPOSE_GENERALPURPOSE_generalpurpose_GeneralPurpose_SHIFT (0U)
#define DISPLAY_SEERIS_GENERALPURPOSE_GENERALPURPOSE_generalpurpose_GeneralPurpose(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_GENERALPURPOSE_GENERALPURPOSE_generalpurpose_GeneralPurpose_SHIFT)) & DISPLAY_SEERIS_GENERALPURPOSE_GENERALPURPOSE_generalpurpose_GeneralPurpose_MASK)
/*! @} */

/*! @name XPC_CONTROL - Global XPC control register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_CONTROL_xpc_Enable_MASK (0x1U)
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_Enable_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_CONTROL_xpc_Enable_SHIFT)) & DISPLAY_SEERIS_XPC_CONTROL_xpc_Enable_MASK)

#define DISPLAY_SEERIS_XPC_CONTROL_xpc_Mode_MASK (0x6U)
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_Mode_SHIFT (1U)
/*! xpc_Mode
 *  0b00..Manual measurement end
 *  0b01..Timer controlled measurement end
 *  0b10..Continuous measurement; retriggered by reading SW_Tag register
 */
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_Mode(x)   (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_CONTROL_xpc_Mode_SHIFT)) & DISPLAY_SEERIS_XPC_CONTROL_xpc_Mode_MASK)

#define DISPLAY_SEERIS_XPC_CONTROL_xpc_IncrementMode_MASK (0x40000000U)
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_IncrementMode_SHIFT (30U)
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_IncrementMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_CONTROL_xpc_IncrementMode_SHIFT)) & DISPLAY_SEERIS_XPC_CONTROL_xpc_IncrementMode_MASK)

#define DISPLAY_SEERIS_XPC_CONTROL_xpc_OTCDisable_MASK (0x80000000U)
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_OTCDisable_SHIFT (31U)
#define DISPLAY_SEERIS_XPC_CONTROL_xpc_OTCDisable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_CONTROL_xpc_OTCDisable_SHIFT)) & DISPLAY_SEERIS_XPC_CONTROL_xpc_OTCDisable_MASK)
/*! @} */

/*! @name XPC_TIMER - Timer control register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_TIMER_xpc_Load_MASK   (0xFFFFFFFU)
#define DISPLAY_SEERIS_XPC_TIMER_xpc_Load_SHIFT  (0U)
#define DISPLAY_SEERIS_XPC_TIMER_xpc_Load(x)     (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_TIMER_xpc_Load_SHIFT)) & DISPLAY_SEERIS_XPC_TIMER_xpc_Load_MASK)

#define DISPLAY_SEERIS_XPC_TIMER_xpc_Divider_MASK (0xF0000000U)
#define DISPLAY_SEERIS_XPC_TIMER_xpc_Divider_SHIFT (28U)
#define DISPLAY_SEERIS_XPC_TIMER_xpc_Divider(x)  (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_TIMER_xpc_Divider_SHIFT)) & DISPLAY_SEERIS_XPC_TIMER_xpc_Divider_MASK)
/*! @} */

/*! @name XPC_MEASUREMENTTIMECONTROL - Timer divider control register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTDivider_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTDivider_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTDivider(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTDivider_SHIFT)) & DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTDivider_MASK)

#define DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTEnable_MASK (0x80000000U)
#define DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTEnable_SHIFT (31U)
#define DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTEnable_SHIFT)) & DISPLAY_SEERIS_XPC_MEASUREMENTTIMECONTROL_xpc_MTEnable_MASK)
/*! @} */

/*! @name XPC_SW_TAG - Tag register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_SW_TAG_xpc_Tag_MASK   (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_SW_TAG_xpc_Tag_SHIFT  (0U)
#define DISPLAY_SEERIS_XPC_SW_TAG_xpc_Tag(x)     (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_SW_TAG_xpc_Tag_SHIFT)) & DISPLAY_SEERIS_XPC_SW_TAG_xpc_Tag_MASK)
/*! @} */

/*! @name XPC_MEASUREMENTTIME - Measurement time register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MEASUREMENTTIME_xpc_Time_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MEASUREMENTTIME_xpc_Time_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MEASUREMENTTIME_xpc_Time(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MEASUREMENTTIME_xpc_Time_SHIFT)) & DISPLAY_SEERIS_XPC_MEASUREMENTTIME_xpc_Time_MASK)
/*! @} */

/*! @name XPC_GLOBAL_COUNTER - Global counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_GLOBAL_COUNTER_xpc_Global_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_GLOBAL_COUNTER_xpc_Global_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_GLOBAL_COUNTER_xpc_Global(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_GLOBAL_COUNTER_xpc_Global_SHIFT)) & DISPLAY_SEERIS_XPC_GLOBAL_COUNTER_xpc_Global_MASK)
/*! @} */

/*! @name XPC_MU00_SWITCH - Measurement unit 00 switch register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU00_SWITCH_xpc_MU00_Select_MASK (0xFU)
#define DISPLAY_SEERIS_XPC_MU00_SWITCH_xpc_MU00_Select_SHIFT (0U)
/*! xpc_MU00_Select
 *  0b0000..fetchlayer0 read direction (ACLK clock)
 *  0b0001..fetchlayer1 read direction (ACLK clock)
 *  0b0010..fetchyuv3 read direction (ACLK clock)
 *  0b0011..fetchyuv0 read direction (ACLK clock)
 *  0b0100..fetchyuv1 read direction (ACLK clock)
 *  0b0101..fetchyuv2 read direction (ACLK clock)
 *  0b0110..fetcheco0 read direction (ACLK clock)
 *  0b0111..fetcheco1 read direction (ACLK clock)
 *  0b1000..fetcheco2 read direction (ACLK clock)
 *  0b1001..fetchdecode9 read direction (ACLK clock)
 *  0b1010..fetchrot9 read direction (ACLK clock)
 *  0b1011..fetcheco9 read direction (ACLK clock)
 *  0b1100..store9 write direction (ACLK clock)
 *  0b1101..cmdseq read direction (ACLK clock)
 *  0b1110..cmdseq write direction (ACLK clock)
 */
#define DISPLAY_SEERIS_XPC_MU00_SWITCH_xpc_MU00_Select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU00_SWITCH_xpc_MU00_Select_SHIFT)) & DISPLAY_SEERIS_XPC_MU00_SWITCH_xpc_MU00_Select_MASK)
/*! @} */

/*! @name XPC_MU00_DATA_COUNTER - Measurement unit 00 data counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU00_DATA_COUNTER_xpc_MU00_Data_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU00_DATA_COUNTER_xpc_MU00_Data_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU00_DATA_COUNTER_xpc_MU00_Data(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU00_DATA_COUNTER_xpc_MU00_Data_SHIFT)) & DISPLAY_SEERIS_XPC_MU00_DATA_COUNTER_xpc_MU00_Data_MASK)
/*! @} */

/*! @name XPC_MU00_BUSY_COUNTER - Measurement unit 00 busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU00_BUSY_COUNTER_xpc_MU00_Busy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU00_BUSY_COUNTER_xpc_MU00_Busy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU00_BUSY_COUNTER_xpc_MU00_Busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU00_BUSY_COUNTER_xpc_MU00_Busy_SHIFT)) & DISPLAY_SEERIS_XPC_MU00_BUSY_COUNTER_xpc_MU00_Busy_MASK)
/*! @} */

/*! @name XPC_MU00_TRANSFER_COUNTER - Measurement unit 00 transfer counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU00_TRANSFER_COUNTER_xpc_MU00_Transfer_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU00_TRANSFER_COUNTER_xpc_MU00_Transfer_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU00_TRANSFER_COUNTER_xpc_MU00_Transfer(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU00_TRANSFER_COUNTER_xpc_MU00_Transfer_SHIFT)) & DISPLAY_SEERIS_XPC_MU00_TRANSFER_COUNTER_xpc_MU00_Transfer_MASK)
/*! @} */

/*! @name XPC_MU00_ADDRBUSY_COUNTER - Measurement unit 00 address busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU00_ADDRBUSY_COUNTER_xpc_MU00_Addrbusy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU00_ADDRBUSY_COUNTER_xpc_MU00_Addrbusy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU00_ADDRBUSY_COUNTER_xpc_MU00_Addrbusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU00_ADDRBUSY_COUNTER_xpc_MU00_Addrbusy_SHIFT)) & DISPLAY_SEERIS_XPC_MU00_ADDRBUSY_COUNTER_xpc_MU00_Addrbusy_MASK)
/*! @} */

/*! @name XPC_MU00_LATENCY_COUNTER - Measurement unit 00 latency counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU00_LATENCY_COUNTER_xpc_MU00_Latency_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU00_LATENCY_COUNTER_xpc_MU00_Latency_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU00_LATENCY_COUNTER_xpc_MU00_Latency(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU00_LATENCY_COUNTER_xpc_MU00_Latency_SHIFT)) & DISPLAY_SEERIS_XPC_MU00_LATENCY_COUNTER_xpc_MU00_Latency_MASK)
/*! @} */

/*! @name XPC_MU01_SWITCH - Measurement unit 01 switch register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU01_SWITCH_xpc_MU01_Select_MASK (0xFU)
#define DISPLAY_SEERIS_XPC_MU01_SWITCH_xpc_MU01_Select_SHIFT (0U)
/*! xpc_MU01_Select
 *  0b0000..fetchlayer0 read direction (ACLK clock)
 *  0b0001..fetchlayer1 read direction (ACLK clock)
 *  0b0010..fetchyuv3 read direction (ACLK clock)
 *  0b0011..fetchyuv0 read direction (ACLK clock)
 *  0b0100..fetchyuv1 read direction (ACLK clock)
 *  0b0101..fetchyuv2 read direction (ACLK clock)
 *  0b0110..fetcheco0 read direction (ACLK clock)
 *  0b0111..fetcheco1 read direction (ACLK clock)
 *  0b1000..fetcheco2 read direction (ACLK clock)
 *  0b1001..fetchdecode9 read direction (ACLK clock)
 *  0b1010..fetchrot9 read direction (ACLK clock)
 *  0b1011..fetcheco9 read direction (ACLK clock)
 *  0b1100..store9 write direction (ACLK clock)
 *  0b1101..cmdseq read direction (ACLK clock)
 *  0b1110..cmdseq write direction (ACLK clock)
 */
#define DISPLAY_SEERIS_XPC_MU01_SWITCH_xpc_MU01_Select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU01_SWITCH_xpc_MU01_Select_SHIFT)) & DISPLAY_SEERIS_XPC_MU01_SWITCH_xpc_MU01_Select_MASK)
/*! @} */

/*! @name XPC_MU01_DATA_COUNTER - Measurement unit 01 data counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU01_DATA_COUNTER_xpc_MU01_Data_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU01_DATA_COUNTER_xpc_MU01_Data_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU01_DATA_COUNTER_xpc_MU01_Data(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU01_DATA_COUNTER_xpc_MU01_Data_SHIFT)) & DISPLAY_SEERIS_XPC_MU01_DATA_COUNTER_xpc_MU01_Data_MASK)
/*! @} */

/*! @name XPC_MU01_BUSY_COUNTER - Measurement unit 01 busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU01_BUSY_COUNTER_xpc_MU01_Busy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU01_BUSY_COUNTER_xpc_MU01_Busy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU01_BUSY_COUNTER_xpc_MU01_Busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU01_BUSY_COUNTER_xpc_MU01_Busy_SHIFT)) & DISPLAY_SEERIS_XPC_MU01_BUSY_COUNTER_xpc_MU01_Busy_MASK)
/*! @} */

/*! @name XPC_MU01_TRANSFER_COUNTER - Measurement unit 01 transfer counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU01_TRANSFER_COUNTER_xpc_MU01_Transfer_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU01_TRANSFER_COUNTER_xpc_MU01_Transfer_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU01_TRANSFER_COUNTER_xpc_MU01_Transfer(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU01_TRANSFER_COUNTER_xpc_MU01_Transfer_SHIFT)) & DISPLAY_SEERIS_XPC_MU01_TRANSFER_COUNTER_xpc_MU01_Transfer_MASK)
/*! @} */

/*! @name XPC_MU01_ADDRBUSY_COUNTER - Measurement unit 01 address busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU01_ADDRBUSY_COUNTER_xpc_MU01_Addrbusy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU01_ADDRBUSY_COUNTER_xpc_MU01_Addrbusy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU01_ADDRBUSY_COUNTER_xpc_MU01_Addrbusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU01_ADDRBUSY_COUNTER_xpc_MU01_Addrbusy_SHIFT)) & DISPLAY_SEERIS_XPC_MU01_ADDRBUSY_COUNTER_xpc_MU01_Addrbusy_MASK)
/*! @} */

/*! @name XPC_MU01_LATENCY_COUNTER - Measurement unit 01 latency counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU01_LATENCY_COUNTER_xpc_MU01_Latency_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU01_LATENCY_COUNTER_xpc_MU01_Latency_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU01_LATENCY_COUNTER_xpc_MU01_Latency(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU01_LATENCY_COUNTER_xpc_MU01_Latency_SHIFT)) & DISPLAY_SEERIS_XPC_MU01_LATENCY_COUNTER_xpc_MU01_Latency_MASK)
/*! @} */

/*! @name XPC_MU02_SWITCH - Measurement unit 02 switch register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU02_SWITCH_xpc_MU02_Select_MASK (0xFU)
#define DISPLAY_SEERIS_XPC_MU02_SWITCH_xpc_MU02_Select_SHIFT (0U)
/*! xpc_MU02_Select
 *  0b0000..fetchlayer0 read direction (ACLK clock)
 *  0b0001..fetchlayer1 read direction (ACLK clock)
 *  0b0010..fetchyuv3 read direction (ACLK clock)
 *  0b0011..fetchyuv0 read direction (ACLK clock)
 *  0b0100..fetchyuv1 read direction (ACLK clock)
 *  0b0101..fetchyuv2 read direction (ACLK clock)
 *  0b0110..fetcheco0 read direction (ACLK clock)
 *  0b0111..fetcheco1 read direction (ACLK clock)
 *  0b1000..fetcheco2 read direction (ACLK clock)
 *  0b1001..fetchdecode9 read direction (ACLK clock)
 *  0b1010..fetchrot9 read direction (ACLK clock)
 *  0b1011..fetcheco9 read direction (ACLK clock)
 *  0b1100..store9 write direction (ACLK clock)
 *  0b1101..cmdseq read direction (ACLK clock)
 *  0b1110..cmdseq write direction (ACLK clock)
 */
#define DISPLAY_SEERIS_XPC_MU02_SWITCH_xpc_MU02_Select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU02_SWITCH_xpc_MU02_Select_SHIFT)) & DISPLAY_SEERIS_XPC_MU02_SWITCH_xpc_MU02_Select_MASK)
/*! @} */

/*! @name XPC_MU02_DATA_COUNTER - Measurement unit 02 data counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU02_DATA_COUNTER_xpc_MU02_Data_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU02_DATA_COUNTER_xpc_MU02_Data_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU02_DATA_COUNTER_xpc_MU02_Data(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU02_DATA_COUNTER_xpc_MU02_Data_SHIFT)) & DISPLAY_SEERIS_XPC_MU02_DATA_COUNTER_xpc_MU02_Data_MASK)
/*! @} */

/*! @name XPC_MU02_BUSY_COUNTER - Measurement unit 02 busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU02_BUSY_COUNTER_xpc_MU02_Busy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU02_BUSY_COUNTER_xpc_MU02_Busy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU02_BUSY_COUNTER_xpc_MU02_Busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU02_BUSY_COUNTER_xpc_MU02_Busy_SHIFT)) & DISPLAY_SEERIS_XPC_MU02_BUSY_COUNTER_xpc_MU02_Busy_MASK)
/*! @} */

/*! @name XPC_MU02_TRANSFER_COUNTER - Measurement unit 02 transfer counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU02_TRANSFER_COUNTER_xpc_MU02_Transfer_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU02_TRANSFER_COUNTER_xpc_MU02_Transfer_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU02_TRANSFER_COUNTER_xpc_MU02_Transfer(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU02_TRANSFER_COUNTER_xpc_MU02_Transfer_SHIFT)) & DISPLAY_SEERIS_XPC_MU02_TRANSFER_COUNTER_xpc_MU02_Transfer_MASK)
/*! @} */

/*! @name XPC_MU02_ADDRBUSY_COUNTER - Measurement unit 02 address busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU02_ADDRBUSY_COUNTER_xpc_MU02_Addrbusy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU02_ADDRBUSY_COUNTER_xpc_MU02_Addrbusy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU02_ADDRBUSY_COUNTER_xpc_MU02_Addrbusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU02_ADDRBUSY_COUNTER_xpc_MU02_Addrbusy_SHIFT)) & DISPLAY_SEERIS_XPC_MU02_ADDRBUSY_COUNTER_xpc_MU02_Addrbusy_MASK)
/*! @} */

/*! @name XPC_MU02_LATENCY_COUNTER - Measurement unit 02 latency counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU02_LATENCY_COUNTER_xpc_MU02_Latency_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU02_LATENCY_COUNTER_xpc_MU02_Latency_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU02_LATENCY_COUNTER_xpc_MU02_Latency(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU02_LATENCY_COUNTER_xpc_MU02_Latency_SHIFT)) & DISPLAY_SEERIS_XPC_MU02_LATENCY_COUNTER_xpc_MU02_Latency_MASK)
/*! @} */

/*! @name XPC_MU03_SWITCH - Measurement unit 03 switch register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU03_SWITCH_xpc_MU03_Select_MASK (0xFU)
#define DISPLAY_SEERIS_XPC_MU03_SWITCH_xpc_MU03_Select_SHIFT (0U)
/*! xpc_MU03_Select
 *  0b0000..fetchlayer0 read direction (ACLK clock)
 *  0b0001..fetchlayer1 read direction (ACLK clock)
 *  0b0010..fetchyuv3 read direction (ACLK clock)
 *  0b0011..fetchyuv0 read direction (ACLK clock)
 *  0b0100..fetchyuv1 read direction (ACLK clock)
 *  0b0101..fetchyuv2 read direction (ACLK clock)
 *  0b0110..fetcheco0 read direction (ACLK clock)
 *  0b0111..fetcheco1 read direction (ACLK clock)
 *  0b1000..fetcheco2 read direction (ACLK clock)
 *  0b1001..fetchdecode9 read direction (ACLK clock)
 *  0b1010..fetchrot9 read direction (ACLK clock)
 *  0b1011..fetcheco9 read direction (ACLK clock)
 *  0b1100..store9 write direction (ACLK clock)
 *  0b1101..cmdseq read direction (ACLK clock)
 *  0b1110..cmdseq write direction (ACLK clock)
 */
#define DISPLAY_SEERIS_XPC_MU03_SWITCH_xpc_MU03_Select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU03_SWITCH_xpc_MU03_Select_SHIFT)) & DISPLAY_SEERIS_XPC_MU03_SWITCH_xpc_MU03_Select_MASK)
/*! @} */

/*! @name XPC_MU03_DATA_COUNTER - Measurement unit 03 data counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU03_DATA_COUNTER_xpc_MU03_Data_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU03_DATA_COUNTER_xpc_MU03_Data_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU03_DATA_COUNTER_xpc_MU03_Data(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU03_DATA_COUNTER_xpc_MU03_Data_SHIFT)) & DISPLAY_SEERIS_XPC_MU03_DATA_COUNTER_xpc_MU03_Data_MASK)
/*! @} */

/*! @name XPC_MU03_BUSY_COUNTER - Measurement unit 03 busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU03_BUSY_COUNTER_xpc_MU03_Busy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU03_BUSY_COUNTER_xpc_MU03_Busy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU03_BUSY_COUNTER_xpc_MU03_Busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU03_BUSY_COUNTER_xpc_MU03_Busy_SHIFT)) & DISPLAY_SEERIS_XPC_MU03_BUSY_COUNTER_xpc_MU03_Busy_MASK)
/*! @} */

/*! @name XPC_MU03_TRANSFER_COUNTER - Measurement unit 03 transfer counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU03_TRANSFER_COUNTER_xpc_MU03_Transfer_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU03_TRANSFER_COUNTER_xpc_MU03_Transfer_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU03_TRANSFER_COUNTER_xpc_MU03_Transfer(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU03_TRANSFER_COUNTER_xpc_MU03_Transfer_SHIFT)) & DISPLAY_SEERIS_XPC_MU03_TRANSFER_COUNTER_xpc_MU03_Transfer_MASK)
/*! @} */

/*! @name XPC_MU03_ADDRBUSY_COUNTER - Measurement unit 03 address busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU03_ADDRBUSY_COUNTER_xpc_MU03_Addrbusy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU03_ADDRBUSY_COUNTER_xpc_MU03_Addrbusy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU03_ADDRBUSY_COUNTER_xpc_MU03_Addrbusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU03_ADDRBUSY_COUNTER_xpc_MU03_Addrbusy_SHIFT)) & DISPLAY_SEERIS_XPC_MU03_ADDRBUSY_COUNTER_xpc_MU03_Addrbusy_MASK)
/*! @} */

/*! @name XPC_MU03_LATENCY_COUNTER - Measurement unit 03 latency counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU03_LATENCY_COUNTER_xpc_MU03_Latency_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU03_LATENCY_COUNTER_xpc_MU03_Latency_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU03_LATENCY_COUNTER_xpc_MU03_Latency(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU03_LATENCY_COUNTER_xpc_MU03_Latency_SHIFT)) & DISPLAY_SEERIS_XPC_MU03_LATENCY_COUNTER_xpc_MU03_Latency_MASK)
/*! @} */

/*! @name XPC_MU04_SWITCH - Measurement unit 04 switch register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU04_SWITCH_xpc_MU04_Select_MASK (0xFU)
#define DISPLAY_SEERIS_XPC_MU04_SWITCH_xpc_MU04_Select_SHIFT (0U)
/*! xpc_MU04_Select
 *  0b0000..fetchlayer0 read direction (ACLK clock)
 *  0b0001..fetchlayer1 read direction (ACLK clock)
 *  0b0010..fetchyuv3 read direction (ACLK clock)
 *  0b0011..fetchyuv0 read direction (ACLK clock)
 *  0b0100..fetchyuv1 read direction (ACLK clock)
 *  0b0101..fetchyuv2 read direction (ACLK clock)
 *  0b0110..fetcheco0 read direction (ACLK clock)
 *  0b0111..fetcheco1 read direction (ACLK clock)
 *  0b1000..fetcheco2 read direction (ACLK clock)
 *  0b1001..fetchdecode9 read direction (ACLK clock)
 *  0b1010..fetchrot9 read direction (ACLK clock)
 *  0b1011..fetcheco9 read direction (ACLK clock)
 *  0b1100..store9 write direction (ACLK clock)
 *  0b1101..cmdseq read direction (ACLK clock)
 *  0b1110..cmdseq write direction (ACLK clock)
 */
#define DISPLAY_SEERIS_XPC_MU04_SWITCH_xpc_MU04_Select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU04_SWITCH_xpc_MU04_Select_SHIFT)) & DISPLAY_SEERIS_XPC_MU04_SWITCH_xpc_MU04_Select_MASK)
/*! @} */

/*! @name XPC_MU04_DATA_COUNTER - Measurement unit 04 data counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU04_DATA_COUNTER_xpc_MU04_Data_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU04_DATA_COUNTER_xpc_MU04_Data_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU04_DATA_COUNTER_xpc_MU04_Data(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU04_DATA_COUNTER_xpc_MU04_Data_SHIFT)) & DISPLAY_SEERIS_XPC_MU04_DATA_COUNTER_xpc_MU04_Data_MASK)
/*! @} */

/*! @name XPC_MU04_BUSY_COUNTER - Measurement unit 04 busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU04_BUSY_COUNTER_xpc_MU04_Busy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU04_BUSY_COUNTER_xpc_MU04_Busy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU04_BUSY_COUNTER_xpc_MU04_Busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU04_BUSY_COUNTER_xpc_MU04_Busy_SHIFT)) & DISPLAY_SEERIS_XPC_MU04_BUSY_COUNTER_xpc_MU04_Busy_MASK)
/*! @} */

/*! @name XPC_MU04_TRANSFER_COUNTER - Measurement unit 04 transfer counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU04_TRANSFER_COUNTER_xpc_MU04_Transfer_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU04_TRANSFER_COUNTER_xpc_MU04_Transfer_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU04_TRANSFER_COUNTER_xpc_MU04_Transfer(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU04_TRANSFER_COUNTER_xpc_MU04_Transfer_SHIFT)) & DISPLAY_SEERIS_XPC_MU04_TRANSFER_COUNTER_xpc_MU04_Transfer_MASK)
/*! @} */

/*! @name XPC_MU04_ADDRBUSY_COUNTER - Measurement unit 04 address busy counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU04_ADDRBUSY_COUNTER_xpc_MU04_Addrbusy_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU04_ADDRBUSY_COUNTER_xpc_MU04_Addrbusy_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU04_ADDRBUSY_COUNTER_xpc_MU04_Addrbusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU04_ADDRBUSY_COUNTER_xpc_MU04_Addrbusy_SHIFT)) & DISPLAY_SEERIS_XPC_MU04_ADDRBUSY_COUNTER_xpc_MU04_Addrbusy_MASK)
/*! @} */

/*! @name XPC_MU04_LATENCY_COUNTER - Measurement unit 04 latency counter register */
/*! @{ */

#define DISPLAY_SEERIS_XPC_MU04_LATENCY_COUNTER_xpc_MU04_Latency_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_XPC_MU04_LATENCY_COUNTER_xpc_MU04_Latency_SHIFT (0U)
#define DISPLAY_SEERIS_XPC_MU04_LATENCY_COUNTER_xpc_MU04_Latency(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_XPC_MU04_LATENCY_COUNTER_xpc_MU04_Latency_SHIFT)) & DISPLAY_SEERIS_XPC_MU04_LATENCY_COUNTER_xpc_MU04_Latency_MASK)
/*! @} */

/*! @name BLITIRQ_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_LOCKUNLOCK_blitirq_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_LOCKUNLOCK_blitirq_LockUnlock_SHIFT (0U)
/*! blitirq_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_BLITIRQ_LOCKUNLOCK_blitirq_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_LOCKUNLOCK_blitirq_LockUnlock_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_LOCKUNLOCK_blitirq_LockUnlock_MASK)
/*! @} */

/*! @name BLITIRQ_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_LockStatus_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_LockStatus_MASK)

#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_LOCKSTATUS_blitirq_FreezeStatus_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTENABLE0 - Interrupt Enable register 0. */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE0_blitirq_InterruptEnable0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE0_blitirq_InterruptEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE0_blitirq_InterruptEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE0_blitirq_InterruptEnable0_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE0_blitirq_InterruptEnable0_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTENABLE1 - Interrupt Enable register 1. */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE1_blitirq_InterruptEnable1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE1_blitirq_InterruptEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE1_blitirq_InterruptEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE1_blitirq_InterruptEnable1_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE1_blitirq_InterruptEnable1_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTENABLE2 - Interrupt Enable register 2. */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE2_blitirq_InterruptEnable2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE2_blitirq_InterruptEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE2_blitirq_InterruptEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE2_blitirq_InterruptEnable2_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTENABLE2_blitirq_InterruptEnable2_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTPRESET0 - Interrupt Preset register 0 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET0_blitirq_InterruptPreset0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET0_blitirq_InterruptPreset0_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET0_blitirq_InterruptPreset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET0_blitirq_InterruptPreset0_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET0_blitirq_InterruptPreset0_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTPRESET1 - Interrupt Preset register 1 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET1_blitirq_InterruptPreset1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET1_blitirq_InterruptPreset1_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET1_blitirq_InterruptPreset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET1_blitirq_InterruptPreset1_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET1_blitirq_InterruptPreset1_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTPRESET2 - Interrupt Preset register 2 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET2_blitirq_InterruptPreset2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET2_blitirq_InterruptPreset2_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET2_blitirq_InterruptPreset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET2_blitirq_InterruptPreset2_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTPRESET2_blitirq_InterruptPreset2_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTCLEAR0 - Interrupt Clear register 0 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR0_blitirq_InterruptClear0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR0_blitirq_InterruptClear0_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR0_blitirq_InterruptClear0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR0_blitirq_InterruptClear0_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR0_blitirq_InterruptClear0_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTCLEAR1 - Interrupt Clear register 1 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR1_blitirq_InterruptClear1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR1_blitirq_InterruptClear1_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR1_blitirq_InterruptClear1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR1_blitirq_InterruptClear1_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR1_blitirq_InterruptClear1_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTCLEAR2 - Interrupt Clear register 2 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR2_blitirq_InterruptClear2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR2_blitirq_InterruptClear2_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR2_blitirq_InterruptClear2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR2_blitirq_InterruptClear2_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTCLEAR2_blitirq_InterruptClear2_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTSTATUS0 - Interrupt Status register 0 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS0_blitirq_InterruptStatus0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS0_blitirq_InterruptStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS0_blitirq_InterruptStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS0_blitirq_InterruptStatus0_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS0_blitirq_InterruptStatus0_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTSTATUS1 - Interrupt Status register 1 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS1_blitirq_InterruptStatus1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS1_blitirq_InterruptStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS1_blitirq_InterruptStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS1_blitirq_InterruptStatus1_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS1_blitirq_InterruptStatus1_MASK)
/*! @} */

/*! @name BLITIRQ_INTERRUPTSTATUS2 - Interrupt Status register 2 */
/*! @{ */

#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS2_blitirq_InterruptStatus2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS2_blitirq_InterruptStatus2_SHIFT (0U)
#define DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS2_blitirq_InterruptStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS2_blitirq_InterruptStatus2_SHIFT)) & DISPLAY_SEERIS_BLITIRQ_INTERRUPTSTATUS2_blitirq_InterruptStatus2_MASK)
/*! @} */

/*! @name PIXENG_ROP9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKUNLOCK_pixeng_rop9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKUNLOCK_pixeng_rop9_LockUnlock_SHIFT (0U)
/*! pixeng_rop9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKUNLOCK_pixeng_rop9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_LOCKUNLOCK_pixeng_rop9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_LOCKUNLOCK_pixeng_rop9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_ROP9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_LOCKSTATUS_pixeng_rop9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_ROP9_STATICCONTROL - Raster Operation static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_STATICCONTROL_pixeng_rop9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_ROP9_STATICCONTROL_pixeng_rop9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_ROP9_STATICCONTROL_pixeng_rop9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_STATICCONTROL_pixeng_rop9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_STATICCONTROL_pixeng_rop9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_ROP9_CONTROL - Raster Operation control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_Mode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_Mode_SHIFT (0U)
/*! pixeng_rop9_Mode
 *  0b0..Neutral mode
 *  0b1..Normal Operation
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_Mode_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_AlphaMode_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_AlphaMode_SHIFT (4U)
/*! pixeng_rop9_AlphaMode
 *  0b0..Normal raster operation mode, using the operation index
 *  0b1..Add mode, adds this component from all enabled inputs, clamps to 1
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_AlphaMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_AlphaMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_AlphaMode_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_BlueMode_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_BlueMode_SHIFT (5U)
/*! pixeng_rop9_BlueMode
 *  0b0..Normal raster operation mode, using the operation index
 *  0b1..Add mode, adds this component from all enabled inputs, clamps to 1
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_BlueMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_BlueMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_BlueMode_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_GreenMode_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_GreenMode_SHIFT (6U)
/*! pixeng_rop9_GreenMode
 *  0b0..Normal raster operation mode, using the operation index
 *  0b1..Add mode, adds this component from all enabled inputs, clamps to 1
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_GreenMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_GreenMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_GreenMode_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_RedMode_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_RedMode_SHIFT (7U)
/*! pixeng_rop9_RedMode
 *  0b0..Normal raster operation mode, using the operation index
 *  0b1..Add mode, adds this component from all enabled inputs, clamps to 1
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_RedMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_RedMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_RedMode_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_PrimDiv2_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_PrimDiv2_SHIFT (8U)
/*! pixeng_rop9_PrimDiv2
 *  0b0..No change to input
 *  0b1..Input is divided by two/shift to the right by one
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_PrimDiv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_PrimDiv2_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_PrimDiv2_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_SecDiv2_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_SecDiv2_SHIFT (9U)
/*! pixeng_rop9_SecDiv2
 *  0b0..No change to input
 *  0b1..Input is divided by two/shift to the right by one
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_SecDiv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_SecDiv2_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_SecDiv2_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_TertDiv2_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_TertDiv2_SHIFT (10U)
/*! pixeng_rop9_TertDiv2
 *  0b0..No change to input
 *  0b1..Input is divided by two/shift to the right by one
 */
#define DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_TertDiv2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_TertDiv2_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_CONTROL_pixeng_rop9_TertDiv2_MASK)
/*! @} */

/*! @name PIXENG_ROP9_RASTEROPERATIONINDICES - ROP operation indices */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_RASTEROPERATIONINDICES_pixeng_rop9_OpIndexRed_MASK)
/*! @} */

/*! @name PIXENG_ROP9_PRIMCONTROLWORD - Value of last received primary control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_PRIMCONTROLWORD_pixeng_rop9_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_ROP9_PRIMCONTROLWORD_pixeng_rop9_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_ROP9_PRIMCONTROLWORD_pixeng_rop9_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_PRIMCONTROLWORD_pixeng_rop9_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_PRIMCONTROLWORD_pixeng_rop9_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_ROP9_SECCONTROLWORD - Value of last received secondary control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_SECCONTROLWORD_pixeng_rop9_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_ROP9_SECCONTROLWORD_pixeng_rop9_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_ROP9_SECCONTROLWORD_pixeng_rop9_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_SECCONTROLWORD_pixeng_rop9_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_SECCONTROLWORD_pixeng_rop9_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_ROP9_TERTCONTROLWORD - Value of last received tertiary control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9_TERTCONTROLWORD_pixeng_rop9_T_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_ROP9_TERTCONTROLWORD_pixeng_rop9_T_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_ROP9_TERTCONTROLWORD_pixeng_rop9_T_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9_TERTCONTROLWORD_pixeng_rop9_T_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9_TERTCONTROLWORD_pixeng_rop9_T_VAL_MASK)
/*! @} */

/*! @name PIXENG_ROP9CFG_ROP9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKUNLOCK_pixeng_rop9cfg_rop9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKUNLOCK_pixeng_rop9cfg_rop9_LockUnlock_SHIFT (0U)
/*! pixeng_rop9cfg_rop9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKUNLOCK_pixeng_rop9cfg_rop9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKUNLOCK_pixeng_rop9cfg_rop9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKUNLOCK_pixeng_rop9cfg_rop9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_ROP9CFG_ROP9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_LOCKSTATUS_pixeng_rop9cfg_rop9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_ROP9CFG_ROP9_DYNAMIC - Dynamic pixel engine configuration for rop9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_prim_sel_SHIFT (0U)
/*! pixeng_rop9cfg_rop9_prim_sel
 *  0b000000..Unit rop9 input port prim is disabled
 *  0b000101..Unit rop9 input port prim is connected to output of unit fetchrot9
 *  0b000110..Unit rop9 input port prim is connected to output of unit fetchdecode9
 */
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_sec_sel_SHIFT (8U)
/*! pixeng_rop9cfg_rop9_sec_sel
 *  0b000000..Unit rop9 input port sec is disabled
 *  0b000111..Unit rop9 input port sec is connected to output of unit fetcheco9
 */
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_tert_sel_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_tert_sel_SHIFT (16U)
/*! pixeng_rop9cfg_rop9_tert_sel
 *  0b000000..Unit rop9 input port tert is disabled
 *  0b000101..Unit rop9 input port tert is connected to output of unit fetchrot9
 *  0b000110..Unit rop9 input port tert is connected to output of unit fetchdecode9
 */
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_tert_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_tert_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_tert_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_clken_SHIFT (24U)
/*! pixeng_rop9cfg_rop9_clken
 *  0b00..Clock for rop9 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for rop9 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_DYNAMIC_pixeng_rop9cfg_rop9_clken_MASK)
/*! @} */

/*! @name PIXENG_ROP9CFG_ROP9_STATUS - Status information for pixel engine configuration of rop9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_STATUS_pixeng_rop9cfg_rop9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_STATUS_pixeng_rop9cfg_rop9_sel_SHIFT (16U)
/*! pixeng_rop9cfg_rop9_sel
 *  0b000..rop9 module is not used
 *  0b001..rop9 module is used from store9 processing path
 *  0b010..rop9 module is used from extdst0 processing path
 *  0b011..rop9 module is used from extdst4 processing path
 *  0b100..rop9 module is used from extdst1 processing path
 *  0b101..rop9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_STATUS_pixeng_rop9cfg_rop9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_STATUS_pixeng_rop9cfg_rop9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_ROP9CFG_ROP9_STATUS_pixeng_rop9cfg_rop9_sel_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKUNLOCK_pixeng_clut9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKUNLOCK_pixeng_clut9_LockUnlock_SHIFT (0U)
/*! pixeng_clut9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKUNLOCK_pixeng_clut9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LOCKUNLOCK_pixeng_clut9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LOCKUNLOCK_pixeng_clut9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LOCKSTATUS_pixeng_clut9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_STATICCONTROL - CLUT static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_STATICCONTROL_pixeng_clut9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_STATICCONTROL_pixeng_clut9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_STATICCONTROL_pixeng_clut9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_STATICCONTROL_pixeng_clut9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_STATICCONTROL_pixeng_clut9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_UNSHADOWEDCONTROL - CLUT unshadowed control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_B_EN_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_B_EN_SHIFT (0U)
/*! pixeng_clut9_B_EN
 *  0b0..disable
 *  0b1..enable
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_B_EN(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_B_EN_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_B_EN_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_G_EN_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_G_EN_SHIFT (1U)
/*! pixeng_clut9_G_EN
 *  0b0..disable
 *  0b1..enable
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_G_EN(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_G_EN_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_G_EN_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_R_EN_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_R_EN_SHIFT (2U)
/*! pixeng_clut9_R_EN
 *  0b0..disable
 *  0b1..enable
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_R_EN(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_R_EN_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_UNSHADOWEDCONTROL_pixeng_clut9_R_EN_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_CONTROL - CLUT control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_MODE_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_MODE_SHIFT (0U)
/*! pixeng_clut9_MODE
 *  0b00..Module in neutral mode, RGBA input data are bypassed to the output.
 *  0b01..Each RGB input is used as individual index into the respective LUT. Alpha channel is bypassed to output.
 *  0b10..Red input is used as common index into every RGB LUT. Alpha channel is bypassed to output.
 *  0b11..Red input is used as common index into every RGB LUT. The result is remapped and upconverted to RGBA.
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_COL_8BIT_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_COL_8BIT_SHIFT (4U)
/*! pixeng_clut9_COL_8BIT
 *  0b0..color is 10bit output
 *  0b1..color is 8bit output (dithering of internal 10bit value)
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_COL_8BIT(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_COL_8BIT_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_COL_8BIT_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaMask_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaMask_SHIFT (5U)
/*! pixeng_clut9_AlphaMask
 *  0b0..Alpha mask mode disabled
 *  0b1..Alpha mask mode enabled
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaMask(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaMask_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaMask_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaInvert_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaInvert_SHIFT (6U)
/*! pixeng_clut9_AlphaInvert
 *  0b0..Disable computation for alpha smaller than 128
 *  0b1..Disable computation for alpha greater than or equal to 128
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaInvert(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaInvert_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_AlphaInvert_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_IDX_BITS_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_IDX_BITS_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_IDX_BITS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_IDX_BITS_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_CONTROL_pixeng_clut9_IDX_BITS_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_STATUS - CLUT status register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_WRITE_TIMEOUT_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_WRITE_TIMEOUT_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_WRITE_TIMEOUT(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_WRITE_TIMEOUT_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_WRITE_TIMEOUT_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_READ_TIMEOUT_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_READ_TIMEOUT_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_READ_TIMEOUT(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_READ_TIMEOUT_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_STATUS_pixeng_clut9_READ_TIMEOUT_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_LASTCONTROLWORD - Value of last received control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_LASTCONTROLWORD_pixeng_clut9_L_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LASTCONTROLWORD_pixeng_clut9_L_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LASTCONTROLWORD_pixeng_clut9_L_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LASTCONTROLWORD_pixeng_clut9_L_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LASTCONTROLWORD_pixeng_clut9_L_VAL_MASK)
/*! @} */

/*! @name PIXENG_CLUT9_LUT - Look Up Table */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_BLUE_MASK (0x3FFU)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_BLUE_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_BLUE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_BLUE_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_BLUE_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_GREEN_MASK (0xFFC00U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_GREEN_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_GREEN(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_GREEN_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_GREEN_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_RED_MASK (0x3FF00000U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_RED_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_RED(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_RED_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9_LUT_pixeng_clut9_RED_MASK)
/*! @} */

/*! @name PIXENG_CLUT9CFG_CLUT9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKUNLOCK_pixeng_clut9cfg_clut9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKUNLOCK_pixeng_clut9cfg_clut9_LockUnlock_SHIFT (0U)
/*! pixeng_clut9cfg_clut9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKUNLOCK_pixeng_clut9cfg_clut9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKUNLOCK_pixeng_clut9cfg_clut9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKUNLOCK_pixeng_clut9cfg_clut9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_LOCKSTATUS_pixeng_clut9cfg_clut9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CLUT9CFG_CLUT9_DYNAMIC - Dynamic pixel engine configuration for clut9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_DYNAMIC_pixeng_clut9cfg_clut9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_DYNAMIC_pixeng_clut9cfg_clut9_src_sel_SHIFT (0U)
/*! pixeng_clut9cfg_clut9_src_sel
 *  0b000000..Unit clut9 input port src is disabled
 *  0b000001..Unit clut9 input port src is connected to output of unit rop9
 *  0b000100..Unit clut9 input port src is connected to output of unit blitblend9
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_DYNAMIC_pixeng_clut9cfg_clut9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_DYNAMIC_pixeng_clut9cfg_clut9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_DYNAMIC_pixeng_clut9cfg_clut9_src_sel_MASK)
/*! @} */

/*! @name PIXENG_CLUT9CFG_CLUT9_STATUS - Status information for pixel engine configuration of clut9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_STATUS_pixeng_clut9cfg_clut9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_STATUS_pixeng_clut9cfg_clut9_sel_SHIFT (16U)
/*! pixeng_clut9cfg_clut9_sel
 *  0b000..clut9 module is not used
 *  0b001..clut9 module is used from store9 processing path
 *  0b010..clut9 module is used from extdst0 processing path
 *  0b011..clut9 module is used from extdst4 processing path
 *  0b100..clut9 module is used from extdst1 processing path
 *  0b101..clut9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_STATUS_pixeng_clut9cfg_clut9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_STATUS_pixeng_clut9cfg_clut9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_CLUT9CFG_CLUT9_STATUS_pixeng_clut9cfg_clut9_sel_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKUNLOCK_pixeng_matrix9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKUNLOCK_pixeng_matrix9_LockUnlock_SHIFT (0U)
/*! pixeng_matrix9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKUNLOCK_pixeng_matrix9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKUNLOCK_pixeng_matrix9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKUNLOCK_pixeng_matrix9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_LOCKSTATUS_pixeng_matrix9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_STATICCONTROL - Color Matrix static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_STATICCONTROL_pixeng_matrix9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_STATICCONTROL_pixeng_matrix9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_STATICCONTROL_pixeng_matrix9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_STATICCONTROL_pixeng_matrix9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_STATICCONTROL_pixeng_matrix9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_CONTROL - Color Matrix control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_MODE_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_MODE_SHIFT (0U)
/*! pixeng_matrix9_MODE
 *  0b00..Module in neutral mode, input data is bypassed
 *  0b01..Module in matrix mode, input data is multiplied with matrix values
 *  0b10..Module in alpha pre-multiplication mode, input color is multiplied with input alpha
 *  0b11..Reserved, do not use
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaMask_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaMask_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaMask(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaMask_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaMask_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaInvert_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaInvert_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaInvert(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaInvert_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_CONTROL_pixeng_matrix9_AlphaInvert_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_RED0 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A11_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A11_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A11(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A11_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A11_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A12_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A12_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A12(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A12_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_RED0_pixeng_matrix9_A12_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_RED1 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A13_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A13_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A13(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A13_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A13_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A14_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A14_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A14(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A14_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_RED1_pixeng_matrix9_A14_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_GREEN0 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A21_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A21_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A21(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A21_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A21_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A22_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A22_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A22(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A22_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN0_pixeng_matrix9_A22_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_GREEN1 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A23_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A23_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A23(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A23_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A23_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A24_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A24_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A24(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A24_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_GREEN1_pixeng_matrix9_A24_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_BLUE0 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A31_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A31_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A31(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A31_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A31_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A32_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A32_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A32(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A32_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE0_pixeng_matrix9_A32_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_BLUE1 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A33_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A33_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A33(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A33_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A33_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A34_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A34_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A34(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A34_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_BLUE1_pixeng_matrix9_A34_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_ALPHA0 - Matrix values for calculation of the alpha output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A41_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A41_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A41(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A41_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A41_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A42_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A42_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A42(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A42_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA0_pixeng_matrix9_A42_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_ALPHA1 - Matrix values for calculation of the alpha output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A43_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A43_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A43(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A43_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A43_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A44_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A44_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A44(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A44_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_ALPHA1_pixeng_matrix9_A44_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_OFFSETVECTOR0 - Offset vectors for red and green output. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C1_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C1_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C1_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C2_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C2_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR0_pixeng_matrix9_C2_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_OFFSETVECTOR1 - Offset vectors for blue and alpha output. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C3_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C3_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C3_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C4_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C4_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_OFFSETVECTOR1_pixeng_matrix9_C4_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9_LASTCONTROLWORD - Value of last received control word, for debugging. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9_LASTCONTROLWORD_pixeng_matrix9_L_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LASTCONTROLWORD_pixeng_matrix9_L_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9_LASTCONTROLWORD_pixeng_matrix9_L_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9_LASTCONTROLWORD_pixeng_matrix9_L_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9_LASTCONTROLWORD_pixeng_matrix9_L_VAL_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9CFG_MATRIX9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKUNLOCK_pixeng_matrix9cfg_matrix9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKUNLOCK_pixeng_matrix9cfg_matrix9_LockUnlock_SHIFT (0U)
/*! pixeng_matrix9cfg_matrix9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKUNLOCK_pixeng_matrix9cfg_matrix9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKUNLOCK_pixeng_matrix9cfg_matrix9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKUNLOCK_pixeng_matrix9cfg_matrix9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_LOCKSTATUS_pixeng_matrix9cfg_matrix9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC - Dynamic pixel engine configuration for matrix9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_src_sel_SHIFT (0U)
/*! pixeng_matrix9cfg_matrix9_src_sel
 *  0b000000..Unit matrix9 input port src is disabled
 *  0b000001..Unit matrix9 input port src is connected to output of unit rop9
 *  0b000010..Unit matrix9 input port src is connected to output of unit clut9
 *  0b000100..Unit matrix9 input port src is connected to output of unit blitblend9
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_clken_SHIFT (24U)
/*! pixeng_matrix9cfg_matrix9_clken
 *  0b00..Clock for matrix9 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for matrix9 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_DYNAMIC_pixeng_matrix9cfg_matrix9_clken_MASK)
/*! @} */

/*! @name PIXENG_MATRIX9CFG_MATRIX9_STATUS - Status information for pixel engine configuration of matrix9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_STATUS_pixeng_matrix9cfg_matrix9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_STATUS_pixeng_matrix9cfg_matrix9_sel_SHIFT (16U)
/*! pixeng_matrix9cfg_matrix9_sel
 *  0b000..matrix9 module is not used
 *  0b001..matrix9 module is used from store9 processing path
 *  0b010..matrix9 module is used from extdst0 processing path
 *  0b011..matrix9 module is used from extdst4 processing path
 *  0b100..matrix9 module is used from extdst1 processing path
 *  0b101..matrix9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_STATUS_pixeng_matrix9cfg_matrix9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_STATUS_pixeng_matrix9cfg_matrix9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX9CFG_MATRIX9_STATUS_pixeng_matrix9cfg_matrix9_sel_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9_LockUnlock_SHIFT (0U)
/*! pixeng_blitblend9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_STATICCONTROL - BlitBlend static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_STATICCONTROL_pixeng_blitblend9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_STATICCONTROL_pixeng_blitblend9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_STATICCONTROL_pixeng_blitblend9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_STATICCONTROL_pixeng_blitblend9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_STATICCONTROL_pixeng_blitblend9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_CONTROL - BlitBlend control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONTROL_pixeng_blitblend9_Mode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONTROL_pixeng_blitblend9_Mode_SHIFT (0U)
/*! pixeng_blitblend9_Mode
 *  0b0..Neutral mode, only route pixels and commands from primary input to output
 *  0b1..Normal Operation
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONTROL_pixeng_blitblend9_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONTROL_pixeng_blitblend9_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONTROL_pixeng_blitblend9_Mode_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_NEUTRALBORDER - Neutral border setup register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderMode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderMode_SHIFT (0U)
/*! pixeng_blitblend9_NeutralBorderMode
 *  0b0..Bypasses primary pixel
 *  0b1..Bypasses secondary pixel
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderMode_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderLeft_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderLeft_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderLeft(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderLeft_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderLeft_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderRight_MASK (0x7000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderRight_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderRight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderRight_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_NEUTRALBORDER_pixeng_blitblend9_NeutralBorderRight_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_CONSTANTCOLOR - Constant color register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_CONSTANTCOLOR_pixeng_blitblend9_ConstantRed_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION - Open GL RGB blending factors */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedSrc_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedSrc_SHIFT (0U)
/*! pixeng_blitblend9_BlendFuncColorRedSrc
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedSrc(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedSrc_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedSrc_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedDst_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedDst_SHIFT (16U)
/*! pixeng_blitblend9_BlendFuncColorRedDst
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedDst(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedDst_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORREDBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorRedDst_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION - Open GL RGB blending factors */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenSrc_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenSrc_SHIFT (0U)
/*! pixeng_blitblend9_BlendFuncColorGreenSrc
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenSrc(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenSrc_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenSrc_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenDst_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenDst_SHIFT (16U)
/*! pixeng_blitblend9_BlendFuncColorGreenDst
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenDst(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenDst_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORGREENBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorGreenDst_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION - Open GL RGB blending factors */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueSrc_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueSrc_SHIFT (0U)
/*! pixeng_blitblend9_BlendFuncColorBlueSrc
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueSrc(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueSrc_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueSrc_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueDst_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueDst_SHIFT (16U)
/*! pixeng_blitblend9_BlendFuncColorBlueDst
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueDst(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueDst_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_COLORBLUEBLENDFUNCTION_pixeng_blitblend9_BlendFuncColorBlueDst_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_ALPHABLENDFUNCTION - Open GL alpha blending factors */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaSrc_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaSrc_SHIFT (0U)
/*! pixeng_blitblend9_BlendFuncAlphaSrc
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaSrc(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaSrc_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaSrc_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaDst_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaDst_SHIFT (16U)
/*! pixeng_blitblend9_BlendFuncAlphaDst
 *  0b0000000000000000..
 *  0b0000000000000001..
 *  0b0000001100000000..
 *  0b0000001100000001..
 *  0b0000001100000010..
 *  0b0000001100000011..
 *  0b0000001100000100..
 *  0b0000001100000101..
 *  0b0000001100000110..
 *  0b0000001100000111..
 *  0b0000001100001000..
 *  0b1000000000000001..
 *  0b1000000000000010..
 *  0b1000000000000011..
 *  0b1000000000000100..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaDst(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaDst_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_ALPHABLENDFUNCTION_pixeng_blitblend9_BlendFuncAlphaDst_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_BLENDMODE1 - Open GL and Open VG blending modes for colors red and green */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorRed_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorRed_SHIFT (0U)
/*! pixeng_blitblend9_BlendModeColorRed
 *  0b0010000000000000..
 *  0b0010000000000001..
 *  0b0010000000000010..
 *  0b0010000000000011..
 *  0b0010000000000100..
 *  0b0010000000000101..
 *  0b0010000000000110..
 *  0b0010000000000111..
 *  0b0010000000001000..
 *  0b0010000000001001..
 *  0b1000000000000110..
 *  0b1000000000000111..
 *  0b1000000000001000..
 *  0b1000000000001010..
 *  0b1000000000001011..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorRed_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorGreen_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorGreen_SHIFT (16U)
/*! pixeng_blitblend9_BlendModeColorGreen
 *  0b0010000000000000..
 *  0b0010000000000001..
 *  0b0010000000000010..
 *  0b0010000000000011..
 *  0b0010000000000100..
 *  0b0010000000000101..
 *  0b0010000000000110..
 *  0b0010000000000111..
 *  0b0010000000001000..
 *  0b0010000000001001..
 *  0b1000000000000110..
 *  0b1000000000000111..
 *  0b1000000000001000..
 *  0b1000000000001010..
 *  0b1000000000001011..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE1_pixeng_blitblend9_BlendModeColorGreen_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_BLENDMODE2 - Open GL and Open VG blending modes for color blue and alpha */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeColorBlue_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeColorBlue_SHIFT (0U)
/*! pixeng_blitblend9_BlendModeColorBlue
 *  0b0010000000000000..
 *  0b0010000000000001..
 *  0b0010000000000010..
 *  0b0010000000000011..
 *  0b0010000000000100..
 *  0b0010000000000101..
 *  0b0010000000000110..
 *  0b0010000000000111..
 *  0b0010000000001000..
 *  0b0010000000001001..
 *  0b1000000000000110..
 *  0b1000000000000111..
 *  0b1000000000001000..
 *  0b1000000000001010..
 *  0b1000000000001011..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeColorBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeColorBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeColorBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeAlpha_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeAlpha_SHIFT (16U)
/*! pixeng_blitblend9_BlendModeAlpha
 *  0b0010000000000000..
 *  0b0010000000000001..
 *  0b0010000000000010..
 *  0b0010000000000011..
 *  0b0010000000000100..
 *  0b0010000000000101..
 *  0b0010000000000110..
 *  0b0010000000000111..
 *  0b0010000000001000..
 *  0b0010000000001001..
 *  0b1000000000000110..
 *  0b1000000000000111..
 *  0b1000000000001000..
 *  0b1000000000001010..
 *  0b1000000000001011..
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_BLENDMODE2_pixeng_blitblend9_BlendModeAlpha_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_DIRECTSETUP - Direct Control of the BlitBlend Datapath multiplexers, do not change */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_ColorDebug_MASK (0x3FFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_ColorDebug_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_ColorDebug(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_ColorDebug_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_ColorDebug_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_AlphaDebug_MASK (0x3FF0000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_AlphaDebug_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_AlphaDebug(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_AlphaDebug_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_DIRECTSETUP_pixeng_blitblend9_AlphaDebug_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_PRIMCONTROLWORD - Value of last received primary control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_PRIMCONTROLWORD_pixeng_blitblend9_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_PRIMCONTROLWORD_pixeng_blitblend9_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_PRIMCONTROLWORD_pixeng_blitblend9_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_PRIMCONTROLWORD_pixeng_blitblend9_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_PRIMCONTROLWORD_pixeng_blitblend9_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9_SECCONTROLWORD - Value of last received secondary control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_SECCONTROLWORD_pixeng_blitblend9_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_SECCONTROLWORD_pixeng_blitblend9_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9_SECCONTROLWORD_pixeng_blitblend9_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9_SECCONTROLWORD_pixeng_blitblend9_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9_SECCONTROLWORD_pixeng_blitblend9_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9cfg_blitblend9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9cfg_blitblend9_LockUnlock_SHIFT (0U)
/*! pixeng_blitblend9cfg_blitblend9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9cfg_blitblend9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9cfg_blitblend9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKUNLOCK_pixeng_blitblend9cfg_blitblend9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_LOCKSTATUS_pixeng_blitblend9cfg_blitblend9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC - Dynamic pixel engine configuration for blitblend9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_prim_sel_SHIFT (0U)
/*! pixeng_blitblend9cfg_blitblend9_prim_sel
 *  0b000000..Unit blitblend9 input port prim is disabled
 *  0b000001..Unit blitblend9 input port prim is connected to output of unit rop9
 *  0b001000..Unit blitblend9 input port prim is connected to output of unit hscaler9
 *  0b001001..Unit blitblend9 input port prim is connected to output of unit vscaler9
 *  0b001010..Unit blitblend9 input port prim is connected to output of unit filter9
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_sec_sel_SHIFT (8U)
/*! pixeng_blitblend9cfg_blitblend9_sec_sel
 *  0b000000..Unit blitblend9 input port sec is disabled
 *  0b000101..Unit blitblend9 input port sec is connected to output of unit fetchrot9
 *  0b000110..Unit blitblend9 input port sec is connected to output of unit fetchdecode9
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_clken_SHIFT (24U)
/*! pixeng_blitblend9cfg_blitblend9_clken
 *  0b00..Clock for blitblend9 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for blitblend9 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_DYNAMIC_pixeng_blitblend9cfg_blitblend9_clken_MASK)
/*! @} */

/*! @name PIXENG_BLITBLEND9CFG_BLITBLEND9_STATUS - Status information for pixel engine configuration of blitblend9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_STATUS_pixeng_blitblend9cfg_blitblend9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_STATUS_pixeng_blitblend9cfg_blitblend9_sel_SHIFT (16U)
/*! pixeng_blitblend9cfg_blitblend9_sel
 *  0b000..blitblend9 module is not used
 *  0b001..blitblend9 module is used from store9 processing path
 *  0b010..blitblend9 module is used from extdst0 processing path
 *  0b011..blitblend9 module is used from extdst4 processing path
 *  0b100..blitblend9 module is used from extdst1 processing path
 *  0b101..blitblend9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_STATUS_pixeng_blitblend9cfg_blitblend9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_STATUS_pixeng_blitblend9cfg_blitblend9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_BLITBLEND9CFG_BLITBLEND9_STATUS_pixeng_blitblend9cfg_blitblend9_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9_LockUnlock_SHIFT (0U)
/*! pixeng_fetchrot9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_BaseAddressSelect_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_BaseAddressSelect_SHIFT (4U)
/*! pixeng_fetchrot9_BaseAddressSelect
 *  0b0..Use Baseaddress mechanism form current fetch unit.
 *  0b1..Use Baseaddress from external source (depends on system, e.g. from store unit).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_BaseAddressSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_BaseAddressSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_STATICCONTROL_pixeng_fetchrot9_BaseAddressSelect_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_CombinerLineFlush_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_LineMode_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_LineMode_SHIFT (31U)
/*! pixeng_fetchrot9_LineMode
 *  0b0..Mandatory setting for operation in the Display Controller. Works also for Blit Engine with marginal performance impact.
 *  0b1..Recommended setting for operation in the Blit Engine.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_LineMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_LineMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERMANAGEMENT_pixeng_fetchrot9_LineMode_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_RINGBUFSTARTADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDR0_pixeng_fetchrot9_RingBufStartAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDR0_pixeng_fetchrot9_RingBufStartAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDR0_pixeng_fetchrot9_RingBufStartAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDR0_pixeng_fetchrot9_RingBufStartAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDR0_pixeng_fetchrot9_RingBufStartAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_RINGBUFSTARTADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDRMSB0_pixeng_fetchrot9_RingBufStartAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDRMSB0_pixeng_fetchrot9_RingBufStartAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDRMSB0_pixeng_fetchrot9_RingBufStartAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDRMSB0_pixeng_fetchrot9_RingBufStartAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFSTARTADDRMSB0_pixeng_fetchrot9_RingBufStartAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_RINGBUFWRAPADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDR0_pixeng_fetchrot9_RingBufWrapAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDR0_pixeng_fetchrot9_RingBufWrapAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDR0_pixeng_fetchrot9_RingBufWrapAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDR0_pixeng_fetchrot9_RingBufWrapAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDR0_pixeng_fetchrot9_RingBufWrapAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_RINGBUFWRAPADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDRMSB0_pixeng_fetchrot9_RingBufWrapAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDRMSB0_pixeng_fetchrot9_RingBufWrapAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDRMSB0_pixeng_fetchrot9_RingBufWrapAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDRMSB0_pixeng_fetchrot9_RingBufWrapAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_RINGBUFWRAPADDRMSB0_pixeng_fetchrot9_RingBufWrapAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESS0_pixeng_fetchrot9_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESS0_pixeng_fetchrot9_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESS0_pixeng_fetchrot9_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESS0_pixeng_fetchrot9_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESS0_pixeng_fetchrot9_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESSMSB0_pixeng_fetchrot9_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESSMSB0_pixeng_fetchrot9_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESSMSB0_pixeng_fetchrot9_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESSMSB0_pixeng_fetchrot9_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BASEADDRESSMSB0_pixeng_fetchrot9_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESS0_pixeng_fetchrot9_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESS0_pixeng_fetchrot9_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESS0_pixeng_fetchrot9_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESS0_pixeng_fetchrot9_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESS0_pixeng_fetchrot9_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchrot9_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchrot9_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchrot9_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchrot9_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchrot9_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchrot9_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_SOURCEBUFFERDIMENSION0_pixeng_fetchrot9_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTBITS0_pixeng_fetchrot9_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_COLORCOMPONENTSHIFT0_pixeng_fetchrot9_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYEROFFSET0_pixeng_fetchrot9_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWOFFSET0_pixeng_fetchrot9_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CLIPWINDOWDIMENSIONS0_pixeng_fetchrot9_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONSTANTCOLOR0_pixeng_fetchrot9_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_TileMode0_SHIFT (4U)
/*! pixeng_fetchrot9_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaMaskEnable0_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaMaskEnable0_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaMaskEnable0_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaMaskEnable0_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchrot9_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_LAYERPROPERTY0_pixeng_fetchrot9_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMEDIMENSIONS_pixeng_fetchrot9_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FRAMERESAMPLING_pixeng_fetchrot9_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WARPCONTROL - Warping control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpBitsPerPixel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpBitsPerPixel_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpBitsPerPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpBitsPerPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpBitsPerPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpCoordinateMode_MASK (0x300U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpCoordinateMode_SHIFT (8U)
/*! pixeng_fetchrot9_WarpCoordinateMode
 *  0b00..x and y (sample points).
 *  0b01..dx and dy (vectors between adjacent sample points).
 *  0b10..ddx and ddy (deltas between adjacent vectors).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpCoordinateMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpCoordinateMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpCoordinateMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpSymmetricOffset_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpSymmetricOffset_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpSymmetricOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpSymmetricOffset_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WarpSymmetricOffset_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_XRaster_MASK (0x30000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_XRaster_SHIFT (16U)
/*! pixeng_fetchrot9_WRPT_XRaster
 *  0b00..X-Raster is 16 pixel.
 *  0b01..X-Raster is 32 pixel.
 *  0b10..X-Raster is 64 pixel.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_XRaster(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_XRaster_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_XRaster_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_YRaster_MASK (0xC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_YRaster_SHIFT (18U)
/*! pixeng_fetchrot9_WRPT_YRaster
 *  0b00..Y-Raster is 16 pixel.
 *  0b01..Y-Raster is 32 pixel.
 *  0b10..Y-Raster is 64 pixel.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_YRaster(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_YRaster_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_YRaster_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_Select_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_Select_SHIFT (20U)
/*! pixeng_fetchrot9_WRPT_Select
 *  0b0..Use WarpReferencePointsTable 0.
 *  0b1..Use WarpReferencePointsTable 1.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_Select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_Select_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPCONTROL_pixeng_fetchrot9_WRPT_Select_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AFFINESTARTX - Start value X for affine warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTX_pixeng_fetchrot9_AffineStartX_MASK (0xFFFFF800U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTX_pixeng_fetchrot9_AffineStartX_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTX_pixeng_fetchrot9_AffineStartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTX_pixeng_fetchrot9_AffineStartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTX_pixeng_fetchrot9_AffineStartX_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AFFINESTARTY - Start value Y for affine warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTY_pixeng_fetchrot9_AffineStartY_MASK (0xFFFFF800U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTY_pixeng_fetchrot9_AffineStartY_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTY_pixeng_fetchrot9_AffineStartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTY_pixeng_fetchrot9_AffineStartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINESTARTY_pixeng_fetchrot9_AffineStartY_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AFFINEDELTAXX - DeltaXX increment for affine warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXX_pixeng_fetchrot9_AffineDeltaXX_MASK (0x1FFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXX_pixeng_fetchrot9_AffineDeltaXX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXX_pixeng_fetchrot9_AffineDeltaXX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXX_pixeng_fetchrot9_AffineDeltaXX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXX_pixeng_fetchrot9_AffineDeltaXX_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AFFINEDELTAXY - DeltaXY increment for affine warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXY_pixeng_fetchrot9_AffineDeltaXY_MASK (0x1FFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXY_pixeng_fetchrot9_AffineDeltaXY_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXY_pixeng_fetchrot9_AffineDeltaXY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXY_pixeng_fetchrot9_AffineDeltaXY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAXY_pixeng_fetchrot9_AffineDeltaXY_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AFFINEDELTAYX - DeltaYX increment for affine warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYX_pixeng_fetchrot9_AffineDeltaYX_MASK (0x1FFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYX_pixeng_fetchrot9_AffineDeltaYX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYX_pixeng_fetchrot9_AffineDeltaYX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYX_pixeng_fetchrot9_AffineDeltaYX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYX_pixeng_fetchrot9_AffineDeltaYX_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_AFFINEDELTAYY - DeltaYY increment for affine warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYY_pixeng_fetchrot9_AffineDeltaYY_MASK (0x1FFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYY_pixeng_fetchrot9_AffineDeltaYY_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYY_pixeng_fetchrot9_AffineDeltaYY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYY_pixeng_fetchrot9_AffineDeltaYY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_AFFINEDELTAYY_pixeng_fetchrot9_AffineDeltaYY_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_ARBSTARTX - Start value X for arbitrary warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTX_pixeng_fetchrot9_ArbStartX_MASK (0x1FFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTX_pixeng_fetchrot9_ArbStartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTX_pixeng_fetchrot9_ArbStartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTX_pixeng_fetchrot9_ArbStartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTX_pixeng_fetchrot9_ArbStartX_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_ARBSTARTY - Start value Y for arbitrary warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTY_pixeng_fetchrot9_ArbStartY_MASK (0x1FFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTY_pixeng_fetchrot9_ArbStartY_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTY_pixeng_fetchrot9_ArbStartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTY_pixeng_fetchrot9_ArbStartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBSTARTY_pixeng_fetchrot9_ArbStartY_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_ARBDELTA - Start values for delta incrementation of arbitrary warping. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXX_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXY_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXY_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaXY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYX_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYX_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYY_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYY_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_ARBDELTA_pixeng_fetchrot9_ArbDeltaYY_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_FIRPOSITIONS - FIR sequence control register. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR0Position_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR0Position_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR0Position(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR0Position_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR0Position_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR1Position_MASK (0xF0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR1Position_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR1Position(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR1Position_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR1Position_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR2Position_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR2Position_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR2Position(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR2Position_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR2Position_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR3Position_MASK (0xF000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR3Position_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR3Position(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR3Position_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRPOSITIONS_pixeng_fetchrot9_FIR3Position_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_FIRCOEFFICIENTS - FIR coefficients register. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR0Coefficient_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR0Coefficient_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR0Coefficient(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR0Coefficient_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR0Coefficient_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR1Coefficient_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR1Coefficient_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR1Coefficient(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR1Coefficient_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR1Coefficient_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR2Coefficient_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR2Coefficient_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR2Coefficient(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR2Coefficient_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR2Coefficient_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR3Coefficient_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR3Coefficient_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR3Coefficient(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR3Coefficient_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FIRCOEFFICIENTS_pixeng_fetchrot9_FIR3Coefficient_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RasterMode_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RasterMode_SHIFT (0U)
/*! pixeng_fetchrot9_RasterMode
 *  0b000..First sample at StartX/Y relative to origin. Hor/ver increments using DeltaX/Y and DeltaSwap setup.
 *  0b001..[FetchDecode/FetchDecodeL only] Source buffer is an encoded bit stream. First sample at origin (0,0). Hor/ver increments = (1,0)/(0,1).
 *  0b010..[FetchPersp/Warp/Rot only] Arbitrary warping (filter is active). Coordinates are read from frame input
 *         port. InputSelect must be set to COORDINATE. ArbStartX/Y and ArbDeltaXX/XY/YX/YY must be setup.
 *  0b011..[FetchPersp only] Affine/Perspective warping (filter is active). First sample at PerspStartX/Y/W.
 *         Hor/ver increments using PerspDeltaXX/XY/YX/YY/WX/WY. Homogeneous coordinates.
 *  0b100..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is U.
 *  0b101..[FetchRot/RotL only] Affine warping (filter is active). First sample at AffineStartX/Y. Hor/ver
 *         increments using AffineDeltaXX/XY/YX/YY. Cartesian coordinates.
 *  0b110..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RasterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RasterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RasterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_InputSelect_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_InputSelect_SHIFT (3U)
/*! pixeng_fetchrot9_InputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 *  0b11..Used for arbitrary warping (coordinate buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_InputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_InputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_InputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUV422UpsamplingMode_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUV422UpsamplingMode_SHIFT (5U)
/*! pixeng_fetchrot9_YUV422UpsamplingMode
 *  0b0..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b1..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUV422UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUV422UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUV422UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_ClipColor_SHIFT (16U)
/*! pixeng_fetchrot9_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_ClipColor_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_FilterMode_MASK (0x1C00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_FilterMode_SHIFT (22U)
/*! pixeng_fetchrot9_FilterMode
 *  0b000..Chooses pixel closest to sample point
 *  0b001..Calculates result from 4 pixels closest to sample point
 *  0b010..FIR mode with 2 programmable pixel positions and coefficients
 *  0b011..FIR mode with 4 programmable pixel positions and coefficients
 *  0b100..Calculates result from 2 pixels closest to the sample point and on the same line
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_FilterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_FilterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_FilterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_Sync_En_MASK (0x2000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_Sync_En_SHIFT (25U)
/*! pixeng_fetchrot9_Sync_En
 *  0b0..Synchronization disabled.
 *  0b1..Synchronization enabled.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_Sync_En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_Sync_En_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_Sync_En_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_WRPT_En_MASK (0x4000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_WRPT_En_SHIFT (26U)
/*! pixeng_fetchrot9_WRPT_En
 *  0b0..Warp reference points table disabled.
 *  0b1..Warp reference points table enabled.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_WRPT_En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_WRPT_En_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_WRPT_En_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_En_MASK (0x8000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_En_SHIFT (27U)
/*! pixeng_fetchrot9_YUVRot_En
 *  0b0..YUV mode rotation is disabled.
 *  0b1..YUV mode rotation is enabled.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_En_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_En_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_Mode_MASK (0x30000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_Mode_SHIFT (28U)
/*! pixeng_fetchrot9_YUVRot_Mode
 *  0b00..With Y0 at LSBs, order is Y0 U0 Y1 V0 Y2 U1 Y3 V1...
 *  0b01..With U0 at LSBs, order is U0 Y0 V0 Y1 U1 Y2 V1 Y3...
 *  0b10..With Y0 at LSBs, order is Y0 V0 Y1 U0 Y2 V1 Y3 U1...
 *  0b11..With V0 at LSBs, order is V0 Y0 U0 Y1 V1 Y2 U1 Y3...
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROL_pixeng_fetchrot9_YUVRot_Mode_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROLTRIGGER_pixeng_fetchrot9_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROLTRIGGER_pixeng_fetchrot9_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROLTRIGGER_pixeng_fetchrot9_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROLTRIGGER_pixeng_fetchrot9_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CONTROLTRIGGER_pixeng_fetchrot9_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_START_pixeng_fetchrot9_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_START_pixeng_fetchrot9_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_START_pixeng_fetchrot9_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_START_pixeng_fetchrot9_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_START_pixeng_fetchrot9_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FETCHTYPE_pixeng_fetchrot9_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FETCHTYPE_pixeng_fetchrot9_FetchType_SHIFT (0U)
/*! pixeng_fetchrot9_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_FETCHTYPE_pixeng_fetchrot9_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_FETCHTYPE_pixeng_fetchrot9_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_FETCHTYPE_pixeng_fetchrot9_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_READADDRESS0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESS0_pixeng_fetchrot9_ReadAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESS0_pixeng_fetchrot9_ReadAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESS0_pixeng_fetchrot9_ReadAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESS0_pixeng_fetchrot9_ReadAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESS0_pixeng_fetchrot9_ReadAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_READADDRESSMSB0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESSMSB0_pixeng_fetchrot9_ReadAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESSMSB0_pixeng_fetchrot9_ReadAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESSMSB0_pixeng_fetchrot9_ReadAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESSMSB0_pixeng_fetchrot9_ReadAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_READADDRESSMSB0_pixeng_fetchrot9_ReadAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_BURSTBUFFERPROPERTIES_pixeng_fetchrot9_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_STATUS_pixeng_fetchrot9_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESS0_pixeng_fetchrot9_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESS0_pixeng_fetchrot9_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESS0_pixeng_fetchrot9_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESS0_pixeng_fetchrot9_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESS0_pixeng_fetchrot9_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESSMSB0_pixeng_fetchrot9_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESSMSB0_pixeng_fetchrot9_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESSMSB0_pixeng_fetchrot9_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESSMSB0_pixeng_fetchrot9_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_CURBASEADDRESSMSB0_pixeng_fetchrot9_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_HIDDENSTATUS_pixeng_fetchrot9_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WARPLINEOFFSET - Offest between current used line and reference line. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MinLineOffset_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MinLineOffset_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MinLineOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MinLineOffset_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MinLineOffset_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MaxLineOffset_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MaxLineOffset_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MaxLineOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MaxLineOffset_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPLINEOFFSET_pixeng_fetchrot9_MaxLineOffset_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0 - Warp x interpolator table. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tblm1_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tblm1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tblm1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tblm1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tblm1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tbl00_MASK (0x7FFFC000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tbl00_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tbl00(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tbl00_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE0_pixeng_fetchrot9_WINTP_X_Tbl00_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1 - Warp x interpolator table. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp1_MASK (0x1FFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp2_MASK (0x7FFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp2_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_X_FILTERTABLE1_pixeng_fetchrot9_WINTP_X_Tblp2_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0 - Warp y interpolator table. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tblm1_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tblm1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tblm1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tblm1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tblm1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tbl00_MASK (0x7FFFC000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tbl00_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tbl00(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tbl00_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPINTERPOLATER_Y_FILTERTABLE0_pixeng_fetchrot9_WINTP_Y_Tbl00_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WRPT_TBL_CONTROL - Warping reference point table, write select. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WRPT_TBL_CONTROL_pixeng_fetchrot9_WRPT_cfg_Select_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WRPT_TBL_CONTROL_pixeng_fetchrot9_WRPT_cfg_Select_SHIFT (0U)
/*! pixeng_fetchrot9_WRPT_cfg_Select
 *  0b0..Use WarpReferencePointsTable 0.
 *  0b1..Use WarpReferencePointsTable 1.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WRPT_TBL_CONTROL_pixeng_fetchrot9_WRPT_cfg_Select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WRPT_TBL_CONTROL_pixeng_fetchrot9_WRPT_cfg_Select_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WRPT_TBL_CONTROL_pixeng_fetchrot9_WRPT_cfg_Select_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0 - Warp reference points table 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaY_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaY_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaX_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaX_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE0_pixeng_fetchrot9_WRPT0_deltaX_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1 - Warp reference points table 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaY_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaY_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaX_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaX_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9_WARPREFERENCEPOINTSTABLE1_pixeng_fetchrot9_WRPT1_deltaX_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9CFG_FETCHROT9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9cfg_fetchrot9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9cfg_fetchrot9_LockUnlock_SHIFT (0U)
/*! pixeng_fetchrot9cfg_fetchrot9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9cfg_fetchrot9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9cfg_fetchrot9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKUNLOCK_pixeng_fetchrot9cfg_fetchrot9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_LOCKSTATUS_pixeng_fetchrot9cfg_fetchrot9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9CFG_FETCHROT9_DYNAMIC - Dynamic pixel engine configuration for fetchrot9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_DYNAMIC_pixeng_fetchrot9cfg_fetchrot9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_DYNAMIC_pixeng_fetchrot9cfg_fetchrot9_src_sel_SHIFT (0U)
/*! pixeng_fetchrot9cfg_fetchrot9_src_sel
 *  0b000000..Unit fetchrot9 input port src is disabled
 *  0b000110..Unit fetchrot9 input port src is connected to output of unit fetchdecode9
 *  0b000111..Unit fetchrot9 input port src is connected to output of unit fetcheco9
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_DYNAMIC_pixeng_fetchrot9cfg_fetchrot9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_DYNAMIC_pixeng_fetchrot9cfg_fetchrot9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_DYNAMIC_pixeng_fetchrot9cfg_fetchrot9_src_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHROT9CFG_FETCHROT9_STATUS - Status information for pixel engine configuration of fetchrot9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_STATUS_pixeng_fetchrot9cfg_fetchrot9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_STATUS_pixeng_fetchrot9cfg_fetchrot9_sel_SHIFT (16U)
/*! pixeng_fetchrot9cfg_fetchrot9_sel
 *  0b000..fetchrot9 module is not used
 *  0b001..fetchrot9 module is used from store9 processing path
 *  0b010..fetchrot9 module is used from extdst0 processing path
 *  0b011..fetchrot9 module is used from extdst4 processing path
 *  0b100..fetchrot9 module is used from extdst1 processing path
 *  0b101..fetchrot9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_STATUS_pixeng_fetchrot9cfg_fetchrot9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_STATUS_pixeng_fetchrot9cfg_fetchrot9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHROT9CFG_FETCHROT9_STATUS_pixeng_fetchrot9cfg_fetchrot9_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9_LockUnlock_SHIFT (0U)
/*! pixeng_fetchdecode9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATICCONTROL_pixeng_fetchdecode9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATICCONTROL_pixeng_fetchdecode9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATICCONTROL_pixeng_fetchdecode9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATICCONTROL_pixeng_fetchdecode9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATICCONTROL_pixeng_fetchdecode9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERMANAGEMENT_pixeng_fetchdecode9_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_RINGBUFSTARTADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDR0_pixeng_fetchdecode9_RingBufStartAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDR0_pixeng_fetchdecode9_RingBufStartAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDR0_pixeng_fetchdecode9_RingBufStartAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDR0_pixeng_fetchdecode9_RingBufStartAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDR0_pixeng_fetchdecode9_RingBufStartAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_RINGBUFSTARTADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDRMSB0_pixeng_fetchdecode9_RingBufStartAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDRMSB0_pixeng_fetchdecode9_RingBufStartAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDRMSB0_pixeng_fetchdecode9_RingBufStartAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDRMSB0_pixeng_fetchdecode9_RingBufStartAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFSTARTADDRMSB0_pixeng_fetchdecode9_RingBufStartAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_RINGBUFWRAPADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDR0_pixeng_fetchdecode9_RingBufWrapAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDR0_pixeng_fetchdecode9_RingBufWrapAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDR0_pixeng_fetchdecode9_RingBufWrapAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDR0_pixeng_fetchdecode9_RingBufWrapAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDR0_pixeng_fetchdecode9_RingBufWrapAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_RINGBUFWRAPADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDRMSB0_pixeng_fetchdecode9_RingBufWrapAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDRMSB0_pixeng_fetchdecode9_RingBufWrapAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDRMSB0_pixeng_fetchdecode9_RingBufWrapAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDRMSB0_pixeng_fetchdecode9_RingBufWrapAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_RINGBUFWRAPADDRMSB0_pixeng_fetchdecode9_RingBufWrapAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_FRAMEPROPERTIES0 - Frame property setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEPROPERTIES0_pixeng_fetchdecode9_FieldId0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEPROPERTIES0_pixeng_fetchdecode9_FieldId0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEPROPERTIES0_pixeng_fetchdecode9_FieldId0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEPROPERTIES0_pixeng_fetchdecode9_FieldId0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEPROPERTIES0_pixeng_fetchdecode9_FieldId0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESS0_pixeng_fetchdecode9_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESS0_pixeng_fetchdecode9_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESS0_pixeng_fetchdecode9_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESS0_pixeng_fetchdecode9_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESS0_pixeng_fetchdecode9_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESSMSB0_pixeng_fetchdecode9_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESSMSB0_pixeng_fetchdecode9_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESSMSB0_pixeng_fetchdecode9_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESSMSB0_pixeng_fetchdecode9_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BASEADDRESSMSB0_pixeng_fetchdecode9_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESS0_pixeng_fetchdecode9_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESS0_pixeng_fetchdecode9_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESS0_pixeng_fetchdecode9_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESS0_pixeng_fetchdecode9_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESS0_pixeng_fetchdecode9_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchdecode9_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchdecode9_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchdecode9_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchdecode9_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchdecode9_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERATTRIBUTES0_pixeng_fetchdecode9_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERDIMENSION0_pixeng_fetchdecode9_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTBITS0_pixeng_fetchdecode9_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORCOMPONENTSHIFT0_pixeng_fetchdecode9_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYEROFFSET0_pixeng_fetchdecode9_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWOFFSET0_pixeng_fetchdecode9_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CLIPWINDOWDIMENSIONS0_pixeng_fetchdecode9_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONSTANTCOLOR0_pixeng_fetchdecode9_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PaletteEnable0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PaletteEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PaletteEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PaletteEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PaletteEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_TileMode0_SHIFT (4U)
/*! pixeng_fetchdecode9_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaMaskEnable0_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaMaskEnable0_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaMaskEnable0_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaMaskEnable0_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchdecode9_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_LAYERPROPERTY0_pixeng_fetchdecode9_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMEDIMENSIONS_pixeng_fetchdecode9_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FRAMERESAMPLING_pixeng_fetchdecode9_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_DECODECONTROL - Control options for RLAD decompression. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_CompressionMode_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_CompressionMode_SHIFT (0U)
/*! pixeng_fetchdecode9_CompressionMode
 *  0b00..Run-Length Adaptive Dithering (lossy compression).
 *  0b01..Run-Length Adaptive Dithering (lossy compression; uniform package size).
 *  0b10..Run-Length Adaptive (lossless compression).
 *  0b11..Standard Run-Length.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_CompressionMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_CompressionMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_CompressionMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADEndianness_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADEndianness_SHIFT (15U)
/*! pixeng_fetchdecode9_RLADEndianness
 *  0b0..Big endian format
 *  0b1..Little endian format
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADEndianness(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADEndianness_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADEndianness_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsRed_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsRed_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsRed_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsGreen_MASK (0xF00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsGreen_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsBlue_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsBlue_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsAlpha_MASK (0xF0000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsAlpha_SHIFT (28U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODECONTROL_pixeng_fetchdecode9_RLADCompBitsAlpha_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_SOURCEBUFFERLENGTH - Source buffer length for compressed data. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERLENGTH_pixeng_fetchdecode9_RLEWords_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERLENGTH_pixeng_fetchdecode9_RLEWords_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERLENGTH_pixeng_fetchdecode9_RLEWords(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERLENGTH_pixeng_fetchdecode9_RLEWords_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_SOURCEBUFFERLENGTH_pixeng_fetchdecode9_RLEWords_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RasterMode_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RasterMode_SHIFT (0U)
/*! pixeng_fetchdecode9_RasterMode
 *  0b000..First sample at StartX/Y relative to origin. Hor/ver increments using DeltaX/Y and DeltaSwap setup.
 *  0b001..[FetchDecode/FetchDecodeL only] Source buffer is an encoded bit stream. First sample at origin (0,0). Hor/ver increments = (1,0)/(0,1).
 *  0b010..[FetchPersp/Warp/Rot only] Arbitrary warping (filter is active). Coordinates are read from frame input
 *         port. InputSelect must be set to COORDINATE. ArbStartX/Y and ArbDeltaXX/XY/YX/YY must be setup.
 *  0b011..[FetchPersp only] Affine/Perspective warping (filter is active). First sample at PerspStartX/Y/W.
 *         Hor/ver increments using PerspDeltaXX/XY/YX/YY/WX/WY. Homogeneous coordinates.
 *  0b100..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is U.
 *  0b101..[FetchRot/RotL only] Affine warping (filter is active). First sample at AffineStartX/Y. Hor/ver
 *         increments using AffineDeltaXX/XY/YX/YY. Cartesian coordinates.
 *  0b110..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RasterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RasterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RasterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_InputSelect_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_InputSelect_SHIFT (3U)
/*! pixeng_fetchdecode9_InputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 *  0b11..Used for arbitrary warping (coordinate buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_InputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_InputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_InputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_YUV422UpsamplingMode_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_YUV422UpsamplingMode_SHIFT (5U)
/*! pixeng_fetchdecode9_YUV422UpsamplingMode
 *  0b0..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b1..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_YUV422UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_YUV422UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_YUV422UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_PaletteIdxWidth_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_PaletteIdxWidth_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_PaletteIdxWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_PaletteIdxWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_PaletteIdxWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_ClipColor_SHIFT (16U)
/*! pixeng_fetchdecode9_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROL_pixeng_fetchdecode9_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROLTRIGGER_pixeng_fetchdecode9_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROLTRIGGER_pixeng_fetchdecode9_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROLTRIGGER_pixeng_fetchdecode9_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROLTRIGGER_pixeng_fetchdecode9_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CONTROLTRIGGER_pixeng_fetchdecode9_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_START_pixeng_fetchdecode9_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_START_pixeng_fetchdecode9_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_START_pixeng_fetchdecode9_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_START_pixeng_fetchdecode9_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_START_pixeng_fetchdecode9_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FETCHTYPE_pixeng_fetchdecode9_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FETCHTYPE_pixeng_fetchdecode9_FetchType_SHIFT (0U)
/*! pixeng_fetchdecode9_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FETCHTYPE_pixeng_fetchdecode9_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FETCHTYPE_pixeng_fetchdecode9_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_FETCHTYPE_pixeng_fetchdecode9_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_DECODERSTATUS - Status information of the RLAD decoder. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooSmall_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooSmall_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooSmall(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooSmall_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooSmall_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooLarge_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooLarge_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooLarge(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooLarge_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_DECODERSTATUS_pixeng_fetchdecode9_BufferTooLarge_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_READADDRESS0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESS0_pixeng_fetchdecode9_ReadAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESS0_pixeng_fetchdecode9_ReadAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESS0_pixeng_fetchdecode9_ReadAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESS0_pixeng_fetchdecode9_ReadAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESS0_pixeng_fetchdecode9_ReadAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_READADDRESSMSB0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESSMSB0_pixeng_fetchdecode9_ReadAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESSMSB0_pixeng_fetchdecode9_ReadAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESSMSB0_pixeng_fetchdecode9_ReadAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESSMSB0_pixeng_fetchdecode9_ReadAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_READADDRESSMSB0_pixeng_fetchdecode9_ReadAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_BURSTBUFFERPROPERTIES_pixeng_fetchdecode9_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_STATUS_pixeng_fetchdecode9_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESS0_pixeng_fetchdecode9_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESS0_pixeng_fetchdecode9_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESS0_pixeng_fetchdecode9_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESS0_pixeng_fetchdecode9_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESS0_pixeng_fetchdecode9_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESSMSB0_pixeng_fetchdecode9_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESSMSB0_pixeng_fetchdecode9_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESSMSB0_pixeng_fetchdecode9_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESSMSB0_pixeng_fetchdecode9_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_CURBASEADDRESSMSB0_pixeng_fetchdecode9_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_HIDDENSTATUS_pixeng_fetchdecode9_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9_COLORPALETTE - Color palette look up table. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORPALETTE_pixeng_fetchdecode9_ColorPalette_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORPALETTE_pixeng_fetchdecode9_ColorPalette_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORPALETTE_pixeng_fetchdecode9_ColorPalette(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORPALETTE_pixeng_fetchdecode9_ColorPalette_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9_COLORPALETTE_pixeng_fetchdecode9_ColorPalette_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9cfg_fetchdecode9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9cfg_fetchdecode9_LockUnlock_SHIFT (0U)
/*! pixeng_fetchdecode9cfg_fetchdecode9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9cfg_fetchdecode9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9cfg_fetchdecode9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKUNLOCK_pixeng_fetchdecode9cfg_fetchdecode9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_LOCKSTATUS_pixeng_fetchdecode9cfg_fetchdecode9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9CFG_FETCHDECODE9_DYNAMIC - Dynamic pixel engine configuration for fetchdecode9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_DYNAMIC_pixeng_fetchdecode9cfg_fetchdecode9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_DYNAMIC_pixeng_fetchdecode9cfg_fetchdecode9_src_sel_SHIFT (0U)
/*! pixeng_fetchdecode9cfg_fetchdecode9_src_sel
 *  0b000000..Unit fetchdecode9 input port src is disabled
 *  0b000101..Unit fetchdecode9 input port src is connected to output of unit fetchrot9
 *  0b000111..Unit fetchdecode9 input port src is connected to output of unit fetcheco9
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_DYNAMIC_pixeng_fetchdecode9cfg_fetchdecode9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_DYNAMIC_pixeng_fetchdecode9cfg_fetchdecode9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_DYNAMIC_pixeng_fetchdecode9cfg_fetchdecode9_src_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHDECODE9CFG_FETCHDECODE9_STATUS - Status information for pixel engine configuration of fetchdecode9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_STATUS_pixeng_fetchdecode9cfg_fetchdecode9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_STATUS_pixeng_fetchdecode9cfg_fetchdecode9_sel_SHIFT (16U)
/*! pixeng_fetchdecode9cfg_fetchdecode9_sel
 *  0b000..fetchdecode9 module is not used
 *  0b001..fetchdecode9 module is used from store9 processing path
 *  0b010..fetchdecode9 module is used from extdst0 processing path
 *  0b011..fetchdecode9 module is used from extdst4 processing path
 *  0b100..fetchdecode9 module is used from extdst1 processing path
 *  0b101..fetchdecode9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_STATUS_pixeng_fetchdecode9cfg_fetchdecode9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_STATUS_pixeng_fetchdecode9cfg_fetchdecode9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHDECODE9CFG_FETCHDECODE9_STATUS_pixeng_fetchdecode9cfg_fetchdecode9_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_STATICCONTROL_pixeng_fetcheco9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_STATICCONTROL_pixeng_fetcheco9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_STATICCONTROL_pixeng_fetcheco9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_STATICCONTROL_pixeng_fetcheco9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_STATICCONTROL_pixeng_fetcheco9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERMANAGEMENT_pixeng_fetcheco9_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESS0_pixeng_fetcheco9_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESS0_pixeng_fetcheco9_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESS0_pixeng_fetcheco9_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESS0_pixeng_fetcheco9_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESS0_pixeng_fetcheco9_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESSMSB0_pixeng_fetcheco9_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESSMSB0_pixeng_fetcheco9_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESSMSB0_pixeng_fetcheco9_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESSMSB0_pixeng_fetcheco9_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BASEADDRESSMSB0_pixeng_fetcheco9_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco9_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco9_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco9_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco9_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco9_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco9_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco9_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco9_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco9_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco9_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco9_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_SOURCEBUFFERDIMENSION0_pixeng_fetcheco9_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTBITS0_pixeng_fetcheco9_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_COLORCOMPONENTSHIFT0_pixeng_fetcheco9_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYEROFFSET0_pixeng_fetcheco9_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWOFFSET0_pixeng_fetcheco9_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco9_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CONSTANTCOLOR0_pixeng_fetcheco9_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_TileMode0_SHIFT (4U)
/*! pixeng_fetcheco9_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_LAYERPROPERTY0_pixeng_fetcheco9_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMEDIMENSIONS_pixeng_fetcheco9_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FRAMERESAMPLING_pixeng_fetcheco9_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_ClipColor_SHIFT (16U)
/*! pixeng_fetcheco9_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROL_pixeng_fetcheco9_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROLTRIGGER_pixeng_fetcheco9_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROLTRIGGER_pixeng_fetcheco9_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROLTRIGGER_pixeng_fetcheco9_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROLTRIGGER_pixeng_fetcheco9_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CONTROLTRIGGER_pixeng_fetcheco9_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_START_pixeng_fetcheco9_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_START_pixeng_fetcheco9_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_START_pixeng_fetcheco9_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_START_pixeng_fetcheco9_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_START_pixeng_fetcheco9_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FETCHTYPE_pixeng_fetcheco9_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FETCHTYPE_pixeng_fetcheco9_FetchType_SHIFT (0U)
/*! pixeng_fetcheco9_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_FETCHTYPE_pixeng_fetcheco9_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_FETCHTYPE_pixeng_fetcheco9_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_FETCHTYPE_pixeng_fetcheco9_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_BURSTBUFFERPROPERTIES_pixeng_fetcheco9_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESS0_pixeng_fetcheco9_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESS0_pixeng_fetcheco9_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESS0_pixeng_fetcheco9_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESS0_pixeng_fetcheco9_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESS0_pixeng_fetcheco9_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESSMSB0_pixeng_fetcheco9_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESSMSB0_pixeng_fetcheco9_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESSMSB0_pixeng_fetcheco9_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESSMSB0_pixeng_fetcheco9_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_CURBASEADDRESSMSB0_pixeng_fetcheco9_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9_HIDDENSTATUS_pixeng_fetcheco9_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9CFG_FETCHECO9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9cfg_fetcheco9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9cfg_fetcheco9_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco9cfg_fetcheco9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9cfg_fetcheco9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9cfg_fetcheco9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKUNLOCK_pixeng_fetcheco9cfg_fetcheco9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_LOCKSTATUS_pixeng_fetcheco9cfg_fetcheco9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO9CFG_FETCHECO9_STATUS - Status information for pixel engine configuration of fetcheco9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_STATUS_pixeng_fetcheco9cfg_fetcheco9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_STATUS_pixeng_fetcheco9cfg_fetcheco9_sel_SHIFT (16U)
/*! pixeng_fetcheco9cfg_fetcheco9_sel
 *  0b000..fetcheco9 module is not used
 *  0b001..fetcheco9 module is used from store9 processing path
 *  0b010..fetcheco9 module is used from extdst0 processing path
 *  0b011..fetcheco9 module is used from extdst4 processing path
 *  0b100..fetcheco9 module is used from extdst1 processing path
 *  0b101..fetcheco9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_STATUS_pixeng_fetcheco9cfg_fetcheco9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_STATUS_pixeng_fetcheco9cfg_fetcheco9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO9CFG_FETCHECO9_STATUS_pixeng_fetcheco9cfg_fetcheco9_sel_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9_LockUnlock_SHIFT (0U)
/*! pixeng_hscaler9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_LOCKSTATUS_pixeng_hscaler9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9_STATICCONTROL - Static control settings that must typically be setup once only. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9_STATICCONTROL_pixeng_hscaler9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_STATICCONTROL_pixeng_hscaler9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_STATICCONTROL_pixeng_hscaler9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_STATICCONTROL_pixeng_hscaler9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_STATICCONTROL_pixeng_hscaler9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9_SETUP1 - Phase interpolator setup. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP1_pixeng_hscaler9_scale_factor_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP1_pixeng_hscaler9_scale_factor_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP1_pixeng_hscaler9_scale_factor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP1_pixeng_hscaler9_scale_factor_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP1_pixeng_hscaler9_scale_factor_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9_SETUP2 - Phase interpolator setup. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP2_pixeng_hscaler9_phase_offset_MASK (0x1FFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP2_pixeng_hscaler9_phase_offset_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP2_pixeng_hscaler9_phase_offset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP2_pixeng_hscaler9_phase_offset_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_SETUP2_pixeng_hscaler9_phase_offset_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9_CONTROL - Scaler operation control. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_mode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_mode_SHIFT (0U)
/*! pixeng_hscaler9_mode
 *  0b0..Neutral mode. Pixels by-pass the scaler, all other settings are ignored.
 *  0b1..Scaler is active.
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_scale_mode_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_scale_mode_SHIFT (4U)
/*! pixeng_hscaler9_scale_mode
 *  0b0..Down-scaling (output size less or equal input size).
 *  0b1..Up-scaling (output size greater or equal input size)
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_scale_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_scale_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_scale_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_filter_mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_filter_mode_SHIFT (8U)
/*! pixeng_hscaler9_filter_mode
 *  0b0..Nearest filter (point-sampling)
 *  0b1..Box filter (linear)
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_filter_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_filter_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_filter_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_output_size_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_output_size_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_output_size(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_output_size_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9_CONTROL_pixeng_hscaler9_output_size_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9CFG_HSCALER9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9cfg_hscaler9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9cfg_hscaler9_LockUnlock_SHIFT (0U)
/*! pixeng_hscaler9cfg_hscaler9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9cfg_hscaler9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9cfg_hscaler9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKUNLOCK_pixeng_hscaler9cfg_hscaler9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_LOCKSTATUS_pixeng_hscaler9cfg_hscaler9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC - Dynamic pixel engine configuration for hscaler9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_src_sel_SHIFT (0U)
/*! pixeng_hscaler9cfg_hscaler9_src_sel
 *  0b000000..Unit hscaler9 input port src is disabled
 *  0b000011..Unit hscaler9 input port src is connected to output of unit matrix9
 *  0b001001..Unit hscaler9 input port src is connected to output of unit vscaler9
 *  0b001010..Unit hscaler9 input port src is connected to output of unit filter9
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_clken_SHIFT (24U)
/*! pixeng_hscaler9cfg_hscaler9_clken
 *  0b00..Clock for hscaler9 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for hscaler9 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_DYNAMIC_pixeng_hscaler9cfg_hscaler9_clken_MASK)
/*! @} */

/*! @name PIXENG_HSCALER9CFG_HSCALER9_STATUS - Status information for pixel engine configuration of hscaler9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_STATUS_pixeng_hscaler9cfg_hscaler9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_STATUS_pixeng_hscaler9cfg_hscaler9_sel_SHIFT (16U)
/*! pixeng_hscaler9cfg_hscaler9_sel
 *  0b000..hscaler9 module is not used
 *  0b001..hscaler9 module is used from store9 processing path
 *  0b010..hscaler9 module is used from extdst0 processing path
 *  0b011..hscaler9 module is used from extdst4 processing path
 *  0b100..hscaler9 module is used from extdst1 processing path
 *  0b101..hscaler9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_STATUS_pixeng_hscaler9cfg_hscaler9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_STATUS_pixeng_hscaler9cfg_hscaler9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER9CFG_HSCALER9_STATUS_pixeng_hscaler9cfg_hscaler9_sel_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9_LockUnlock_SHIFT (0U)
/*! pixeng_vscaler9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_LOCKSTATUS_pixeng_vscaler9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9_STATICCONTROL - Static control settings that must typically be setup once only. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9_STATICCONTROL_pixeng_vscaler9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_STATICCONTROL_pixeng_vscaler9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_STATICCONTROL_pixeng_vscaler9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_STATICCONTROL_pixeng_vscaler9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_STATICCONTROL_pixeng_vscaler9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9_SETUP1 - Phase interpolator setup. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP1_pixeng_vscaler9_scale_factor_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP1_pixeng_vscaler9_scale_factor_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP1_pixeng_vscaler9_scale_factor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP1_pixeng_vscaler9_scale_factor_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP1_pixeng_vscaler9_scale_factor_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9_SETUP2 - Phase interpolator setup, selected if input and output field polarity is 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP2_pixeng_vscaler9_phase_offset_MASK (0x1FFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP2_pixeng_vscaler9_phase_offset_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP2_pixeng_vscaler9_phase_offset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP2_pixeng_vscaler9_phase_offset_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_SETUP2_pixeng_vscaler9_phase_offset_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9_CONTROL - Scaler operation control. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_mode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_mode_SHIFT (0U)
/*! pixeng_vscaler9_mode
 *  0b0..Neutral mode. Pixels by-pass the scaler, all other settings are ignored.
 *  0b1..Scaler is active.
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_scale_mode_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_scale_mode_SHIFT (4U)
/*! pixeng_vscaler9_scale_mode
 *  0b0..Down-scaling (output size less or equal input size).
 *  0b1..Up-scaling (output size greater or equal input size).
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_scale_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_scale_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_scale_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_filter_mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_filter_mode_SHIFT (8U)
/*! pixeng_vscaler9_filter_mode
 *  0b0..Nearest filter (point-sampling)
 *  0b1..Box filter (linear)
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_filter_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_filter_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_filter_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_output_size_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_output_size_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_output_size(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_output_size_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9_CONTROL_pixeng_vscaler9_output_size_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9CFG_VSCALER9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9cfg_vscaler9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9cfg_vscaler9_LockUnlock_SHIFT (0U)
/*! pixeng_vscaler9cfg_vscaler9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9cfg_vscaler9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9cfg_vscaler9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKUNLOCK_pixeng_vscaler9cfg_vscaler9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_LOCKSTATUS_pixeng_vscaler9cfg_vscaler9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC - Dynamic pixel engine configuration for vscaler9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_src_sel_SHIFT (0U)
/*! pixeng_vscaler9cfg_vscaler9_src_sel
 *  0b000000..Unit vscaler9 input port src is disabled
 *  0b000011..Unit vscaler9 input port src is connected to output of unit matrix9
 *  0b001000..Unit vscaler9 input port src is connected to output of unit hscaler9
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_clken_SHIFT (24U)
/*! pixeng_vscaler9cfg_vscaler9_clken
 *  0b00..Clock for vscaler9 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for vscaler9 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_DYNAMIC_pixeng_vscaler9cfg_vscaler9_clken_MASK)
/*! @} */

/*! @name PIXENG_VSCALER9CFG_VSCALER9_STATUS - Status information for pixel engine configuration of vscaler9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_STATUS_pixeng_vscaler9cfg_vscaler9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_STATUS_pixeng_vscaler9cfg_vscaler9_sel_SHIFT (16U)
/*! pixeng_vscaler9cfg_vscaler9_sel
 *  0b000..vscaler9 module is not used
 *  0b001..vscaler9 module is used from store9 processing path
 *  0b010..vscaler9 module is used from extdst0 processing path
 *  0b011..vscaler9 module is used from extdst4 processing path
 *  0b100..vscaler9 module is used from extdst1 processing path
 *  0b101..vscaler9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_STATUS_pixeng_vscaler9cfg_vscaler9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_STATUS_pixeng_vscaler9cfg_vscaler9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER9CFG_VSCALER9_STATUS_pixeng_vscaler9cfg_vscaler9_sel_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKUNLOCK_pixeng_filter9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKUNLOCK_pixeng_filter9_LockUnlock_SHIFT (0U)
/*! pixeng_filter9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKUNLOCK_pixeng_filter9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_LOCKUNLOCK_pixeng_filter9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_LOCKUNLOCK_pixeng_filter9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_LOCKSTATUS_pixeng_filter9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_STATICCONTROL - Static control settings that must typically be setup once only. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_STATICCONTROL_pixeng_filter9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_STATICCONTROL_pixeng_filter9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_STATICCONTROL_pixeng_filter9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_STATICCONTROL_pixeng_filter9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_STATICCONTROL_pixeng_filter9_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_CONTROL - Filter operation main control. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_mode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_mode_SHIFT (0U)
/*! pixeng_filter9_mode
 *  0b0..Neutral mode. Pixels by-pass the filter, all other settings are ignored.
 *  0b1..Filter is active.
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_tile_mode_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_tile_mode_SHIFT (4U)
/*! pixeng_filter9_tile_mode
 *  0b00..Samples outside the frame are padded with the last valid border pixels.
 *  0b01..Samples outside the frame are treated as zero pixel value.
 *  0b10..Applies tile mode PAD to RGB channels and tile mode ZERO to alpha channel.
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_tile_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_tile_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_tile_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_filter_mode_MASK (0xFFFF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_filter_mode_SHIFT (8U)
/*! pixeng_filter9_filter_mode
 *  0b0000000001010101..FIR filter 5x5 window.
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_filter_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_filter_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_filter_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_buffer_format_MASK (0x30000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_buffer_format_SHIFT (28U)
/*! pixeng_filter9_buffer_format
 *  0b00..RGB888 format. Alpha is not filtered but set to constant value 255.
 *  0b01..RGBA5658 format. Alpha is filtered.
 *  0b10..RGBA8888 format. Alpha is filtered. The filter window is limited to 5x4.
 *  0b11..RGBA10.10.10.8 format. Alpha is filtered. The filter window is limited to 5x3.
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_buffer_format(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_buffer_format_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_CONTROL_pixeng_filter9_buffer_format_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_FIR_CONTROL - FIR filter operation control. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_component_select_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_component_select_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_component_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_component_select_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_component_select_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_exponent_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_exponent_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_exponent(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_exponent_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_FIR_CONTROL_pixeng_filter9_FIR_exponent_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_COEFFICIENTS0 - FIR coefficients[column][row] for 5x5 window for filter_mode FIR. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff0_0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff0_0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff0_0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff0_0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff0_0_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff1_0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff1_0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff1_0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff1_0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff1_0_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff2_0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff2_0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff2_0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff2_0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff2_0_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff3_0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff3_0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff3_0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff3_0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS0_pixeng_filter9_coeff3_0_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_COEFFICIENTS1 - FIR coefficients[column][row] for 5x5 window for filter_mode FIR. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff4_0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff4_0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff4_0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff4_0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff4_0_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff0_1_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff0_1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff0_1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff0_1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff0_1_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff1_1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff1_1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff1_1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff1_1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff1_1_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff2_1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff2_1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff2_1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff2_1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS1_pixeng_filter9_coeff2_1_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_COEFFICIENTS2 - FIR coefficients[column][row] for 5x5 window for filter_mode FIR. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff3_1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff3_1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff3_1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff3_1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff3_1_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff4_1_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff4_1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff4_1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff4_1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff4_1_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff0_2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff0_2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff0_2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff0_2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff0_2_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff1_2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff1_2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff1_2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff1_2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS2_pixeng_filter9_coeff1_2_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_COEFFICIENTS3 - FIR coefficients[column][row] for 5x5 window for filter_mode FIR. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff2_2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff2_2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff2_2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff2_2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff2_2_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff3_2_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff3_2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff3_2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff3_2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff3_2_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff4_2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff4_2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff4_2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff4_2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff4_2_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff0_3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff0_3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff0_3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff0_3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS3_pixeng_filter9_coeff0_3_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_COEFFICIENTS4 - FIR coefficients[column][row] for 5x5 window for filter_mode FIR. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff1_3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff1_3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff1_3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff1_3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff1_3_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff2_3_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff2_3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff2_3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff2_3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff2_3_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff3_3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff3_3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff3_3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff3_3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff3_3_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff4_3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff4_3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff4_3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff4_3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS4_pixeng_filter9_coeff4_3_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_COEFFICIENTS5 - FIR coefficients[column][row] for 5x5 window for filter_mode FIR. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff0_4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff0_4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff0_4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff0_4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff0_4_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff1_4_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff1_4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff1_4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff1_4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff1_4_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff2_4_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff2_4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff2_4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff2_4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff2_4_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff3_4_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff3_4_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff3_4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff3_4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS5_pixeng_filter9_coeff3_4_MASK)
/*! @} */

/*! @name PIXENG_FILTER9_COEFFICIENTS6 - FIR coefficients[column][row] for 5x5 window for filter_mode FIR. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS6_pixeng_filter9_coeff4_4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS6_pixeng_filter9_coeff4_4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS6_pixeng_filter9_coeff4_4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS6_pixeng_filter9_coeff4_4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9_COEFFICIENTS6_pixeng_filter9_coeff4_4_MASK)
/*! @} */

/*! @name PIXENG_FILTER9CFG_FILTER9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKUNLOCK_pixeng_filter9cfg_filter9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKUNLOCK_pixeng_filter9cfg_filter9_LockUnlock_SHIFT (0U)
/*! pixeng_filter9cfg_filter9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKUNLOCK_pixeng_filter9cfg_filter9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKUNLOCK_pixeng_filter9cfg_filter9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKUNLOCK_pixeng_filter9cfg_filter9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_LOCKSTATUS_pixeng_filter9cfg_filter9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FILTER9CFG_FILTER9_DYNAMIC - Dynamic pixel engine configuration for filter9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_src_sel_SHIFT (0U)
/*! pixeng_filter9cfg_filter9_src_sel
 *  0b000000..Unit filter9 input port src is disabled
 *  0b000011..Unit filter9 input port src is connected to output of unit matrix9
 *  0b001000..Unit filter9 input port src is connected to output of unit hscaler9
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_clken_SHIFT (24U)
/*! pixeng_filter9cfg_filter9_clken
 *  0b00..Clock for filter9 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for filter9 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_DYNAMIC_pixeng_filter9cfg_filter9_clken_MASK)
/*! @} */

/*! @name PIXENG_FILTER9CFG_FILTER9_STATUS - Status information for pixel engine configuration of filter9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_STATUS_pixeng_filter9cfg_filter9_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_STATUS_pixeng_filter9cfg_filter9_sel_SHIFT (16U)
/*! pixeng_filter9cfg_filter9_sel
 *  0b000..filter9 module is not used
 *  0b001..filter9 module is used from store9 processing path
 *  0b010..filter9 module is used from extdst0 processing path
 *  0b011..filter9 module is used from extdst4 processing path
 *  0b100..filter9 module is used from extdst1 processing path
 *  0b101..filter9 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_STATUS_pixeng_filter9cfg_filter9_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_STATUS_pixeng_filter9cfg_filter9_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FILTER9CFG_FILTER9_STATUS_pixeng_filter9cfg_filter9_sel_MASK)
/*! @} */

/*! @name PIXENG_STORE9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKUNLOCK_pixeng_store9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKUNLOCK_pixeng_store9_LockUnlock_SHIFT (0U)
/*! pixeng_store9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKUNLOCK_pixeng_store9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_LOCKUNLOCK_pixeng_store9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_LOCKUNLOCK_pixeng_store9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_STORE9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_LOCKSTATUS_pixeng_store9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_STORE9_STATICCONTROL - Store unit static control register. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_BaseAddressAutoUpdate_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_BaseAddressAutoUpdate_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_BaseAddressAutoUpdate(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_BaseAddressAutoUpdate_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_STATICCONTROL_pixeng_store9_BaseAddressAutoUpdate_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BURSTBUFFERMANAGEMENT - Burst Buffer setup register. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_FlexibleBurstLengthMax_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_FlexibleBurstLengthMax_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_FlexibleBurstLengthMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_FlexibleBurstLengthMax_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_FlexibleBurstLengthMax_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimerEn_MASK (0x800000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimerEn_SHIFT (23U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimerEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimerEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimerEn_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimeout_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimeout_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERMANAGEMENT_pixeng_store9_BurstTimeout_MASK)
/*! @} */

/*! @name PIXENG_STORE9_RINGBUFSTARTADDR - Ring buffer setup for destination. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDR_pixeng_store9_RingBufStartAddr_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDR_pixeng_store9_RingBufStartAddr_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDR_pixeng_store9_RingBufStartAddr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDR_pixeng_store9_RingBufStartAddr_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDR_pixeng_store9_RingBufStartAddr_MASK)
/*! @} */

/*! @name PIXENG_STORE9_RINGBUFSTARTADDRMSB - Ring buffer setup for destination. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDRMSB_pixeng_store9_RingBufStartAddrMSB_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDRMSB_pixeng_store9_RingBufStartAddrMSB_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDRMSB_pixeng_store9_RingBufStartAddrMSB(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDRMSB_pixeng_store9_RingBufStartAddrMSB_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFSTARTADDRMSB_pixeng_store9_RingBufStartAddrMSB_MASK)
/*! @} */

/*! @name PIXENG_STORE9_RINGBUFWRAPADDR - Ring buffer setup for destination. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDR_pixeng_store9_RingBufWrapAddr_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDR_pixeng_store9_RingBufWrapAddr_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDR_pixeng_store9_RingBufWrapAddr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDR_pixeng_store9_RingBufWrapAddr_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDR_pixeng_store9_RingBufWrapAddr_MASK)
/*! @} */

/*! @name PIXENG_STORE9_RINGBUFWRAPADDRMSB - Ring buffer setup for destination. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDRMSB_pixeng_store9_RingBufWrapAddrMSB_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDRMSB_pixeng_store9_RingBufWrapAddrMSB_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDRMSB_pixeng_store9_RingBufWrapAddrMSB(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDRMSB_pixeng_store9_RingBufWrapAddrMSB_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_RINGBUFWRAPADDRMSB_pixeng_store9_RingBufWrapAddrMSB_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BASEADDRESS0 - Destination buffer 0 base address. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS0_pixeng_store9_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS0_pixeng_store9_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS0_pixeng_store9_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS0_pixeng_store9_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS0_pixeng_store9_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BASEADDRESSMSB0 - Destination buffer 0 base address. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB0_pixeng_store9_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB0_pixeng_store9_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB0_pixeng_store9_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB0_pixeng_store9_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB0_pixeng_store9_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_STORE9_AUTOUPDATEBASEADDRESS0 - Destination buffer 0 base address for auto update feature. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESS0_pixeng_store9_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESS0_pixeng_store9_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESS0_pixeng_store9_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESS0_pixeng_store9_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESS0_pixeng_store9_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_STORE9_AUTOUPDATEBASEADDRESSMSB0 - Destination buffer 0 base address for auto update feature. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_store9_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_store9_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_store9_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_store9_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_AUTOUPDATEBASEADDRESSMSB0_pixeng_store9_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0 - Destination buffer 0 attributes. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_Stride0_MASK (0x1FFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_AlphaEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_AlphaEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_AlphaEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_AlphaEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_AlphaEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_RedEnable0_MASK (0x200000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_RedEnable0_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_RedEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_RedEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_RedEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_GreenEnable0_MASK (0x400000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_GreenEnable0_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_GreenEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_GreenEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_GreenEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BlueEnable0_MASK (0x800000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BlueEnable0_SHIFT (23U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BlueEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BlueEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BlueEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BitsPerPixel0_MASK (0x7F000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BitsPerPixel0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES0_pixeng_store9_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BASEADDRESS1 - Destination buffer 1 base address. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS1_pixeng_store9_BaseAddress1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS1_pixeng_store9_BaseAddress1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS1_pixeng_store9_BaseAddress1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS1_pixeng_store9_BaseAddress1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS1_pixeng_store9_BaseAddress1_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BASEADDRESSMSB1 - Destination buffer 1 base address. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB1_pixeng_store9_BaseAddressMSB1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB1_pixeng_store9_BaseAddressMSB1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB1_pixeng_store9_BaseAddressMSB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB1_pixeng_store9_BaseAddressMSB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB1_pixeng_store9_BaseAddressMSB1_MASK)
/*! @} */

/*! @name PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1 - Destination buffer 1 attributes. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_Stride1_MASK (0x1FFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_Stride1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_Stride1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_Stride1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_Stride1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_XDownscale1_MASK (0x20000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_XDownscale1_SHIFT (17U)
/*! pixeng_store9_XDownscale1
 *  0b0..write every pixel to buffer.
 *  0b1..write every second pixel to buffer. Enables YUV422Downsampling. Only for Rastermode = NORMAL. All
 *       correlated widths and horizontal offsets must be even.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_XDownscale1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_XDownscale1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_XDownscale1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_YDownscale1_MASK (0x40000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_YDownscale1_SHIFT (18U)
/*! pixeng_store9_YDownscale1
 *  0b0..write every line to buffer.
 *  0b1..write every second line to buffer. Enables YUV420Downsampling. All correlated heights and vertical offsets must be even.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_YDownscale1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_YDownscale1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_YDownscale1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_AlphaEnable1_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_AlphaEnable1_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_AlphaEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_AlphaEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_AlphaEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_RedEnable1_MASK (0x200000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_RedEnable1_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_RedEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_RedEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_RedEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_GreenEnable1_MASK (0x400000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_GreenEnable1_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_GreenEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_GreenEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_GreenEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BlueEnable1_MASK (0x800000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BlueEnable1_SHIFT (23U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BlueEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BlueEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BlueEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BitsPerPixel1_MASK (0x3F000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BitsPerPixel1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BitsPerPixel1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BitsPerPixel1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_BitsPerPixel1_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_DWordByteSwap1_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_DWordByteSwap1_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_DWordByteSwap1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_DWordByteSwap1_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES1_pixeng_store9_DWordByteSwap1_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BASEADDRESS2 - Destination buffer 2 base address. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS2_pixeng_store9_BaseAddress2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS2_pixeng_store9_BaseAddress2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS2_pixeng_store9_BaseAddress2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS2_pixeng_store9_BaseAddress2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESS2_pixeng_store9_BaseAddress2_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BASEADDRESSMSB2 - Destination buffer 2 base address (upper 8 bits). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB2_pixeng_store9_BaseAddressMSB2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB2_pixeng_store9_BaseAddressMSB2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB2_pixeng_store9_BaseAddressMSB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB2_pixeng_store9_BaseAddressMSB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BASEADDRESSMSB2_pixeng_store9_BaseAddressMSB2_MASK)
/*! @} */

/*! @name PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2 - Destination buffer 2 attributes. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_Stride2_MASK (0x1FFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_Stride2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_Stride2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_Stride2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_Stride2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_XDownscale2_MASK (0x20000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_XDownscale2_SHIFT (17U)
/*! pixeng_store9_XDownscale2
 *  0b0..write every pixel to buffer.
 *  0b1..write every second pixel to buffer. Enables YUV422Downsampling. Only for Rastermode = NORMAL. All
 *       correlated widths and horizontal offsets must be even.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_XDownscale2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_XDownscale2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_XDownscale2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_YDownscale2_MASK (0x40000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_YDownscale2_SHIFT (18U)
/*! pixeng_store9_YDownscale2
 *  0b0..write every line to buffer.
 *  0b1..write every second line to buffer. Enables YUV420Downsampling. All correlated heights and vertical offsets must be even.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_YDownscale2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_YDownscale2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_YDownscale2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_AlphaEnable2_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_AlphaEnable2_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_AlphaEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_AlphaEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_AlphaEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_RedEnable2_MASK (0x200000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_RedEnable2_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_RedEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_RedEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_RedEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_GreenEnable2_MASK (0x400000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_GreenEnable2_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_GreenEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_GreenEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_GreenEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BlueEnable2_MASK (0x800000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BlueEnable2_SHIFT (23U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BlueEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BlueEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BlueEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BitsPerPixel2_MASK (0x3F000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BitsPerPixel2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BitsPerPixel2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BitsPerPixel2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_BitsPerPixel2_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_DWordByteSwap2_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_DWordByteSwap2_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_DWordByteSwap2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_DWordByteSwap2_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERATTRIBUTES2_pixeng_store9_DWordByteSwap2_MASK)
/*! @} */

/*! @name PIXENG_STORE9_DESTINATIONBUFFERDIMENSION - Destination buffer dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineCount_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineCount_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineCount(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineCount_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_DESTINATIONBUFFERDIMENSION_pixeng_store9_LineCount_MASK)
/*! @} */

/*! @name PIXENG_STORE9_FRAMEOFFSET - Offset between destination frame and buffer. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameXOffset_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameXOffset_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameXOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameXOffset_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameXOffset_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameYOffset_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameYOffset_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameYOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameYOffset_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_FRAMEOFFSET_pixeng_store9_FrameYOffset_MASK)
/*! @} */

/*! @name PIXENG_STORE9_COLORCOMPONENTBITS - Color component size of destination buffer */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsAlpha_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsBlue_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsGreen_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsRed_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTBITS_pixeng_store9_ComponentBitsRed_MASK)
/*! @} */

/*! @name PIXENG_STORE9_COLORCOMPONENTSHIFT - Color component offset of destination buffer. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftAlpha_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftBlue_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftGreen_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftRed_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_COLORCOMPONENTSHIFT_pixeng_store9_ComponentShiftRed_MASK)
/*! @} */

/*! @name PIXENG_STORE9_CONTROL - Store unit dynamic control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_ColorDitherEnable_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_ColorDitherEnable_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_ColorDitherEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_ColorDitherEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_ColorDitherEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_AlphaDitherEnable_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_AlphaDitherEnable_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_AlphaDitherEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_AlphaDitherEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_AlphaDitherEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_DitherOffset_MASK (0xF0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_DitherOffset_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_DitherOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_DitherOffset_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_DitherOffset_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_GammaApplyEnable_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_GammaApplyEnable_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_GammaApplyEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_GammaApplyEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_GammaApplyEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUVConversionMode_MASK (0x30000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUVConversionMode_SHIFT (16U)
/*! pixeng_store9_YUVConversionMode
 *  0b00..No conversion. Input data must be RGB.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUVConversionMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUVConversionMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUVConversionMode_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_RasterMode_MASK (0xC0000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_RasterMode_SHIFT (18U)
/*! pixeng_store9_RasterMode
 *  0b00..RGBA or YUV 4:4:4 pixel buffer.
 *  0b01..Packed YUV 4:2:2 pixel buffer. Effect is that U samples are written for pixels with even and V samples
 *        for odd column index only. Enables YUV422Downsampling. So BitsPerPixel must be set to the size that a pair
 *        of YU or YV has in memory (most typically 16 bits). All correlated widths and horizontal offsets must be
 *        even.
 *  0b10..[Store derivate only] RLAD compressed bit stream.
 *  0b11..Packed YUV 4:2:2 pixel buffer. Effect is that V samples are written for pixels with even and U samples
 *        for odd column index only. Enables YUV422Downsampling. So BitsPerPixel must be set to the size that a pair
 *        of YU or YV has in memory (most typically 16 bits). All correlated widths and horizontal offsets must be
 *        even.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_RasterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_RasterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_RasterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV422DownsamplingMode_MASK (0x300000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV422DownsamplingMode_SHIFT (20U)
/*! pixeng_store9_YUV422DownsamplingMode
 *  0b00..Nearest mode. Discards all odd samples, outputs even samples.
 *  0b01..Linear coaligned mode. 3 nearest UV samples are combined in linear filter to get one output sample.
 *  0b10..Linear interspersed mode. 2 nearest UV samples are combined in linear filter to get one output sample.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV422DownsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV422DownsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV422DownsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV420DownsamplingMode_MASK (0x400000U)
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV420DownsamplingMode_SHIFT (22U)
/*! pixeng_store9_YUV420DownsamplingMode
 *  0b0..Nearest mode. Discards all odd samples, outputs even samples.
 *  0b1..Linear interspersed mode. 2 nearest UV samples are combined in linear filter to get one output sample.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV420DownsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV420DownsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_CONTROL_pixeng_store9_YUV420DownsamplingMode_MASK)
/*! @} */

/*! @name PIXENG_STORE9_START - Store unit start register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_START_pixeng_store9_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9_START_pixeng_store9_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_START_pixeng_store9_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_START_pixeng_store9_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_START_pixeng_store9_Start_MASK)
/*! @} */

/*! @name PIXENG_STORE9_WRITEADDRESS - Ring buffer synchronization. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESS_pixeng_store9_WriteAddress_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESS_pixeng_store9_WriteAddress_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESS_pixeng_store9_WriteAddress(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESS_pixeng_store9_WriteAddress_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESS_pixeng_store9_WriteAddress_MASK)
/*! @} */

/*! @name PIXENG_STORE9_WRITEADDRESSMSB - Ring buffer synchronization. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESSMSB_pixeng_store9_WriteAddressMSB_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESSMSB_pixeng_store9_WriteAddressMSB_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESSMSB_pixeng_store9_WriteAddressMSB(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESSMSB_pixeng_store9_WriteAddressMSB_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_WRITEADDRESSMSB_pixeng_store9_WriteAddressMSB_MASK)
/*! @} */

/*! @name PIXENG_STORE9_FRAMEPROPERTIES - Ring buffer synchronization. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEPROPERTIES_pixeng_store9_FieldId_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEPROPERTIES_pixeng_store9_FieldId_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_FRAMEPROPERTIES_pixeng_store9_FieldId(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_FRAMEPROPERTIES_pixeng_store9_FieldId_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_FRAMEPROPERTIES_pixeng_store9_FieldId_MASK)
/*! @} */

/*! @name PIXENG_STORE9_BURSTBUFFERPROPERTIES - Burst Buffer Property register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERPROPERTIES_pixeng_store9_MaxBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERPROPERTIES_pixeng_store9_MaxBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERPROPERTIES_pixeng_store9_MaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERPROPERTIES_pixeng_store9_MaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_BURSTBUFFERPROPERTIES_pixeng_store9_MaxBurstLength_MASK)
/*! @} */

/*! @name PIXENG_STORE9_LASTCONTROLWORD - Shows the last control word received */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_LASTCONTROLWORD_pixeng_store9_L_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_LASTCONTROLWORD_pixeng_store9_L_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_LASTCONTROLWORD_pixeng_store9_L_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_LASTCONTROLWORD_pixeng_store9_L_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_LASTCONTROLWORD_pixeng_store9_L_VAL_MASK)
/*! @} */

/*! @name PIXENG_STORE9_PERFCOUNTER - Performance counter result */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_PERFCOUNTER_pixeng_store9_PerfResult_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9_PERFCOUNTER_pixeng_store9_PerfResult_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_PERFCOUNTER_pixeng_store9_PerfResult(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_PERFCOUNTER_pixeng_store9_PerfResult_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_PERFCOUNTER_pixeng_store9_PerfResult_MASK)
/*! @} */

/*! @name PIXENG_STORE9_STATUS - Shows status information */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_PixelbusError_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_PixelbusError_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_PixelbusError(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_PixelbusError_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9_STATUS_pixeng_store9_PixelbusError_MASK)
/*! @} */

/*! @name PIXENG_STORE9CFG_STORE9_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKUNLOCK_pixeng_store9cfg_store9_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKUNLOCK_pixeng_store9cfg_store9_LockUnlock_SHIFT (0U)
/*! pixeng_store9cfg_store9_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKUNLOCK_pixeng_store9cfg_store9_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKUNLOCK_pixeng_store9cfg_store9_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKUNLOCK_pixeng_store9cfg_store9_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_STORE9CFG_STORE9_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_LOCKSTATUS_pixeng_store9cfg_store9_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_STORE9CFG_STORE9_STATIC - Static pixel engine configuration for store9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_powerdown_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_powerdown_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_powerdown(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_powerdown_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_powerdown_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_Sync_Mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_Sync_Mode_SHIFT (8U)
/*! pixeng_store9cfg_store9_Sync_Mode
 *  0b0..Reconfig pipeline after explicit trigger
 *  0b1..Reconfig pipeline after every kick when idle
 */
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_Sync_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_Sync_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_Sync_Mode_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_SW_Reset_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_SW_Reset_SHIFT (11U)
/*! pixeng_store9cfg_store9_SW_Reset
 *  0b0..Normal Operation
 *  0b1..Software Reset
 */
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_SW_Reset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_SW_Reset_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_SW_Reset_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_div_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_div_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_div(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_div_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATIC_pixeng_store9cfg_store9_div_MASK)
/*! @} */

/*! @name PIXENG_STORE9CFG_STORE9_DYNAMIC - Dynamic pixel engine configuration for store9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_DYNAMIC_pixeng_store9cfg_store9_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_DYNAMIC_pixeng_store9cfg_store9_src_sel_SHIFT (0U)
/*! pixeng_store9cfg_store9_src_sel
 *  0b000000..Unit store9 input port src is disabled
 *  0b000100..Unit store9 input port src is connected to output of unit blitblend9
 *  0b000101..Unit store9 input port src is connected to output of unit fetchrot9
 *  0b000110..Unit store9 input port src is connected to output of unit fetchdecode9
 *  0b001000..Unit store9 input port src is connected to output of unit hscaler9
 *  0b001001..Unit store9 input port src is connected to output of unit vscaler9
 *  0b001010..Unit store9 input port src is connected to output of unit filter9
 */
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_DYNAMIC_pixeng_store9cfg_store9_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_DYNAMIC_pixeng_store9cfg_store9_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_DYNAMIC_pixeng_store9cfg_store9_src_sel_MASK)
/*! @} */

/*! @name PIXENG_STORE9CFG_STORE9_REQUEST - ShadowLoadRequest register for endpoint store9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_sel_ShdLdReq_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_sel_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_sel_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_sel_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_sel_ShdLdReq_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_ShdLdReq_MASK (0x1FFFEU)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_ShdLdReq_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_REQUEST_pixeng_store9cfg_store9_ShdLdReq_MASK)
/*! @} */

/*! @name PIXENG_STORE9CFG_STORE9_TRIGGER - Trigger bits for pixel engine configuration of store9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_Sync_Trigger_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_Sync_Trigger_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_Sync_Trigger(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_Sync_Trigger_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_Sync_Trigger_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_trigger_sequence_complete_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_trigger_sequence_complete_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_trigger_sequence_complete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_trigger_sequence_complete_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_TRIGGER_pixeng_store9cfg_store9_trigger_sequence_complete_MASK)
/*! @} */

/*! @name PIXENG_STORE9CFG_STORE9_STATUS - Status information for pixel engine configuration of store9 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_pipeline_status_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_pipeline_status_SHIFT (0U)
/*! pixeng_store9cfg_store9_pipeline_status
 *  0b00..Pipeline with endpoint store9 is empty
 *  0b01..Pipeline with endpoint store9 is currently processing one operation
 *  0b10..Pipeline with endpoint store9 is currently processing one operation with a second one already kicked to be processed afterwards
 *  0b11..reserved
 */
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_pipeline_status(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_pipeline_status_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_pipeline_status_MASK)

#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_sync_busy_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_sync_busy_SHIFT (8U)
/*! pixeng_store9cfg_store9_sync_busy
 *  0b0..store9 synchronizer is idle
 *  0b1..store9 synchronizer is busy
 */
#define DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_sync_busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_sync_busy_SHIFT)) & DISPLAY_SEERIS_PIXENG_STORE9CFG_STORE9_STATUS_pixeng_store9cfg_store9_sync_busy_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0_LockUnlock_SHIFT (0U)
/*! pixeng_constframe0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_STATICCONTROL - ConstFrame unit static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATICCONTROL_pixeng_constframe0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATICCONTROL_pixeng_constframe0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATICCONTROL_pixeng_constframe0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATICCONTROL_pixeng_constframe0_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATICCONTROL_pixeng_constframe0_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_FRAMEDIMENSIONS - Output frame dimensions. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_FRAMEDIMENSIONS_pixeng_constframe0_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_CONSTANTCOLOR - Color of output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONSTANTCOLOR_pixeng_constframe0_ConstantRed_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_CONTROLTRIGGER - ConstFrame unit trigger register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONTROLTRIGGER_pixeng_constframe0_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONTROLTRIGGER_pixeng_constframe0_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONTROLTRIGGER_pixeng_constframe0_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONTROLTRIGGER_pixeng_constframe0_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_CONTROLTRIGGER_pixeng_constframe0_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_START - ConstFrame unit start register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_START_pixeng_constframe0_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_START_pixeng_constframe0_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_START_pixeng_constframe0_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_START_pixeng_constframe0_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_START_pixeng_constframe0_Start_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0_STATUS - Shows status information */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_ShadowStatus_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_ShadowStatus_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_ShadowStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_ShadowStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0_STATUS_pixeng_constframe0_ShadowStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0cfg_constframe0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0cfg_constframe0_LockUnlock_SHIFT (0U)
/*! pixeng_constframe0cfg_constframe0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0cfg_constframe0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0cfg_constframe0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKUNLOCK_pixeng_constframe0cfg_constframe0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_LOCKSTATUS_pixeng_constframe0cfg_constframe0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME0CFG_CONSTFRAME0_STATUS - Status information for pixel engine configuration of constframe0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_STATUS_pixeng_constframe0cfg_constframe0_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_STATUS_pixeng_constframe0cfg_constframe0_sel_SHIFT (16U)
/*! pixeng_constframe0cfg_constframe0_sel
 *  0b000..constframe0 module is not used
 *  0b001..constframe0 module is used from store9 processing path
 *  0b010..constframe0 module is used from extdst0 processing path
 *  0b011..constframe0 module is used from extdst4 processing path
 *  0b100..constframe0 module is used from extdst1 processing path
 *  0b101..constframe0 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_STATUS_pixeng_constframe0cfg_constframe0_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_STATUS_pixeng_constframe0cfg_constframe0_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME0CFG_CONSTFRAME0_STATUS_pixeng_constframe0cfg_constframe0_sel_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4_LockUnlock_SHIFT (0U)
/*! pixeng_constframe4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_STATICCONTROL - ConstFrame unit static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATICCONTROL_pixeng_constframe4_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATICCONTROL_pixeng_constframe4_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATICCONTROL_pixeng_constframe4_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATICCONTROL_pixeng_constframe4_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATICCONTROL_pixeng_constframe4_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_FRAMEDIMENSIONS - Output frame dimensions. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_FRAMEDIMENSIONS_pixeng_constframe4_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_CONSTANTCOLOR - Color of output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONSTANTCOLOR_pixeng_constframe4_ConstantRed_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_CONTROLTRIGGER - ConstFrame unit trigger register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONTROLTRIGGER_pixeng_constframe4_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONTROLTRIGGER_pixeng_constframe4_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONTROLTRIGGER_pixeng_constframe4_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONTROLTRIGGER_pixeng_constframe4_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_CONTROLTRIGGER_pixeng_constframe4_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_START - ConstFrame unit start register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_START_pixeng_constframe4_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_START_pixeng_constframe4_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_START_pixeng_constframe4_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_START_pixeng_constframe4_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_START_pixeng_constframe4_Start_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4_STATUS - Shows status information */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_ShadowStatus_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_ShadowStatus_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_ShadowStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_ShadowStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4_STATUS_pixeng_constframe4_ShadowStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4cfg_constframe4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4cfg_constframe4_LockUnlock_SHIFT (0U)
/*! pixeng_constframe4cfg_constframe4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4cfg_constframe4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4cfg_constframe4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKUNLOCK_pixeng_constframe4cfg_constframe4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_LOCKSTATUS_pixeng_constframe4cfg_constframe4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME4CFG_CONSTFRAME4_STATUS - Status information for pixel engine configuration of constframe4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_STATUS_pixeng_constframe4cfg_constframe4_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_STATUS_pixeng_constframe4cfg_constframe4_sel_SHIFT (16U)
/*! pixeng_constframe4cfg_constframe4_sel
 *  0b000..constframe4 module is not used
 *  0b001..constframe4 module is used from store9 processing path
 *  0b010..constframe4 module is used from extdst0 processing path
 *  0b011..constframe4 module is used from extdst4 processing path
 *  0b100..constframe4 module is used from extdst1 processing path
 *  0b101..constframe4 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_STATUS_pixeng_constframe4cfg_constframe4_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_STATUS_pixeng_constframe4cfg_constframe4_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME4CFG_CONSTFRAME4_STATUS_pixeng_constframe4cfg_constframe4_sel_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKUNLOCK_pixeng_extdst0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKUNLOCK_pixeng_extdst0_LockUnlock_SHIFT (0U)
/*! pixeng_extdst0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKUNLOCK_pixeng_extdst0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKUNLOCK_pixeng_extdst0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKUNLOCK_pixeng_extdst0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_LOCKSTATUS_pixeng_extdst0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_STATICCONTROL - External Destination static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_KICK_MODE_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_KICK_MODE_SHIFT (8U)
/*! pixeng_extdst0_KICK_MODE
 *  0b0..kick generation by KICK field only
 *  0b1..kick signal from external allowed
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_KICK_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_KICK_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_KICK_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_PerfCountMode_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_PerfCountMode_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_PerfCountMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_PerfCountMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_STATICCONTROL_pixeng_extdst0_PerfCountMode_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_CONTROL - External Destination shadowed control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROL_pixeng_extdst0_GammaApplyEnable_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROL_pixeng_extdst0_GammaApplyEnable_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROL_pixeng_extdst0_GammaApplyEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROL_pixeng_extdst0_GammaApplyEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROL_pixeng_extdst0_GammaApplyEnable_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_SOFTWAREKICK - External Destination software kick */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_SOFTWAREKICK_pixeng_extdst0_KICK_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_SOFTWAREKICK_pixeng_extdst0_KICK_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_SOFTWAREKICK_pixeng_extdst0_KICK(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_SOFTWAREKICK_pixeng_extdst0_KICK_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_SOFTWAREKICK_pixeng_extdst0_KICK_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_STATUS - External Destination Unit current status */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATUS_pixeng_extdst0_CNT_ERR_STS_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATUS_pixeng_extdst0_CNT_ERR_STS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_STATUS_pixeng_extdst0_CNT_ERR_STS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_STATUS_pixeng_extdst0_CNT_ERR_STS_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_STATUS_pixeng_extdst0_CNT_ERR_STS_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_CONTROLWORD - Value of last received control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROLWORD_pixeng_extdst0_CW_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROLWORD_pixeng_extdst0_CW_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROLWORD_pixeng_extdst0_CW_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROLWORD_pixeng_extdst0_CW_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_CONTROLWORD_pixeng_extdst0_CW_VAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_CURPIXELCNT - pixel count of currently running frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_CURPIXELCNT_pixeng_extdst0_C_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_LASTPIXELCNT - pixel count between last two control words */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_LASTPIXELCNT_pixeng_extdst0_L_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0_PERFCOUNTER - Performance counter result */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0_PERFCOUNTER_pixeng_extdst0_PerfResult_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_PERFCOUNTER_pixeng_extdst0_PerfResult_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0_PERFCOUNTER_pixeng_extdst0_PerfResult(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0_PERFCOUNTER_pixeng_extdst0_PerfResult_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0_PERFCOUNTER_pixeng_extdst0_PerfResult_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0CFG_EXTDST0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKUNLOCK_pixeng_extdst0cfg_extdst0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKUNLOCK_pixeng_extdst0cfg_extdst0_LockUnlock_SHIFT (0U)
/*! pixeng_extdst0cfg_extdst0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKUNLOCK_pixeng_extdst0cfg_extdst0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKUNLOCK_pixeng_extdst0cfg_extdst0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKUNLOCK_pixeng_extdst0cfg_extdst0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_LOCKSTATUS_pixeng_extdst0cfg_extdst0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0CFG_EXTDST0_STATIC - Static pixel engine configuration for extdst0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_powerdown_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_powerdown_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_powerdown(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_powerdown_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_powerdown_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_Sync_Mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_Sync_Mode_SHIFT (8U)
/*! pixeng_extdst0cfg_extdst0_Sync_Mode
 *  0b0..Reconfig pipeline after explicit trigger
 *  0b1..Reconfig pipeline after every kick when idle
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_Sync_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_Sync_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_Sync_Mode_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_SW_Reset_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_SW_Reset_SHIFT (11U)
/*! pixeng_extdst0cfg_extdst0_SW_Reset
 *  0b0..Normal Operation
 *  0b1..Software Reset
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_SW_Reset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_SW_Reset_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_SW_Reset_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_div_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_div_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_div(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_div_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATIC_pixeng_extdst0cfg_extdst0_div_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0CFG_EXTDST0_DYNAMIC - Dynamic pixel engine configuration for extdst0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_DYNAMIC_pixeng_extdst0cfg_extdst0_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_DYNAMIC_pixeng_extdst0cfg_extdst0_src_sel_SHIFT (0U)
/*! pixeng_extdst0cfg_extdst0_src_sel
 *  0b000000..Unit extdst0 input port src is disabled
 *  0b010100..Unit extdst0 input port src is connected to output of unit layerblend1
 *  0b010101..Unit extdst0 input port src is connected to output of unit layerblend2
 *  0b010110..Unit extdst0 input port src is connected to output of unit layerblend3
 *  0b010111..Unit extdst0 input port src is connected to output of unit layerblend4
 *  0b011000..Unit extdst0 input port src is connected to output of unit layerblend5
 *  0b011001..Unit extdst0 input port src is connected to output of unit layerblend6
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_DYNAMIC_pixeng_extdst0cfg_extdst0_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_DYNAMIC_pixeng_extdst0cfg_extdst0_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_DYNAMIC_pixeng_extdst0cfg_extdst0_src_sel_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0CFG_EXTDST0_REQUEST - ShadowLoadRequest register for endpoint extdst0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_sel_ShdLdReq_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_sel_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_sel_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_sel_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_sel_ShdLdReq_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_ShdLdReq_MASK (0x1FFFEU)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_ShdLdReq_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_REQUEST_pixeng_extdst0cfg_extdst0_ShdLdReq_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0CFG_EXTDST0_TRIGGER - Trigger bits for pixel engine configuration of extdst0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_Sync_Trigger_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_Sync_Trigger_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_Sync_Trigger(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_Sync_Trigger_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_Sync_Trigger_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_trigger_sequence_complete_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_trigger_sequence_complete_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_trigger_sequence_complete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_trigger_sequence_complete_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_TRIGGER_pixeng_extdst0cfg_extdst0_trigger_sequence_complete_MASK)
/*! @} */

/*! @name PIXENG_EXTDST0CFG_EXTDST0_STATUS - Status information for pixel engine configuration of extdst0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_pipeline_status_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_pipeline_status_SHIFT (0U)
/*! pixeng_extdst0cfg_extdst0_pipeline_status
 *  0b00..Pipeline with endpoint extdst0 is empty
 *  0b01..Pipeline with endpoint extdst0 is currently processing one operation
 *  0b10..Pipeline with endpoint extdst0 is currently processing one operation with a second one already kicked to be processed afterwards
 *  0b11..reserved
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_pipeline_status(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_pipeline_status_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_pipeline_status_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_sync_busy_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_sync_busy_SHIFT (8U)
/*! pixeng_extdst0cfg_extdst0_sync_busy
 *  0b0..extdst0 synchronizer is idle
 *  0b1..extdst0 synchronizer is busy
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_sync_busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_sync_busy_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST0CFG_EXTDST0_STATUS_pixeng_extdst0cfg_extdst0_sync_busy_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKUNLOCK_pixeng_extdst4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKUNLOCK_pixeng_extdst4_LockUnlock_SHIFT (0U)
/*! pixeng_extdst4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKUNLOCK_pixeng_extdst4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKUNLOCK_pixeng_extdst4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKUNLOCK_pixeng_extdst4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_LOCKSTATUS_pixeng_extdst4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_STATICCONTROL - External Destination static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_KICK_MODE_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_KICK_MODE_SHIFT (8U)
/*! pixeng_extdst4_KICK_MODE
 *  0b0..kick generation by KICK field only
 *  0b1..kick signal from external allowed
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_KICK_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_KICK_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_KICK_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_PerfCountMode_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_PerfCountMode_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_PerfCountMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_PerfCountMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_STATICCONTROL_pixeng_extdst4_PerfCountMode_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_CONTROL - External Destination shadowed control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROL_pixeng_extdst4_GammaApplyEnable_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROL_pixeng_extdst4_GammaApplyEnable_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROL_pixeng_extdst4_GammaApplyEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROL_pixeng_extdst4_GammaApplyEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROL_pixeng_extdst4_GammaApplyEnable_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_SOFTWAREKICK - External Destination software kick */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_SOFTWAREKICK_pixeng_extdst4_KICK_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_SOFTWAREKICK_pixeng_extdst4_KICK_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_SOFTWAREKICK_pixeng_extdst4_KICK(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_SOFTWAREKICK_pixeng_extdst4_KICK_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_SOFTWAREKICK_pixeng_extdst4_KICK_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_STATUS - External Destination Unit current status */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATUS_pixeng_extdst4_CNT_ERR_STS_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATUS_pixeng_extdst4_CNT_ERR_STS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_STATUS_pixeng_extdst4_CNT_ERR_STS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_STATUS_pixeng_extdst4_CNT_ERR_STS_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_STATUS_pixeng_extdst4_CNT_ERR_STS_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_CONTROLWORD - Value of last received control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROLWORD_pixeng_extdst4_CW_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROLWORD_pixeng_extdst4_CW_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROLWORD_pixeng_extdst4_CW_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROLWORD_pixeng_extdst4_CW_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_CONTROLWORD_pixeng_extdst4_CW_VAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_CURPIXELCNT - pixel count of currently running frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_CURPIXELCNT_pixeng_extdst4_C_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_LASTPIXELCNT - pixel count between last two control words */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_LASTPIXELCNT_pixeng_extdst4_L_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4_PERFCOUNTER - Performance counter result */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4_PERFCOUNTER_pixeng_extdst4_PerfResult_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_PERFCOUNTER_pixeng_extdst4_PerfResult_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4_PERFCOUNTER_pixeng_extdst4_PerfResult(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4_PERFCOUNTER_pixeng_extdst4_PerfResult_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4_PERFCOUNTER_pixeng_extdst4_PerfResult_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4CFG_EXTDST4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKUNLOCK_pixeng_extdst4cfg_extdst4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKUNLOCK_pixeng_extdst4cfg_extdst4_LockUnlock_SHIFT (0U)
/*! pixeng_extdst4cfg_extdst4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKUNLOCK_pixeng_extdst4cfg_extdst4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKUNLOCK_pixeng_extdst4cfg_extdst4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKUNLOCK_pixeng_extdst4cfg_extdst4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_LOCKSTATUS_pixeng_extdst4cfg_extdst4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4CFG_EXTDST4_STATIC - Static pixel engine configuration for extdst4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_powerdown_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_powerdown_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_powerdown(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_powerdown_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_powerdown_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_Sync_Mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_Sync_Mode_SHIFT (8U)
/*! pixeng_extdst4cfg_extdst4_Sync_Mode
 *  0b0..Reconfig pipeline after explicit trigger
 *  0b1..Reconfig pipeline after every kick when idle
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_Sync_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_Sync_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_Sync_Mode_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_SW_Reset_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_SW_Reset_SHIFT (11U)
/*! pixeng_extdst4cfg_extdst4_SW_Reset
 *  0b0..Normal Operation
 *  0b1..Software Reset
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_SW_Reset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_SW_Reset_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_SW_Reset_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_div_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_div_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_div(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_div_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATIC_pixeng_extdst4cfg_extdst4_div_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4CFG_EXTDST4_DYNAMIC - Dynamic pixel engine configuration for extdst4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_DYNAMIC_pixeng_extdst4cfg_extdst4_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_DYNAMIC_pixeng_extdst4cfg_extdst4_src_sel_SHIFT (0U)
/*! pixeng_extdst4cfg_extdst4_src_sel
 *  0b000000..Unit extdst4 input port src is disabled
 *  0b010100..Unit extdst4 input port src is connected to output of unit layerblend1
 *  0b010101..Unit extdst4 input port src is connected to output of unit layerblend2
 *  0b010110..Unit extdst4 input port src is connected to output of unit layerblend3
 *  0b010111..Unit extdst4 input port src is connected to output of unit layerblend4
 *  0b011000..Unit extdst4 input port src is connected to output of unit layerblend5
 *  0b011001..Unit extdst4 input port src is connected to output of unit layerblend6
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_DYNAMIC_pixeng_extdst4cfg_extdst4_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_DYNAMIC_pixeng_extdst4cfg_extdst4_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_DYNAMIC_pixeng_extdst4cfg_extdst4_src_sel_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4CFG_EXTDST4_REQUEST - ShadowLoadRequest register for endpoint extdst4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_sel_ShdLdReq_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_sel_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_sel_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_sel_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_sel_ShdLdReq_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_ShdLdReq_MASK (0x1FFFEU)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_ShdLdReq_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_REQUEST_pixeng_extdst4cfg_extdst4_ShdLdReq_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4CFG_EXTDST4_TRIGGER - Trigger bits for pixel engine configuration of extdst4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_Sync_Trigger_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_Sync_Trigger_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_Sync_Trigger(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_Sync_Trigger_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_Sync_Trigger_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_trigger_sequence_complete_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_trigger_sequence_complete_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_trigger_sequence_complete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_trigger_sequence_complete_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_TRIGGER_pixeng_extdst4cfg_extdst4_trigger_sequence_complete_MASK)
/*! @} */

/*! @name PIXENG_EXTDST4CFG_EXTDST4_STATUS - Status information for pixel engine configuration of extdst4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_pipeline_status_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_pipeline_status_SHIFT (0U)
/*! pixeng_extdst4cfg_extdst4_pipeline_status
 *  0b00..Pipeline with endpoint extdst4 is empty
 *  0b01..Pipeline with endpoint extdst4 is currently processing one operation
 *  0b10..Pipeline with endpoint extdst4 is currently processing one operation with a second one already kicked to be processed afterwards
 *  0b11..reserved
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_pipeline_status(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_pipeline_status_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_pipeline_status_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_sync_busy_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_sync_busy_SHIFT (8U)
/*! pixeng_extdst4cfg_extdst4_sync_busy
 *  0b0..extdst4 synchronizer is idle
 *  0b1..extdst4 synchronizer is busy
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_sync_busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_sync_busy_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST4CFG_EXTDST4_STATUS_pixeng_extdst4cfg_extdst4_sync_busy_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1_LockUnlock_SHIFT (0U)
/*! pixeng_constframe1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_STATICCONTROL - ConstFrame unit static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATICCONTROL_pixeng_constframe1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATICCONTROL_pixeng_constframe1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATICCONTROL_pixeng_constframe1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATICCONTROL_pixeng_constframe1_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATICCONTROL_pixeng_constframe1_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_FRAMEDIMENSIONS - Output frame dimensions. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_FRAMEDIMENSIONS_pixeng_constframe1_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_CONSTANTCOLOR - Color of output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONSTANTCOLOR_pixeng_constframe1_ConstantRed_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_CONTROLTRIGGER - ConstFrame unit trigger register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONTROLTRIGGER_pixeng_constframe1_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONTROLTRIGGER_pixeng_constframe1_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONTROLTRIGGER_pixeng_constframe1_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONTROLTRIGGER_pixeng_constframe1_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_CONTROLTRIGGER_pixeng_constframe1_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_START - ConstFrame unit start register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_START_pixeng_constframe1_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_START_pixeng_constframe1_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_START_pixeng_constframe1_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_START_pixeng_constframe1_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_START_pixeng_constframe1_Start_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1_STATUS - Shows status information */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_ShadowStatus_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_ShadowStatus_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_ShadowStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_ShadowStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1_STATUS_pixeng_constframe1_ShadowStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1cfg_constframe1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1cfg_constframe1_LockUnlock_SHIFT (0U)
/*! pixeng_constframe1cfg_constframe1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1cfg_constframe1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1cfg_constframe1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKUNLOCK_pixeng_constframe1cfg_constframe1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_LOCKSTATUS_pixeng_constframe1cfg_constframe1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME1CFG_CONSTFRAME1_STATUS - Status information for pixel engine configuration of constframe1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_STATUS_pixeng_constframe1cfg_constframe1_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_STATUS_pixeng_constframe1cfg_constframe1_sel_SHIFT (16U)
/*! pixeng_constframe1cfg_constframe1_sel
 *  0b000..constframe1 module is not used
 *  0b001..constframe1 module is used from store9 processing path
 *  0b010..constframe1 module is used from extdst0 processing path
 *  0b011..constframe1 module is used from extdst4 processing path
 *  0b100..constframe1 module is used from extdst1 processing path
 *  0b101..constframe1 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_STATUS_pixeng_constframe1cfg_constframe1_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_STATUS_pixeng_constframe1cfg_constframe1_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME1CFG_CONSTFRAME1_STATUS_pixeng_constframe1cfg_constframe1_sel_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5_LockUnlock_SHIFT (0U)
/*! pixeng_constframe5_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_STATICCONTROL - ConstFrame unit static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATICCONTROL_pixeng_constframe5_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATICCONTROL_pixeng_constframe5_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATICCONTROL_pixeng_constframe5_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATICCONTROL_pixeng_constframe5_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATICCONTROL_pixeng_constframe5_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_FRAMEDIMENSIONS - Output frame dimensions. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_FRAMEDIMENSIONS_pixeng_constframe5_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_CONSTANTCOLOR - Color of output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantAlpha_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantBlue_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantBlue_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantBlue_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantGreen_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantGreen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantGreen_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantRed_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantRed_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONSTANTCOLOR_pixeng_constframe5_ConstantRed_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_CONTROLTRIGGER - ConstFrame unit trigger register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONTROLTRIGGER_pixeng_constframe5_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONTROLTRIGGER_pixeng_constframe5_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONTROLTRIGGER_pixeng_constframe5_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONTROLTRIGGER_pixeng_constframe5_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_CONTROLTRIGGER_pixeng_constframe5_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_START - ConstFrame unit start register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_START_pixeng_constframe5_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_START_pixeng_constframe5_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_START_pixeng_constframe5_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_START_pixeng_constframe5_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_START_pixeng_constframe5_Start_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5_STATUS - Shows status information */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_ShadowStatus_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_ShadowStatus_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_ShadowStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_ShadowStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5_STATUS_pixeng_constframe5_ShadowStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5cfg_constframe5_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5cfg_constframe5_LockUnlock_SHIFT (0U)
/*! pixeng_constframe5cfg_constframe5_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5cfg_constframe5_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5cfg_constframe5_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKUNLOCK_pixeng_constframe5cfg_constframe5_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_LOCKSTATUS_pixeng_constframe5cfg_constframe5_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_CONSTFRAME5CFG_CONSTFRAME5_STATUS - Status information for pixel engine configuration of constframe5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_STATUS_pixeng_constframe5cfg_constframe5_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_STATUS_pixeng_constframe5cfg_constframe5_sel_SHIFT (16U)
/*! pixeng_constframe5cfg_constframe5_sel
 *  0b000..constframe5 module is not used
 *  0b001..constframe5 module is used from store9 processing path
 *  0b010..constframe5 module is used from extdst0 processing path
 *  0b011..constframe5 module is used from extdst4 processing path
 *  0b100..constframe5 module is used from extdst1 processing path
 *  0b101..constframe5 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_STATUS_pixeng_constframe5cfg_constframe5_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_STATUS_pixeng_constframe5cfg_constframe5_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_CONSTFRAME5CFG_CONSTFRAME5_STATUS_pixeng_constframe5cfg_constframe5_sel_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKUNLOCK_pixeng_extdst1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKUNLOCK_pixeng_extdst1_LockUnlock_SHIFT (0U)
/*! pixeng_extdst1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKUNLOCK_pixeng_extdst1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKUNLOCK_pixeng_extdst1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKUNLOCK_pixeng_extdst1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_LOCKSTATUS_pixeng_extdst1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_STATICCONTROL - External Destination static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_KICK_MODE_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_KICK_MODE_SHIFT (8U)
/*! pixeng_extdst1_KICK_MODE
 *  0b0..kick generation by KICK field only
 *  0b1..kick signal from external allowed
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_KICK_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_KICK_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_KICK_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_PerfCountMode_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_PerfCountMode_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_PerfCountMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_PerfCountMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_STATICCONTROL_pixeng_extdst1_PerfCountMode_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_CONTROL - External Destination shadowed control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROL_pixeng_extdst1_GammaApplyEnable_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROL_pixeng_extdst1_GammaApplyEnable_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROL_pixeng_extdst1_GammaApplyEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROL_pixeng_extdst1_GammaApplyEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROL_pixeng_extdst1_GammaApplyEnable_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_SOFTWAREKICK - External Destination software kick */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_SOFTWAREKICK_pixeng_extdst1_KICK_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_SOFTWAREKICK_pixeng_extdst1_KICK_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_SOFTWAREKICK_pixeng_extdst1_KICK(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_SOFTWAREKICK_pixeng_extdst1_KICK_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_SOFTWAREKICK_pixeng_extdst1_KICK_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_STATUS - External Destination Unit current status */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATUS_pixeng_extdst1_CNT_ERR_STS_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATUS_pixeng_extdst1_CNT_ERR_STS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_STATUS_pixeng_extdst1_CNT_ERR_STS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_STATUS_pixeng_extdst1_CNT_ERR_STS_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_STATUS_pixeng_extdst1_CNT_ERR_STS_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_CONTROLWORD - Value of last received control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROLWORD_pixeng_extdst1_CW_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROLWORD_pixeng_extdst1_CW_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROLWORD_pixeng_extdst1_CW_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROLWORD_pixeng_extdst1_CW_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_CONTROLWORD_pixeng_extdst1_CW_VAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_CURPIXELCNT - pixel count of currently running frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_CURPIXELCNT_pixeng_extdst1_C_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_LASTPIXELCNT - pixel count between last two control words */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_LASTPIXELCNT_pixeng_extdst1_L_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1_PERFCOUNTER - Performance counter result */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1_PERFCOUNTER_pixeng_extdst1_PerfResult_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_PERFCOUNTER_pixeng_extdst1_PerfResult_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1_PERFCOUNTER_pixeng_extdst1_PerfResult(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1_PERFCOUNTER_pixeng_extdst1_PerfResult_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1_PERFCOUNTER_pixeng_extdst1_PerfResult_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1CFG_EXTDST1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKUNLOCK_pixeng_extdst1cfg_extdst1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKUNLOCK_pixeng_extdst1cfg_extdst1_LockUnlock_SHIFT (0U)
/*! pixeng_extdst1cfg_extdst1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKUNLOCK_pixeng_extdst1cfg_extdst1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKUNLOCK_pixeng_extdst1cfg_extdst1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKUNLOCK_pixeng_extdst1cfg_extdst1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_LOCKSTATUS_pixeng_extdst1cfg_extdst1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1CFG_EXTDST1_STATIC - Static pixel engine configuration for extdst1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_powerdown_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_powerdown_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_powerdown(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_powerdown_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_powerdown_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_Sync_Mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_Sync_Mode_SHIFT (8U)
/*! pixeng_extdst1cfg_extdst1_Sync_Mode
 *  0b0..Reconfig pipeline after explicit trigger
 *  0b1..Reconfig pipeline after every kick when idle
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_Sync_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_Sync_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_Sync_Mode_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_SW_Reset_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_SW_Reset_SHIFT (11U)
/*! pixeng_extdst1cfg_extdst1_SW_Reset
 *  0b0..Normal Operation
 *  0b1..Software Reset
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_SW_Reset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_SW_Reset_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_SW_Reset_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_div_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_div_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_div(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_div_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATIC_pixeng_extdst1cfg_extdst1_div_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1CFG_EXTDST1_DYNAMIC - Dynamic pixel engine configuration for extdst1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_DYNAMIC_pixeng_extdst1cfg_extdst1_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_DYNAMIC_pixeng_extdst1cfg_extdst1_src_sel_SHIFT (0U)
/*! pixeng_extdst1cfg_extdst1_src_sel
 *  0b000000..Unit extdst1 input port src is disabled
 *  0b010100..Unit extdst1 input port src is connected to output of unit layerblend1
 *  0b010101..Unit extdst1 input port src is connected to output of unit layerblend2
 *  0b010110..Unit extdst1 input port src is connected to output of unit layerblend3
 *  0b010111..Unit extdst1 input port src is connected to output of unit layerblend4
 *  0b011000..Unit extdst1 input port src is connected to output of unit layerblend5
 *  0b011001..Unit extdst1 input port src is connected to output of unit layerblend6
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_DYNAMIC_pixeng_extdst1cfg_extdst1_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_DYNAMIC_pixeng_extdst1cfg_extdst1_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_DYNAMIC_pixeng_extdst1cfg_extdst1_src_sel_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1CFG_EXTDST1_REQUEST - ShadowLoadRequest register for endpoint extdst1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_sel_ShdLdReq_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_sel_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_sel_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_sel_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_sel_ShdLdReq_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_ShdLdReq_MASK (0x1FFFEU)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_ShdLdReq_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_REQUEST_pixeng_extdst1cfg_extdst1_ShdLdReq_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1CFG_EXTDST1_TRIGGER - Trigger bits for pixel engine configuration of extdst1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_Sync_Trigger_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_Sync_Trigger_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_Sync_Trigger(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_Sync_Trigger_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_Sync_Trigger_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_trigger_sequence_complete_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_trigger_sequence_complete_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_trigger_sequence_complete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_trigger_sequence_complete_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_TRIGGER_pixeng_extdst1cfg_extdst1_trigger_sequence_complete_MASK)
/*! @} */

/*! @name PIXENG_EXTDST1CFG_EXTDST1_STATUS - Status information for pixel engine configuration of extdst1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_pipeline_status_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_pipeline_status_SHIFT (0U)
/*! pixeng_extdst1cfg_extdst1_pipeline_status
 *  0b00..Pipeline with endpoint extdst1 is empty
 *  0b01..Pipeline with endpoint extdst1 is currently processing one operation
 *  0b10..Pipeline with endpoint extdst1 is currently processing one operation with a second one already kicked to be processed afterwards
 *  0b11..reserved
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_pipeline_status(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_pipeline_status_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_pipeline_status_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_sync_busy_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_sync_busy_SHIFT (8U)
/*! pixeng_extdst1cfg_extdst1_sync_busy
 *  0b0..extdst1 synchronizer is idle
 *  0b1..extdst1 synchronizer is busy
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_sync_busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_sync_busy_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST1CFG_EXTDST1_STATUS_pixeng_extdst1cfg_extdst1_sync_busy_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKUNLOCK_pixeng_extdst5_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKUNLOCK_pixeng_extdst5_LockUnlock_SHIFT (0U)
/*! pixeng_extdst5_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKUNLOCK_pixeng_extdst5_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKUNLOCK_pixeng_extdst5_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKUNLOCK_pixeng_extdst5_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_LOCKSTATUS_pixeng_extdst5_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_STATICCONTROL - External Destination static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_KICK_MODE_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_KICK_MODE_SHIFT (8U)
/*! pixeng_extdst5_KICK_MODE
 *  0b0..kick generation by KICK field only
 *  0b1..kick signal from external allowed
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_KICK_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_KICK_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_KICK_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_PerfCountMode_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_PerfCountMode_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_PerfCountMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_PerfCountMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_STATICCONTROL_pixeng_extdst5_PerfCountMode_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_CONTROL - External Destination shadowed control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROL_pixeng_extdst5_GammaApplyEnable_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROL_pixeng_extdst5_GammaApplyEnable_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROL_pixeng_extdst5_GammaApplyEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROL_pixeng_extdst5_GammaApplyEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROL_pixeng_extdst5_GammaApplyEnable_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_SOFTWAREKICK - External Destination software kick */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_SOFTWAREKICK_pixeng_extdst5_KICK_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_SOFTWAREKICK_pixeng_extdst5_KICK_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_SOFTWAREKICK_pixeng_extdst5_KICK(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_SOFTWAREKICK_pixeng_extdst5_KICK_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_SOFTWAREKICK_pixeng_extdst5_KICK_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_STATUS - External Destination Unit current status */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATUS_pixeng_extdst5_CNT_ERR_STS_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATUS_pixeng_extdst5_CNT_ERR_STS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_STATUS_pixeng_extdst5_CNT_ERR_STS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_STATUS_pixeng_extdst5_CNT_ERR_STS_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_STATUS_pixeng_extdst5_CNT_ERR_STS_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_CONTROLWORD - Value of last received control word */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROLWORD_pixeng_extdst5_CW_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROLWORD_pixeng_extdst5_CW_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROLWORD_pixeng_extdst5_CW_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROLWORD_pixeng_extdst5_CW_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_CONTROLWORD_pixeng_extdst5_CW_VAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_CURPIXELCNT - pixel count of currently running frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_CURPIXELCNT_pixeng_extdst5_C_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_LASTPIXELCNT - pixel count between last two control words */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_XVAL_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_XVAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_XVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_XVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_XVAL_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_YVAL_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_YVAL_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_YVAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_YVAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_LASTPIXELCNT_pixeng_extdst5_L_YVAL_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5_PERFCOUNTER - Performance counter result */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5_PERFCOUNTER_pixeng_extdst5_PerfResult_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_PERFCOUNTER_pixeng_extdst5_PerfResult_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5_PERFCOUNTER_pixeng_extdst5_PerfResult(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5_PERFCOUNTER_pixeng_extdst5_PerfResult_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5_PERFCOUNTER_pixeng_extdst5_PerfResult_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5CFG_EXTDST5_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKUNLOCK_pixeng_extdst5cfg_extdst5_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKUNLOCK_pixeng_extdst5cfg_extdst5_LockUnlock_SHIFT (0U)
/*! pixeng_extdst5cfg_extdst5_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKUNLOCK_pixeng_extdst5cfg_extdst5_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKUNLOCK_pixeng_extdst5cfg_extdst5_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKUNLOCK_pixeng_extdst5cfg_extdst5_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_LOCKSTATUS_pixeng_extdst5cfg_extdst5_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5CFG_EXTDST5_STATIC - Static pixel engine configuration for extdst5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_powerdown_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_powerdown_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_powerdown(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_powerdown_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_powerdown_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_Sync_Mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_Sync_Mode_SHIFT (8U)
/*! pixeng_extdst5cfg_extdst5_Sync_Mode
 *  0b0..Reconfig pipeline after explicit trigger
 *  0b1..Reconfig pipeline after every kick when idle
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_Sync_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_Sync_Mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_Sync_Mode_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_SW_Reset_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_SW_Reset_SHIFT (11U)
/*! pixeng_extdst5cfg_extdst5_SW_Reset
 *  0b0..Normal Operation
 *  0b1..Software Reset
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_SW_Reset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_SW_Reset_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_SW_Reset_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_div_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_div_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_div(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_div_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATIC_pixeng_extdst5cfg_extdst5_div_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5CFG_EXTDST5_DYNAMIC - Dynamic pixel engine configuration for extdst5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_DYNAMIC_pixeng_extdst5cfg_extdst5_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_DYNAMIC_pixeng_extdst5cfg_extdst5_src_sel_SHIFT (0U)
/*! pixeng_extdst5cfg_extdst5_src_sel
 *  0b000000..Unit extdst5 input port src is disabled
 *  0b010100..Unit extdst5 input port src is connected to output of unit layerblend1
 *  0b010101..Unit extdst5 input port src is connected to output of unit layerblend2
 *  0b010110..Unit extdst5 input port src is connected to output of unit layerblend3
 *  0b010111..Unit extdst5 input port src is connected to output of unit layerblend4
 *  0b011000..Unit extdst5 input port src is connected to output of unit layerblend5
 *  0b011001..Unit extdst5 input port src is connected to output of unit layerblend6
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_DYNAMIC_pixeng_extdst5cfg_extdst5_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_DYNAMIC_pixeng_extdst5cfg_extdst5_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_DYNAMIC_pixeng_extdst5cfg_extdst5_src_sel_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5CFG_EXTDST5_REQUEST - ShadowLoadRequest register for endpoint extdst5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_sel_ShdLdReq_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_sel_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_sel_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_sel_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_sel_ShdLdReq_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_ShdLdReq_MASK (0x1FFFEU)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_ShdLdReq_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_REQUEST_pixeng_extdst5cfg_extdst5_ShdLdReq_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5CFG_EXTDST5_TRIGGER - Trigger bits for pixel engine configuration of extdst5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_Sync_Trigger_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_Sync_Trigger_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_Sync_Trigger(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_Sync_Trigger_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_Sync_Trigger_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_trigger_sequence_complete_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_trigger_sequence_complete_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_trigger_sequence_complete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_trigger_sequence_complete_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_TRIGGER_pixeng_extdst5cfg_extdst5_trigger_sequence_complete_MASK)
/*! @} */

/*! @name PIXENG_EXTDST5CFG_EXTDST5_STATUS - Status information for pixel engine configuration of extdst5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_pipeline_status_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_pipeline_status_SHIFT (0U)
/*! pixeng_extdst5cfg_extdst5_pipeline_status
 *  0b00..Pipeline with endpoint extdst5 is empty
 *  0b01..Pipeline with endpoint extdst5 is currently processing one operation
 *  0b10..Pipeline with endpoint extdst5 is currently processing one operation with a second one already kicked to be processed afterwards
 *  0b11..reserved
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_pipeline_status(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_pipeline_status_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_pipeline_status_MASK)

#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_sync_busy_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_sync_busy_SHIFT (8U)
/*! pixeng_extdst5cfg_extdst5_sync_busy
 *  0b0..extdst5 synchronizer is idle
 *  0b1..extdst5 synchronizer is busy
 */
#define DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_sync_busy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_sync_busy_SHIFT)) & DISPLAY_SEERIS_PIXENG_EXTDST5CFG_EXTDST5_STATUS_pixeng_extdst5cfg_extdst5_sync_busy_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdLdSel_MASK (0x6U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdLdSel_SHIFT (1U)
/*! pixeng_layerblend1_ShdLdSel
 *  0b00..Load shadows with shadow load token on primary input (background plane).
 *  0b01..Load shadows with shadow load token on secondary input (foreground plane).
 *  0b10..Load shadows with shadow load token on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdLdSel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdTokSel_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdTokSel_SHIFT (3U)
/*! pixeng_layerblend1_ShdTokSel
 *  0b00..When a token was received on the primary input (background plane).
 *  0b01..When a token was received on the secondary input (foreground plane).
 *  0b10..When a token was received on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_STATICCONTROL_pixeng_layerblend1_ShdTokSel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_CONTROL - Common control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_MODE_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_MODE_SHIFT (0U)
/*! pixeng_layerblend1_MODE
 *  0b0..Module is in neutral mode. Output is same as primary input.
 *  0b1..Module is in blending mode.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskEnable_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskEnable_SHIFT (2U)
/*! pixeng_layerblend1_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskMode_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskMode_SHIFT (4U)
/*! pixeng_layerblend1_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_AlphaMaskMode_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecLowPassEn_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecLowPassEn_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecLowPassEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecLowPassEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecLowPassEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecReplicateEn_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecReplicateEn_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecReplicateEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecReplicateEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecReplicateEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowEvenColDis_MASK (0x3C00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowEvenColDis_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowOddColDis_MASK (0x3C000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowOddColDis_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecEvenRowOddColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowEvenColDis_MASK (0x3C0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowEvenColDis_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowOddColDis_MASK (0x3C00000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowOddColDis_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_CONTROL_pixeng_layerblend1_SecOddRowOddColDis_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! pixeng_layerblend1_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_C_BLD_FUNC_SHIFT (4U)
/*! pixeng_layerblend1_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! pixeng_layerblend1_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_A_BLD_FUNC_SHIFT (12U)
/*! pixeng_layerblend1_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_BLENDCONTROL_pixeng_layerblend1_BlendAlpha_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_POSITION - Position of secondary (overlay) input frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_XPOS_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_XPOS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_XPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_XPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_XPOS_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_YPOS_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_YPOS_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_YPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_YPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_POSITION_pixeng_layerblend1_YPOS_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_PRIMCONTROLWORD - Value of last received primary (background) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_PRIMCONTROLWORD_pixeng_layerblend1_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_PRIMCONTROLWORD_pixeng_layerblend1_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_PRIMCONTROLWORD_pixeng_layerblend1_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_PRIMCONTROLWORD_pixeng_layerblend1_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_PRIMCONTROLWORD_pixeng_layerblend1_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1_SECCONTROLWORD - Value of last received secondary (overlay) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_SECCONTROLWORD_pixeng_layerblend1_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_SECCONTROLWORD_pixeng_layerblend1_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1_SECCONTROLWORD_pixeng_layerblend1_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1_SECCONTROLWORD_pixeng_layerblend1_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1_SECCONTROLWORD_pixeng_layerblend1_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1cfg_layerblend1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1cfg_layerblend1_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend1cfg_layerblend1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1cfg_layerblend1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1cfg_layerblend1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKUNLOCK_pixeng_layerblend1cfg_layerblend1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_LOCKSTATUS_pixeng_layerblend1cfg_layerblend1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC - Dynamic pixel engine configuration for layerblend1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_prim_sel_SHIFT (0U)
/*! pixeng_layerblend1cfg_layerblend1_prim_sel
 *  0b000000..Unit layerblend1 input port prim is disabled
 *  0b001100..Unit layerblend1 input port prim is connected to output of unit constframe0
 *  0b001101..Unit layerblend1 input port prim is connected to output of unit constframe4
 *  0b010000..Unit layerblend1 input port prim is connected to output of unit constframe1
 *  0b010001..Unit layerblend1 input port prim is connected to output of unit constframe5
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_sec_sel_SHIFT (8U)
/*! pixeng_layerblend1cfg_layerblend1_sec_sel
 *  0b000000..Unit layerblend1 input port sec is disabled
 *  0b000101..Unit layerblend1 input port sec is connected to output of unit fetchrot9
 *  0b011010..Unit layerblend1 input port sec is connected to output of unit fetchlayer0
 *  0b011011..Unit layerblend1 input port sec is connected to output of unit fetchlayer1
 *  0b011100..Unit layerblend1 input port sec is connected to output of unit fetchyuv3
 *  0b011101..Unit layerblend1 input port sec is connected to output of unit fetchyuv0
 *  0b011111..Unit layerblend1 input port sec is connected to output of unit fetchyuv1
 *  0b100001..Unit layerblend1 input port sec is connected to output of unit fetchyuv2
 *  0b100011..Unit layerblend1 input port sec is connected to output of unit matrix4
 *  0b100100..Unit layerblend1 input port sec is connected to output of unit hscaler4
 *  0b100101..Unit layerblend1 input port sec is connected to output of unit vscaler4
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_clken_SHIFT (24U)
/*! pixeng_layerblend1cfg_layerblend1_clken
 *  0b00..Clock for layerblend1 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for layerblend1 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_DYNAMIC_pixeng_layerblend1cfg_layerblend1_clken_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND1CFG_LAYERBLEND1_STATUS - Status information for pixel engine configuration of layerblend1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_STATUS_pixeng_layerblend1cfg_layerblend1_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_STATUS_pixeng_layerblend1cfg_layerblend1_sel_SHIFT (16U)
/*! pixeng_layerblend1cfg_layerblend1_sel
 *  0b000..layerblend1 module is not used
 *  0b001..layerblend1 module is used from store9 processing path
 *  0b010..layerblend1 module is used from extdst0 processing path
 *  0b011..layerblend1 module is used from extdst4 processing path
 *  0b100..layerblend1 module is used from extdst1 processing path
 *  0b101..layerblend1 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_STATUS_pixeng_layerblend1cfg_layerblend1_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_STATUS_pixeng_layerblend1cfg_layerblend1_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND1CFG_LAYERBLEND1_STATUS_pixeng_layerblend1cfg_layerblend1_sel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdLdSel_MASK (0x6U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdLdSel_SHIFT (1U)
/*! pixeng_layerblend2_ShdLdSel
 *  0b00..Load shadows with shadow load token on primary input (background plane).
 *  0b01..Load shadows with shadow load token on secondary input (foreground plane).
 *  0b10..Load shadows with shadow load token on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdLdSel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdTokSel_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdTokSel_SHIFT (3U)
/*! pixeng_layerblend2_ShdTokSel
 *  0b00..When a token was received on the primary input (background plane).
 *  0b01..When a token was received on the secondary input (foreground plane).
 *  0b10..When a token was received on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_STATICCONTROL_pixeng_layerblend2_ShdTokSel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_CONTROL - Common control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_MODE_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_MODE_SHIFT (0U)
/*! pixeng_layerblend2_MODE
 *  0b0..Module is in neutral mode. Output is same as primary input.
 *  0b1..Module is in blending mode.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskEnable_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskEnable_SHIFT (2U)
/*! pixeng_layerblend2_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskMode_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskMode_SHIFT (4U)
/*! pixeng_layerblend2_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_AlphaMaskMode_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecLowPassEn_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecLowPassEn_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecLowPassEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecLowPassEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecLowPassEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecReplicateEn_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecReplicateEn_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecReplicateEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecReplicateEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecReplicateEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowEvenColDis_MASK (0x3C00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowEvenColDis_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowOddColDis_MASK (0x3C000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowOddColDis_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecEvenRowOddColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowEvenColDis_MASK (0x3C0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowEvenColDis_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowOddColDis_MASK (0x3C00000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowOddColDis_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_CONTROL_pixeng_layerblend2_SecOddRowOddColDis_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! pixeng_layerblend2_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_C_BLD_FUNC_SHIFT (4U)
/*! pixeng_layerblend2_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! pixeng_layerblend2_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_A_BLD_FUNC_SHIFT (12U)
/*! pixeng_layerblend2_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_BLENDCONTROL_pixeng_layerblend2_BlendAlpha_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_POSITION - Position of secondary (overlay) input frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_XPOS_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_XPOS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_XPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_XPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_XPOS_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_YPOS_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_YPOS_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_YPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_YPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_POSITION_pixeng_layerblend2_YPOS_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_PRIMCONTROLWORD - Value of last received primary (background) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_PRIMCONTROLWORD_pixeng_layerblend2_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_PRIMCONTROLWORD_pixeng_layerblend2_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_PRIMCONTROLWORD_pixeng_layerblend2_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_PRIMCONTROLWORD_pixeng_layerblend2_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_PRIMCONTROLWORD_pixeng_layerblend2_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2_SECCONTROLWORD - Value of last received secondary (overlay) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_SECCONTROLWORD_pixeng_layerblend2_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_SECCONTROLWORD_pixeng_layerblend2_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2_SECCONTROLWORD_pixeng_layerblend2_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2_SECCONTROLWORD_pixeng_layerblend2_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2_SECCONTROLWORD_pixeng_layerblend2_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2cfg_layerblend2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2cfg_layerblend2_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend2cfg_layerblend2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2cfg_layerblend2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2cfg_layerblend2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKUNLOCK_pixeng_layerblend2cfg_layerblend2_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_LOCKSTATUS_pixeng_layerblend2cfg_layerblend2_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC - Dynamic pixel engine configuration for layerblend2 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_prim_sel_SHIFT (0U)
/*! pixeng_layerblend2cfg_layerblend2_prim_sel
 *  0b000000..Unit layerblend2 input port prim is disabled
 *  0b001100..Unit layerblend2 input port prim is connected to output of unit constframe0
 *  0b001101..Unit layerblend2 input port prim is connected to output of unit constframe4
 *  0b010000..Unit layerblend2 input port prim is connected to output of unit constframe1
 *  0b010001..Unit layerblend2 input port prim is connected to output of unit constframe5
 *  0b010100..Unit layerblend2 input port prim is connected to output of unit layerblend1
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_sec_sel_SHIFT (8U)
/*! pixeng_layerblend2cfg_layerblend2_sec_sel
 *  0b000000..Unit layerblend2 input port sec is disabled
 *  0b000101..Unit layerblend2 input port sec is connected to output of unit fetchrot9
 *  0b011010..Unit layerblend2 input port sec is connected to output of unit fetchlayer0
 *  0b011011..Unit layerblend2 input port sec is connected to output of unit fetchlayer1
 *  0b011100..Unit layerblend2 input port sec is connected to output of unit fetchyuv3
 *  0b011101..Unit layerblend2 input port sec is connected to output of unit fetchyuv0
 *  0b011111..Unit layerblend2 input port sec is connected to output of unit fetchyuv1
 *  0b100001..Unit layerblend2 input port sec is connected to output of unit fetchyuv2
 *  0b100011..Unit layerblend2 input port sec is connected to output of unit matrix4
 *  0b100100..Unit layerblend2 input port sec is connected to output of unit hscaler4
 *  0b100101..Unit layerblend2 input port sec is connected to output of unit vscaler4
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_clken_SHIFT (24U)
/*! pixeng_layerblend2cfg_layerblend2_clken
 *  0b00..Clock for layerblend2 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for layerblend2 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_DYNAMIC_pixeng_layerblend2cfg_layerblend2_clken_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND2CFG_LAYERBLEND2_STATUS - Status information for pixel engine configuration of layerblend2 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_STATUS_pixeng_layerblend2cfg_layerblend2_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_STATUS_pixeng_layerblend2cfg_layerblend2_sel_SHIFT (16U)
/*! pixeng_layerblend2cfg_layerblend2_sel
 *  0b000..layerblend2 module is not used
 *  0b001..layerblend2 module is used from store9 processing path
 *  0b010..layerblend2 module is used from extdst0 processing path
 *  0b011..layerblend2 module is used from extdst4 processing path
 *  0b100..layerblend2 module is used from extdst1 processing path
 *  0b101..layerblend2 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_STATUS_pixeng_layerblend2cfg_layerblend2_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_STATUS_pixeng_layerblend2cfg_layerblend2_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND2CFG_LAYERBLEND2_STATUS_pixeng_layerblend2cfg_layerblend2_sel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend3_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdLdSel_MASK (0x6U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdLdSel_SHIFT (1U)
/*! pixeng_layerblend3_ShdLdSel
 *  0b00..Load shadows with shadow load token on primary input (background plane).
 *  0b01..Load shadows with shadow load token on secondary input (foreground plane).
 *  0b10..Load shadows with shadow load token on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdLdSel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdTokSel_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdTokSel_SHIFT (3U)
/*! pixeng_layerblend3_ShdTokSel
 *  0b00..When a token was received on the primary input (background plane).
 *  0b01..When a token was received on the secondary input (foreground plane).
 *  0b10..When a token was received on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_STATICCONTROL_pixeng_layerblend3_ShdTokSel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_CONTROL - Common control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_MODE_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_MODE_SHIFT (0U)
/*! pixeng_layerblend3_MODE
 *  0b0..Module is in neutral mode. Output is same as primary input.
 *  0b1..Module is in blending mode.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskEnable_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskEnable_SHIFT (2U)
/*! pixeng_layerblend3_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskMode_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskMode_SHIFT (4U)
/*! pixeng_layerblend3_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_AlphaMaskMode_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecLowPassEn_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecLowPassEn_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecLowPassEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecLowPassEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecLowPassEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecReplicateEn_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecReplicateEn_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecReplicateEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecReplicateEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecReplicateEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowEvenColDis_MASK (0x3C00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowEvenColDis_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowOddColDis_MASK (0x3C000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowOddColDis_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecEvenRowOddColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowEvenColDis_MASK (0x3C0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowEvenColDis_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowOddColDis_MASK (0x3C00000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowOddColDis_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_CONTROL_pixeng_layerblend3_SecOddRowOddColDis_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! pixeng_layerblend3_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_C_BLD_FUNC_SHIFT (4U)
/*! pixeng_layerblend3_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! pixeng_layerblend3_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_A_BLD_FUNC_SHIFT (12U)
/*! pixeng_layerblend3_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_BLENDCONTROL_pixeng_layerblend3_BlendAlpha_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_POSITION - Position of secondary (overlay) input frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_XPOS_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_XPOS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_XPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_XPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_XPOS_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_YPOS_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_YPOS_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_YPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_YPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_POSITION_pixeng_layerblend3_YPOS_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_PRIMCONTROLWORD - Value of last received primary (background) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_PRIMCONTROLWORD_pixeng_layerblend3_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_PRIMCONTROLWORD_pixeng_layerblend3_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_PRIMCONTROLWORD_pixeng_layerblend3_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_PRIMCONTROLWORD_pixeng_layerblend3_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_PRIMCONTROLWORD_pixeng_layerblend3_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3_SECCONTROLWORD - Value of last received secondary (overlay) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_SECCONTROLWORD_pixeng_layerblend3_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_SECCONTROLWORD_pixeng_layerblend3_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3_SECCONTROLWORD_pixeng_layerblend3_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3_SECCONTROLWORD_pixeng_layerblend3_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3_SECCONTROLWORD_pixeng_layerblend3_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3cfg_layerblend3_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3cfg_layerblend3_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend3cfg_layerblend3_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3cfg_layerblend3_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3cfg_layerblend3_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKUNLOCK_pixeng_layerblend3cfg_layerblend3_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_LOCKSTATUS_pixeng_layerblend3cfg_layerblend3_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC - Dynamic pixel engine configuration for layerblend3 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_prim_sel_SHIFT (0U)
/*! pixeng_layerblend3cfg_layerblend3_prim_sel
 *  0b000000..Unit layerblend3 input port prim is disabled
 *  0b001100..Unit layerblend3 input port prim is connected to output of unit constframe0
 *  0b001101..Unit layerblend3 input port prim is connected to output of unit constframe4
 *  0b010000..Unit layerblend3 input port prim is connected to output of unit constframe1
 *  0b010001..Unit layerblend3 input port prim is connected to output of unit constframe5
 *  0b010100..Unit layerblend3 input port prim is connected to output of unit layerblend1
 *  0b010101..Unit layerblend3 input port prim is connected to output of unit layerblend2
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_sec_sel_SHIFT (8U)
/*! pixeng_layerblend3cfg_layerblend3_sec_sel
 *  0b000000..Unit layerblend3 input port sec is disabled
 *  0b000101..Unit layerblend3 input port sec is connected to output of unit fetchrot9
 *  0b011010..Unit layerblend3 input port sec is connected to output of unit fetchlayer0
 *  0b011011..Unit layerblend3 input port sec is connected to output of unit fetchlayer1
 *  0b011100..Unit layerblend3 input port sec is connected to output of unit fetchyuv3
 *  0b011101..Unit layerblend3 input port sec is connected to output of unit fetchyuv0
 *  0b011111..Unit layerblend3 input port sec is connected to output of unit fetchyuv1
 *  0b100001..Unit layerblend3 input port sec is connected to output of unit fetchyuv2
 *  0b100011..Unit layerblend3 input port sec is connected to output of unit matrix4
 *  0b100100..Unit layerblend3 input port sec is connected to output of unit hscaler4
 *  0b100101..Unit layerblend3 input port sec is connected to output of unit vscaler4
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_clken_SHIFT (24U)
/*! pixeng_layerblend3cfg_layerblend3_clken
 *  0b00..Clock for layerblend3 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for layerblend3 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_DYNAMIC_pixeng_layerblend3cfg_layerblend3_clken_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND3CFG_LAYERBLEND3_STATUS - Status information for pixel engine configuration of layerblend3 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_STATUS_pixeng_layerblend3cfg_layerblend3_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_STATUS_pixeng_layerblend3cfg_layerblend3_sel_SHIFT (16U)
/*! pixeng_layerblend3cfg_layerblend3_sel
 *  0b000..layerblend3 module is not used
 *  0b001..layerblend3 module is used from store9 processing path
 *  0b010..layerblend3 module is used from extdst0 processing path
 *  0b011..layerblend3 module is used from extdst4 processing path
 *  0b100..layerblend3 module is used from extdst1 processing path
 *  0b101..layerblend3 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_STATUS_pixeng_layerblend3cfg_layerblend3_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_STATUS_pixeng_layerblend3cfg_layerblend3_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND3CFG_LAYERBLEND3_STATUS_pixeng_layerblend3cfg_layerblend3_sel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdLdSel_MASK (0x6U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdLdSel_SHIFT (1U)
/*! pixeng_layerblend4_ShdLdSel
 *  0b00..Load shadows with shadow load token on primary input (background plane).
 *  0b01..Load shadows with shadow load token on secondary input (foreground plane).
 *  0b10..Load shadows with shadow load token on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdLdSel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdTokSel_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdTokSel_SHIFT (3U)
/*! pixeng_layerblend4_ShdTokSel
 *  0b00..When a token was received on the primary input (background plane).
 *  0b01..When a token was received on the secondary input (foreground plane).
 *  0b10..When a token was received on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_STATICCONTROL_pixeng_layerblend4_ShdTokSel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_CONTROL - Common control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_MODE_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_MODE_SHIFT (0U)
/*! pixeng_layerblend4_MODE
 *  0b0..Module is in neutral mode. Output is same as primary input.
 *  0b1..Module is in blending mode.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskEnable_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskEnable_SHIFT (2U)
/*! pixeng_layerblend4_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskMode_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskMode_SHIFT (4U)
/*! pixeng_layerblend4_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_AlphaMaskMode_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecLowPassEn_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecLowPassEn_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecLowPassEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecLowPassEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecLowPassEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecReplicateEn_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecReplicateEn_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecReplicateEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecReplicateEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecReplicateEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowEvenColDis_MASK (0x3C00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowEvenColDis_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowOddColDis_MASK (0x3C000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowOddColDis_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecEvenRowOddColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowEvenColDis_MASK (0x3C0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowEvenColDis_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowOddColDis_MASK (0x3C00000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowOddColDis_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_CONTROL_pixeng_layerblend4_SecOddRowOddColDis_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! pixeng_layerblend4_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_C_BLD_FUNC_SHIFT (4U)
/*! pixeng_layerblend4_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! pixeng_layerblend4_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_A_BLD_FUNC_SHIFT (12U)
/*! pixeng_layerblend4_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_BLENDCONTROL_pixeng_layerblend4_BlendAlpha_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_POSITION - Position of secondary (overlay) input frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_XPOS_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_XPOS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_XPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_XPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_XPOS_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_YPOS_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_YPOS_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_YPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_YPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_POSITION_pixeng_layerblend4_YPOS_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_PRIMCONTROLWORD - Value of last received primary (background) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_PRIMCONTROLWORD_pixeng_layerblend4_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_PRIMCONTROLWORD_pixeng_layerblend4_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_PRIMCONTROLWORD_pixeng_layerblend4_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_PRIMCONTROLWORD_pixeng_layerblend4_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_PRIMCONTROLWORD_pixeng_layerblend4_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4_SECCONTROLWORD - Value of last received secondary (overlay) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_SECCONTROLWORD_pixeng_layerblend4_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_SECCONTROLWORD_pixeng_layerblend4_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4_SECCONTROLWORD_pixeng_layerblend4_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4_SECCONTROLWORD_pixeng_layerblend4_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4_SECCONTROLWORD_pixeng_layerblend4_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4cfg_layerblend4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4cfg_layerblend4_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend4cfg_layerblend4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4cfg_layerblend4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4cfg_layerblend4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKUNLOCK_pixeng_layerblend4cfg_layerblend4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_LOCKSTATUS_pixeng_layerblend4cfg_layerblend4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC - Dynamic pixel engine configuration for layerblend4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_prim_sel_SHIFT (0U)
/*! pixeng_layerblend4cfg_layerblend4_prim_sel
 *  0b000000..Unit layerblend4 input port prim is disabled
 *  0b001100..Unit layerblend4 input port prim is connected to output of unit constframe0
 *  0b001101..Unit layerblend4 input port prim is connected to output of unit constframe4
 *  0b010000..Unit layerblend4 input port prim is connected to output of unit constframe1
 *  0b010001..Unit layerblend4 input port prim is connected to output of unit constframe5
 *  0b010100..Unit layerblend4 input port prim is connected to output of unit layerblend1
 *  0b010101..Unit layerblend4 input port prim is connected to output of unit layerblend2
 *  0b010110..Unit layerblend4 input port prim is connected to output of unit layerblend3
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_sec_sel_SHIFT (8U)
/*! pixeng_layerblend4cfg_layerblend4_sec_sel
 *  0b000000..Unit layerblend4 input port sec is disabled
 *  0b000101..Unit layerblend4 input port sec is connected to output of unit fetchrot9
 *  0b011010..Unit layerblend4 input port sec is connected to output of unit fetchlayer0
 *  0b011011..Unit layerblend4 input port sec is connected to output of unit fetchlayer1
 *  0b011100..Unit layerblend4 input port sec is connected to output of unit fetchyuv3
 *  0b011101..Unit layerblend4 input port sec is connected to output of unit fetchyuv0
 *  0b011111..Unit layerblend4 input port sec is connected to output of unit fetchyuv1
 *  0b100001..Unit layerblend4 input port sec is connected to output of unit fetchyuv2
 *  0b100011..Unit layerblend4 input port sec is connected to output of unit matrix4
 *  0b100100..Unit layerblend4 input port sec is connected to output of unit hscaler4
 *  0b100101..Unit layerblend4 input port sec is connected to output of unit vscaler4
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_clken_SHIFT (24U)
/*! pixeng_layerblend4cfg_layerblend4_clken
 *  0b00..Clock for layerblend4 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for layerblend4 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_DYNAMIC_pixeng_layerblend4cfg_layerblend4_clken_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND4CFG_LAYERBLEND4_STATUS - Status information for pixel engine configuration of layerblend4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_STATUS_pixeng_layerblend4cfg_layerblend4_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_STATUS_pixeng_layerblend4cfg_layerblend4_sel_SHIFT (16U)
/*! pixeng_layerblend4cfg_layerblend4_sel
 *  0b000..layerblend4 module is not used
 *  0b001..layerblend4 module is used from store9 processing path
 *  0b010..layerblend4 module is used from extdst0 processing path
 *  0b011..layerblend4 module is used from extdst4 processing path
 *  0b100..layerblend4 module is used from extdst1 processing path
 *  0b101..layerblend4 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_STATUS_pixeng_layerblend4cfg_layerblend4_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_STATUS_pixeng_layerblend4cfg_layerblend4_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND4CFG_LAYERBLEND4_STATUS_pixeng_layerblend4cfg_layerblend4_sel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend5_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdLdSel_MASK (0x6U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdLdSel_SHIFT (1U)
/*! pixeng_layerblend5_ShdLdSel
 *  0b00..Load shadows with shadow load token on primary input (background plane).
 *  0b01..Load shadows with shadow load token on secondary input (foreground plane).
 *  0b10..Load shadows with shadow load token on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdLdSel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdTokSel_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdTokSel_SHIFT (3U)
/*! pixeng_layerblend5_ShdTokSel
 *  0b00..When a token was received on the primary input (background plane).
 *  0b01..When a token was received on the secondary input (foreground plane).
 *  0b10..When a token was received on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_STATICCONTROL_pixeng_layerblend5_ShdTokSel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_CONTROL - Common control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_MODE_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_MODE_SHIFT (0U)
/*! pixeng_layerblend5_MODE
 *  0b0..Module is in neutral mode. Output is same as primary input.
 *  0b1..Module is in blending mode.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskEnable_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskEnable_SHIFT (2U)
/*! pixeng_layerblend5_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskMode_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskMode_SHIFT (4U)
/*! pixeng_layerblend5_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_AlphaMaskMode_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecLowPassEn_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecLowPassEn_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecLowPassEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecLowPassEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecLowPassEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecReplicateEn_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecReplicateEn_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecReplicateEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecReplicateEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecReplicateEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowEvenColDis_MASK (0x3C00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowEvenColDis_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowOddColDis_MASK (0x3C000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowOddColDis_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecEvenRowOddColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowEvenColDis_MASK (0x3C0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowEvenColDis_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowOddColDis_MASK (0x3C00000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowOddColDis_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_CONTROL_pixeng_layerblend5_SecOddRowOddColDis_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! pixeng_layerblend5_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_C_BLD_FUNC_SHIFT (4U)
/*! pixeng_layerblend5_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! pixeng_layerblend5_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_A_BLD_FUNC_SHIFT (12U)
/*! pixeng_layerblend5_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_BLENDCONTROL_pixeng_layerblend5_BlendAlpha_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_POSITION - Position of secondary (overlay) input frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_XPOS_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_XPOS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_XPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_XPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_XPOS_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_YPOS_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_YPOS_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_YPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_YPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_POSITION_pixeng_layerblend5_YPOS_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_PRIMCONTROLWORD - Value of last received primary (background) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_PRIMCONTROLWORD_pixeng_layerblend5_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_PRIMCONTROLWORD_pixeng_layerblend5_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_PRIMCONTROLWORD_pixeng_layerblend5_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_PRIMCONTROLWORD_pixeng_layerblend5_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_PRIMCONTROLWORD_pixeng_layerblend5_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5_SECCONTROLWORD - Value of last received secondary (overlay) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_SECCONTROLWORD_pixeng_layerblend5_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_SECCONTROLWORD_pixeng_layerblend5_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5_SECCONTROLWORD_pixeng_layerblend5_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5_SECCONTROLWORD_pixeng_layerblend5_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5_SECCONTROLWORD_pixeng_layerblend5_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5cfg_layerblend5_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5cfg_layerblend5_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend5cfg_layerblend5_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5cfg_layerblend5_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5cfg_layerblend5_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKUNLOCK_pixeng_layerblend5cfg_layerblend5_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_LOCKSTATUS_pixeng_layerblend5cfg_layerblend5_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC - Dynamic pixel engine configuration for layerblend5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_prim_sel_SHIFT (0U)
/*! pixeng_layerblend5cfg_layerblend5_prim_sel
 *  0b000000..Unit layerblend5 input port prim is disabled
 *  0b001100..Unit layerblend5 input port prim is connected to output of unit constframe0
 *  0b001101..Unit layerblend5 input port prim is connected to output of unit constframe4
 *  0b010000..Unit layerblend5 input port prim is connected to output of unit constframe1
 *  0b010001..Unit layerblend5 input port prim is connected to output of unit constframe5
 *  0b010100..Unit layerblend5 input port prim is connected to output of unit layerblend1
 *  0b010101..Unit layerblend5 input port prim is connected to output of unit layerblend2
 *  0b010110..Unit layerblend5 input port prim is connected to output of unit layerblend3
 *  0b010111..Unit layerblend5 input port prim is connected to output of unit layerblend4
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_sec_sel_SHIFT (8U)
/*! pixeng_layerblend5cfg_layerblend5_sec_sel
 *  0b000000..Unit layerblend5 input port sec is disabled
 *  0b000101..Unit layerblend5 input port sec is connected to output of unit fetchrot9
 *  0b011010..Unit layerblend5 input port sec is connected to output of unit fetchlayer0
 *  0b011011..Unit layerblend5 input port sec is connected to output of unit fetchlayer1
 *  0b011100..Unit layerblend5 input port sec is connected to output of unit fetchyuv3
 *  0b011101..Unit layerblend5 input port sec is connected to output of unit fetchyuv0
 *  0b011111..Unit layerblend5 input port sec is connected to output of unit fetchyuv1
 *  0b100001..Unit layerblend5 input port sec is connected to output of unit fetchyuv2
 *  0b100011..Unit layerblend5 input port sec is connected to output of unit matrix4
 *  0b100100..Unit layerblend5 input port sec is connected to output of unit hscaler4
 *  0b100101..Unit layerblend5 input port sec is connected to output of unit vscaler4
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_clken_SHIFT (24U)
/*! pixeng_layerblend5cfg_layerblend5_clken
 *  0b00..Clock for layerblend5 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for layerblend5 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_DYNAMIC_pixeng_layerblend5cfg_layerblend5_clken_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND5CFG_LAYERBLEND5_STATUS - Status information for pixel engine configuration of layerblend5 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_STATUS_pixeng_layerblend5cfg_layerblend5_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_STATUS_pixeng_layerblend5cfg_layerblend5_sel_SHIFT (16U)
/*! pixeng_layerblend5cfg_layerblend5_sel
 *  0b000..layerblend5 module is not used
 *  0b001..layerblend5 module is used from store9 processing path
 *  0b010..layerblend5 module is used from extdst0 processing path
 *  0b011..layerblend5 module is used from extdst4 processing path
 *  0b100..layerblend5 module is used from extdst1 processing path
 *  0b101..layerblend5 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_STATUS_pixeng_layerblend5cfg_layerblend5_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_STATUS_pixeng_layerblend5cfg_layerblend5_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND5CFG_LAYERBLEND5_STATUS_pixeng_layerblend5cfg_layerblend5_sel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend6_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdLdSel_MASK (0x6U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdLdSel_SHIFT (1U)
/*! pixeng_layerblend6_ShdLdSel
 *  0b00..Load shadows with shadow load token on primary input (background plane).
 *  0b01..Load shadows with shadow load token on secondary input (foreground plane).
 *  0b10..Load shadows with shadow load token on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdLdSel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdTokSel_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdTokSel_SHIFT (3U)
/*! pixeng_layerblend6_ShdTokSel
 *  0b00..When a token was received on the primary input (background plane).
 *  0b01..When a token was received on the secondary input (foreground plane).
 *  0b10..When a token was received on any input.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_STATICCONTROL_pixeng_layerblend6_ShdTokSel_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_CONTROL - Common control settings. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_MODE_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_MODE_SHIFT (0U)
/*! pixeng_layerblend6_MODE
 *  0b0..Module is in neutral mode. Output is same as primary input.
 *  0b1..Module is in blending mode.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskEnable_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskEnable_SHIFT (2U)
/*! pixeng_layerblend6_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskMode_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskMode_SHIFT (4U)
/*! pixeng_layerblend6_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_AlphaMaskMode_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecLowPassEn_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecLowPassEn_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecLowPassEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecLowPassEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecLowPassEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecReplicateEn_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecReplicateEn_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecReplicateEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecReplicateEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecReplicateEn_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowEvenColDis_MASK (0x3C00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowEvenColDis_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowOddColDis_MASK (0x3C000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowOddColDis_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecEvenRowOddColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowEvenColDis_MASK (0x3C0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowEvenColDis_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowEvenColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowEvenColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowEvenColDis_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowOddColDis_MASK (0x3C00000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowOddColDis_SHIFT (22U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowOddColDis(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowOddColDis_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_CONTROL_pixeng_layerblend6_SecOddRowOddColDis_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! pixeng_layerblend6_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_C_BLD_FUNC_SHIFT (4U)
/*! pixeng_layerblend6_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! pixeng_layerblend6_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_A_BLD_FUNC_SHIFT (12U)
/*! pixeng_layerblend6_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_BLENDCONTROL_pixeng_layerblend6_BlendAlpha_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_POSITION - Position of secondary (overlay) input frame */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_XPOS_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_XPOS_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_XPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_XPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_XPOS_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_YPOS_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_YPOS_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_YPOS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_YPOS_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_POSITION_pixeng_layerblend6_YPOS_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_PRIMCONTROLWORD - Value of last received primary (background) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_PRIMCONTROLWORD_pixeng_layerblend6_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_PRIMCONTROLWORD_pixeng_layerblend6_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_PRIMCONTROLWORD_pixeng_layerblend6_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_PRIMCONTROLWORD_pixeng_layerblend6_P_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_PRIMCONTROLWORD_pixeng_layerblend6_P_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6_SECCONTROLWORD - Value of last received secondary (overlay) control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_SECCONTROLWORD_pixeng_layerblend6_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_SECCONTROLWORD_pixeng_layerblend6_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6_SECCONTROLWORD_pixeng_layerblend6_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6_SECCONTROLWORD_pixeng_layerblend6_S_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6_SECCONTROLWORD_pixeng_layerblend6_S_VAL_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6cfg_layerblend6_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6cfg_layerblend6_LockUnlock_SHIFT (0U)
/*! pixeng_layerblend6cfg_layerblend6_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6cfg_layerblend6_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6cfg_layerblend6_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKUNLOCK_pixeng_layerblend6cfg_layerblend6_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_LOCKSTATUS_pixeng_layerblend6cfg_layerblend6_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC - Dynamic pixel engine configuration for layerblend6 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_prim_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_prim_sel_SHIFT (0U)
/*! pixeng_layerblend6cfg_layerblend6_prim_sel
 *  0b000000..Unit layerblend6 input port prim is disabled
 *  0b001100..Unit layerblend6 input port prim is connected to output of unit constframe0
 *  0b001101..Unit layerblend6 input port prim is connected to output of unit constframe4
 *  0b010000..Unit layerblend6 input port prim is connected to output of unit constframe1
 *  0b010001..Unit layerblend6 input port prim is connected to output of unit constframe5
 *  0b010100..Unit layerblend6 input port prim is connected to output of unit layerblend1
 *  0b010101..Unit layerblend6 input port prim is connected to output of unit layerblend2
 *  0b010110..Unit layerblend6 input port prim is connected to output of unit layerblend3
 *  0b010111..Unit layerblend6 input port prim is connected to output of unit layerblend4
 *  0b011000..Unit layerblend6 input port prim is connected to output of unit layerblend5
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_prim_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_prim_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_prim_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_sec_sel_SHIFT (8U)
/*! pixeng_layerblend6cfg_layerblend6_sec_sel
 *  0b000000..Unit layerblend6 input port sec is disabled
 *  0b000101..Unit layerblend6 input port sec is connected to output of unit fetchrot9
 *  0b011010..Unit layerblend6 input port sec is connected to output of unit fetchlayer0
 *  0b011011..Unit layerblend6 input port sec is connected to output of unit fetchlayer1
 *  0b011100..Unit layerblend6 input port sec is connected to output of unit fetchyuv3
 *  0b011101..Unit layerblend6 input port sec is connected to output of unit fetchyuv0
 *  0b011111..Unit layerblend6 input port sec is connected to output of unit fetchyuv1
 *  0b100001..Unit layerblend6 input port sec is connected to output of unit fetchyuv2
 *  0b100011..Unit layerblend6 input port sec is connected to output of unit matrix4
 *  0b100100..Unit layerblend6 input port sec is connected to output of unit hscaler4
 *  0b100101..Unit layerblend6 input port sec is connected to output of unit vscaler4
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_sec_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_clken_SHIFT (24U)
/*! pixeng_layerblend6cfg_layerblend6_clken
 *  0b00..Clock for layerblend6 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for layerblend6 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_DYNAMIC_pixeng_layerblend6cfg_layerblend6_clken_MASK)
/*! @} */

/*! @name PIXENG_LAYERBLEND6CFG_LAYERBLEND6_STATUS - Status information for pixel engine configuration of layerblend6 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_STATUS_pixeng_layerblend6cfg_layerblend6_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_STATUS_pixeng_layerblend6cfg_layerblend6_sel_SHIFT (16U)
/*! pixeng_layerblend6cfg_layerblend6_sel
 *  0b000..layerblend6 module is not used
 *  0b001..layerblend6 module is used from store9 processing path
 *  0b010..layerblend6 module is used from extdst0 processing path
 *  0b011..layerblend6 module is used from extdst4 processing path
 *  0b100..layerblend6 module is used from extdst1 processing path
 *  0b101..layerblend6 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_STATUS_pixeng_layerblend6cfg_layerblend6_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_STATUS_pixeng_layerblend6cfg_layerblend6_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_LAYERBLEND6CFG_LAYERBLEND6_STATUS_pixeng_layerblend6cfg_layerblend6_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0_LockUnlock_SHIFT (0U)
/*! pixeng_fetchlayer0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATICCONTROL_pixeng_fetchlayer0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATICCONTROL_pixeng_fetchlayer0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATICCONTROL_pixeng_fetchlayer0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATICCONTROL_pixeng_fetchlayer0_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATICCONTROL_pixeng_fetchlayer0_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SHDLDREQCONTROL - Shadow load request flags for each layer. Static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky1_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky1_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky2_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky2_SHIFT (2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky3_MASK (0x8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky3_SHIFT (3U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky4_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky4_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky5_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky5_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky6_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky6_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky7_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky7_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SHDLDREQCONTROL_pixeng_fetchlayer0_ShdLdReqSticky7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer0_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS0_pixeng_fetchlayer0_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS0_pixeng_fetchlayer0_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS0_pixeng_fetchlayer0_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS0_pixeng_fetchlayer0_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS0_pixeng_fetchlayer0_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB0_pixeng_fetchlayer0_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB0_pixeng_fetchlayer0_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB0_pixeng_fetchlayer0_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB0_pixeng_fetchlayer0_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB0_pixeng_fetchlayer0_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer0_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer0_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer0_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer0_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer0_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer0_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer0_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS0_pixeng_fetchlayer0_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_pixeng_fetchlayer0_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET0_pixeng_fetchlayer0_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET0_pixeng_fetchlayer0_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer0_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR0_pixeng_fetchlayer0_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PaletteEnable0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PaletteEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PaletteEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PaletteEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PaletteEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_TileMode0_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY0_pixeng_fetchlayer0_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS1_pixeng_fetchlayer0_BaseAddress1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS1_pixeng_fetchlayer0_BaseAddress1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS1_pixeng_fetchlayer0_BaseAddress1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS1_pixeng_fetchlayer0_BaseAddress1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS1_pixeng_fetchlayer0_BaseAddress1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB1_pixeng_fetchlayer0_BaseAddressMSB1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB1_pixeng_fetchlayer0_BaseAddressMSB1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB1_pixeng_fetchlayer0_BaseAddressMSB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB1_pixeng_fetchlayer0_BaseAddressMSB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB1_pixeng_fetchlayer0_BaseAddressMSB1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer0_AutoUpdateBaseAddress1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer0_AutoUpdateBaseAddress1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer0_AutoUpdateBaseAddress1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer0_AutoUpdateBaseAddress1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer0_AutoUpdateBaseAddress1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1 - Source buffer attributes for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_Stride1_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_Stride1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_Stride1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_Stride1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_Stride1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BitsPerPixel1_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BitsPerPixel1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BitsPerPixel1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BitsPerPixel1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BitsPerPixel1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BaseAddressAutoUpdate1_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BaseAddressAutoUpdate1_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BaseAddressAutoUpdate1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BaseAddressAutoUpdate1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_BaseAddressAutoUpdate1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_DWordByteSwap1_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_DWordByteSwap1_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_DWordByteSwap1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_DWordByteSwap1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer0_DWordByteSwap1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1 - Source buffer dimensions of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineWidth1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineWidth1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineWidth1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineWidth1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineWidth1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineCount1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineCount1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineCount1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineCount1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer0_LineCount1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1 - Size of color components for RGB, YUV and index formats (layer 1). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsAlpha1_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsAlpha1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsAlpha1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsAlpha1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsAlpha1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsBlue1_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsBlue1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsBlue1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsBlue1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsBlue1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsGreen1_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsGreen1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsGreen1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsGreen1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsGreen1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsRed1_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsRed1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsRed1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsRed1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ComponentBitsRed1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ITUFormat1_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ITUFormat1_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ITUFormat1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ITUFormat1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS1_pixeng_fetchlayer0_ITUFormat1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1 - Bit position of color components for RGB, YUV and index formats (layer 1). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftAlpha1_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftAlpha1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftAlpha1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftAlpha1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftAlpha1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftBlue1_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftBlue1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftBlue1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftBlue1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftBlue1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftGreen1_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftGreen1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftGreen1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftGreen1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftGreen1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftRed1_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftRed1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftRed1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftRed1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_pixeng_fetchlayer0_ComponentShiftRed1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET1 - Position of layer 1 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerXOffset1_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerXOffset1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerXOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerXOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerXOffset1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerYOffset1_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerYOffset1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerYOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerYOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET1_pixeng_fetchlayer0_LayerYOffset1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1 - Clip window position for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowXOffset1_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowXOffset1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowXOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowXOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowXOffset1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowYOffset1_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowYOffset1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowYOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowYOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET1_pixeng_fetchlayer0_ClipWindowYOffset1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1 - Clip window size for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowWidth1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowWidth1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowWidth1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowWidth1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowWidth1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowHeight1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowHeight1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowHeight1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowHeight1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer0_ClipWindowHeight1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR1 - Constant color for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantAlpha1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantAlpha1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantAlpha1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantAlpha1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantAlpha1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantBlue1_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantBlue1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantBlue1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantBlue1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantBlue1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantGreen1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantGreen1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantGreen1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantGreen1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantGreen1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantRed1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantRed1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantRed1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantRed1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR1_pixeng_fetchlayer0_ConstantRed1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY1 - Common properties of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PaletteEnable1_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PaletteEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PaletteEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PaletteEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PaletteEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_TileMode1_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_TileMode1_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode1
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_TileMode1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_TileMode1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_TileMode1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaSrcEnable1_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaSrcEnable1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaSrcEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaSrcEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaSrcEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaConstEnable1_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaConstEnable1_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaConstEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaConstEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaConstEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaTransEnable1_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaTransEnable1_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaTransEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaTransEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_AlphaTransEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaSrcEnable1_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaSrcEnable1_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaSrcEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaSrcEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaSrcEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaConstEnable1_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaConstEnable1_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaConstEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaConstEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaConstEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaTransEnable1_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaTransEnable1_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaTransEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaTransEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_RGBAlphaTransEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PremulConstRGB1_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PremulConstRGB1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PremulConstRGB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PremulConstRGB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_PremulConstRGB1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_YUVConversionMode1_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_YUVConversionMode1_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode1
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_YUVConversionMode1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_YUVConversionMode1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_YUVConversionMode1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_GammaRemoveEnable1_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_GammaRemoveEnable1_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_GammaRemoveEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_GammaRemoveEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_GammaRemoveEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_ClipWindowEnable1_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_ClipWindowEnable1_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_ClipWindowEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_ClipWindowEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_ClipWindowEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_SourceBufferEnable1_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_SourceBufferEnable1_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_SourceBufferEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_SourceBufferEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY1_pixeng_fetchlayer0_SourceBufferEnable1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS2_pixeng_fetchlayer0_BaseAddress2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS2_pixeng_fetchlayer0_BaseAddress2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS2_pixeng_fetchlayer0_BaseAddress2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS2_pixeng_fetchlayer0_BaseAddress2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS2_pixeng_fetchlayer0_BaseAddress2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB2_pixeng_fetchlayer0_BaseAddressMSB2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB2_pixeng_fetchlayer0_BaseAddressMSB2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB2_pixeng_fetchlayer0_BaseAddressMSB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB2_pixeng_fetchlayer0_BaseAddressMSB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB2_pixeng_fetchlayer0_BaseAddressMSB2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer0_AutoUpdateBaseAddress2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer0_AutoUpdateBaseAddress2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer0_AutoUpdateBaseAddress2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer0_AutoUpdateBaseAddress2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer0_AutoUpdateBaseAddress2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2 - Source buffer attributes for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_Stride2_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_Stride2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_Stride2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_Stride2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_Stride2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BitsPerPixel2_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BitsPerPixel2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BitsPerPixel2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BitsPerPixel2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BitsPerPixel2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BaseAddressAutoUpdate2_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BaseAddressAutoUpdate2_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BaseAddressAutoUpdate2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BaseAddressAutoUpdate2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_BaseAddressAutoUpdate2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_DWordByteSwap2_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_DWordByteSwap2_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_DWordByteSwap2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_DWordByteSwap2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer0_DWordByteSwap2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2 - Source buffer dimensions of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineWidth2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineWidth2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineWidth2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineWidth2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineWidth2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineCount2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineCount2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineCount2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineCount2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer0_LineCount2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2 - Size of color components for RGB, YUV and index formats (layer 2). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsAlpha2_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsAlpha2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsAlpha2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsAlpha2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsAlpha2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsBlue2_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsBlue2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsBlue2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsBlue2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsBlue2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsGreen2_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsGreen2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsGreen2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsGreen2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsGreen2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsRed2_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsRed2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsRed2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsRed2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ComponentBitsRed2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ITUFormat2_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ITUFormat2_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ITUFormat2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ITUFormat2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS2_pixeng_fetchlayer0_ITUFormat2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2 - Bit position of color components for RGB, YUV and index formats (layer 2). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftAlpha2_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftAlpha2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftAlpha2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftAlpha2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftAlpha2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftBlue2_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftBlue2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftBlue2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftBlue2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftBlue2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftGreen2_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftGreen2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftGreen2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftGreen2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftGreen2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftRed2_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftRed2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftRed2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftRed2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_pixeng_fetchlayer0_ComponentShiftRed2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET2 - Position of layer 2 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerXOffset2_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerXOffset2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerXOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerXOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerXOffset2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerYOffset2_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerYOffset2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerYOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerYOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET2_pixeng_fetchlayer0_LayerYOffset2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2 - Clip window position for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowXOffset2_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowXOffset2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowXOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowXOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowXOffset2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowYOffset2_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowYOffset2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowYOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowYOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET2_pixeng_fetchlayer0_ClipWindowYOffset2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2 - Clip window size for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowWidth2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowWidth2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowWidth2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowWidth2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowWidth2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowHeight2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowHeight2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowHeight2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowHeight2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer0_ClipWindowHeight2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR2 - Constant color for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantAlpha2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantAlpha2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantAlpha2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantAlpha2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantAlpha2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantBlue2_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantBlue2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantBlue2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantBlue2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantBlue2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantGreen2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantGreen2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantGreen2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantGreen2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantGreen2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantRed2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantRed2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantRed2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantRed2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR2_pixeng_fetchlayer0_ConstantRed2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY2 - Common properties of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PaletteEnable2_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PaletteEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PaletteEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PaletteEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PaletteEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_TileMode2_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_TileMode2_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode2
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_TileMode2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_TileMode2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_TileMode2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaSrcEnable2_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaSrcEnable2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaSrcEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaSrcEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaSrcEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaConstEnable2_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaConstEnable2_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaConstEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaConstEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaConstEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaTransEnable2_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaTransEnable2_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaTransEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaTransEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_AlphaTransEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaSrcEnable2_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaSrcEnable2_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaSrcEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaSrcEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaSrcEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaConstEnable2_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaConstEnable2_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaConstEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaConstEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaConstEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaTransEnable2_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaTransEnable2_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaTransEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaTransEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_RGBAlphaTransEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PremulConstRGB2_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PremulConstRGB2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PremulConstRGB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PremulConstRGB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_PremulConstRGB2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_YUVConversionMode2_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_YUVConversionMode2_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode2
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_YUVConversionMode2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_YUVConversionMode2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_YUVConversionMode2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_GammaRemoveEnable2_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_GammaRemoveEnable2_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_GammaRemoveEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_GammaRemoveEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_GammaRemoveEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_ClipWindowEnable2_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_ClipWindowEnable2_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_ClipWindowEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_ClipWindowEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_ClipWindowEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_SourceBufferEnable2_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_SourceBufferEnable2_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_SourceBufferEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_SourceBufferEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY2_pixeng_fetchlayer0_SourceBufferEnable2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS3_pixeng_fetchlayer0_BaseAddress3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS3_pixeng_fetchlayer0_BaseAddress3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS3_pixeng_fetchlayer0_BaseAddress3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS3_pixeng_fetchlayer0_BaseAddress3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS3_pixeng_fetchlayer0_BaseAddress3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB3_pixeng_fetchlayer0_BaseAddressMSB3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB3_pixeng_fetchlayer0_BaseAddressMSB3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB3_pixeng_fetchlayer0_BaseAddressMSB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB3_pixeng_fetchlayer0_BaseAddressMSB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB3_pixeng_fetchlayer0_BaseAddressMSB3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer0_AutoUpdateBaseAddress3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer0_AutoUpdateBaseAddress3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer0_AutoUpdateBaseAddress3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer0_AutoUpdateBaseAddress3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer0_AutoUpdateBaseAddress3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3 - Source buffer attributes for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_Stride3_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_Stride3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_Stride3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_Stride3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_Stride3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BitsPerPixel3_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BitsPerPixel3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BitsPerPixel3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BitsPerPixel3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BitsPerPixel3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BaseAddressAutoUpdate3_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BaseAddressAutoUpdate3_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BaseAddressAutoUpdate3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BaseAddressAutoUpdate3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_BaseAddressAutoUpdate3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_DWordByteSwap3_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_DWordByteSwap3_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_DWordByteSwap3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_DWordByteSwap3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer0_DWordByteSwap3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3 - Source buffer dimensions of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineWidth3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineWidth3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineWidth3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineWidth3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineWidth3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineCount3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineCount3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineCount3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineCount3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer0_LineCount3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3 - Size of color components for RGB, YUV and index formats (layer 3). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsAlpha3_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsAlpha3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsAlpha3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsAlpha3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsAlpha3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsBlue3_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsBlue3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsBlue3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsBlue3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsBlue3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsGreen3_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsGreen3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsGreen3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsGreen3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsGreen3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsRed3_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsRed3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsRed3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsRed3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ComponentBitsRed3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ITUFormat3_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ITUFormat3_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ITUFormat3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ITUFormat3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS3_pixeng_fetchlayer0_ITUFormat3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3 - Bit position of color components for RGB, YUV and index formats (layer 3). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftAlpha3_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftAlpha3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftAlpha3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftAlpha3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftAlpha3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftBlue3_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftBlue3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftBlue3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftBlue3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftBlue3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftGreen3_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftGreen3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftGreen3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftGreen3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftGreen3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftRed3_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftRed3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftRed3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftRed3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_pixeng_fetchlayer0_ComponentShiftRed3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET3 - Position of layer 3 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerXOffset3_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerXOffset3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerXOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerXOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerXOffset3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerYOffset3_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerYOffset3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerYOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerYOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET3_pixeng_fetchlayer0_LayerYOffset3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3 - Clip window position for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowXOffset3_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowXOffset3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowXOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowXOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowXOffset3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowYOffset3_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowYOffset3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowYOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowYOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET3_pixeng_fetchlayer0_ClipWindowYOffset3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3 - Clip window size for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowWidth3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowWidth3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowWidth3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowWidth3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowWidth3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowHeight3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowHeight3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowHeight3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowHeight3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer0_ClipWindowHeight3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR3 - Constant color for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantAlpha3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantAlpha3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantAlpha3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantAlpha3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantAlpha3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantBlue3_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantBlue3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantBlue3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantBlue3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantBlue3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantGreen3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantGreen3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantGreen3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantGreen3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantGreen3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantRed3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantRed3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantRed3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantRed3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR3_pixeng_fetchlayer0_ConstantRed3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY3 - Common properties of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PaletteEnable3_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PaletteEnable3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PaletteEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PaletteEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PaletteEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_TileMode3_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_TileMode3_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode3
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_TileMode3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_TileMode3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_TileMode3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaSrcEnable3_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaSrcEnable3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaSrcEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaSrcEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaSrcEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaConstEnable3_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaConstEnable3_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaConstEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaConstEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaConstEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaTransEnable3_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaTransEnable3_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaTransEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaTransEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_AlphaTransEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaSrcEnable3_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaSrcEnable3_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaSrcEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaSrcEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaSrcEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaConstEnable3_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaConstEnable3_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaConstEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaConstEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaConstEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaTransEnable3_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaTransEnable3_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaTransEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaTransEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_RGBAlphaTransEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PremulConstRGB3_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PremulConstRGB3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PremulConstRGB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PremulConstRGB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_PremulConstRGB3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_YUVConversionMode3_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_YUVConversionMode3_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode3
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_YUVConversionMode3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_YUVConversionMode3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_YUVConversionMode3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_GammaRemoveEnable3_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_GammaRemoveEnable3_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_GammaRemoveEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_GammaRemoveEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_GammaRemoveEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_ClipWindowEnable3_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_ClipWindowEnable3_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_ClipWindowEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_ClipWindowEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_ClipWindowEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_SourceBufferEnable3_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_SourceBufferEnable3_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_SourceBufferEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_SourceBufferEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY3_pixeng_fetchlayer0_SourceBufferEnable3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS4_pixeng_fetchlayer0_BaseAddress4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS4_pixeng_fetchlayer0_BaseAddress4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS4_pixeng_fetchlayer0_BaseAddress4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS4_pixeng_fetchlayer0_BaseAddress4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS4_pixeng_fetchlayer0_BaseAddress4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB4_pixeng_fetchlayer0_BaseAddressMSB4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB4_pixeng_fetchlayer0_BaseAddressMSB4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB4_pixeng_fetchlayer0_BaseAddressMSB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB4_pixeng_fetchlayer0_BaseAddressMSB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB4_pixeng_fetchlayer0_BaseAddressMSB4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer0_AutoUpdateBaseAddress4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer0_AutoUpdateBaseAddress4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer0_AutoUpdateBaseAddress4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer0_AutoUpdateBaseAddress4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer0_AutoUpdateBaseAddress4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4 - Source buffer attributes for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_Stride4_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_Stride4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_Stride4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_Stride4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_Stride4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BitsPerPixel4_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BitsPerPixel4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BitsPerPixel4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BitsPerPixel4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BitsPerPixel4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BaseAddressAutoUpdate4_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BaseAddressAutoUpdate4_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BaseAddressAutoUpdate4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BaseAddressAutoUpdate4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_BaseAddressAutoUpdate4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_DWordByteSwap4_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_DWordByteSwap4_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_DWordByteSwap4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_DWordByteSwap4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer0_DWordByteSwap4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4 - Source buffer dimensions of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineWidth4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineWidth4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineWidth4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineWidth4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineWidth4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineCount4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineCount4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineCount4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineCount4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer0_LineCount4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4 - Size of color components for RGB, YUV and index formats (layer 4). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsAlpha4_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsAlpha4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsAlpha4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsAlpha4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsAlpha4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsBlue4_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsBlue4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsBlue4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsBlue4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsBlue4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsGreen4_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsGreen4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsGreen4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsGreen4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsGreen4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsRed4_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsRed4_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsRed4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsRed4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ComponentBitsRed4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ITUFormat4_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ITUFormat4_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ITUFormat4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ITUFormat4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS4_pixeng_fetchlayer0_ITUFormat4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4 - Bit position of color components for RGB, YUV and index formats (layer 4). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftAlpha4_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftAlpha4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftAlpha4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftAlpha4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftAlpha4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftBlue4_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftBlue4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftBlue4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftBlue4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftBlue4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftGreen4_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftGreen4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftGreen4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftGreen4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftGreen4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftRed4_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftRed4_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftRed4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftRed4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_pixeng_fetchlayer0_ComponentShiftRed4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET4 - Position of layer 4 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerXOffset4_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerXOffset4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerXOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerXOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerXOffset4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerYOffset4_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerYOffset4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerYOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerYOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET4_pixeng_fetchlayer0_LayerYOffset4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4 - Clip window position for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowXOffset4_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowXOffset4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowXOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowXOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowXOffset4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowYOffset4_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowYOffset4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowYOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowYOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET4_pixeng_fetchlayer0_ClipWindowYOffset4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4 - Clip window size for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowWidth4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowWidth4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowWidth4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowWidth4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowWidth4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowHeight4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowHeight4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowHeight4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowHeight4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer0_ClipWindowHeight4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR4 - Constant color for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantAlpha4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantAlpha4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantAlpha4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantAlpha4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantAlpha4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantBlue4_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantBlue4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantBlue4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantBlue4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantBlue4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantGreen4_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantGreen4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantGreen4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantGreen4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantGreen4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantRed4_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantRed4_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantRed4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantRed4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR4_pixeng_fetchlayer0_ConstantRed4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY4 - Common properties of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PaletteEnable4_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PaletteEnable4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PaletteEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PaletteEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PaletteEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_TileMode4_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_TileMode4_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode4
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_TileMode4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_TileMode4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_TileMode4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaSrcEnable4_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaSrcEnable4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaSrcEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaSrcEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaSrcEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaConstEnable4_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaConstEnable4_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaConstEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaConstEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaConstEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaTransEnable4_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaTransEnable4_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaTransEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaTransEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_AlphaTransEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaSrcEnable4_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaSrcEnable4_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaSrcEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaSrcEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaSrcEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaConstEnable4_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaConstEnable4_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaConstEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaConstEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaConstEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaTransEnable4_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaTransEnable4_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaTransEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaTransEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_RGBAlphaTransEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PremulConstRGB4_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PremulConstRGB4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PremulConstRGB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PremulConstRGB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_PremulConstRGB4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_YUVConversionMode4_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_YUVConversionMode4_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode4
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_YUVConversionMode4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_YUVConversionMode4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_YUVConversionMode4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_GammaRemoveEnable4_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_GammaRemoveEnable4_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_GammaRemoveEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_GammaRemoveEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_GammaRemoveEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_ClipWindowEnable4_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_ClipWindowEnable4_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_ClipWindowEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_ClipWindowEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_ClipWindowEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_SourceBufferEnable4_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_SourceBufferEnable4_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_SourceBufferEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_SourceBufferEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY4_pixeng_fetchlayer0_SourceBufferEnable4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS5_pixeng_fetchlayer0_BaseAddress5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS5_pixeng_fetchlayer0_BaseAddress5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS5_pixeng_fetchlayer0_BaseAddress5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS5_pixeng_fetchlayer0_BaseAddress5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS5_pixeng_fetchlayer0_BaseAddress5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB5_pixeng_fetchlayer0_BaseAddressMSB5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB5_pixeng_fetchlayer0_BaseAddressMSB5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB5_pixeng_fetchlayer0_BaseAddressMSB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB5_pixeng_fetchlayer0_BaseAddressMSB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB5_pixeng_fetchlayer0_BaseAddressMSB5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer0_AutoUpdateBaseAddress5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer0_AutoUpdateBaseAddress5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer0_AutoUpdateBaseAddress5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer0_AutoUpdateBaseAddress5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer0_AutoUpdateBaseAddress5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5 - Source buffer attributes for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_Stride5_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_Stride5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_Stride5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_Stride5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_Stride5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BitsPerPixel5_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BitsPerPixel5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BitsPerPixel5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BitsPerPixel5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BitsPerPixel5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BaseAddressAutoUpdate5_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BaseAddressAutoUpdate5_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BaseAddressAutoUpdate5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BaseAddressAutoUpdate5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_BaseAddressAutoUpdate5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_DWordByteSwap5_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_DWordByteSwap5_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_DWordByteSwap5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_DWordByteSwap5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer0_DWordByteSwap5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5 - Source buffer dimensions of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineWidth5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineWidth5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineWidth5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineWidth5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineWidth5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineCount5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineCount5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineCount5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineCount5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer0_LineCount5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5 - Size of color components for RGB, YUV and index formats (layer 5). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsAlpha5_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsAlpha5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsAlpha5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsAlpha5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsAlpha5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsBlue5_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsBlue5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsBlue5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsBlue5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsBlue5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsGreen5_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsGreen5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsGreen5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsGreen5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsGreen5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsRed5_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsRed5_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsRed5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsRed5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ComponentBitsRed5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ITUFormat5_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ITUFormat5_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ITUFormat5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ITUFormat5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS5_pixeng_fetchlayer0_ITUFormat5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5 - Bit position of color components for RGB, YUV and index formats (layer 5). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftAlpha5_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftAlpha5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftAlpha5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftAlpha5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftAlpha5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftBlue5_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftBlue5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftBlue5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftBlue5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftBlue5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftGreen5_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftGreen5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftGreen5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftGreen5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftGreen5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftRed5_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftRed5_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftRed5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftRed5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_pixeng_fetchlayer0_ComponentShiftRed5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET5 - Position of layer 5 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerXOffset5_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerXOffset5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerXOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerXOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerXOffset5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerYOffset5_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerYOffset5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerYOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerYOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET5_pixeng_fetchlayer0_LayerYOffset5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5 - Clip window position for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowXOffset5_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowXOffset5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowXOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowXOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowXOffset5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowYOffset5_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowYOffset5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowYOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowYOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET5_pixeng_fetchlayer0_ClipWindowYOffset5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5 - Clip window size for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowWidth5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowWidth5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowWidth5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowWidth5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowWidth5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowHeight5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowHeight5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowHeight5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowHeight5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer0_ClipWindowHeight5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR5 - Constant color for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantAlpha5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantAlpha5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantAlpha5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantAlpha5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantAlpha5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantBlue5_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantBlue5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantBlue5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantBlue5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantBlue5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantGreen5_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantGreen5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantGreen5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantGreen5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantGreen5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantRed5_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantRed5_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantRed5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantRed5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR5_pixeng_fetchlayer0_ConstantRed5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY5 - Common properties of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PaletteEnable5_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PaletteEnable5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PaletteEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PaletteEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PaletteEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_TileMode5_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_TileMode5_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode5
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_TileMode5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_TileMode5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_TileMode5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaSrcEnable5_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaSrcEnable5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaSrcEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaSrcEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaSrcEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaConstEnable5_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaConstEnable5_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaConstEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaConstEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaConstEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaTransEnable5_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaTransEnable5_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaTransEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaTransEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_AlphaTransEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaSrcEnable5_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaSrcEnable5_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaSrcEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaSrcEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaSrcEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaConstEnable5_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaConstEnable5_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaConstEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaConstEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaConstEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaTransEnable5_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaTransEnable5_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaTransEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaTransEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_RGBAlphaTransEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PremulConstRGB5_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PremulConstRGB5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PremulConstRGB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PremulConstRGB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_PremulConstRGB5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_YUVConversionMode5_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_YUVConversionMode5_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode5
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_YUVConversionMode5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_YUVConversionMode5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_YUVConversionMode5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_GammaRemoveEnable5_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_GammaRemoveEnable5_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_GammaRemoveEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_GammaRemoveEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_GammaRemoveEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_ClipWindowEnable5_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_ClipWindowEnable5_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_ClipWindowEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_ClipWindowEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_ClipWindowEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_SourceBufferEnable5_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_SourceBufferEnable5_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_SourceBufferEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_SourceBufferEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY5_pixeng_fetchlayer0_SourceBufferEnable5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS6_pixeng_fetchlayer0_BaseAddress6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS6_pixeng_fetchlayer0_BaseAddress6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS6_pixeng_fetchlayer0_BaseAddress6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS6_pixeng_fetchlayer0_BaseAddress6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS6_pixeng_fetchlayer0_BaseAddress6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB6_pixeng_fetchlayer0_BaseAddressMSB6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB6_pixeng_fetchlayer0_BaseAddressMSB6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB6_pixeng_fetchlayer0_BaseAddressMSB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB6_pixeng_fetchlayer0_BaseAddressMSB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB6_pixeng_fetchlayer0_BaseAddressMSB6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer0_AutoUpdateBaseAddress6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer0_AutoUpdateBaseAddress6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer0_AutoUpdateBaseAddress6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer0_AutoUpdateBaseAddress6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer0_AutoUpdateBaseAddress6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6 - Source buffer attributes for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_Stride6_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_Stride6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_Stride6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_Stride6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_Stride6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BitsPerPixel6_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BitsPerPixel6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BitsPerPixel6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BitsPerPixel6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BitsPerPixel6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BaseAddressAutoUpdate6_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BaseAddressAutoUpdate6_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BaseAddressAutoUpdate6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BaseAddressAutoUpdate6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_BaseAddressAutoUpdate6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_DWordByteSwap6_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_DWordByteSwap6_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_DWordByteSwap6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_DWordByteSwap6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer0_DWordByteSwap6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6 - Source buffer dimensions of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineWidth6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineWidth6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineWidth6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineWidth6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineWidth6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineCount6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineCount6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineCount6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineCount6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer0_LineCount6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6 - Size of color components for RGB, YUV and index formats (layer 6). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsAlpha6_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsAlpha6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsAlpha6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsAlpha6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsAlpha6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsBlue6_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsBlue6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsBlue6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsBlue6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsBlue6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsGreen6_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsGreen6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsGreen6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsGreen6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsGreen6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsRed6_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsRed6_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsRed6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsRed6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ComponentBitsRed6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ITUFormat6_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ITUFormat6_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ITUFormat6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ITUFormat6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS6_pixeng_fetchlayer0_ITUFormat6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6 - Bit position of color components for RGB, YUV and index formats (layer 6). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftAlpha6_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftAlpha6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftAlpha6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftAlpha6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftAlpha6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftBlue6_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftBlue6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftBlue6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftBlue6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftBlue6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftGreen6_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftGreen6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftGreen6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftGreen6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftGreen6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftRed6_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftRed6_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftRed6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftRed6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_pixeng_fetchlayer0_ComponentShiftRed6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET6 - Position of layer 6 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerXOffset6_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerXOffset6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerXOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerXOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerXOffset6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerYOffset6_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerYOffset6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerYOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerYOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET6_pixeng_fetchlayer0_LayerYOffset6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6 - Clip window position for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowXOffset6_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowXOffset6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowXOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowXOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowXOffset6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowYOffset6_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowYOffset6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowYOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowYOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET6_pixeng_fetchlayer0_ClipWindowYOffset6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6 - Clip window size for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowWidth6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowWidth6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowWidth6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowWidth6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowWidth6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowHeight6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowHeight6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowHeight6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowHeight6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer0_ClipWindowHeight6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR6 - Constant color for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantAlpha6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantAlpha6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantAlpha6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantAlpha6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantAlpha6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantBlue6_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantBlue6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantBlue6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantBlue6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantBlue6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantGreen6_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantGreen6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantGreen6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantGreen6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantGreen6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantRed6_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantRed6_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantRed6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantRed6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR6_pixeng_fetchlayer0_ConstantRed6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY6 - Common properties of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PaletteEnable6_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PaletteEnable6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PaletteEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PaletteEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PaletteEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_TileMode6_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_TileMode6_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode6
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_TileMode6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_TileMode6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_TileMode6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaSrcEnable6_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaSrcEnable6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaSrcEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaSrcEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaSrcEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaConstEnable6_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaConstEnable6_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaConstEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaConstEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaConstEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaTransEnable6_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaTransEnable6_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaTransEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaTransEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_AlphaTransEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaSrcEnable6_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaSrcEnable6_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaSrcEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaSrcEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaSrcEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaConstEnable6_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaConstEnable6_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaConstEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaConstEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaConstEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaTransEnable6_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaTransEnable6_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaTransEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaTransEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_RGBAlphaTransEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PremulConstRGB6_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PremulConstRGB6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PremulConstRGB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PremulConstRGB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_PremulConstRGB6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_YUVConversionMode6_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_YUVConversionMode6_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode6
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_YUVConversionMode6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_YUVConversionMode6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_YUVConversionMode6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_GammaRemoveEnable6_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_GammaRemoveEnable6_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_GammaRemoveEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_GammaRemoveEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_GammaRemoveEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_ClipWindowEnable6_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_ClipWindowEnable6_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_ClipWindowEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_ClipWindowEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_ClipWindowEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_SourceBufferEnable6_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_SourceBufferEnable6_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_SourceBufferEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_SourceBufferEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY6_pixeng_fetchlayer0_SourceBufferEnable6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESS7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS7_pixeng_fetchlayer0_BaseAddress7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS7_pixeng_fetchlayer0_BaseAddress7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS7_pixeng_fetchlayer0_BaseAddress7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS7_pixeng_fetchlayer0_BaseAddress7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESS7_pixeng_fetchlayer0_BaseAddress7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BASEADDRESSMSB7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB7_pixeng_fetchlayer0_BaseAddressMSB7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB7_pixeng_fetchlayer0_BaseAddressMSB7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB7_pixeng_fetchlayer0_BaseAddressMSB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB7_pixeng_fetchlayer0_BaseAddressMSB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BASEADDRESSMSB7_pixeng_fetchlayer0_BaseAddressMSB7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer0_AutoUpdateBaseAddress7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer0_AutoUpdateBaseAddress7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer0_AutoUpdateBaseAddress7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer0_AutoUpdateBaseAddress7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer0_AutoUpdateBaseAddress7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer0_AutoUpdateBaseAddressMSB7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7 - Source buffer attributes for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_Stride7_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_Stride7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_Stride7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_Stride7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_Stride7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BitsPerPixel7_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BitsPerPixel7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BitsPerPixel7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BitsPerPixel7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BitsPerPixel7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BaseAddressAutoUpdate7_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BaseAddressAutoUpdate7_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BaseAddressAutoUpdate7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BaseAddressAutoUpdate7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_BaseAddressAutoUpdate7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_DWordByteSwap7_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_DWordByteSwap7_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_DWordByteSwap7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_DWordByteSwap7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer0_DWordByteSwap7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7 - Source buffer dimensions of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineWidth7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineWidth7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineWidth7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineWidth7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineWidth7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineCount7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineCount7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineCount7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineCount7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer0_LineCount7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7 - Size of color components for RGB, YUV and index formats (layer 7). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsAlpha7_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsAlpha7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsAlpha7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsAlpha7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsAlpha7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsBlue7_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsBlue7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsBlue7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsBlue7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsBlue7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsGreen7_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsGreen7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsGreen7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsGreen7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsGreen7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsRed7_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsRed7_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsRed7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsRed7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ComponentBitsRed7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ITUFormat7_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ITUFormat7_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ITUFormat7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ITUFormat7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTBITS7_pixeng_fetchlayer0_ITUFormat7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7 - Bit position of color components for RGB, YUV and index formats (layer 7). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftAlpha7_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftAlpha7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftAlpha7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftAlpha7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftAlpha7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftBlue7_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftBlue7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftBlue7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftBlue7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftBlue7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftGreen7_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftGreen7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftGreen7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftGreen7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftGreen7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftRed7_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftRed7_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftRed7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftRed7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_pixeng_fetchlayer0_ComponentShiftRed7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYEROFFSET7 - Position of layer 7 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerXOffset7_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerXOffset7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerXOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerXOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerXOffset7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerYOffset7_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerYOffset7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerYOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerYOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYEROFFSET7_pixeng_fetchlayer0_LayerYOffset7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7 - Clip window position for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowXOffset7_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowXOffset7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowXOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowXOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowXOffset7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowYOffset7_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowYOffset7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowYOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowYOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWOFFSET7_pixeng_fetchlayer0_ClipWindowYOffset7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7 - Clip window size for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowWidth7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowWidth7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowWidth7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowWidth7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowWidth7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowHeight7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowHeight7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowHeight7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowHeight7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer0_ClipWindowHeight7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONSTANTCOLOR7 - Constant color for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantAlpha7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantAlpha7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantAlpha7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantAlpha7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantAlpha7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantBlue7_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantBlue7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantBlue7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantBlue7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantBlue7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantGreen7_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantGreen7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantGreen7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantGreen7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantGreen7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantRed7_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantRed7_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantRed7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantRed7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONSTANTCOLOR7_pixeng_fetchlayer0_ConstantRed7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_LAYERPROPERTY7 - Common properties of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PaletteEnable7_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PaletteEnable7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PaletteEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PaletteEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PaletteEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_TileMode7_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_TileMode7_SHIFT (4U)
/*! pixeng_fetchlayer0_TileMode7
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_TileMode7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_TileMode7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_TileMode7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaSrcEnable7_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaSrcEnable7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaSrcEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaSrcEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaSrcEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaConstEnable7_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaConstEnable7_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaConstEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaConstEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaConstEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaTransEnable7_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaTransEnable7_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaTransEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaTransEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_AlphaTransEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaSrcEnable7_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaSrcEnable7_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaSrcEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaSrcEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaSrcEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaConstEnable7_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaConstEnable7_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaConstEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaConstEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaConstEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaTransEnable7_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaTransEnable7_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaTransEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaTransEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_RGBAlphaTransEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PremulConstRGB7_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PremulConstRGB7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PremulConstRGB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PremulConstRGB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_PremulConstRGB7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_YUVConversionMode7_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_YUVConversionMode7_SHIFT (17U)
/*! pixeng_fetchlayer0_YUVConversionMode7
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_YUVConversionMode7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_YUVConversionMode7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_YUVConversionMode7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_GammaRemoveEnable7_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_GammaRemoveEnable7_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_GammaRemoveEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_GammaRemoveEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_GammaRemoveEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_ClipWindowEnable7_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_ClipWindowEnable7_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_ClipWindowEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_ClipWindowEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_ClipWindowEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_SourceBufferEnable7_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_SourceBufferEnable7_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_SourceBufferEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_SourceBufferEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_LAYERPROPERTY7_pixeng_fetchlayer0_SourceBufferEnable7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMEDIMENSIONS_pixeng_fetchlayer0_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FRAMERESAMPLING_pixeng_fetchlayer0_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_PaletteIdxWidth_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_PaletteIdxWidth_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_PaletteIdxWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_PaletteIdxWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_PaletteIdxWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipColor_SHIFT (16U)
/*! pixeng_fetchlayer0_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipColor_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipLayer_MASK (0x1E0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipLayer_SHIFT (17U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipLayer(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipLayer_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROL_pixeng_fetchlayer0_ClipLayer_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_TRIGGERENABLE - Shadow load enable flags for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq1_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq1_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq2_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq2_SHIFT (2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq3_MASK (0x8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq3_SHIFT (3U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq4_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq4_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq5_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq5_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq6_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq6_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq7_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq7_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_TRIGGERENABLE_pixeng_fetchlayer0_ShdLdReq7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROLTRIGGER_pixeng_fetchlayer0_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROLTRIGGER_pixeng_fetchlayer0_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROLTRIGGER_pixeng_fetchlayer0_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROLTRIGGER_pixeng_fetchlayer0_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CONTROLTRIGGER_pixeng_fetchlayer0_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_START_pixeng_fetchlayer0_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_START_pixeng_fetchlayer0_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_START_pixeng_fetchlayer0_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_START_pixeng_fetchlayer0_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_START_pixeng_fetchlayer0_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FETCHTYPE_pixeng_fetchlayer0_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FETCHTYPE_pixeng_fetchlayer0_FetchType_SHIFT (0U)
/*! pixeng_fetchlayer0_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FETCHTYPE_pixeng_fetchlayer0_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FETCHTYPE_pixeng_fetchlayer0_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_FETCHTYPE_pixeng_fetchlayer0_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_pixeng_fetchlayer0_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_STATUS_pixeng_fetchlayer0_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS0_pixeng_fetchlayer0_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS0_pixeng_fetchlayer0_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS0_pixeng_fetchlayer0_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS0_pixeng_fetchlayer0_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS0_pixeng_fetchlayer0_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB0_pixeng_fetchlayer0_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB0_pixeng_fetchlayer0_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB0_pixeng_fetchlayer0_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB0_pixeng_fetchlayer0_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB0_pixeng_fetchlayer0_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS1_pixeng_fetchlayer0_CurBaseAddress1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS1_pixeng_fetchlayer0_CurBaseAddress1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS1_pixeng_fetchlayer0_CurBaseAddress1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS1_pixeng_fetchlayer0_CurBaseAddress1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS1_pixeng_fetchlayer0_CurBaseAddress1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB1 - MSB bits of Current Working BaseAddress for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB1_pixeng_fetchlayer0_CurBaseAddressMSB1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB1_pixeng_fetchlayer0_CurBaseAddressMSB1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB1_pixeng_fetchlayer0_CurBaseAddressMSB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB1_pixeng_fetchlayer0_CurBaseAddressMSB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB1_pixeng_fetchlayer0_CurBaseAddressMSB1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS2_pixeng_fetchlayer0_CurBaseAddress2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS2_pixeng_fetchlayer0_CurBaseAddress2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS2_pixeng_fetchlayer0_CurBaseAddress2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS2_pixeng_fetchlayer0_CurBaseAddress2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS2_pixeng_fetchlayer0_CurBaseAddress2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB2 - MSB bits of Current Working BaseAddress for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB2_pixeng_fetchlayer0_CurBaseAddressMSB2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB2_pixeng_fetchlayer0_CurBaseAddressMSB2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB2_pixeng_fetchlayer0_CurBaseAddressMSB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB2_pixeng_fetchlayer0_CurBaseAddressMSB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB2_pixeng_fetchlayer0_CurBaseAddressMSB2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS3_pixeng_fetchlayer0_CurBaseAddress3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS3_pixeng_fetchlayer0_CurBaseAddress3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS3_pixeng_fetchlayer0_CurBaseAddress3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS3_pixeng_fetchlayer0_CurBaseAddress3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS3_pixeng_fetchlayer0_CurBaseAddress3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB3 - MSB bits of Current Working BaseAddress for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB3_pixeng_fetchlayer0_CurBaseAddressMSB3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB3_pixeng_fetchlayer0_CurBaseAddressMSB3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB3_pixeng_fetchlayer0_CurBaseAddressMSB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB3_pixeng_fetchlayer0_CurBaseAddressMSB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB3_pixeng_fetchlayer0_CurBaseAddressMSB3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS4_pixeng_fetchlayer0_CurBaseAddress4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS4_pixeng_fetchlayer0_CurBaseAddress4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS4_pixeng_fetchlayer0_CurBaseAddress4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS4_pixeng_fetchlayer0_CurBaseAddress4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS4_pixeng_fetchlayer0_CurBaseAddress4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB4 - MSB bits of Current Working BaseAddress for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB4_pixeng_fetchlayer0_CurBaseAddressMSB4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB4_pixeng_fetchlayer0_CurBaseAddressMSB4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB4_pixeng_fetchlayer0_CurBaseAddressMSB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB4_pixeng_fetchlayer0_CurBaseAddressMSB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB4_pixeng_fetchlayer0_CurBaseAddressMSB4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS5_pixeng_fetchlayer0_CurBaseAddress5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS5_pixeng_fetchlayer0_CurBaseAddress5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS5_pixeng_fetchlayer0_CurBaseAddress5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS5_pixeng_fetchlayer0_CurBaseAddress5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS5_pixeng_fetchlayer0_CurBaseAddress5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB5 - MSB bits of Current Working BaseAddress for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB5_pixeng_fetchlayer0_CurBaseAddressMSB5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB5_pixeng_fetchlayer0_CurBaseAddressMSB5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB5_pixeng_fetchlayer0_CurBaseAddressMSB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB5_pixeng_fetchlayer0_CurBaseAddressMSB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB5_pixeng_fetchlayer0_CurBaseAddressMSB5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS6_pixeng_fetchlayer0_CurBaseAddress6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS6_pixeng_fetchlayer0_CurBaseAddress6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS6_pixeng_fetchlayer0_CurBaseAddress6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS6_pixeng_fetchlayer0_CurBaseAddress6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS6_pixeng_fetchlayer0_CurBaseAddress6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB6 - MSB bits of Current Working BaseAddress for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB6_pixeng_fetchlayer0_CurBaseAddressMSB6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB6_pixeng_fetchlayer0_CurBaseAddressMSB6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB6_pixeng_fetchlayer0_CurBaseAddressMSB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB6_pixeng_fetchlayer0_CurBaseAddressMSB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB6_pixeng_fetchlayer0_CurBaseAddressMSB6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESS7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS7_pixeng_fetchlayer0_CurBaseAddress7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS7_pixeng_fetchlayer0_CurBaseAddress7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS7_pixeng_fetchlayer0_CurBaseAddress7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS7_pixeng_fetchlayer0_CurBaseAddress7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESS7_pixeng_fetchlayer0_CurBaseAddress7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_CURBASEADDRESSMSB7 - MSB bits of Current Working BaseAddress for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB7_pixeng_fetchlayer0_CurBaseAddressMSB7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB7_pixeng_fetchlayer0_CurBaseAddressMSB7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB7_pixeng_fetchlayer0_CurBaseAddressMSB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB7_pixeng_fetchlayer0_CurBaseAddressMSB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_CURBASEADDRESSMSB7_pixeng_fetchlayer0_CurBaseAddressMSB7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus1_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus1_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus2_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus2_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus3_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus3_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus4_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus4_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus5_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus5_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus6_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus6_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus7_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus7_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_HIDDENSTATUS_pixeng_fetchlayer0_ShadowStatus7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0_COLORPALETTE - Color palette look up table. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORPALETTE_pixeng_fetchlayer0_ColorPalette_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORPALETTE_pixeng_fetchlayer0_ColorPalette_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORPALETTE_pixeng_fetchlayer0_ColorPalette(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORPALETTE_pixeng_fetchlayer0_ColorPalette_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0_COLORPALETTE_pixeng_fetchlayer0_ColorPalette_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0cfg_fetchlayer0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0cfg_fetchlayer0_LockUnlock_SHIFT (0U)
/*! pixeng_fetchlayer0cfg_fetchlayer0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0cfg_fetchlayer0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0cfg_fetchlayer0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKUNLOCK_pixeng_fetchlayer0cfg_fetchlayer0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_LOCKSTATUS_pixeng_fetchlayer0cfg_fetchlayer0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER0CFG_FETCHLAYER0_STATUS - Status information for pixel engine configuration of fetchlayer0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_STATUS_pixeng_fetchlayer0cfg_fetchlayer0_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_STATUS_pixeng_fetchlayer0cfg_fetchlayer0_sel_SHIFT (16U)
/*! pixeng_fetchlayer0cfg_fetchlayer0_sel
 *  0b000..fetchlayer0 module is not used
 *  0b001..fetchlayer0 module is used from store9 processing path
 *  0b010..fetchlayer0 module is used from extdst0 processing path
 *  0b011..fetchlayer0 module is used from extdst4 processing path
 *  0b100..fetchlayer0 module is used from extdst1 processing path
 *  0b101..fetchlayer0 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_STATUS_pixeng_fetchlayer0cfg_fetchlayer0_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_STATUS_pixeng_fetchlayer0cfg_fetchlayer0_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER0CFG_FETCHLAYER0_STATUS_pixeng_fetchlayer0cfg_fetchlayer0_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1_LockUnlock_SHIFT (0U)
/*! pixeng_fetchlayer1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATICCONTROL_pixeng_fetchlayer1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATICCONTROL_pixeng_fetchlayer1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATICCONTROL_pixeng_fetchlayer1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATICCONTROL_pixeng_fetchlayer1_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATICCONTROL_pixeng_fetchlayer1_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SHDLDREQCONTROL - Shadow load request flags for each layer. Static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky1_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky1_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky2_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky2_SHIFT (2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky3_MASK (0x8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky3_SHIFT (3U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky4_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky4_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky5_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky5_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky6_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky6_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky7_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky7_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SHDLDREQCONTROL_pixeng_fetchlayer1_ShdLdReqSticky7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_pixeng_fetchlayer1_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS0_pixeng_fetchlayer1_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS0_pixeng_fetchlayer1_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS0_pixeng_fetchlayer1_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS0_pixeng_fetchlayer1_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS0_pixeng_fetchlayer1_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB0_pixeng_fetchlayer1_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB0_pixeng_fetchlayer1_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB0_pixeng_fetchlayer1_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB0_pixeng_fetchlayer1_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB0_pixeng_fetchlayer1_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer1_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer1_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer1_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer1_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS0_pixeng_fetchlayer1_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchlayer1_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_pixeng_fetchlayer1_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS0_pixeng_fetchlayer1_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_pixeng_fetchlayer1_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET0_pixeng_fetchlayer1_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET0_pixeng_fetchlayer1_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_pixeng_fetchlayer1_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR0_pixeng_fetchlayer1_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PaletteEnable0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PaletteEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PaletteEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PaletteEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PaletteEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_TileMode0_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY0_pixeng_fetchlayer1_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS1_pixeng_fetchlayer1_BaseAddress1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS1_pixeng_fetchlayer1_BaseAddress1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS1_pixeng_fetchlayer1_BaseAddress1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS1_pixeng_fetchlayer1_BaseAddress1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS1_pixeng_fetchlayer1_BaseAddress1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB1_pixeng_fetchlayer1_BaseAddressMSB1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB1_pixeng_fetchlayer1_BaseAddressMSB1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB1_pixeng_fetchlayer1_BaseAddressMSB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB1_pixeng_fetchlayer1_BaseAddressMSB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB1_pixeng_fetchlayer1_BaseAddressMSB1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer1_AutoUpdateBaseAddress1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer1_AutoUpdateBaseAddress1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer1_AutoUpdateBaseAddress1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer1_AutoUpdateBaseAddress1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS1_pixeng_fetchlayer1_AutoUpdateBaseAddress1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB1_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1 - Source buffer attributes for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_Stride1_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_Stride1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_Stride1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_Stride1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_Stride1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BitsPerPixel1_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BitsPerPixel1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BitsPerPixel1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BitsPerPixel1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BitsPerPixel1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BaseAddressAutoUpdate1_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BaseAddressAutoUpdate1_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BaseAddressAutoUpdate1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BaseAddressAutoUpdate1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_BaseAddressAutoUpdate1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_DWordByteSwap1_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_DWordByteSwap1_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_DWordByteSwap1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_DWordByteSwap1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_pixeng_fetchlayer1_DWordByteSwap1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1 - Source buffer dimensions of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineWidth1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineWidth1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineWidth1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineWidth1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineWidth1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineCount1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineCount1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineCount1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineCount1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_pixeng_fetchlayer1_LineCount1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1 - Size of color components for RGB, YUV and index formats (layer 1). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsAlpha1_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsAlpha1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsAlpha1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsAlpha1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsAlpha1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsBlue1_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsBlue1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsBlue1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsBlue1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsBlue1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsGreen1_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsGreen1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsGreen1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsGreen1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsGreen1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsRed1_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsRed1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsRed1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsRed1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ComponentBitsRed1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ITUFormat1_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ITUFormat1_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ITUFormat1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ITUFormat1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS1_pixeng_fetchlayer1_ITUFormat1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1 - Bit position of color components for RGB, YUV and index formats (layer 1). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftAlpha1_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftAlpha1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftAlpha1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftAlpha1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftAlpha1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftBlue1_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftBlue1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftBlue1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftBlue1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftBlue1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftGreen1_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftGreen1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftGreen1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftGreen1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftGreen1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftRed1_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftRed1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftRed1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftRed1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_pixeng_fetchlayer1_ComponentShiftRed1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET1 - Position of layer 1 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerXOffset1_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerXOffset1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerXOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerXOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerXOffset1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerYOffset1_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerYOffset1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerYOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerYOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET1_pixeng_fetchlayer1_LayerYOffset1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1 - Clip window position for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowXOffset1_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowXOffset1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowXOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowXOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowXOffset1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowYOffset1_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowYOffset1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowYOffset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowYOffset1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET1_pixeng_fetchlayer1_ClipWindowYOffset1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1 - Clip window size for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowWidth1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowWidth1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowWidth1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowWidth1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowWidth1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowHeight1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowHeight1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowHeight1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowHeight1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_pixeng_fetchlayer1_ClipWindowHeight1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR1 - Constant color for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantAlpha1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantAlpha1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantAlpha1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantAlpha1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantAlpha1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantBlue1_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantBlue1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantBlue1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantBlue1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantBlue1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantGreen1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantGreen1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantGreen1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantGreen1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantGreen1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantRed1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantRed1_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantRed1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantRed1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR1_pixeng_fetchlayer1_ConstantRed1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY1 - Common properties of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PaletteEnable1_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PaletteEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PaletteEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PaletteEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PaletteEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_TileMode1_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_TileMode1_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode1
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_TileMode1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_TileMode1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_TileMode1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaSrcEnable1_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaSrcEnable1_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaSrcEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaSrcEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaSrcEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaConstEnable1_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaConstEnable1_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaConstEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaConstEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaConstEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaTransEnable1_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaTransEnable1_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaTransEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaTransEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_AlphaTransEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaSrcEnable1_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaSrcEnable1_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaSrcEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaSrcEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaSrcEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaConstEnable1_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaConstEnable1_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaConstEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaConstEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaConstEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaTransEnable1_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaTransEnable1_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaTransEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaTransEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_RGBAlphaTransEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PremulConstRGB1_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PremulConstRGB1_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PremulConstRGB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PremulConstRGB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_PremulConstRGB1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_YUVConversionMode1_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_YUVConversionMode1_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode1
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_YUVConversionMode1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_YUVConversionMode1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_YUVConversionMode1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_GammaRemoveEnable1_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_GammaRemoveEnable1_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_GammaRemoveEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_GammaRemoveEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_GammaRemoveEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_ClipWindowEnable1_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_ClipWindowEnable1_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_ClipWindowEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_ClipWindowEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_ClipWindowEnable1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_SourceBufferEnable1_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_SourceBufferEnable1_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_SourceBufferEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_SourceBufferEnable1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY1_pixeng_fetchlayer1_SourceBufferEnable1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS2_pixeng_fetchlayer1_BaseAddress2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS2_pixeng_fetchlayer1_BaseAddress2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS2_pixeng_fetchlayer1_BaseAddress2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS2_pixeng_fetchlayer1_BaseAddress2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS2_pixeng_fetchlayer1_BaseAddress2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB2_pixeng_fetchlayer1_BaseAddressMSB2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB2_pixeng_fetchlayer1_BaseAddressMSB2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB2_pixeng_fetchlayer1_BaseAddressMSB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB2_pixeng_fetchlayer1_BaseAddressMSB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB2_pixeng_fetchlayer1_BaseAddressMSB2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer1_AutoUpdateBaseAddress2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer1_AutoUpdateBaseAddress2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer1_AutoUpdateBaseAddress2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer1_AutoUpdateBaseAddress2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS2_pixeng_fetchlayer1_AutoUpdateBaseAddress2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB2_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2 - Source buffer attributes for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_Stride2_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_Stride2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_Stride2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_Stride2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_Stride2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BitsPerPixel2_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BitsPerPixel2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BitsPerPixel2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BitsPerPixel2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BitsPerPixel2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BaseAddressAutoUpdate2_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BaseAddressAutoUpdate2_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BaseAddressAutoUpdate2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BaseAddressAutoUpdate2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_BaseAddressAutoUpdate2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_DWordByteSwap2_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_DWordByteSwap2_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_DWordByteSwap2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_DWordByteSwap2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_pixeng_fetchlayer1_DWordByteSwap2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2 - Source buffer dimensions of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineWidth2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineWidth2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineWidth2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineWidth2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineWidth2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineCount2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineCount2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineCount2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineCount2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_pixeng_fetchlayer1_LineCount2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2 - Size of color components for RGB, YUV and index formats (layer 2). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsAlpha2_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsAlpha2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsAlpha2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsAlpha2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsAlpha2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsBlue2_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsBlue2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsBlue2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsBlue2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsBlue2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsGreen2_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsGreen2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsGreen2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsGreen2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsGreen2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsRed2_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsRed2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsRed2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsRed2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ComponentBitsRed2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ITUFormat2_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ITUFormat2_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ITUFormat2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ITUFormat2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS2_pixeng_fetchlayer1_ITUFormat2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2 - Bit position of color components for RGB, YUV and index formats (layer 2). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftAlpha2_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftAlpha2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftAlpha2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftAlpha2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftAlpha2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftBlue2_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftBlue2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftBlue2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftBlue2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftBlue2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftGreen2_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftGreen2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftGreen2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftGreen2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftGreen2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftRed2_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftRed2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftRed2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftRed2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_pixeng_fetchlayer1_ComponentShiftRed2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET2 - Position of layer 2 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerXOffset2_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerXOffset2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerXOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerXOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerXOffset2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerYOffset2_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerYOffset2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerYOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerYOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET2_pixeng_fetchlayer1_LayerYOffset2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2 - Clip window position for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowXOffset2_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowXOffset2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowXOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowXOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowXOffset2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowYOffset2_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowYOffset2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowYOffset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowYOffset2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET2_pixeng_fetchlayer1_ClipWindowYOffset2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2 - Clip window size for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowWidth2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowWidth2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowWidth2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowWidth2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowWidth2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowHeight2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowHeight2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowHeight2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowHeight2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_pixeng_fetchlayer1_ClipWindowHeight2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR2 - Constant color for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantAlpha2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantAlpha2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantAlpha2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantAlpha2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantAlpha2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantBlue2_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantBlue2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantBlue2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantBlue2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantBlue2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantGreen2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantGreen2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantGreen2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantGreen2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantGreen2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantRed2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantRed2_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantRed2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantRed2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR2_pixeng_fetchlayer1_ConstantRed2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY2 - Common properties of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PaletteEnable2_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PaletteEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PaletteEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PaletteEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PaletteEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_TileMode2_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_TileMode2_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode2
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_TileMode2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_TileMode2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_TileMode2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaSrcEnable2_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaSrcEnable2_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaSrcEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaSrcEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaSrcEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaConstEnable2_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaConstEnable2_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaConstEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaConstEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaConstEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaTransEnable2_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaTransEnable2_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaTransEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaTransEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_AlphaTransEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaSrcEnable2_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaSrcEnable2_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaSrcEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaSrcEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaSrcEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaConstEnable2_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaConstEnable2_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaConstEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaConstEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaConstEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaTransEnable2_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaTransEnable2_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaTransEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaTransEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_RGBAlphaTransEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PremulConstRGB2_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PremulConstRGB2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PremulConstRGB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PremulConstRGB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_PremulConstRGB2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_YUVConversionMode2_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_YUVConversionMode2_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode2
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_YUVConversionMode2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_YUVConversionMode2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_YUVConversionMode2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_GammaRemoveEnable2_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_GammaRemoveEnable2_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_GammaRemoveEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_GammaRemoveEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_GammaRemoveEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_ClipWindowEnable2_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_ClipWindowEnable2_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_ClipWindowEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_ClipWindowEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_ClipWindowEnable2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_SourceBufferEnable2_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_SourceBufferEnable2_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_SourceBufferEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_SourceBufferEnable2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY2_pixeng_fetchlayer1_SourceBufferEnable2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS3_pixeng_fetchlayer1_BaseAddress3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS3_pixeng_fetchlayer1_BaseAddress3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS3_pixeng_fetchlayer1_BaseAddress3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS3_pixeng_fetchlayer1_BaseAddress3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS3_pixeng_fetchlayer1_BaseAddress3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB3_pixeng_fetchlayer1_BaseAddressMSB3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB3_pixeng_fetchlayer1_BaseAddressMSB3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB3_pixeng_fetchlayer1_BaseAddressMSB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB3_pixeng_fetchlayer1_BaseAddressMSB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB3_pixeng_fetchlayer1_BaseAddressMSB3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer1_AutoUpdateBaseAddress3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer1_AutoUpdateBaseAddress3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer1_AutoUpdateBaseAddress3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer1_AutoUpdateBaseAddress3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS3_pixeng_fetchlayer1_AutoUpdateBaseAddress3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB3_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3 - Source buffer attributes for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_Stride3_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_Stride3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_Stride3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_Stride3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_Stride3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BitsPerPixel3_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BitsPerPixel3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BitsPerPixel3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BitsPerPixel3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BitsPerPixel3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BaseAddressAutoUpdate3_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BaseAddressAutoUpdate3_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BaseAddressAutoUpdate3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BaseAddressAutoUpdate3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_BaseAddressAutoUpdate3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_DWordByteSwap3_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_DWordByteSwap3_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_DWordByteSwap3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_DWordByteSwap3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_pixeng_fetchlayer1_DWordByteSwap3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3 - Source buffer dimensions of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineWidth3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineWidth3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineWidth3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineWidth3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineWidth3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineCount3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineCount3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineCount3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineCount3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_pixeng_fetchlayer1_LineCount3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3 - Size of color components for RGB, YUV and index formats (layer 3). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsAlpha3_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsAlpha3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsAlpha3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsAlpha3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsAlpha3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsBlue3_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsBlue3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsBlue3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsBlue3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsBlue3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsGreen3_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsGreen3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsGreen3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsGreen3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsGreen3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsRed3_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsRed3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsRed3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsRed3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ComponentBitsRed3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ITUFormat3_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ITUFormat3_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ITUFormat3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ITUFormat3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS3_pixeng_fetchlayer1_ITUFormat3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3 - Bit position of color components for RGB, YUV and index formats (layer 3). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftAlpha3_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftAlpha3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftAlpha3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftAlpha3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftAlpha3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftBlue3_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftBlue3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftBlue3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftBlue3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftBlue3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftGreen3_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftGreen3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftGreen3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftGreen3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftGreen3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftRed3_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftRed3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftRed3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftRed3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_pixeng_fetchlayer1_ComponentShiftRed3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET3 - Position of layer 3 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerXOffset3_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerXOffset3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerXOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerXOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerXOffset3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerYOffset3_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerYOffset3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerYOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerYOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET3_pixeng_fetchlayer1_LayerYOffset3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3 - Clip window position for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowXOffset3_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowXOffset3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowXOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowXOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowXOffset3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowYOffset3_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowYOffset3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowYOffset3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowYOffset3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET3_pixeng_fetchlayer1_ClipWindowYOffset3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3 - Clip window size for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowWidth3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowWidth3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowWidth3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowWidth3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowWidth3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowHeight3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowHeight3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowHeight3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowHeight3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_pixeng_fetchlayer1_ClipWindowHeight3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR3 - Constant color for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantAlpha3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantAlpha3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantAlpha3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantAlpha3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantAlpha3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantBlue3_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantBlue3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantBlue3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantBlue3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantBlue3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantGreen3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantGreen3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantGreen3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantGreen3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantGreen3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantRed3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantRed3_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantRed3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantRed3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR3_pixeng_fetchlayer1_ConstantRed3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY3 - Common properties of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PaletteEnable3_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PaletteEnable3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PaletteEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PaletteEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PaletteEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_TileMode3_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_TileMode3_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode3
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_TileMode3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_TileMode3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_TileMode3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaSrcEnable3_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaSrcEnable3_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaSrcEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaSrcEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaSrcEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaConstEnable3_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaConstEnable3_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaConstEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaConstEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaConstEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaTransEnable3_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaTransEnable3_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaTransEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaTransEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_AlphaTransEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaSrcEnable3_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaSrcEnable3_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaSrcEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaSrcEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaSrcEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaConstEnable3_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaConstEnable3_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaConstEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaConstEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaConstEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaTransEnable3_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaTransEnable3_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaTransEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaTransEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_RGBAlphaTransEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PremulConstRGB3_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PremulConstRGB3_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PremulConstRGB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PremulConstRGB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_PremulConstRGB3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_YUVConversionMode3_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_YUVConversionMode3_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode3
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_YUVConversionMode3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_YUVConversionMode3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_YUVConversionMode3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_GammaRemoveEnable3_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_GammaRemoveEnable3_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_GammaRemoveEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_GammaRemoveEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_GammaRemoveEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_ClipWindowEnable3_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_ClipWindowEnable3_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_ClipWindowEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_ClipWindowEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_ClipWindowEnable3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_SourceBufferEnable3_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_SourceBufferEnable3_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_SourceBufferEnable3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_SourceBufferEnable3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY3_pixeng_fetchlayer1_SourceBufferEnable3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS4_pixeng_fetchlayer1_BaseAddress4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS4_pixeng_fetchlayer1_BaseAddress4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS4_pixeng_fetchlayer1_BaseAddress4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS4_pixeng_fetchlayer1_BaseAddress4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS4_pixeng_fetchlayer1_BaseAddress4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB4_pixeng_fetchlayer1_BaseAddressMSB4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB4_pixeng_fetchlayer1_BaseAddressMSB4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB4_pixeng_fetchlayer1_BaseAddressMSB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB4_pixeng_fetchlayer1_BaseAddressMSB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB4_pixeng_fetchlayer1_BaseAddressMSB4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer1_AutoUpdateBaseAddress4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer1_AutoUpdateBaseAddress4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer1_AutoUpdateBaseAddress4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer1_AutoUpdateBaseAddress4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS4_pixeng_fetchlayer1_AutoUpdateBaseAddress4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB4_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4 - Source buffer attributes for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_Stride4_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_Stride4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_Stride4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_Stride4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_Stride4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BitsPerPixel4_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BitsPerPixel4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BitsPerPixel4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BitsPerPixel4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BitsPerPixel4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BaseAddressAutoUpdate4_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BaseAddressAutoUpdate4_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BaseAddressAutoUpdate4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BaseAddressAutoUpdate4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_BaseAddressAutoUpdate4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_DWordByteSwap4_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_DWordByteSwap4_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_DWordByteSwap4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_DWordByteSwap4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_pixeng_fetchlayer1_DWordByteSwap4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4 - Source buffer dimensions of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineWidth4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineWidth4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineWidth4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineWidth4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineWidth4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineCount4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineCount4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineCount4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineCount4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_pixeng_fetchlayer1_LineCount4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4 - Size of color components for RGB, YUV and index formats (layer 4). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsAlpha4_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsAlpha4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsAlpha4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsAlpha4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsAlpha4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsBlue4_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsBlue4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsBlue4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsBlue4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsBlue4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsGreen4_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsGreen4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsGreen4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsGreen4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsGreen4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsRed4_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsRed4_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsRed4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsRed4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ComponentBitsRed4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ITUFormat4_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ITUFormat4_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ITUFormat4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ITUFormat4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS4_pixeng_fetchlayer1_ITUFormat4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4 - Bit position of color components for RGB, YUV and index formats (layer 4). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftAlpha4_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftAlpha4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftAlpha4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftAlpha4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftAlpha4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftBlue4_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftBlue4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftBlue4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftBlue4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftBlue4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftGreen4_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftGreen4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftGreen4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftGreen4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftGreen4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftRed4_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftRed4_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftRed4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftRed4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_pixeng_fetchlayer1_ComponentShiftRed4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET4 - Position of layer 4 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerXOffset4_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerXOffset4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerXOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerXOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerXOffset4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerYOffset4_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerYOffset4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerYOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerYOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET4_pixeng_fetchlayer1_LayerYOffset4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4 - Clip window position for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowXOffset4_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowXOffset4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowXOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowXOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowXOffset4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowYOffset4_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowYOffset4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowYOffset4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowYOffset4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET4_pixeng_fetchlayer1_ClipWindowYOffset4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4 - Clip window size for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowWidth4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowWidth4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowWidth4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowWidth4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowWidth4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowHeight4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowHeight4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowHeight4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowHeight4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_pixeng_fetchlayer1_ClipWindowHeight4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR4 - Constant color for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantAlpha4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantAlpha4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantAlpha4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantAlpha4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantAlpha4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantBlue4_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantBlue4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantBlue4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantBlue4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantBlue4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantGreen4_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantGreen4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantGreen4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantGreen4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantGreen4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantRed4_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantRed4_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantRed4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantRed4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR4_pixeng_fetchlayer1_ConstantRed4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY4 - Common properties of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PaletteEnable4_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PaletteEnable4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PaletteEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PaletteEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PaletteEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_TileMode4_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_TileMode4_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode4
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_TileMode4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_TileMode4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_TileMode4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaSrcEnable4_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaSrcEnable4_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaSrcEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaSrcEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaSrcEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaConstEnable4_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaConstEnable4_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaConstEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaConstEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaConstEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaTransEnable4_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaTransEnable4_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaTransEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaTransEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_AlphaTransEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaSrcEnable4_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaSrcEnable4_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaSrcEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaSrcEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaSrcEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaConstEnable4_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaConstEnable4_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaConstEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaConstEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaConstEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaTransEnable4_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaTransEnable4_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaTransEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaTransEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_RGBAlphaTransEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PremulConstRGB4_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PremulConstRGB4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PremulConstRGB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PremulConstRGB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_PremulConstRGB4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_YUVConversionMode4_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_YUVConversionMode4_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode4
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_YUVConversionMode4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_YUVConversionMode4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_YUVConversionMode4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_GammaRemoveEnable4_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_GammaRemoveEnable4_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_GammaRemoveEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_GammaRemoveEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_GammaRemoveEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_ClipWindowEnable4_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_ClipWindowEnable4_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_ClipWindowEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_ClipWindowEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_ClipWindowEnable4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_SourceBufferEnable4_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_SourceBufferEnable4_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_SourceBufferEnable4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_SourceBufferEnable4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY4_pixeng_fetchlayer1_SourceBufferEnable4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS5_pixeng_fetchlayer1_BaseAddress5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS5_pixeng_fetchlayer1_BaseAddress5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS5_pixeng_fetchlayer1_BaseAddress5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS5_pixeng_fetchlayer1_BaseAddress5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS5_pixeng_fetchlayer1_BaseAddress5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB5_pixeng_fetchlayer1_BaseAddressMSB5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB5_pixeng_fetchlayer1_BaseAddressMSB5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB5_pixeng_fetchlayer1_BaseAddressMSB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB5_pixeng_fetchlayer1_BaseAddressMSB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB5_pixeng_fetchlayer1_BaseAddressMSB5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer1_AutoUpdateBaseAddress5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer1_AutoUpdateBaseAddress5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer1_AutoUpdateBaseAddress5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer1_AutoUpdateBaseAddress5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS5_pixeng_fetchlayer1_AutoUpdateBaseAddress5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB5_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5 - Source buffer attributes for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_Stride5_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_Stride5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_Stride5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_Stride5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_Stride5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BitsPerPixel5_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BitsPerPixel5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BitsPerPixel5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BitsPerPixel5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BitsPerPixel5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BaseAddressAutoUpdate5_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BaseAddressAutoUpdate5_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BaseAddressAutoUpdate5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BaseAddressAutoUpdate5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_BaseAddressAutoUpdate5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_DWordByteSwap5_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_DWordByteSwap5_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_DWordByteSwap5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_DWordByteSwap5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_pixeng_fetchlayer1_DWordByteSwap5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5 - Source buffer dimensions of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineWidth5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineWidth5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineWidth5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineWidth5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineWidth5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineCount5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineCount5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineCount5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineCount5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_pixeng_fetchlayer1_LineCount5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5 - Size of color components for RGB, YUV and index formats (layer 5). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsAlpha5_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsAlpha5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsAlpha5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsAlpha5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsAlpha5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsBlue5_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsBlue5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsBlue5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsBlue5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsBlue5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsGreen5_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsGreen5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsGreen5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsGreen5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsGreen5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsRed5_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsRed5_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsRed5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsRed5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ComponentBitsRed5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ITUFormat5_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ITUFormat5_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ITUFormat5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ITUFormat5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS5_pixeng_fetchlayer1_ITUFormat5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5 - Bit position of color components for RGB, YUV and index formats (layer 5). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftAlpha5_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftAlpha5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftAlpha5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftAlpha5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftAlpha5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftBlue5_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftBlue5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftBlue5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftBlue5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftBlue5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftGreen5_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftGreen5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftGreen5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftGreen5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftGreen5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftRed5_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftRed5_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftRed5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftRed5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_pixeng_fetchlayer1_ComponentShiftRed5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET5 - Position of layer 5 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerXOffset5_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerXOffset5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerXOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerXOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerXOffset5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerYOffset5_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerYOffset5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerYOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerYOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET5_pixeng_fetchlayer1_LayerYOffset5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5 - Clip window position for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowXOffset5_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowXOffset5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowXOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowXOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowXOffset5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowYOffset5_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowYOffset5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowYOffset5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowYOffset5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET5_pixeng_fetchlayer1_ClipWindowYOffset5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5 - Clip window size for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowWidth5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowWidth5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowWidth5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowWidth5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowWidth5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowHeight5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowHeight5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowHeight5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowHeight5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_pixeng_fetchlayer1_ClipWindowHeight5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR5 - Constant color for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantAlpha5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantAlpha5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantAlpha5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantAlpha5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantAlpha5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantBlue5_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantBlue5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantBlue5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantBlue5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantBlue5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantGreen5_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantGreen5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantGreen5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantGreen5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantGreen5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantRed5_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantRed5_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantRed5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantRed5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR5_pixeng_fetchlayer1_ConstantRed5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY5 - Common properties of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PaletteEnable5_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PaletteEnable5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PaletteEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PaletteEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PaletteEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_TileMode5_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_TileMode5_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode5
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_TileMode5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_TileMode5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_TileMode5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaSrcEnable5_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaSrcEnable5_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaSrcEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaSrcEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaSrcEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaConstEnable5_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaConstEnable5_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaConstEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaConstEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaConstEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaTransEnable5_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaTransEnable5_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaTransEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaTransEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_AlphaTransEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaSrcEnable5_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaSrcEnable5_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaSrcEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaSrcEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaSrcEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaConstEnable5_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaConstEnable5_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaConstEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaConstEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaConstEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaTransEnable5_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaTransEnable5_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaTransEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaTransEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_RGBAlphaTransEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PremulConstRGB5_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PremulConstRGB5_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PremulConstRGB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PremulConstRGB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_PremulConstRGB5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_YUVConversionMode5_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_YUVConversionMode5_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode5
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_YUVConversionMode5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_YUVConversionMode5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_YUVConversionMode5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_GammaRemoveEnable5_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_GammaRemoveEnable5_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_GammaRemoveEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_GammaRemoveEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_GammaRemoveEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_ClipWindowEnable5_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_ClipWindowEnable5_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_ClipWindowEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_ClipWindowEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_ClipWindowEnable5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_SourceBufferEnable5_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_SourceBufferEnable5_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_SourceBufferEnable5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_SourceBufferEnable5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY5_pixeng_fetchlayer1_SourceBufferEnable5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS6_pixeng_fetchlayer1_BaseAddress6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS6_pixeng_fetchlayer1_BaseAddress6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS6_pixeng_fetchlayer1_BaseAddress6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS6_pixeng_fetchlayer1_BaseAddress6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS6_pixeng_fetchlayer1_BaseAddress6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB6_pixeng_fetchlayer1_BaseAddressMSB6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB6_pixeng_fetchlayer1_BaseAddressMSB6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB6_pixeng_fetchlayer1_BaseAddressMSB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB6_pixeng_fetchlayer1_BaseAddressMSB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB6_pixeng_fetchlayer1_BaseAddressMSB6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer1_AutoUpdateBaseAddress6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer1_AutoUpdateBaseAddress6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer1_AutoUpdateBaseAddress6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer1_AutoUpdateBaseAddress6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS6_pixeng_fetchlayer1_AutoUpdateBaseAddress6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB6_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6 - Source buffer attributes for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_Stride6_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_Stride6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_Stride6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_Stride6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_Stride6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BitsPerPixel6_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BitsPerPixel6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BitsPerPixel6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BitsPerPixel6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BitsPerPixel6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BaseAddressAutoUpdate6_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BaseAddressAutoUpdate6_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BaseAddressAutoUpdate6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BaseAddressAutoUpdate6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_BaseAddressAutoUpdate6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_DWordByteSwap6_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_DWordByteSwap6_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_DWordByteSwap6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_DWordByteSwap6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_pixeng_fetchlayer1_DWordByteSwap6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6 - Source buffer dimensions of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineWidth6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineWidth6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineWidth6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineWidth6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineWidth6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineCount6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineCount6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineCount6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineCount6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_pixeng_fetchlayer1_LineCount6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6 - Size of color components for RGB, YUV and index formats (layer 6). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsAlpha6_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsAlpha6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsAlpha6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsAlpha6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsAlpha6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsBlue6_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsBlue6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsBlue6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsBlue6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsBlue6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsGreen6_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsGreen6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsGreen6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsGreen6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsGreen6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsRed6_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsRed6_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsRed6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsRed6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ComponentBitsRed6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ITUFormat6_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ITUFormat6_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ITUFormat6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ITUFormat6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS6_pixeng_fetchlayer1_ITUFormat6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6 - Bit position of color components for RGB, YUV and index formats (layer 6). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftAlpha6_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftAlpha6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftAlpha6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftAlpha6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftAlpha6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftBlue6_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftBlue6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftBlue6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftBlue6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftBlue6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftGreen6_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftGreen6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftGreen6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftGreen6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftGreen6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftRed6_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftRed6_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftRed6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftRed6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_pixeng_fetchlayer1_ComponentShiftRed6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET6 - Position of layer 6 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerXOffset6_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerXOffset6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerXOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerXOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerXOffset6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerYOffset6_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerYOffset6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerYOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerYOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET6_pixeng_fetchlayer1_LayerYOffset6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6 - Clip window position for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowXOffset6_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowXOffset6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowXOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowXOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowXOffset6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowYOffset6_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowYOffset6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowYOffset6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowYOffset6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET6_pixeng_fetchlayer1_ClipWindowYOffset6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6 - Clip window size for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowWidth6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowWidth6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowWidth6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowWidth6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowWidth6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowHeight6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowHeight6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowHeight6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowHeight6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_pixeng_fetchlayer1_ClipWindowHeight6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR6 - Constant color for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantAlpha6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantAlpha6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantAlpha6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantAlpha6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantAlpha6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantBlue6_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantBlue6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantBlue6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantBlue6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantBlue6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantGreen6_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantGreen6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantGreen6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantGreen6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantGreen6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantRed6_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantRed6_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantRed6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantRed6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR6_pixeng_fetchlayer1_ConstantRed6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY6 - Common properties of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PaletteEnable6_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PaletteEnable6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PaletteEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PaletteEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PaletteEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_TileMode6_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_TileMode6_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode6
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_TileMode6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_TileMode6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_TileMode6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaSrcEnable6_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaSrcEnable6_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaSrcEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaSrcEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaSrcEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaConstEnable6_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaConstEnable6_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaConstEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaConstEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaConstEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaTransEnable6_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaTransEnable6_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaTransEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaTransEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_AlphaTransEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaSrcEnable6_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaSrcEnable6_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaSrcEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaSrcEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaSrcEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaConstEnable6_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaConstEnable6_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaConstEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaConstEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaConstEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaTransEnable6_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaTransEnable6_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaTransEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaTransEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_RGBAlphaTransEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PremulConstRGB6_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PremulConstRGB6_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PremulConstRGB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PremulConstRGB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_PremulConstRGB6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_YUVConversionMode6_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_YUVConversionMode6_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode6
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_YUVConversionMode6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_YUVConversionMode6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_YUVConversionMode6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_GammaRemoveEnable6_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_GammaRemoveEnable6_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_GammaRemoveEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_GammaRemoveEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_GammaRemoveEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_ClipWindowEnable6_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_ClipWindowEnable6_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_ClipWindowEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_ClipWindowEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_ClipWindowEnable6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_SourceBufferEnable6_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_SourceBufferEnable6_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_SourceBufferEnable6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_SourceBufferEnable6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY6_pixeng_fetchlayer1_SourceBufferEnable6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESS7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS7_pixeng_fetchlayer1_BaseAddress7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS7_pixeng_fetchlayer1_BaseAddress7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS7_pixeng_fetchlayer1_BaseAddress7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS7_pixeng_fetchlayer1_BaseAddress7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESS7_pixeng_fetchlayer1_BaseAddress7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BASEADDRESSMSB7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB7_pixeng_fetchlayer1_BaseAddressMSB7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB7_pixeng_fetchlayer1_BaseAddressMSB7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB7_pixeng_fetchlayer1_BaseAddressMSB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB7_pixeng_fetchlayer1_BaseAddressMSB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BASEADDRESSMSB7_pixeng_fetchlayer1_BaseAddressMSB7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer1_AutoUpdateBaseAddress7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer1_AutoUpdateBaseAddress7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer1_AutoUpdateBaseAddress7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer1_AutoUpdateBaseAddress7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESS7_pixeng_fetchlayer1_AutoUpdateBaseAddress7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_AUTOUPDATEBASEADDRESSMSB7_pixeng_fetchlayer1_AutoUpdateBaseAddressMSB7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7 - Source buffer attributes for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_Stride7_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_Stride7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_Stride7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_Stride7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_Stride7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BitsPerPixel7_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BitsPerPixel7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BitsPerPixel7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BitsPerPixel7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BitsPerPixel7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BaseAddressAutoUpdate7_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BaseAddressAutoUpdate7_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BaseAddressAutoUpdate7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BaseAddressAutoUpdate7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_BaseAddressAutoUpdate7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_DWordByteSwap7_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_DWordByteSwap7_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_DWordByteSwap7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_DWordByteSwap7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_pixeng_fetchlayer1_DWordByteSwap7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7 - Source buffer dimensions of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineWidth7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineWidth7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineWidth7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineWidth7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineWidth7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineCount7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineCount7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineCount7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineCount7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_pixeng_fetchlayer1_LineCount7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7 - Size of color components for RGB, YUV and index formats (layer 7). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsAlpha7_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsAlpha7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsAlpha7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsAlpha7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsAlpha7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsBlue7_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsBlue7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsBlue7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsBlue7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsBlue7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsGreen7_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsGreen7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsGreen7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsGreen7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsGreen7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsRed7_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsRed7_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsRed7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsRed7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ComponentBitsRed7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ITUFormat7_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ITUFormat7_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ITUFormat7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ITUFormat7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTBITS7_pixeng_fetchlayer1_ITUFormat7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7 - Bit position of color components for RGB, YUV and index formats (layer 7). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftAlpha7_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftAlpha7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftAlpha7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftAlpha7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftAlpha7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftBlue7_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftBlue7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftBlue7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftBlue7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftBlue7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftGreen7_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftGreen7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftGreen7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftGreen7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftGreen7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftRed7_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftRed7_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftRed7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftRed7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_pixeng_fetchlayer1_ComponentShiftRed7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYEROFFSET7 - Position of layer 7 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerXOffset7_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerXOffset7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerXOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerXOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerXOffset7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerYOffset7_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerYOffset7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerYOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerYOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYEROFFSET7_pixeng_fetchlayer1_LayerYOffset7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7 - Clip window position for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowXOffset7_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowXOffset7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowXOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowXOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowXOffset7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowYOffset7_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowYOffset7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowYOffset7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowYOffset7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWOFFSET7_pixeng_fetchlayer1_ClipWindowYOffset7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7 - Clip window size for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowWidth7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowWidth7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowWidth7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowWidth7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowWidth7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowHeight7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowHeight7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowHeight7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowHeight7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_pixeng_fetchlayer1_ClipWindowHeight7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONSTANTCOLOR7 - Constant color for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantAlpha7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantAlpha7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantAlpha7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantAlpha7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantAlpha7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantBlue7_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantBlue7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantBlue7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantBlue7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantBlue7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantGreen7_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantGreen7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantGreen7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantGreen7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantGreen7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantRed7_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantRed7_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantRed7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantRed7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONSTANTCOLOR7_pixeng_fetchlayer1_ConstantRed7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_LAYERPROPERTY7 - Common properties of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PaletteEnable7_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PaletteEnable7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PaletteEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PaletteEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PaletteEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_TileMode7_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_TileMode7_SHIFT (4U)
/*! pixeng_fetchlayer1_TileMode7
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_TileMode7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_TileMode7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_TileMode7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaSrcEnable7_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaSrcEnable7_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaSrcEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaSrcEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaSrcEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaConstEnable7_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaConstEnable7_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaConstEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaConstEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaConstEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaTransEnable7_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaTransEnable7_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaTransEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaTransEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_AlphaTransEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaSrcEnable7_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaSrcEnable7_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaSrcEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaSrcEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaSrcEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaConstEnable7_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaConstEnable7_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaConstEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaConstEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaConstEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaTransEnable7_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaTransEnable7_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaTransEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaTransEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_RGBAlphaTransEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PremulConstRGB7_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PremulConstRGB7_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PremulConstRGB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PremulConstRGB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_PremulConstRGB7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_YUVConversionMode7_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_YUVConversionMode7_SHIFT (17U)
/*! pixeng_fetchlayer1_YUVConversionMode7
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_YUVConversionMode7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_YUVConversionMode7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_YUVConversionMode7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_GammaRemoveEnable7_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_GammaRemoveEnable7_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_GammaRemoveEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_GammaRemoveEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_GammaRemoveEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_ClipWindowEnable7_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_ClipWindowEnable7_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_ClipWindowEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_ClipWindowEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_ClipWindowEnable7_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_SourceBufferEnable7_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_SourceBufferEnable7_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_SourceBufferEnable7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_SourceBufferEnable7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_LAYERPROPERTY7_pixeng_fetchlayer1_SourceBufferEnable7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMEDIMENSIONS_pixeng_fetchlayer1_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FRAMERESAMPLING_pixeng_fetchlayer1_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_PaletteIdxWidth_MASK (0x700U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_PaletteIdxWidth_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_PaletteIdxWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_PaletteIdxWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_PaletteIdxWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipColor_SHIFT (16U)
/*! pixeng_fetchlayer1_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipColor_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipLayer_MASK (0x1E0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipLayer_SHIFT (17U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipLayer(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipLayer_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROL_pixeng_fetchlayer1_ClipLayer_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_TRIGGERENABLE - Shadow load enable flags for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq1_MASK (0x2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq1_SHIFT (1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq2_MASK (0x4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq2_SHIFT (2U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq3_MASK (0x8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq3_SHIFT (3U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq4_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq4_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq5_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq5_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq6_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq6_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq7_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq7_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_TRIGGERENABLE_pixeng_fetchlayer1_ShdLdReq7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROLTRIGGER_pixeng_fetchlayer1_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROLTRIGGER_pixeng_fetchlayer1_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROLTRIGGER_pixeng_fetchlayer1_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROLTRIGGER_pixeng_fetchlayer1_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CONTROLTRIGGER_pixeng_fetchlayer1_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_START_pixeng_fetchlayer1_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_START_pixeng_fetchlayer1_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_START_pixeng_fetchlayer1_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_START_pixeng_fetchlayer1_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_START_pixeng_fetchlayer1_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FETCHTYPE_pixeng_fetchlayer1_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FETCHTYPE_pixeng_fetchlayer1_FetchType_SHIFT (0U)
/*! pixeng_fetchlayer1_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FETCHTYPE_pixeng_fetchlayer1_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FETCHTYPE_pixeng_fetchlayer1_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_FETCHTYPE_pixeng_fetchlayer1_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_pixeng_fetchlayer1_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_STATUS_pixeng_fetchlayer1_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS0_pixeng_fetchlayer1_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS0_pixeng_fetchlayer1_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS0_pixeng_fetchlayer1_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS0_pixeng_fetchlayer1_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS0_pixeng_fetchlayer1_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB0_pixeng_fetchlayer1_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB0_pixeng_fetchlayer1_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB0_pixeng_fetchlayer1_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB0_pixeng_fetchlayer1_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB0_pixeng_fetchlayer1_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS1 - Source buffer base address of layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS1_pixeng_fetchlayer1_CurBaseAddress1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS1_pixeng_fetchlayer1_CurBaseAddress1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS1_pixeng_fetchlayer1_CurBaseAddress1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS1_pixeng_fetchlayer1_CurBaseAddress1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS1_pixeng_fetchlayer1_CurBaseAddress1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB1 - MSB bits of Current Working BaseAddress for layer 1. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB1_pixeng_fetchlayer1_CurBaseAddressMSB1_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB1_pixeng_fetchlayer1_CurBaseAddressMSB1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB1_pixeng_fetchlayer1_CurBaseAddressMSB1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB1_pixeng_fetchlayer1_CurBaseAddressMSB1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB1_pixeng_fetchlayer1_CurBaseAddressMSB1_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS2 - Source buffer base address of layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS2_pixeng_fetchlayer1_CurBaseAddress2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS2_pixeng_fetchlayer1_CurBaseAddress2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS2_pixeng_fetchlayer1_CurBaseAddress2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS2_pixeng_fetchlayer1_CurBaseAddress2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS2_pixeng_fetchlayer1_CurBaseAddress2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB2 - MSB bits of Current Working BaseAddress for layer 2. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB2_pixeng_fetchlayer1_CurBaseAddressMSB2_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB2_pixeng_fetchlayer1_CurBaseAddressMSB2_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB2_pixeng_fetchlayer1_CurBaseAddressMSB2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB2_pixeng_fetchlayer1_CurBaseAddressMSB2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB2_pixeng_fetchlayer1_CurBaseAddressMSB2_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS3 - Source buffer base address of layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS3_pixeng_fetchlayer1_CurBaseAddress3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS3_pixeng_fetchlayer1_CurBaseAddress3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS3_pixeng_fetchlayer1_CurBaseAddress3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS3_pixeng_fetchlayer1_CurBaseAddress3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS3_pixeng_fetchlayer1_CurBaseAddress3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB3 - MSB bits of Current Working BaseAddress for layer 3. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB3_pixeng_fetchlayer1_CurBaseAddressMSB3_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB3_pixeng_fetchlayer1_CurBaseAddressMSB3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB3_pixeng_fetchlayer1_CurBaseAddressMSB3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB3_pixeng_fetchlayer1_CurBaseAddressMSB3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB3_pixeng_fetchlayer1_CurBaseAddressMSB3_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS4 - Source buffer base address of layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS4_pixeng_fetchlayer1_CurBaseAddress4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS4_pixeng_fetchlayer1_CurBaseAddress4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS4_pixeng_fetchlayer1_CurBaseAddress4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS4_pixeng_fetchlayer1_CurBaseAddress4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS4_pixeng_fetchlayer1_CurBaseAddress4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB4 - MSB bits of Current Working BaseAddress for layer 4. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB4_pixeng_fetchlayer1_CurBaseAddressMSB4_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB4_pixeng_fetchlayer1_CurBaseAddressMSB4_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB4_pixeng_fetchlayer1_CurBaseAddressMSB4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB4_pixeng_fetchlayer1_CurBaseAddressMSB4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB4_pixeng_fetchlayer1_CurBaseAddressMSB4_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS5 - Source buffer base address of layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS5_pixeng_fetchlayer1_CurBaseAddress5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS5_pixeng_fetchlayer1_CurBaseAddress5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS5_pixeng_fetchlayer1_CurBaseAddress5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS5_pixeng_fetchlayer1_CurBaseAddress5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS5_pixeng_fetchlayer1_CurBaseAddress5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB5 - MSB bits of Current Working BaseAddress for layer 5. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB5_pixeng_fetchlayer1_CurBaseAddressMSB5_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB5_pixeng_fetchlayer1_CurBaseAddressMSB5_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB5_pixeng_fetchlayer1_CurBaseAddressMSB5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB5_pixeng_fetchlayer1_CurBaseAddressMSB5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB5_pixeng_fetchlayer1_CurBaseAddressMSB5_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS6 - Source buffer base address of layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS6_pixeng_fetchlayer1_CurBaseAddress6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS6_pixeng_fetchlayer1_CurBaseAddress6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS6_pixeng_fetchlayer1_CurBaseAddress6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS6_pixeng_fetchlayer1_CurBaseAddress6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS6_pixeng_fetchlayer1_CurBaseAddress6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB6 - MSB bits of Current Working BaseAddress for layer 6. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB6_pixeng_fetchlayer1_CurBaseAddressMSB6_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB6_pixeng_fetchlayer1_CurBaseAddressMSB6_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB6_pixeng_fetchlayer1_CurBaseAddressMSB6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB6_pixeng_fetchlayer1_CurBaseAddressMSB6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB6_pixeng_fetchlayer1_CurBaseAddressMSB6_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESS7 - Source buffer base address of layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS7_pixeng_fetchlayer1_CurBaseAddress7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS7_pixeng_fetchlayer1_CurBaseAddress7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS7_pixeng_fetchlayer1_CurBaseAddress7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS7_pixeng_fetchlayer1_CurBaseAddress7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESS7_pixeng_fetchlayer1_CurBaseAddress7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_CURBASEADDRESSMSB7 - MSB bits of Current Working BaseAddress for layer 7. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB7_pixeng_fetchlayer1_CurBaseAddressMSB7_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB7_pixeng_fetchlayer1_CurBaseAddressMSB7_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB7_pixeng_fetchlayer1_CurBaseAddressMSB7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB7_pixeng_fetchlayer1_CurBaseAddressMSB7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_CURBASEADDRESSMSB7_pixeng_fetchlayer1_CurBaseAddressMSB7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus1_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus1_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus1_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus1_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus2_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus2_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus2_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus2_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus3_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus3_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus3_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus3_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus4_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus4_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus4_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus4_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus5_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus5_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus5_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus5_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus6_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus6_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus6_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus6_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus7_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus7_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus7_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_HIDDENSTATUS_pixeng_fetchlayer1_ShadowStatus7_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1_COLORPALETTE - Color palette look up table. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORPALETTE_pixeng_fetchlayer1_ColorPalette_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORPALETTE_pixeng_fetchlayer1_ColorPalette_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORPALETTE_pixeng_fetchlayer1_ColorPalette(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORPALETTE_pixeng_fetchlayer1_ColorPalette_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1_COLORPALETTE_pixeng_fetchlayer1_ColorPalette_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1cfg_fetchlayer1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1cfg_fetchlayer1_LockUnlock_SHIFT (0U)
/*! pixeng_fetchlayer1cfg_fetchlayer1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1cfg_fetchlayer1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1cfg_fetchlayer1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKUNLOCK_pixeng_fetchlayer1cfg_fetchlayer1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_LOCKSTATUS_pixeng_fetchlayer1cfg_fetchlayer1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHLAYER1CFG_FETCHLAYER1_STATUS - Status information for pixel engine configuration of fetchlayer1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_STATUS_pixeng_fetchlayer1cfg_fetchlayer1_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_STATUS_pixeng_fetchlayer1cfg_fetchlayer1_sel_SHIFT (16U)
/*! pixeng_fetchlayer1cfg_fetchlayer1_sel
 *  0b000..fetchlayer1 module is not used
 *  0b001..fetchlayer1 module is used from store9 processing path
 *  0b010..fetchlayer1 module is used from extdst0 processing path
 *  0b011..fetchlayer1 module is used from extdst4 processing path
 *  0b100..fetchlayer1 module is used from extdst1 processing path
 *  0b101..fetchlayer1 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_STATUS_pixeng_fetchlayer1cfg_fetchlayer1_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_STATUS_pixeng_fetchlayer1cfg_fetchlayer1_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHLAYER1CFG_FETCHLAYER1_STATUS_pixeng_fetchlayer1cfg_fetchlayer1_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv3_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATICCONTROL_pixeng_fetchyuv3_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATICCONTROL_pixeng_fetchyuv3_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATICCONTROL_pixeng_fetchyuv3_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATICCONTROL_pixeng_fetchyuv3_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATICCONTROL_pixeng_fetchyuv3_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv3_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_RINGBUFSTARTADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDR0_pixeng_fetchyuv3_RingBufStartAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDR0_pixeng_fetchyuv3_RingBufStartAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDR0_pixeng_fetchyuv3_RingBufStartAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDR0_pixeng_fetchyuv3_RingBufStartAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDR0_pixeng_fetchyuv3_RingBufStartAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_RINGBUFSTARTADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv3_RingBufStartAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv3_RingBufStartAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv3_RingBufStartAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv3_RingBufStartAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv3_RingBufStartAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_RINGBUFWRAPADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDR0_pixeng_fetchyuv3_RingBufWrapAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDR0_pixeng_fetchyuv3_RingBufWrapAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDR0_pixeng_fetchyuv3_RingBufWrapAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDR0_pixeng_fetchyuv3_RingBufWrapAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDR0_pixeng_fetchyuv3_RingBufWrapAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_RINGBUFWRAPADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv3_RingBufWrapAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv3_RingBufWrapAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv3_RingBufWrapAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv3_RingBufWrapAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv3_RingBufWrapAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_FRAMEPROPERTIES0 - Frame property setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEPROPERTIES0_pixeng_fetchyuv3_FieldId0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEPROPERTIES0_pixeng_fetchyuv3_FieldId0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEPROPERTIES0_pixeng_fetchyuv3_FieldId0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEPROPERTIES0_pixeng_fetchyuv3_FieldId0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEPROPERTIES0_pixeng_fetchyuv3_FieldId0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESS0_pixeng_fetchyuv3_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESS0_pixeng_fetchyuv3_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESS0_pixeng_fetchyuv3_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESS0_pixeng_fetchyuv3_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESS0_pixeng_fetchyuv3_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESSMSB0_pixeng_fetchyuv3_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESSMSB0_pixeng_fetchyuv3_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESSMSB0_pixeng_fetchyuv3_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESSMSB0_pixeng_fetchyuv3_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BASEADDRESSMSB0_pixeng_fetchyuv3_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv3_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv3_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv3_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv3_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv3_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv3_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv3_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv3_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv3_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv3_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv3_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv3_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTBITS0_pixeng_fetchyuv3_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_COLORCOMPONENTSHIFT0_pixeng_fetchyuv3_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYEROFFSET0_pixeng_fetchyuv3_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWOFFSET0_pixeng_fetchyuv3_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv3_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONSTANTCOLOR0_pixeng_fetchyuv3_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_TileMode0_SHIFT (4U)
/*! pixeng_fetchyuv3_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaMaskEnable0_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaMaskEnable0_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaMaskEnable0_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaMaskEnable0_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchyuv3_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_LAYERPROPERTY0_pixeng_fetchyuv3_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMEDIMENSIONS_pixeng_fetchyuv3_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FRAMERESAMPLING_pixeng_fetchyuv3_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RasterMode_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RasterMode_SHIFT (0U)
/*! pixeng_fetchyuv3_RasterMode
 *  0b000..First sample at StartX/Y relative to origin. Hor/ver increments using DeltaX/Y and DeltaSwap setup.
 *  0b001..[FetchDecode/FetchDecodeL only] Source buffer is an encoded bit stream. First sample at origin (0,0). Hor/ver increments = (1,0)/(0,1).
 *  0b010..[FetchPersp/Warp/Rot only] Arbitrary warping (filter is active). Coordinates are read from frame input
 *         port. InputSelect must be set to COORDINATE. ArbStartX/Y and ArbDeltaXX/XY/YX/YY must be setup.
 *  0b011..[FetchPersp only] Affine/Perspective warping (filter is active). First sample at PerspStartX/Y/W.
 *         Hor/ver increments using PerspDeltaXX/XY/YX/YY/WX/WY. Homogeneous coordinates.
 *  0b100..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is U.
 *  0b101..[FetchRot/RotL only] Affine warping (filter is active). First sample at AffineStartX/Y. Hor/ver
 *         increments using AffineDeltaXX/XY/YX/YY. Cartesian coordinates.
 *  0b110..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RasterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RasterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RasterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_InputSelect_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_InputSelect_SHIFT (3U)
/*! pixeng_fetchyuv3_InputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 *  0b11..Used for arbitrary warping (coordinate buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_InputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_InputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_InputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV422UpsamplingMode_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV422UpsamplingMode_SHIFT (5U)
/*! pixeng_fetchyuv3_YUV422UpsamplingMode
 *  0b0..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b1..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV422UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV422UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV422UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ChromaHReplEn_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ChromaHReplEn_SHIFT (6U)
/*! pixeng_fetchyuv3_ChromaHReplEn
 *  0b0..Not used.
 *  0b1..Replicate mode for input samples.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ChromaHReplEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ChromaHReplEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ChromaHReplEn_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_SecInputSelect_MASK (0x1800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_SecInputSelect_SHIFT (11U)
/*! pixeng_fetchyuv3_SecInputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_SecInputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_SecInputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_SecInputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV420UpsamplingMode_MASK (0x6000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV420UpsamplingMode_SHIFT (13U)
/*! pixeng_fetchyuv3_YUV420UpsamplingMode
 *  0b00..Not used.
 *  0b01..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b10..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 *  0b11..Interpolate mode for interspersed interlaced samples (UV samples betwween Y samples).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV420UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV420UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_YUV420UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ClipColor_SHIFT (16U)
/*! pixeng_fetchyuv3_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROL_pixeng_fetchyuv3_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROLTRIGGER_pixeng_fetchyuv3_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROLTRIGGER_pixeng_fetchyuv3_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROLTRIGGER_pixeng_fetchyuv3_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROLTRIGGER_pixeng_fetchyuv3_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CONTROLTRIGGER_pixeng_fetchyuv3_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_START_pixeng_fetchyuv3_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_START_pixeng_fetchyuv3_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_START_pixeng_fetchyuv3_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_START_pixeng_fetchyuv3_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_START_pixeng_fetchyuv3_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FETCHTYPE_pixeng_fetchyuv3_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FETCHTYPE_pixeng_fetchyuv3_FetchType_SHIFT (0U)
/*! pixeng_fetchyuv3_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_FETCHTYPE_pixeng_fetchyuv3_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_FETCHTYPE_pixeng_fetchyuv3_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_FETCHTYPE_pixeng_fetchyuv3_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_READADDRESS0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESS0_pixeng_fetchyuv3_ReadAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESS0_pixeng_fetchyuv3_ReadAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESS0_pixeng_fetchyuv3_ReadAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESS0_pixeng_fetchyuv3_ReadAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESS0_pixeng_fetchyuv3_ReadAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_READADDRESSMSB0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESSMSB0_pixeng_fetchyuv3_ReadAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESSMSB0_pixeng_fetchyuv3_ReadAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESSMSB0_pixeng_fetchyuv3_ReadAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESSMSB0_pixeng_fetchyuv3_ReadAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_READADDRESSMSB0_pixeng_fetchyuv3_ReadAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_BURSTBUFFERPROPERTIES_pixeng_fetchyuv3_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_STATUS_pixeng_fetchyuv3_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESS0_pixeng_fetchyuv3_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESS0_pixeng_fetchyuv3_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESS0_pixeng_fetchyuv3_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESS0_pixeng_fetchyuv3_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESS0_pixeng_fetchyuv3_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESSMSB0_pixeng_fetchyuv3_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESSMSB0_pixeng_fetchyuv3_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESSMSB0_pixeng_fetchyuv3_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESSMSB0_pixeng_fetchyuv3_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_CURBASEADDRESSMSB0_pixeng_fetchyuv3_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3_HIDDENSTATUS_pixeng_fetchyuv3_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3cfg_fetchyuv3_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3cfg_fetchyuv3_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv3cfg_fetchyuv3_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3cfg_fetchyuv3_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3cfg_fetchyuv3_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKUNLOCK_pixeng_fetchyuv3cfg_fetchyuv3_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_LOCKSTATUS_pixeng_fetchyuv3cfg_fetchyuv3_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC - Dynamic pixel engine configuration for fetchyuv3 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_src_sel_SHIFT (0U)
/*! pixeng_fetchyuv3cfg_fetchyuv3_src_sel
 *  0b000000..Unit fetchyuv3 input port src is disabled
 *  0b000111..Unit fetchyuv3 input port src is connected to output of unit fetcheco9
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_sec_sel_SHIFT (8U)
/*! pixeng_fetchyuv3cfg_fetchyuv3_sec_sel
 *  0b000000..Unit fetchyuv3 input port sec is disabled
 *  0b100001..Unit fetchyuv3 input port sec is connected to output of unit fetchyuv2
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_DYNAMIC_pixeng_fetchyuv3cfg_fetchyuv3_sec_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV3CFG_FETCHYUV3_STATUS - Status information for pixel engine configuration of fetchyuv3 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_STATUS_pixeng_fetchyuv3cfg_fetchyuv3_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_STATUS_pixeng_fetchyuv3cfg_fetchyuv3_sel_SHIFT (16U)
/*! pixeng_fetchyuv3cfg_fetchyuv3_sel
 *  0b000..fetchyuv3 module is not used
 *  0b001..fetchyuv3 module is used from store9 processing path
 *  0b010..fetchyuv3 module is used from extdst0 processing path
 *  0b011..fetchyuv3 module is used from extdst4 processing path
 *  0b100..fetchyuv3 module is used from extdst1 processing path
 *  0b101..fetchyuv3 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_STATUS_pixeng_fetchyuv3cfg_fetchyuv3_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_STATUS_pixeng_fetchyuv3cfg_fetchyuv3_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV3CFG_FETCHYUV3_STATUS_pixeng_fetchyuv3cfg_fetchyuv3_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATICCONTROL_pixeng_fetchyuv0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATICCONTROL_pixeng_fetchyuv0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATICCONTROL_pixeng_fetchyuv0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATICCONTROL_pixeng_fetchyuv0_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATICCONTROL_pixeng_fetchyuv0_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv0_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_RINGBUFSTARTADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDR0_pixeng_fetchyuv0_RingBufStartAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDR0_pixeng_fetchyuv0_RingBufStartAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDR0_pixeng_fetchyuv0_RingBufStartAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDR0_pixeng_fetchyuv0_RingBufStartAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDR0_pixeng_fetchyuv0_RingBufStartAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_RINGBUFSTARTADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv0_RingBufStartAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv0_RingBufStartAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv0_RingBufStartAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv0_RingBufStartAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv0_RingBufStartAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_RINGBUFWRAPADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDR0_pixeng_fetchyuv0_RingBufWrapAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDR0_pixeng_fetchyuv0_RingBufWrapAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDR0_pixeng_fetchyuv0_RingBufWrapAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDR0_pixeng_fetchyuv0_RingBufWrapAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDR0_pixeng_fetchyuv0_RingBufWrapAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_RINGBUFWRAPADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv0_RingBufWrapAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv0_RingBufWrapAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv0_RingBufWrapAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv0_RingBufWrapAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv0_RingBufWrapAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_FRAMEPROPERTIES0 - Frame property setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEPROPERTIES0_pixeng_fetchyuv0_FieldId0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEPROPERTIES0_pixeng_fetchyuv0_FieldId0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEPROPERTIES0_pixeng_fetchyuv0_FieldId0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEPROPERTIES0_pixeng_fetchyuv0_FieldId0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEPROPERTIES0_pixeng_fetchyuv0_FieldId0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESS0_pixeng_fetchyuv0_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESS0_pixeng_fetchyuv0_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESS0_pixeng_fetchyuv0_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESS0_pixeng_fetchyuv0_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESS0_pixeng_fetchyuv0_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESSMSB0_pixeng_fetchyuv0_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESSMSB0_pixeng_fetchyuv0_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESSMSB0_pixeng_fetchyuv0_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESSMSB0_pixeng_fetchyuv0_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BASEADDRESSMSB0_pixeng_fetchyuv0_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv0_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv0_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv0_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv0_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv0_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv0_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv0_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv0_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv0_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv0_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv0_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv0_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTBITS0_pixeng_fetchyuv0_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_COLORCOMPONENTSHIFT0_pixeng_fetchyuv0_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYEROFFSET0_pixeng_fetchyuv0_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWOFFSET0_pixeng_fetchyuv0_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv0_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONSTANTCOLOR0_pixeng_fetchyuv0_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_TileMode0_SHIFT (4U)
/*! pixeng_fetchyuv0_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaMaskEnable0_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaMaskEnable0_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaMaskEnable0_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaMaskEnable0_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchyuv0_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_LAYERPROPERTY0_pixeng_fetchyuv0_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMEDIMENSIONS_pixeng_fetchyuv0_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FRAMERESAMPLING_pixeng_fetchyuv0_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RasterMode_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RasterMode_SHIFT (0U)
/*! pixeng_fetchyuv0_RasterMode
 *  0b000..First sample at StartX/Y relative to origin. Hor/ver increments using DeltaX/Y and DeltaSwap setup.
 *  0b001..[FetchDecode/FetchDecodeL only] Source buffer is an encoded bit stream. First sample at origin (0,0). Hor/ver increments = (1,0)/(0,1).
 *  0b010..[FetchPersp/Warp/Rot only] Arbitrary warping (filter is active). Coordinates are read from frame input
 *         port. InputSelect must be set to COORDINATE. ArbStartX/Y and ArbDeltaXX/XY/YX/YY must be setup.
 *  0b011..[FetchPersp only] Affine/Perspective warping (filter is active). First sample at PerspStartX/Y/W.
 *         Hor/ver increments using PerspDeltaXX/XY/YX/YY/WX/WY. Homogeneous coordinates.
 *  0b100..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is U.
 *  0b101..[FetchRot/RotL only] Affine warping (filter is active). First sample at AffineStartX/Y. Hor/ver
 *         increments using AffineDeltaXX/XY/YX/YY. Cartesian coordinates.
 *  0b110..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RasterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RasterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RasterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_InputSelect_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_InputSelect_SHIFT (3U)
/*! pixeng_fetchyuv0_InputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 *  0b11..Used for arbitrary warping (coordinate buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_InputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_InputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_InputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV422UpsamplingMode_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV422UpsamplingMode_SHIFT (5U)
/*! pixeng_fetchyuv0_YUV422UpsamplingMode
 *  0b0..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b1..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV422UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV422UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV422UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ChromaHReplEn_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ChromaHReplEn_SHIFT (6U)
/*! pixeng_fetchyuv0_ChromaHReplEn
 *  0b0..Not used.
 *  0b1..Replicate mode for input samples.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ChromaHReplEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ChromaHReplEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ChromaHReplEn_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_SecInputSelect_MASK (0x1800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_SecInputSelect_SHIFT (11U)
/*! pixeng_fetchyuv0_SecInputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_SecInputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_SecInputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_SecInputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV420UpsamplingMode_MASK (0x6000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV420UpsamplingMode_SHIFT (13U)
/*! pixeng_fetchyuv0_YUV420UpsamplingMode
 *  0b00..Not used.
 *  0b01..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b10..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 *  0b11..Interpolate mode for interspersed interlaced samples (UV samples betwween Y samples).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV420UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV420UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_YUV420UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ClipColor_SHIFT (16U)
/*! pixeng_fetchyuv0_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROL_pixeng_fetchyuv0_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROLTRIGGER_pixeng_fetchyuv0_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROLTRIGGER_pixeng_fetchyuv0_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROLTRIGGER_pixeng_fetchyuv0_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROLTRIGGER_pixeng_fetchyuv0_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CONTROLTRIGGER_pixeng_fetchyuv0_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_START_pixeng_fetchyuv0_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_START_pixeng_fetchyuv0_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_START_pixeng_fetchyuv0_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_START_pixeng_fetchyuv0_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_START_pixeng_fetchyuv0_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FETCHTYPE_pixeng_fetchyuv0_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FETCHTYPE_pixeng_fetchyuv0_FetchType_SHIFT (0U)
/*! pixeng_fetchyuv0_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_FETCHTYPE_pixeng_fetchyuv0_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_FETCHTYPE_pixeng_fetchyuv0_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_FETCHTYPE_pixeng_fetchyuv0_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_READADDRESS0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESS0_pixeng_fetchyuv0_ReadAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESS0_pixeng_fetchyuv0_ReadAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESS0_pixeng_fetchyuv0_ReadAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESS0_pixeng_fetchyuv0_ReadAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESS0_pixeng_fetchyuv0_ReadAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_READADDRESSMSB0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESSMSB0_pixeng_fetchyuv0_ReadAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESSMSB0_pixeng_fetchyuv0_ReadAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESSMSB0_pixeng_fetchyuv0_ReadAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESSMSB0_pixeng_fetchyuv0_ReadAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_READADDRESSMSB0_pixeng_fetchyuv0_ReadAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_BURSTBUFFERPROPERTIES_pixeng_fetchyuv0_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_STATUS_pixeng_fetchyuv0_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESS0_pixeng_fetchyuv0_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESS0_pixeng_fetchyuv0_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESS0_pixeng_fetchyuv0_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESS0_pixeng_fetchyuv0_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESS0_pixeng_fetchyuv0_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESSMSB0_pixeng_fetchyuv0_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESSMSB0_pixeng_fetchyuv0_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESSMSB0_pixeng_fetchyuv0_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESSMSB0_pixeng_fetchyuv0_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_CURBASEADDRESSMSB0_pixeng_fetchyuv0_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0_HIDDENSTATUS_pixeng_fetchyuv0_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0cfg_fetchyuv0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0cfg_fetchyuv0_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv0cfg_fetchyuv0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0cfg_fetchyuv0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0cfg_fetchyuv0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKUNLOCK_pixeng_fetchyuv0cfg_fetchyuv0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_LOCKSTATUS_pixeng_fetchyuv0cfg_fetchyuv0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC - Dynamic pixel engine configuration for fetchyuv0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_src_sel_SHIFT (0U)
/*! pixeng_fetchyuv0cfg_fetchyuv0_src_sel
 *  0b000000..Unit fetchyuv0 input port src is disabled
 *  0b011110..Unit fetchyuv0 input port src is connected to output of unit fetcheco0
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_sec_sel_SHIFT (8U)
/*! pixeng_fetchyuv0cfg_fetchyuv0_sec_sel
 *  0b000000..Unit fetchyuv0 input port sec is disabled
 *  0b011100..Unit fetchyuv0 input port sec is connected to output of unit fetchyuv3
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_DYNAMIC_pixeng_fetchyuv0cfg_fetchyuv0_sec_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV0CFG_FETCHYUV0_STATUS - Status information for pixel engine configuration of fetchyuv0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_STATUS_pixeng_fetchyuv0cfg_fetchyuv0_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_STATUS_pixeng_fetchyuv0cfg_fetchyuv0_sel_SHIFT (16U)
/*! pixeng_fetchyuv0cfg_fetchyuv0_sel
 *  0b000..fetchyuv0 module is not used
 *  0b001..fetchyuv0 module is used from store9 processing path
 *  0b010..fetchyuv0 module is used from extdst0 processing path
 *  0b011..fetchyuv0 module is used from extdst4 processing path
 *  0b100..fetchyuv0 module is used from extdst1 processing path
 *  0b101..fetchyuv0 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_STATUS_pixeng_fetchyuv0cfg_fetchyuv0_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_STATUS_pixeng_fetchyuv0cfg_fetchyuv0_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV0CFG_FETCHYUV0_STATUS_pixeng_fetchyuv0cfg_fetchyuv0_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_STATICCONTROL_pixeng_fetcheco0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_STATICCONTROL_pixeng_fetcheco0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_STATICCONTROL_pixeng_fetcheco0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_STATICCONTROL_pixeng_fetcheco0_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_STATICCONTROL_pixeng_fetcheco0_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERMANAGEMENT_pixeng_fetcheco0_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESS0_pixeng_fetcheco0_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESS0_pixeng_fetcheco0_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESS0_pixeng_fetcheco0_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESS0_pixeng_fetcheco0_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESS0_pixeng_fetcheco0_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESSMSB0_pixeng_fetcheco0_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESSMSB0_pixeng_fetcheco0_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESSMSB0_pixeng_fetcheco0_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESSMSB0_pixeng_fetcheco0_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BASEADDRESSMSB0_pixeng_fetcheco0_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco0_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco0_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco0_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco0_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco0_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco0_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco0_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco0_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco0_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco0_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco0_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_SOURCEBUFFERDIMENSION0_pixeng_fetcheco0_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTBITS0_pixeng_fetcheco0_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_COLORCOMPONENTSHIFT0_pixeng_fetcheco0_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYEROFFSET0_pixeng_fetcheco0_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWOFFSET0_pixeng_fetcheco0_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco0_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CONSTANTCOLOR0_pixeng_fetcheco0_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_TileMode0_SHIFT (4U)
/*! pixeng_fetcheco0_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_LAYERPROPERTY0_pixeng_fetcheco0_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMEDIMENSIONS_pixeng_fetcheco0_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FRAMERESAMPLING_pixeng_fetcheco0_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_ClipColor_SHIFT (16U)
/*! pixeng_fetcheco0_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROL_pixeng_fetcheco0_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROLTRIGGER_pixeng_fetcheco0_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROLTRIGGER_pixeng_fetcheco0_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROLTRIGGER_pixeng_fetcheco0_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROLTRIGGER_pixeng_fetcheco0_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CONTROLTRIGGER_pixeng_fetcheco0_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_START_pixeng_fetcheco0_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_START_pixeng_fetcheco0_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_START_pixeng_fetcheco0_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_START_pixeng_fetcheco0_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_START_pixeng_fetcheco0_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FETCHTYPE_pixeng_fetcheco0_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FETCHTYPE_pixeng_fetcheco0_FetchType_SHIFT (0U)
/*! pixeng_fetcheco0_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_FETCHTYPE_pixeng_fetcheco0_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_FETCHTYPE_pixeng_fetcheco0_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_FETCHTYPE_pixeng_fetcheco0_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_BURSTBUFFERPROPERTIES_pixeng_fetcheco0_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESS0_pixeng_fetcheco0_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESS0_pixeng_fetcheco0_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESS0_pixeng_fetcheco0_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESS0_pixeng_fetcheco0_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESS0_pixeng_fetcheco0_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESSMSB0_pixeng_fetcheco0_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESSMSB0_pixeng_fetcheco0_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESSMSB0_pixeng_fetcheco0_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESSMSB0_pixeng_fetcheco0_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_CURBASEADDRESSMSB0_pixeng_fetcheco0_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0_HIDDENSTATUS_pixeng_fetcheco0_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0CFG_FETCHECO0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0cfg_fetcheco0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0cfg_fetcheco0_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco0cfg_fetcheco0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0cfg_fetcheco0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0cfg_fetcheco0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKUNLOCK_pixeng_fetcheco0cfg_fetcheco0_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_LOCKSTATUS_pixeng_fetcheco0cfg_fetcheco0_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO0CFG_FETCHECO0_STATUS - Status information for pixel engine configuration of fetcheco0 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_STATUS_pixeng_fetcheco0cfg_fetcheco0_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_STATUS_pixeng_fetcheco0cfg_fetcheco0_sel_SHIFT (16U)
/*! pixeng_fetcheco0cfg_fetcheco0_sel
 *  0b000..fetcheco0 module is not used
 *  0b001..fetcheco0 module is used from store9 processing path
 *  0b010..fetcheco0 module is used from extdst0 processing path
 *  0b011..fetcheco0 module is used from extdst4 processing path
 *  0b100..fetcheco0 module is used from extdst1 processing path
 *  0b101..fetcheco0 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_STATUS_pixeng_fetcheco0cfg_fetcheco0_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_STATUS_pixeng_fetcheco0cfg_fetcheco0_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO0CFG_FETCHECO0_STATUS_pixeng_fetcheco0cfg_fetcheco0_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATICCONTROL_pixeng_fetchyuv1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATICCONTROL_pixeng_fetchyuv1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATICCONTROL_pixeng_fetchyuv1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATICCONTROL_pixeng_fetchyuv1_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATICCONTROL_pixeng_fetchyuv1_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv1_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_RINGBUFSTARTADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDR0_pixeng_fetchyuv1_RingBufStartAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDR0_pixeng_fetchyuv1_RingBufStartAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDR0_pixeng_fetchyuv1_RingBufStartAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDR0_pixeng_fetchyuv1_RingBufStartAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDR0_pixeng_fetchyuv1_RingBufStartAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_RINGBUFSTARTADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv1_RingBufStartAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv1_RingBufStartAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv1_RingBufStartAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv1_RingBufStartAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv1_RingBufStartAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_RINGBUFWRAPADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDR0_pixeng_fetchyuv1_RingBufWrapAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDR0_pixeng_fetchyuv1_RingBufWrapAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDR0_pixeng_fetchyuv1_RingBufWrapAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDR0_pixeng_fetchyuv1_RingBufWrapAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDR0_pixeng_fetchyuv1_RingBufWrapAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_RINGBUFWRAPADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv1_RingBufWrapAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv1_RingBufWrapAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv1_RingBufWrapAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv1_RingBufWrapAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv1_RingBufWrapAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_FRAMEPROPERTIES0 - Frame property setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEPROPERTIES0_pixeng_fetchyuv1_FieldId0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEPROPERTIES0_pixeng_fetchyuv1_FieldId0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEPROPERTIES0_pixeng_fetchyuv1_FieldId0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEPROPERTIES0_pixeng_fetchyuv1_FieldId0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEPROPERTIES0_pixeng_fetchyuv1_FieldId0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESS0_pixeng_fetchyuv1_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESS0_pixeng_fetchyuv1_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESS0_pixeng_fetchyuv1_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESS0_pixeng_fetchyuv1_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESS0_pixeng_fetchyuv1_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESSMSB0_pixeng_fetchyuv1_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESSMSB0_pixeng_fetchyuv1_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESSMSB0_pixeng_fetchyuv1_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESSMSB0_pixeng_fetchyuv1_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BASEADDRESSMSB0_pixeng_fetchyuv1_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv1_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv1_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv1_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv1_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv1_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv1_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv1_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv1_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv1_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv1_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv1_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv1_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTBITS0_pixeng_fetchyuv1_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_COLORCOMPONENTSHIFT0_pixeng_fetchyuv1_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYEROFFSET0_pixeng_fetchyuv1_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWOFFSET0_pixeng_fetchyuv1_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv1_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONSTANTCOLOR0_pixeng_fetchyuv1_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_TileMode0_SHIFT (4U)
/*! pixeng_fetchyuv1_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaMaskEnable0_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaMaskEnable0_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaMaskEnable0_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaMaskEnable0_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchyuv1_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_LAYERPROPERTY0_pixeng_fetchyuv1_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMEDIMENSIONS_pixeng_fetchyuv1_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FRAMERESAMPLING_pixeng_fetchyuv1_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RasterMode_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RasterMode_SHIFT (0U)
/*! pixeng_fetchyuv1_RasterMode
 *  0b000..First sample at StartX/Y relative to origin. Hor/ver increments using DeltaX/Y and DeltaSwap setup.
 *  0b001..[FetchDecode/FetchDecodeL only] Source buffer is an encoded bit stream. First sample at origin (0,0). Hor/ver increments = (1,0)/(0,1).
 *  0b010..[FetchPersp/Warp/Rot only] Arbitrary warping (filter is active). Coordinates are read from frame input
 *         port. InputSelect must be set to COORDINATE. ArbStartX/Y and ArbDeltaXX/XY/YX/YY must be setup.
 *  0b011..[FetchPersp only] Affine/Perspective warping (filter is active). First sample at PerspStartX/Y/W.
 *         Hor/ver increments using PerspDeltaXX/XY/YX/YY/WX/WY. Homogeneous coordinates.
 *  0b100..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is U.
 *  0b101..[FetchRot/RotL only] Affine warping (filter is active). First sample at AffineStartX/Y. Hor/ver
 *         increments using AffineDeltaXX/XY/YX/YY. Cartesian coordinates.
 *  0b110..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RasterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RasterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RasterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_InputSelect_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_InputSelect_SHIFT (3U)
/*! pixeng_fetchyuv1_InputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 *  0b11..Used for arbitrary warping (coordinate buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_InputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_InputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_InputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV422UpsamplingMode_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV422UpsamplingMode_SHIFT (5U)
/*! pixeng_fetchyuv1_YUV422UpsamplingMode
 *  0b0..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b1..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV422UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV422UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV422UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ChromaHReplEn_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ChromaHReplEn_SHIFT (6U)
/*! pixeng_fetchyuv1_ChromaHReplEn
 *  0b0..Not used.
 *  0b1..Replicate mode for input samples.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ChromaHReplEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ChromaHReplEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ChromaHReplEn_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_SecInputSelect_MASK (0x1800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_SecInputSelect_SHIFT (11U)
/*! pixeng_fetchyuv1_SecInputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_SecInputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_SecInputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_SecInputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV420UpsamplingMode_MASK (0x6000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV420UpsamplingMode_SHIFT (13U)
/*! pixeng_fetchyuv1_YUV420UpsamplingMode
 *  0b00..Not used.
 *  0b01..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b10..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 *  0b11..Interpolate mode for interspersed interlaced samples (UV samples betwween Y samples).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV420UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV420UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_YUV420UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ClipColor_SHIFT (16U)
/*! pixeng_fetchyuv1_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROL_pixeng_fetchyuv1_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROLTRIGGER_pixeng_fetchyuv1_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROLTRIGGER_pixeng_fetchyuv1_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROLTRIGGER_pixeng_fetchyuv1_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROLTRIGGER_pixeng_fetchyuv1_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CONTROLTRIGGER_pixeng_fetchyuv1_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_START_pixeng_fetchyuv1_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_START_pixeng_fetchyuv1_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_START_pixeng_fetchyuv1_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_START_pixeng_fetchyuv1_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_START_pixeng_fetchyuv1_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FETCHTYPE_pixeng_fetchyuv1_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FETCHTYPE_pixeng_fetchyuv1_FetchType_SHIFT (0U)
/*! pixeng_fetchyuv1_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_FETCHTYPE_pixeng_fetchyuv1_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_FETCHTYPE_pixeng_fetchyuv1_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_FETCHTYPE_pixeng_fetchyuv1_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_READADDRESS0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESS0_pixeng_fetchyuv1_ReadAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESS0_pixeng_fetchyuv1_ReadAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESS0_pixeng_fetchyuv1_ReadAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESS0_pixeng_fetchyuv1_ReadAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESS0_pixeng_fetchyuv1_ReadAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_READADDRESSMSB0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESSMSB0_pixeng_fetchyuv1_ReadAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESSMSB0_pixeng_fetchyuv1_ReadAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESSMSB0_pixeng_fetchyuv1_ReadAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESSMSB0_pixeng_fetchyuv1_ReadAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_READADDRESSMSB0_pixeng_fetchyuv1_ReadAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_BURSTBUFFERPROPERTIES_pixeng_fetchyuv1_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_STATUS_pixeng_fetchyuv1_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESS0_pixeng_fetchyuv1_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESS0_pixeng_fetchyuv1_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESS0_pixeng_fetchyuv1_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESS0_pixeng_fetchyuv1_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESS0_pixeng_fetchyuv1_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESSMSB0_pixeng_fetchyuv1_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESSMSB0_pixeng_fetchyuv1_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESSMSB0_pixeng_fetchyuv1_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESSMSB0_pixeng_fetchyuv1_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_CURBASEADDRESSMSB0_pixeng_fetchyuv1_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1_HIDDENSTATUS_pixeng_fetchyuv1_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1cfg_fetchyuv1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1cfg_fetchyuv1_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv1cfg_fetchyuv1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1cfg_fetchyuv1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1cfg_fetchyuv1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKUNLOCK_pixeng_fetchyuv1cfg_fetchyuv1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_LOCKSTATUS_pixeng_fetchyuv1cfg_fetchyuv1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC - Dynamic pixel engine configuration for fetchyuv1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_src_sel_SHIFT (0U)
/*! pixeng_fetchyuv1cfg_fetchyuv1_src_sel
 *  0b000000..Unit fetchyuv1 input port src is disabled
 *  0b100000..Unit fetchyuv1 input port src is connected to output of unit fetcheco1
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_sec_sel_SHIFT (8U)
/*! pixeng_fetchyuv1cfg_fetchyuv1_sec_sel
 *  0b000000..Unit fetchyuv1 input port sec is disabled
 *  0b011101..Unit fetchyuv1 input port sec is connected to output of unit fetchyuv0
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_DYNAMIC_pixeng_fetchyuv1cfg_fetchyuv1_sec_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV1CFG_FETCHYUV1_STATUS - Status information for pixel engine configuration of fetchyuv1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_STATUS_pixeng_fetchyuv1cfg_fetchyuv1_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_STATUS_pixeng_fetchyuv1cfg_fetchyuv1_sel_SHIFT (16U)
/*! pixeng_fetchyuv1cfg_fetchyuv1_sel
 *  0b000..fetchyuv1 module is not used
 *  0b001..fetchyuv1 module is used from store9 processing path
 *  0b010..fetchyuv1 module is used from extdst0 processing path
 *  0b011..fetchyuv1 module is used from extdst4 processing path
 *  0b100..fetchyuv1 module is used from extdst1 processing path
 *  0b101..fetchyuv1 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_STATUS_pixeng_fetchyuv1cfg_fetchyuv1_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_STATUS_pixeng_fetchyuv1cfg_fetchyuv1_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV1CFG_FETCHYUV1_STATUS_pixeng_fetchyuv1cfg_fetchyuv1_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_STATICCONTROL_pixeng_fetcheco1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_STATICCONTROL_pixeng_fetcheco1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_STATICCONTROL_pixeng_fetcheco1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_STATICCONTROL_pixeng_fetcheco1_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_STATICCONTROL_pixeng_fetcheco1_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERMANAGEMENT_pixeng_fetcheco1_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESS0_pixeng_fetcheco1_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESS0_pixeng_fetcheco1_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESS0_pixeng_fetcheco1_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESS0_pixeng_fetcheco1_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESS0_pixeng_fetcheco1_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESSMSB0_pixeng_fetcheco1_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESSMSB0_pixeng_fetcheco1_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESSMSB0_pixeng_fetcheco1_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESSMSB0_pixeng_fetcheco1_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BASEADDRESSMSB0_pixeng_fetcheco1_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco1_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco1_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco1_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco1_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco1_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco1_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco1_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco1_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco1_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco1_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco1_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_SOURCEBUFFERDIMENSION0_pixeng_fetcheco1_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTBITS0_pixeng_fetcheco1_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_COLORCOMPONENTSHIFT0_pixeng_fetcheco1_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYEROFFSET0_pixeng_fetcheco1_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWOFFSET0_pixeng_fetcheco1_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco1_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CONSTANTCOLOR0_pixeng_fetcheco1_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_TileMode0_SHIFT (4U)
/*! pixeng_fetcheco1_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_LAYERPROPERTY0_pixeng_fetcheco1_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMEDIMENSIONS_pixeng_fetcheco1_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FRAMERESAMPLING_pixeng_fetcheco1_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_ClipColor_SHIFT (16U)
/*! pixeng_fetcheco1_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROL_pixeng_fetcheco1_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROLTRIGGER_pixeng_fetcheco1_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROLTRIGGER_pixeng_fetcheco1_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROLTRIGGER_pixeng_fetcheco1_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROLTRIGGER_pixeng_fetcheco1_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CONTROLTRIGGER_pixeng_fetcheco1_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_START_pixeng_fetcheco1_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_START_pixeng_fetcheco1_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_START_pixeng_fetcheco1_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_START_pixeng_fetcheco1_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_START_pixeng_fetcheco1_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FETCHTYPE_pixeng_fetcheco1_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FETCHTYPE_pixeng_fetcheco1_FetchType_SHIFT (0U)
/*! pixeng_fetcheco1_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_FETCHTYPE_pixeng_fetcheco1_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_FETCHTYPE_pixeng_fetcheco1_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_FETCHTYPE_pixeng_fetcheco1_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_BURSTBUFFERPROPERTIES_pixeng_fetcheco1_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESS0_pixeng_fetcheco1_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESS0_pixeng_fetcheco1_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESS0_pixeng_fetcheco1_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESS0_pixeng_fetcheco1_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESS0_pixeng_fetcheco1_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESSMSB0_pixeng_fetcheco1_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESSMSB0_pixeng_fetcheco1_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESSMSB0_pixeng_fetcheco1_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESSMSB0_pixeng_fetcheco1_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_CURBASEADDRESSMSB0_pixeng_fetcheco1_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1_HIDDENSTATUS_pixeng_fetcheco1_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1CFG_FETCHECO1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1cfg_fetcheco1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1cfg_fetcheco1_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco1cfg_fetcheco1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1cfg_fetcheco1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1cfg_fetcheco1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKUNLOCK_pixeng_fetcheco1cfg_fetcheco1_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_LOCKSTATUS_pixeng_fetcheco1cfg_fetcheco1_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO1CFG_FETCHECO1_STATUS - Status information for pixel engine configuration of fetcheco1 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_STATUS_pixeng_fetcheco1cfg_fetcheco1_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_STATUS_pixeng_fetcheco1cfg_fetcheco1_sel_SHIFT (16U)
/*! pixeng_fetcheco1cfg_fetcheco1_sel
 *  0b000..fetcheco1 module is not used
 *  0b001..fetcheco1 module is used from store9 processing path
 *  0b010..fetcheco1 module is used from extdst0 processing path
 *  0b011..fetcheco1 module is used from extdst4 processing path
 *  0b100..fetcheco1 module is used from extdst1 processing path
 *  0b101..fetcheco1 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_STATUS_pixeng_fetcheco1cfg_fetcheco1_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_STATUS_pixeng_fetcheco1cfg_fetcheco1_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO1CFG_FETCHECO1_STATUS_pixeng_fetcheco1cfg_fetcheco1_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATICCONTROL_pixeng_fetchyuv2_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATICCONTROL_pixeng_fetchyuv2_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATICCONTROL_pixeng_fetchyuv2_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATICCONTROL_pixeng_fetchyuv2_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATICCONTROL_pixeng_fetchyuv2_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERMANAGEMENT_pixeng_fetchyuv2_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_RINGBUFSTARTADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDR0_pixeng_fetchyuv2_RingBufStartAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDR0_pixeng_fetchyuv2_RingBufStartAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDR0_pixeng_fetchyuv2_RingBufStartAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDR0_pixeng_fetchyuv2_RingBufStartAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDR0_pixeng_fetchyuv2_RingBufStartAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_RINGBUFSTARTADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv2_RingBufStartAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv2_RingBufStartAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv2_RingBufStartAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv2_RingBufStartAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFSTARTADDRMSB0_pixeng_fetchyuv2_RingBufStartAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_RINGBUFWRAPADDR0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDR0_pixeng_fetchyuv2_RingBufWrapAddr0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDR0_pixeng_fetchyuv2_RingBufWrapAddr0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDR0_pixeng_fetchyuv2_RingBufWrapAddr0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDR0_pixeng_fetchyuv2_RingBufWrapAddr0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDR0_pixeng_fetchyuv2_RingBufWrapAddr0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_RINGBUFWRAPADDRMSB0 - Ring buffer setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv2_RingBufWrapAddrMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv2_RingBufWrapAddrMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv2_RingBufWrapAddrMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv2_RingBufWrapAddrMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_RINGBUFWRAPADDRMSB0_pixeng_fetchyuv2_RingBufWrapAddrMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_FRAMEPROPERTIES0 - Frame property setup for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEPROPERTIES0_pixeng_fetchyuv2_FieldId0_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEPROPERTIES0_pixeng_fetchyuv2_FieldId0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEPROPERTIES0_pixeng_fetchyuv2_FieldId0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEPROPERTIES0_pixeng_fetchyuv2_FieldId0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEPROPERTIES0_pixeng_fetchyuv2_FieldId0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESS0_pixeng_fetchyuv2_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESS0_pixeng_fetchyuv2_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESS0_pixeng_fetchyuv2_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESS0_pixeng_fetchyuv2_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESS0_pixeng_fetchyuv2_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESSMSB0_pixeng_fetchyuv2_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESSMSB0_pixeng_fetchyuv2_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESSMSB0_pixeng_fetchyuv2_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESSMSB0_pixeng_fetchyuv2_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BASEADDRESSMSB0_pixeng_fetchyuv2_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv2_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv2_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv2_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv2_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESS0_pixeng_fetchyuv2_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv2_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv2_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv2_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv2_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetchyuv2_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERATTRIBUTES0_pixeng_fetchyuv2_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_SOURCEBUFFERDIMENSION0_pixeng_fetchyuv2_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTBITS0_pixeng_fetchyuv2_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_COLORCOMPONENTSHIFT0_pixeng_fetchyuv2_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYEROFFSET0_pixeng_fetchyuv2_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWOFFSET0_pixeng_fetchyuv2_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CLIPWINDOWDIMENSIONS0_pixeng_fetchyuv2_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONSTANTCOLOR0_pixeng_fetchyuv2_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_TileMode0_SHIFT (4U)
/*! pixeng_fetchyuv2_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaSrcEnable0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaSrcEnable0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaConstEnable0_MASK (0x200U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaConstEnable0_SHIFT (9U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaMaskEnable0_MASK (0x400U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaMaskEnable0_SHIFT (10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaTransEnable0_MASK (0x800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaTransEnable0_SHIFT (11U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_AlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaSrcEnable0_MASK (0x1000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaSrcEnable0_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaSrcEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaSrcEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaSrcEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaConstEnable0_MASK (0x2000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaConstEnable0_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaConstEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaConstEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaConstEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaMaskEnable0_MASK (0x4000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaMaskEnable0_SHIFT (14U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaMaskEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaMaskEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaMaskEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaTransEnable0_MASK (0x8000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaTransEnable0_SHIFT (15U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaTransEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaTransEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_RGBAlphaTransEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_PremulConstRGB0_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_PremulConstRGB0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_PremulConstRGB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_PremulConstRGB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_PremulConstRGB0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_YUVConversionMode0_MASK (0x60000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_YUVConversionMode0_SHIFT (17U)
/*! pixeng_fetchyuv2_YUVConversionMode0
 *  0b00..No conversion.
 *  0b01..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6 (standard definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 *  0b10..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.601-6, but assuming full range YUV
 *        inputs (0..255). Most typically used for computer graphics (e.g. for JPEG encoding).
 *  0b11..Conversion from YCbCr (YUV) to RGB according to ITU recommendation BT.709-5 part 2 (high definition TV).
 *        Input range is 16..235 for Y and 16..240 for U/V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_YUVConversionMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_YUVConversionMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_YUVConversionMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_GammaRemoveEnable0_MASK (0x100000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_GammaRemoveEnable0_SHIFT (20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_GammaRemoveEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_GammaRemoveEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_GammaRemoveEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_LAYERPROPERTY0_pixeng_fetchyuv2_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMEDIMENSIONS_pixeng_fetchyuv2_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FRAMERESAMPLING_pixeng_fetchyuv2_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RasterMode_MASK (0x7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RasterMode_SHIFT (0U)
/*! pixeng_fetchyuv2_RasterMode
 *  0b000..First sample at StartX/Y relative to origin. Hor/ver increments using DeltaX/Y and DeltaSwap setup.
 *  0b001..[FetchDecode/FetchDecodeL only] Source buffer is an encoded bit stream. First sample at origin (0,0). Hor/ver increments = (1,0)/(0,1).
 *  0b010..[FetchPersp/Warp/Rot only] Arbitrary warping (filter is active). Coordinates are read from frame input
 *         port. InputSelect must be set to COORDINATE. ArbStartX/Y and ArbDeltaXX/XY/YX/YY must be setup.
 *  0b011..[FetchPersp only] Affine/Perspective warping (filter is active). First sample at PerspStartX/Y/W.
 *         Hor/ver increments using PerspDeltaXX/XY/YX/YY/WX/WY. Homogeneous coordinates.
 *  0b100..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is U.
 *  0b101..[FetchRot/RotL only] Affine warping (filter is active). First sample at AffineStartX/Y. Hor/ver
 *         increments using AffineDeltaXX/XY/YX/YY. Cartesian coordinates.
 *  0b110..[FetchPersp/Decode/YUV only] Source buffer is packed YUV 4:2:2. First sample at origin (0,0). Hor/ver
 *         increments = (1,0)/(0,1). All corellated window widths and horizontal offsets must be even. First Chroma
 *         Sample is V.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RasterMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RasterMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RasterMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_InputSelect_MASK (0x18U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_InputSelect_SHIFT (3U)
/*! pixeng_fetchyuv2_InputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 *  0b11..Used for arbitrary warping (coordinate buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_InputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_InputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_InputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV422UpsamplingMode_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV422UpsamplingMode_SHIFT (5U)
/*! pixeng_fetchyuv2_YUV422UpsamplingMode
 *  0b0..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b1..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV422UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV422UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV422UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ChromaHReplEn_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ChromaHReplEn_SHIFT (6U)
/*! pixeng_fetchyuv2_ChromaHReplEn
 *  0b0..Not used.
 *  0b1..Replicate mode for input samples.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ChromaHReplEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ChromaHReplEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ChromaHReplEn_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_SecInputSelect_MASK (0x1800U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_SecInputSelect_SHIFT (11U)
/*! pixeng_fetchyuv2_SecInputSelect
 *  0b00..Not used.
 *  0b01..Used for component packing (e.g. UV or source alpha buffer).
 *  0b10..Used for RGB and alpha pre-multiply stage (mask alpha buffer).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_SecInputSelect(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_SecInputSelect_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_SecInputSelect_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV420UpsamplingMode_MASK (0x6000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV420UpsamplingMode_SHIFT (13U)
/*! pixeng_fetchyuv2_YUV420UpsamplingMode
 *  0b00..Not used.
 *  0b01..Replicate mode for interspersed samples (UV samples between Y samples).
 *  0b10..Interpolate mode for coaligned samples (UV samples at Y sample positions).
 *  0b11..Interpolate mode for interspersed interlaced samples (UV samples betwween Y samples).
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV420UpsamplingMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV420UpsamplingMode_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_YUV420UpsamplingMode_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ClipColor_SHIFT (16U)
/*! pixeng_fetchyuv2_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROL_pixeng_fetchyuv2_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROLTRIGGER_pixeng_fetchyuv2_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROLTRIGGER_pixeng_fetchyuv2_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROLTRIGGER_pixeng_fetchyuv2_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROLTRIGGER_pixeng_fetchyuv2_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CONTROLTRIGGER_pixeng_fetchyuv2_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_START_pixeng_fetchyuv2_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_START_pixeng_fetchyuv2_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_START_pixeng_fetchyuv2_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_START_pixeng_fetchyuv2_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_START_pixeng_fetchyuv2_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FETCHTYPE_pixeng_fetchyuv2_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FETCHTYPE_pixeng_fetchyuv2_FetchType_SHIFT (0U)
/*! pixeng_fetchyuv2_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_FETCHTYPE_pixeng_fetchyuv2_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_FETCHTYPE_pixeng_fetchyuv2_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_FETCHTYPE_pixeng_fetchyuv2_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_READADDRESS0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESS0_pixeng_fetchyuv2_ReadAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESS0_pixeng_fetchyuv2_ReadAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESS0_pixeng_fetchyuv2_ReadAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESS0_pixeng_fetchyuv2_ReadAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESS0_pixeng_fetchyuv2_ReadAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_READADDRESSMSB0 - Ring buffer synchronization for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESSMSB0_pixeng_fetchyuv2_ReadAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESSMSB0_pixeng_fetchyuv2_ReadAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESSMSB0_pixeng_fetchyuv2_ReadAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESSMSB0_pixeng_fetchyuv2_ReadAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_READADDRESSMSB0_pixeng_fetchyuv2_ReadAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_BURSTBUFFERPROPERTIES_pixeng_fetchyuv2_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_STATUS - Status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_WriteTimeout_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_WriteTimeout_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_WriteTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_WriteTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_WriteTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_ReadTimeout_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_ReadTimeout_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_ReadTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_ReadTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_STATUS_pixeng_fetchyuv2_ReadTimeout_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESS0_pixeng_fetchyuv2_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESS0_pixeng_fetchyuv2_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESS0_pixeng_fetchyuv2_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESS0_pixeng_fetchyuv2_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESS0_pixeng_fetchyuv2_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESSMSB0_pixeng_fetchyuv2_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESSMSB0_pixeng_fetchyuv2_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESSMSB0_pixeng_fetchyuv2_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESSMSB0_pixeng_fetchyuv2_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_CURBASEADDRESSMSB0_pixeng_fetchyuv2_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2_HIDDENSTATUS_pixeng_fetchyuv2_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2cfg_fetchyuv2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2cfg_fetchyuv2_LockUnlock_SHIFT (0U)
/*! pixeng_fetchyuv2cfg_fetchyuv2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2cfg_fetchyuv2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2cfg_fetchyuv2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKUNLOCK_pixeng_fetchyuv2cfg_fetchyuv2_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_LOCKSTATUS_pixeng_fetchyuv2cfg_fetchyuv2_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC - Dynamic pixel engine configuration for fetchyuv2 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_src_sel_SHIFT (0U)
/*! pixeng_fetchyuv2cfg_fetchyuv2_src_sel
 *  0b000000..Unit fetchyuv2 input port src is disabled
 *  0b100010..Unit fetchyuv2 input port src is connected to output of unit fetcheco2
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_sec_sel_MASK (0x3F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_sec_sel_SHIFT (8U)
/*! pixeng_fetchyuv2cfg_fetchyuv2_sec_sel
 *  0b000000..Unit fetchyuv2 input port sec is disabled
 *  0b011111..Unit fetchyuv2 input port sec is connected to output of unit fetchyuv1
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_sec_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_sec_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_DYNAMIC_pixeng_fetchyuv2cfg_fetchyuv2_sec_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHYUV2CFG_FETCHYUV2_STATUS - Status information for pixel engine configuration of fetchyuv2 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_STATUS_pixeng_fetchyuv2cfg_fetchyuv2_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_STATUS_pixeng_fetchyuv2cfg_fetchyuv2_sel_SHIFT (16U)
/*! pixeng_fetchyuv2cfg_fetchyuv2_sel
 *  0b000..fetchyuv2 module is not used
 *  0b001..fetchyuv2 module is used from store9 processing path
 *  0b010..fetchyuv2 module is used from extdst0 processing path
 *  0b011..fetchyuv2 module is used from extdst4 processing path
 *  0b100..fetchyuv2 module is used from extdst1 processing path
 *  0b101..fetchyuv2 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_STATUS_pixeng_fetchyuv2cfg_fetchyuv2_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_STATUS_pixeng_fetchyuv2cfg_fetchyuv2_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHYUV2CFG_FETCHYUV2_STATUS_pixeng_fetchyuv2cfg_fetchyuv2_sel_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_STATICCONTROL - Common static control options. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_STATICCONTROL_pixeng_fetcheco2_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_STATICCONTROL_pixeng_fetcheco2_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_STATICCONTROL_pixeng_fetcheco2_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_STATICCONTROL_pixeng_fetcheco2_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_STATICCONTROL_pixeng_fetcheco2_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT - AXI interface buffer management register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetNumBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetNumBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetNumBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetNumBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetNumBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetBurstLength_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetBurstLength_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetMaxBurstLength_MASK (0x1FE000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetMaxBurstLength_SHIFT (13U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetMaxBurstLength(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetMaxBurstLength_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_SetMaxBurstLength_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_MASK (0x1FE00000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_SHIFT (21U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_Enable_MASK (0x20000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_Enable_SHIFT (29U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerTimeout_Enable_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerLineFlush_Enable_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerLineFlush_Enable_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerLineFlush_Enable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerLineFlush_Enable_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERMANAGEMENT_pixeng_fetcheco2_CombinerLineFlush_Enable_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_BASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESS0_pixeng_fetcheco2_BaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESS0_pixeng_fetcheco2_BaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESS0_pixeng_fetcheco2_BaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESS0_pixeng_fetcheco2_BaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESS0_pixeng_fetcheco2_BaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_BASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESSMSB0_pixeng_fetcheco2_BaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESSMSB0_pixeng_fetcheco2_BaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESSMSB0_pixeng_fetcheco2_BaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESSMSB0_pixeng_fetcheco2_BaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BASEADDRESSMSB0_pixeng_fetcheco2_BaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESS0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco2_AutoUpdateBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco2_AutoUpdateBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco2_AutoUpdateBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco2_AutoUpdateBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESS0_pixeng_fetcheco2_AutoUpdateBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESSMSB0 - Source buffer base address of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco2_AutoUpdateBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco2_AutoUpdateBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco2_AutoUpdateBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco2_AutoUpdateBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_AUTOUPDATEBASEADDRESSMSB0_pixeng_fetcheco2_AutoUpdateBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0 - Source buffer attributes for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_Stride0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_Stride0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_Stride0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_Stride0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_Stride0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BitsPerPixel0_MASK (0x3F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BitsPerPixel0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BitsPerPixel0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BitsPerPixel0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BitsPerPixel0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BaseAddressAutoUpdate0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BaseAddressAutoUpdate0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BaseAddressAutoUpdate0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BaseAddressAutoUpdate0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_BaseAddressAutoUpdate0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_DWordByteSwap0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_DWordByteSwap0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_DWordByteSwap0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_DWordByteSwap0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERATTRIBUTES0_pixeng_fetcheco2_DWordByteSwap0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0 - Source buffer dimension of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineCount0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineCount0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineCount0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineCount0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_SOURCEBUFFERDIMENSION0_pixeng_fetcheco2_LineCount0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_COLORCOMPONENTBITS0 - Size of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsAlpha0_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsBlue0_MASK (0xF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsGreen0_MASK (0xF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsRed0_MASK (0xF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ComponentBitsRed0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ITUFormat0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ITUFormat0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ITUFormat0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ITUFormat0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTBITS0_pixeng_fetcheco2_ITUFormat0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0 - Bit position of color components for RGB, YUV and index formats (layer 0). */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftAlpha0_MASK (0x1FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftBlue0_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftGreen0_MASK (0x1F0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftRed0_MASK (0x1F000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_COLORCOMPONENTSHIFT0_pixeng_fetcheco2_ComponentShiftRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_LAYEROFFSET0 - Position of layer 0 within the destination frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYEROFFSET0_pixeng_fetcheco2_LayerYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_CLIPWINDOWOFFSET0 - Clip window position for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowXOffset0_MASK (0x7FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowXOffset0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowXOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowXOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowXOffset0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowYOffset0_MASK (0x7FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowYOffset0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowYOffset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowYOffset0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWOFFSET0_pixeng_fetcheco2_ClipWindowYOffset0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0 - Clip window size for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowWidth0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowWidth0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowWidth0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowWidth0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowWidth0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowHeight0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowHeight0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowHeight0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowHeight0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CLIPWINDOWDIMENSIONS0_pixeng_fetcheco2_ClipWindowHeight0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_CONSTANTCOLOR0 - Constant color for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantAlpha0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantAlpha0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantAlpha0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantAlpha0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantAlpha0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantBlue0_MASK (0xFF00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantBlue0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantBlue0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantBlue0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantBlue0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantGreen0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantGreen0_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantGreen0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantGreen0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantGreen0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantRed0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantRed0_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantRed0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantRed0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CONSTANTCOLOR0_pixeng_fetcheco2_ConstantRed0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_LAYERPROPERTY0 - Common properties of layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_TileMode0_MASK (0x30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_TileMode0_SHIFT (4U)
/*! pixeng_fetcheco2_TileMode0
 *  0b00..Use zero value
 *  0b01..Use constant color register value
 *  0b10..Use closest pixel from source buffer. Must not be used for DECODE or YUV422 operations or when SourceBufferEnable is 0.
 *  0b11..Use closest pixel from source buffer but zero for alpha component. Must not be used for DECODE or YUV422
 *        operations or when SourceBufferEnable is 0.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_TileMode0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_TileMode0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_TileMode0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_ClipWindowEnable0_MASK (0x40000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_ClipWindowEnable0_SHIFT (30U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_ClipWindowEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_ClipWindowEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_ClipWindowEnable0_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_SourceBufferEnable0_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_SourceBufferEnable0_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_SourceBufferEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_SourceBufferEnable0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_LAYERPROPERTY0_pixeng_fetcheco2_SourceBufferEnable0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_FRAMEDIMENSIONS - Output frame dimension. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameWidth_MASK (0x3FFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameWidth_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameWidth(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameWidth_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameWidth_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameHeight_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameHeight_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameHeight(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameHeight_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_FrameHeight_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_EmptyFrame_MASK (0x80000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_EmptyFrame_SHIFT (31U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_EmptyFrame(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_EmptyFrame_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMEDIMENSIONS_pixeng_fetcheco2_EmptyFrame_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_FRAMERESAMPLING - Resampling options for output frame. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartX_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartX_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartY_MASK (0xFC0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartY_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_StartY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaX_MASK (0x3F000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaX_SHIFT (12U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaX(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaX_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaX_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaY_MASK (0xFC0000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaY_SHIFT (18U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaY(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaY_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_DeltaY_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_SwapDirection_MASK (0x1000000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_SwapDirection_SHIFT (24U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_SwapDirection(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_SwapDirection_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FRAMERESAMPLING_pixeng_fetcheco2_SwapDirection_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_CONTROL - Shared common control settings for all layers. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_RawPixel_MASK (0x80U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_RawPixel_SHIFT (7U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_RawPixel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_RawPixel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_RawPixel_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_ClipColor_MASK (0x10000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_ClipColor_SHIFT (16U)
/*! pixeng_fetcheco2_ClipColor
 *  0b0..Null color.
 *  0b1..Color of layer number given by ClipLayer (or layer 0 when Fetch unit has one layer only). The color is
 *       then the layer's source or tiling color.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_ClipColor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_ClipColor_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROL_pixeng_fetcheco2_ClipColor_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_CONTROLTRIGGER - Shadow load trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROLTRIGGER_pixeng_fetcheco2_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROLTRIGGER_pixeng_fetcheco2_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROLTRIGGER_pixeng_fetcheco2_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROLTRIGGER_pixeng_fetcheco2_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CONTROLTRIGGER_pixeng_fetcheco2_ShdTokGen_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_START - Frame start trigger. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_START_pixeng_fetcheco2_Start_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_START_pixeng_fetcheco2_Start_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_START_pixeng_fetcheco2_Start(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_START_pixeng_fetcheco2_Start_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_START_pixeng_fetcheco2_Start_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_FETCHTYPE - Fetch unit type. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FETCHTYPE_pixeng_fetcheco2_FetchType_MASK (0xFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FETCHTYPE_pixeng_fetcheco2_FetchType_SHIFT (0U)
/*! pixeng_fetcheco2_FetchType
 *  0b0000..Fetch unit with RL and RLAD decoder.
 *  0b0001..Fetch unit with fractional plane (8 layers).
 *  0b0010..Fetch unit with arbitrary warping and fractional plane (8 layers).
 *  0b0011..Fetch unit with minimum feature set for alpha, chroma and coordinate planes.
 *  0b0100..Fetch unit with affine, perspective and arbitrary warping.
 *  0b0101..Fetch unit with affine and arbitrary warping.
 *  0b0110..Fetch unit with RL and RLAD decoder, reduced feature set.
 *  0b0111..Fetch unit with fractional plane (8 layers), reduced feature set.
 *  0b1000..Fetch unit with affine and arbitrary warping, reduced feature set.
 *  0b1001..Fetch unit with reduced minimum feature set for alpha, chroma and coordinate planes.
 *  0b1010..Fetch unit with YUV420 upsampling support, without RL and RLAD decoder and palette.
 *  0b1011..Fetch unit with only RGB feature set.
 *  0b1100..Fetch unit with fractional plane (16 layers).
 *  0b1101..Fetch unit with RL and RLAD decoder, reduced feature set.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_FETCHTYPE_pixeng_fetcheco2_FetchType(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_FETCHTYPE_pixeng_fetcheco2_FetchType_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_FETCHTYPE_pixeng_fetcheco2_FetchType_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES - Burst buffer properties. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_ManagedBurstBuffers_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_ManagedBurstBuffers_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_ManagedBurstBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_ManagedBurstBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_ManagedBurstBuffers_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_BurstLengthForMaxBuffers_MASK (0x1F00U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_BurstLengthForMaxBuffers_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_BurstLengthForMaxBuffers(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_BurstLengthForMaxBuffers_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_BURSTBUFFERPROPERTIES_pixeng_fetcheco2_BurstLengthForMaxBuffers_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_CURBASEADDRESS0 - Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESS0_pixeng_fetcheco2_CurBaseAddress0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESS0_pixeng_fetcheco2_CurBaseAddress0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESS0_pixeng_fetcheco2_CurBaseAddress0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESS0_pixeng_fetcheco2_CurBaseAddress0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESS0_pixeng_fetcheco2_CurBaseAddress0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_CURBASEADDRESSMSB0 - MSB bits of Current Working BaseAddress for layer 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESSMSB0_pixeng_fetcheco2_CurBaseAddressMSB0_MASK (0xFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESSMSB0_pixeng_fetcheco2_CurBaseAddressMSB0_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESSMSB0_pixeng_fetcheco2_CurBaseAddressMSB0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESSMSB0_pixeng_fetcheco2_CurBaseAddressMSB0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_CURBASEADDRESSMSB0_pixeng_fetcheco2_CurBaseAddressMSB0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2_HIDDENSTATUS - Hidden status informations. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBusy_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBusy_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBusy(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBusy_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBusy_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBuffersIdle_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBuffersIdle_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBuffersIdle(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBuffersIdle_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusBuffersIdle_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusRequest_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusRequest_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusRequest(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusRequest_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusRequest_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusComplete_MASK (0x40U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusComplete_SHIFT (6U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusComplete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusComplete_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_StatusComplete_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_ShadowStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_ShadowStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_ShadowStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_ShadowStatus0_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2_HIDDENSTATUS_pixeng_fetcheco2_ShadowStatus0_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2CFG_FETCHECO2_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2cfg_fetcheco2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2cfg_fetcheco2_LockUnlock_SHIFT (0U)
/*! pixeng_fetcheco2cfg_fetcheco2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2cfg_fetcheco2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2cfg_fetcheco2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKUNLOCK_pixeng_fetcheco2cfg_fetcheco2_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_LOCKSTATUS_pixeng_fetcheco2cfg_fetcheco2_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_FETCHECO2CFG_FETCHECO2_STATUS - Status information for pixel engine configuration of fetcheco2 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_STATUS_pixeng_fetcheco2cfg_fetcheco2_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_STATUS_pixeng_fetcheco2cfg_fetcheco2_sel_SHIFT (16U)
/*! pixeng_fetcheco2cfg_fetcheco2_sel
 *  0b000..fetcheco2 module is not used
 *  0b001..fetcheco2 module is used from store9 processing path
 *  0b010..fetcheco2 module is used from extdst0 processing path
 *  0b011..fetcheco2 module is used from extdst4 processing path
 *  0b100..fetcheco2 module is used from extdst1 processing path
 *  0b101..fetcheco2 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_STATUS_pixeng_fetcheco2cfg_fetcheco2_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_STATUS_pixeng_fetcheco2cfg_fetcheco2_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_FETCHECO2CFG_FETCHECO2_STATUS_pixeng_fetcheco2cfg_fetcheco2_sel_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKUNLOCK_pixeng_matrix4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKUNLOCK_pixeng_matrix4_LockUnlock_SHIFT (0U)
/*! pixeng_matrix4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKUNLOCK_pixeng_matrix4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKUNLOCK_pixeng_matrix4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKUNLOCK_pixeng_matrix4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_LOCKSTATUS_pixeng_matrix4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_STATICCONTROL - Color Matrix static control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_STATICCONTROL_pixeng_matrix4_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_STATICCONTROL_pixeng_matrix4_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_STATICCONTROL_pixeng_matrix4_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_STATICCONTROL_pixeng_matrix4_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_STATICCONTROL_pixeng_matrix4_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_CONTROL - Color Matrix control register */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_MODE_MASK (0x3U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_MODE_SHIFT (0U)
/*! pixeng_matrix4_MODE
 *  0b00..Module in neutral mode, input data is bypassed
 *  0b01..Module in matrix mode, input data is multiplied with matrix values
 *  0b10..Module in alpha pre-multiplication mode, input color is multiplied with input alpha
 *  0b11..Reserved, do not use
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_MODE_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_MODE_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaMask_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaMask_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaMask(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaMask_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaMask_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaInvert_MASK (0x20U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaInvert_SHIFT (5U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaInvert(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaInvert_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_CONTROL_pixeng_matrix4_AlphaInvert_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_RED0 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A11_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A11_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A11(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A11_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A11_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A12_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A12_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A12(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A12_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_RED0_pixeng_matrix4_A12_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_RED1 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A13_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A13_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A13(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A13_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A13_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A14_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A14_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A14(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A14_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_RED1_pixeng_matrix4_A14_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_GREEN0 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A21_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A21_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A21(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A21_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A21_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A22_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A22_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A22(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A22_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN0_pixeng_matrix4_A22_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_GREEN1 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A23_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A23_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A23(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A23_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A23_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A24_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A24_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A24(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A24_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_GREEN1_pixeng_matrix4_A24_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_BLUE0 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A31_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A31_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A31(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A31_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A31_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A32_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A32_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A32(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A32_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE0_pixeng_matrix4_A32_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_BLUE1 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A33_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A33_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A33(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A33_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A33_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A34_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A34_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A34(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A34_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_BLUE1_pixeng_matrix4_A34_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_ALPHA0 - Matrix values for calculation of the alpha output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A41_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A41_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A41(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A41_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A41_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A42_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A42_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A42(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A42_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA0_pixeng_matrix4_A42_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_ALPHA1 - Matrix values for calculation of the alpha output value. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A43_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A43_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A43(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A43_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A43_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A44_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A44_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A44(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A44_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_ALPHA1_pixeng_matrix4_A44_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_OFFSETVECTOR0 - Offset vectors for red and green output. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C1_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C1_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C1_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C1_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C2_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C2_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C2_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR0_pixeng_matrix4_C2_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_OFFSETVECTOR1 - Offset vectors for blue and alpha output. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C3_MASK (0x1FFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C3_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C3_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C3_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C4_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C4_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C4_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_OFFSETVECTOR1_pixeng_matrix4_C4_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4_LASTCONTROLWORD - Value of last received control word, for debugging. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4_LASTCONTROLWORD_pixeng_matrix4_L_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LASTCONTROLWORD_pixeng_matrix4_L_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4_LASTCONTROLWORD_pixeng_matrix4_L_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4_LASTCONTROLWORD_pixeng_matrix4_L_VAL_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4_LASTCONTROLWORD_pixeng_matrix4_L_VAL_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4CFG_MATRIX4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKUNLOCK_pixeng_matrix4cfg_matrix4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKUNLOCK_pixeng_matrix4cfg_matrix4_LockUnlock_SHIFT (0U)
/*! pixeng_matrix4cfg_matrix4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKUNLOCK_pixeng_matrix4cfg_matrix4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKUNLOCK_pixeng_matrix4cfg_matrix4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKUNLOCK_pixeng_matrix4cfg_matrix4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_LOCKSTATUS_pixeng_matrix4cfg_matrix4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC - Dynamic pixel engine configuration for matrix4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_src_sel_SHIFT (0U)
/*! pixeng_matrix4cfg_matrix4_src_sel
 *  0b000000..Unit matrix4 input port src is disabled
 *  0b011100..Unit matrix4 input port src is connected to output of unit fetchyuv3
 *  0b011101..Unit matrix4 input port src is connected to output of unit fetchyuv0
 *  0b011111..Unit matrix4 input port src is connected to output of unit fetchyuv1
 *  0b100001..Unit matrix4 input port src is connected to output of unit fetchyuv2
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_clken_SHIFT (24U)
/*! pixeng_matrix4cfg_matrix4_clken
 *  0b00..Clock for matrix4 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for matrix4 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_DYNAMIC_pixeng_matrix4cfg_matrix4_clken_MASK)
/*! @} */

/*! @name PIXENG_MATRIX4CFG_MATRIX4_STATUS - Status information for pixel engine configuration of matrix4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_STATUS_pixeng_matrix4cfg_matrix4_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_STATUS_pixeng_matrix4cfg_matrix4_sel_SHIFT (16U)
/*! pixeng_matrix4cfg_matrix4_sel
 *  0b000..matrix4 module is not used
 *  0b001..matrix4 module is used from store9 processing path
 *  0b010..matrix4 module is used from extdst0 processing path
 *  0b011..matrix4 module is used from extdst4 processing path
 *  0b100..matrix4 module is used from extdst1 processing path
 *  0b101..matrix4 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_STATUS_pixeng_matrix4cfg_matrix4_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_STATUS_pixeng_matrix4cfg_matrix4_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_MATRIX4CFG_MATRIX4_STATUS_pixeng_matrix4cfg_matrix4_sel_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4_LockUnlock_SHIFT (0U)
/*! pixeng_hscaler4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_LOCKSTATUS_pixeng_hscaler4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4_STATICCONTROL - Static control settings that must typically be setup once only. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4_STATICCONTROL_pixeng_hscaler4_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_STATICCONTROL_pixeng_hscaler4_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_STATICCONTROL_pixeng_hscaler4_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_STATICCONTROL_pixeng_hscaler4_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_STATICCONTROL_pixeng_hscaler4_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4_SETUP1 - Phase interpolator setup. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP1_pixeng_hscaler4_scale_factor_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP1_pixeng_hscaler4_scale_factor_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP1_pixeng_hscaler4_scale_factor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP1_pixeng_hscaler4_scale_factor_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP1_pixeng_hscaler4_scale_factor_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4_SETUP2 - Phase interpolator setup. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP2_pixeng_hscaler4_phase_offset_MASK (0x1FFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP2_pixeng_hscaler4_phase_offset_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP2_pixeng_hscaler4_phase_offset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP2_pixeng_hscaler4_phase_offset_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_SETUP2_pixeng_hscaler4_phase_offset_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4_CONTROL - Scaler operation control. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_mode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_mode_SHIFT (0U)
/*! pixeng_hscaler4_mode
 *  0b0..Neutral mode. Pixels by-pass the scaler, all other settings are ignored.
 *  0b1..Scaler is active.
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_scale_mode_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_scale_mode_SHIFT (4U)
/*! pixeng_hscaler4_scale_mode
 *  0b0..Down-scaling (output size less or equal input size).
 *  0b1..Up-scaling (output size greater or equal input size)
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_scale_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_scale_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_scale_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_filter_mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_filter_mode_SHIFT (8U)
/*! pixeng_hscaler4_filter_mode
 *  0b0..Nearest filter (point-sampling)
 *  0b1..Box filter (linear)
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_filter_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_filter_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_filter_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_output_size_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_output_size_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_output_size(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_output_size_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4_CONTROL_pixeng_hscaler4_output_size_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4CFG_HSCALER4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4cfg_hscaler4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4cfg_hscaler4_LockUnlock_SHIFT (0U)
/*! pixeng_hscaler4cfg_hscaler4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4cfg_hscaler4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4cfg_hscaler4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKUNLOCK_pixeng_hscaler4cfg_hscaler4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_LOCKSTATUS_pixeng_hscaler4cfg_hscaler4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC - Dynamic pixel engine configuration for hscaler4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_src_sel_SHIFT (0U)
/*! pixeng_hscaler4cfg_hscaler4_src_sel
 *  0b000000..Unit hscaler4 input port src is disabled
 *  0b011100..Unit hscaler4 input port src is connected to output of unit fetchyuv3
 *  0b011101..Unit hscaler4 input port src is connected to output of unit fetchyuv0
 *  0b011111..Unit hscaler4 input port src is connected to output of unit fetchyuv1
 *  0b100001..Unit hscaler4 input port src is connected to output of unit fetchyuv2
 *  0b100011..Unit hscaler4 input port src is connected to output of unit matrix4
 *  0b100101..Unit hscaler4 input port src is connected to output of unit vscaler4
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_clken_SHIFT (24U)
/*! pixeng_hscaler4cfg_hscaler4_clken
 *  0b00..Clock for hscaler4 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for hscaler4 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_DYNAMIC_pixeng_hscaler4cfg_hscaler4_clken_MASK)
/*! @} */

/*! @name PIXENG_HSCALER4CFG_HSCALER4_STATUS - Status information for pixel engine configuration of hscaler4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_STATUS_pixeng_hscaler4cfg_hscaler4_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_STATUS_pixeng_hscaler4cfg_hscaler4_sel_SHIFT (16U)
/*! pixeng_hscaler4cfg_hscaler4_sel
 *  0b000..hscaler4 module is not used
 *  0b001..hscaler4 module is used from store9 processing path
 *  0b010..hscaler4 module is used from extdst0 processing path
 *  0b011..hscaler4 module is used from extdst4 processing path
 *  0b100..hscaler4 module is used from extdst1 processing path
 *  0b101..hscaler4 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_STATUS_pixeng_hscaler4cfg_hscaler4_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_STATUS_pixeng_hscaler4cfg_hscaler4_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_HSCALER4CFG_HSCALER4_STATUS_pixeng_hscaler4cfg_hscaler4_sel_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4_LockUnlock_SHIFT (0U)
/*! pixeng_vscaler4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_LOCKSTATUS_pixeng_vscaler4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4_STATICCONTROL - Static control settings that must typically be setup once only. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4_STATICCONTROL_pixeng_vscaler4_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_STATICCONTROL_pixeng_vscaler4_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_STATICCONTROL_pixeng_vscaler4_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_STATICCONTROL_pixeng_vscaler4_ShdEn_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_STATICCONTROL_pixeng_vscaler4_ShdEn_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4_SETUP1 - Phase interpolator setup. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP1_pixeng_vscaler4_scale_factor_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP1_pixeng_vscaler4_scale_factor_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP1_pixeng_vscaler4_scale_factor(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP1_pixeng_vscaler4_scale_factor_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP1_pixeng_vscaler4_scale_factor_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4_SETUP2 - Phase interpolator setup, selected if input and output field polarity is 0. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP2_pixeng_vscaler4_phase_offset_MASK (0x1FFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP2_pixeng_vscaler4_phase_offset_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP2_pixeng_vscaler4_phase_offset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP2_pixeng_vscaler4_phase_offset_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_SETUP2_pixeng_vscaler4_phase_offset_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4_CONTROL - Scaler operation control. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_mode_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_mode_SHIFT (0U)
/*! pixeng_vscaler4_mode
 *  0b0..Neutral mode. Pixels by-pass the scaler, all other settings are ignored.
 *  0b1..Scaler is active.
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_scale_mode_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_scale_mode_SHIFT (4U)
/*! pixeng_vscaler4_scale_mode
 *  0b0..Down-scaling (output size less or equal input size).
 *  0b1..Up-scaling (output size greater or equal input size).
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_scale_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_scale_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_scale_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_filter_mode_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_filter_mode_SHIFT (8U)
/*! pixeng_vscaler4_filter_mode
 *  0b0..Nearest filter (point-sampling)
 *  0b1..Box filter (linear)
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_filter_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_filter_mode_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_filter_mode_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_output_size_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_output_size_SHIFT (16U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_output_size(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_output_size_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4_CONTROL_pixeng_vscaler4_output_size_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4CFG_VSCALER4_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4cfg_vscaler4_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4cfg_vscaler4_LockUnlock_SHIFT (0U)
/*! pixeng_vscaler4cfg_vscaler4_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4cfg_vscaler4_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4cfg_vscaler4_LockUnlock_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKUNLOCK_pixeng_vscaler4cfg_vscaler4_LockUnlock_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_LockStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_LockStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_LOCKSTATUS_pixeng_vscaler4cfg_vscaler4_FreezeStatus_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC - Dynamic pixel engine configuration for vscaler4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_src_sel_MASK (0x3FU)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_src_sel_SHIFT (0U)
/*! pixeng_vscaler4cfg_vscaler4_src_sel
 *  0b000000..Unit vscaler4 input port src is disabled
 *  0b011100..Unit vscaler4 input port src is connected to output of unit fetchyuv3
 *  0b011101..Unit vscaler4 input port src is connected to output of unit fetchyuv0
 *  0b011111..Unit vscaler4 input port src is connected to output of unit fetchyuv1
 *  0b100001..Unit vscaler4 input port src is connected to output of unit fetchyuv2
 *  0b100011..Unit vscaler4 input port src is connected to output of unit matrix4
 *  0b100100..Unit vscaler4 input port src is connected to output of unit hscaler4
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_src_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_src_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_src_sel_MASK)

#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_clken_MASK (0x3000000U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_clken_SHIFT (24U)
/*! pixeng_vscaler4cfg_vscaler4_clken
 *  0b00..Clock for vscaler4 is disabled
 *  0b01..Clock is enabled if unit is used, frequency is defined by the register setting for this pipeline (see [endpoint_name]_Static register)
 *  0b11..Clock for vscaler4 is without gating
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_clken(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_clken_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_DYNAMIC_pixeng_vscaler4cfg_vscaler4_clken_MASK)
/*! @} */

/*! @name PIXENG_VSCALER4CFG_VSCALER4_STATUS - Status information for pixel engine configuration of vscaler4 */
/*! @{ */

#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_STATUS_pixeng_vscaler4cfg_vscaler4_sel_MASK (0x70000U)
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_STATUS_pixeng_vscaler4cfg_vscaler4_sel_SHIFT (16U)
/*! pixeng_vscaler4cfg_vscaler4_sel
 *  0b000..vscaler4 module is not used
 *  0b001..vscaler4 module is used from store9 processing path
 *  0b010..vscaler4 module is used from extdst0 processing path
 *  0b011..vscaler4 module is used from extdst4 processing path
 *  0b100..vscaler4 module is used from extdst1 processing path
 *  0b101..vscaler4 module is used from extdst5 processing path
 */
#define DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_STATUS_pixeng_vscaler4cfg_vscaler4_sel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_STATUS_pixeng_vscaler4cfg_vscaler4_sel_SHIFT)) & DISPLAY_SEERIS_PIXENG_VSCALER4CFG_VSCALER4_STATUS_pixeng_vscaler4cfg_vscaler4_sel_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUNLOCK_diseng_domainblend0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUNLOCK_diseng_domainblend0_LockUnlock_SHIFT (0U)
/*! diseng_domainblend0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUNLOCK_diseng_domainblend0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUNLOCK_diseng_domainblend0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUNLOCK_diseng_domainblend0_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKSTATUS_diseng_domainblend0_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdEn_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdLdSel_MASK (0xEU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdLdSel_SHIFT (1U)
/*! diseng_domainblend0_ShdLdSel
 *  0b000..Shadow loading not allowed
 *  0b001..Load shadows with shadow load token on primary input.
 *  0b010..Load shadows with shadow load token on secondary input.
 *  0b011..Load shadows with shadow load token on primary or secondary input.
 *  0b100..Load shadows with shadow load token from ControlTrigger register.
 *  0b101..Load shadows with shadow load token from ControlTrigger register or primary input.
 *  0b110..Load shadows with shadow load token from ControlTrigger register or secondary input.
 *  0b111..Load shadows with shadow load token from ControlTrigger register or primary or secondary input.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdLdSel_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdTokSel_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdTokSel_SHIFT (4U)
/*! diseng_domainblend0_ShdTokSel
 *  0b000..Shadow load forwarding not allowed
 *  0b001..When a token was received on the primary input.
 *  0b010..When a token was received on the secondary input.
 *  0b011..When a token was received on the primary or secondary input.
 *  0b100..When a token was received from ControlTrigger register.
 *  0b101..When a token was received from ControlTrigger register or primary input.
 *  0b110..When a token was received from ControlTrigger register or secondary input.
 *  0b111..When a token was received from ControlTrigger register or primary or secondary input.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_STATICCONTROL_diseng_domainblend0_ShdTokSel_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_CONTROLTRIGGER - Shadow load and sequence complete triggers. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_ShdTokGen_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_Trigger_Sequence_Complete_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_Trigger_Sequence_Complete_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_Trigger_Sequence_Complete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_Trigger_Sequence_Complete_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_CONTROLTRIGGER_diseng_domainblend0_Trigger_Sequence_Complete_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_MODECONTROL - Operation mode of the domainblend */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_MODECONTROL_diseng_domainblend0_MODE_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_MODECONTROL_diseng_domainblend0_MODE_SHIFT (0U)
/*! diseng_domainblend0_MODE
 *  0b00..Output is same as primary input.
 *  0b01..Output is same as secondary input.
 *  0b10..Module is in blending mode.
 *  0b11..Module is in side by side mode. The primary and secondary inputs are displayed side by side.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_MODECONTROL_diseng_domainblend0_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_MODECONTROL_diseng_domainblend0_MODE_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_MODECONTROL_diseng_domainblend0_MODE_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_ALPHACONTROL - Alpha mask settings. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskEnable_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskEnable_SHIFT (0U)
/*! diseng_domainblend0_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskMode_MASK (0xEU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskMode_SHIFT (1U)
/*! diseng_domainblend0_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ALPHACONTROL_diseng_domainblend0_AlphaMaskMode_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! diseng_domainblend0_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_C_BLD_FUNC_SHIFT (4U)
/*! diseng_domainblend0_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! diseng_domainblend0_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_A_BLD_FUNC_SHIFT (12U)
/*! diseng_domainblend0_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_BLENDCONTROL_diseng_domainblend0_BlendAlpha_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK - The status of primary and secondary sources waiting for pixels. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_PrimWait_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_PrimWait_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_PrimWait(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_PrimWait_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_PrimWait_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_SecWait_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_SecWait_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_SecWait(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_SecWait_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_TIMEOUT_FEEDBACK_diseng_domainblend0_SecWait_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_LOCKUP_CLEAR - The register can be used to internally reset domainblend if it gets stuck by pending pixels from one source. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUP_CLEAR_diseng_domainblend0_LockupClear_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUP_CLEAR_diseng_domainblend0_LockupClear_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUP_CLEAR_diseng_domainblend0_LockupClear(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUP_CLEAR_diseng_domainblend0_LockupClear_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_LOCKUP_CLEAR_diseng_domainblend0_LockupClear_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_DELAY_COUNTER_EN - The register enables the delay and error counters that report on the delay on prim and sec sources. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_EN_diseng_domainblend0_DelayCountEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_EN_diseng_domainblend0_DelayCountEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_EN_diseng_domainblend0_DelayCountEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_EN_diseng_domainblend0_DelayCountEn_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_EN_diseng_domainblend0_DelayCountEn_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_DELAY_COUNTER_PRIM - The number of inavtive clock cycles during which the domainblend is waiting for pixels from primary source. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_PRIM_diseng_domainblend0_DelayCountPrim_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_PRIM_diseng_domainblend0_DelayCountPrim_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_PRIM_diseng_domainblend0_DelayCountPrim(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_PRIM_diseng_domainblend0_DelayCountPrim_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_PRIM_diseng_domainblend0_DelayCountPrim_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_DELAY_COUNTER_SEC - The number of inavtive clock cycles during which the domainblend is waiting for pixels from secondary source. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_SEC_diseng_domainblend0_DelayCountSec_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_SEC_diseng_domainblend0_DelayCountSec_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_SEC_diseng_domainblend0_DelayCountSec(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_SEC_diseng_domainblend0_DelayCountSec_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_DELAY_COUNTER_SEC_diseng_domainblend0_DelayCountSec_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_ERROR_COUNTER_PRIM - The number of inavtive clock cycles on the primary source till the synchronization loss of domainblend. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_PRIM_diseng_domainblend0_ErrCountPrim_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_PRIM_diseng_domainblend0_ErrCountPrim_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_PRIM_diseng_domainblend0_ErrCountPrim(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_PRIM_diseng_domainblend0_ErrCountPrim_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_PRIM_diseng_domainblend0_ErrCountPrim_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_ERROR_COUNTER_SEC - The number of inavtive clock cycles on the secondary source till the synchronization loss of domainblend. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_SEC_diseng_domainblend0_ErrCountSec_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_SEC_diseng_domainblend0_ErrCountSec_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_SEC_diseng_domainblend0_ErrCountSec(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_SEC_diseng_domainblend0_ErrCountSec_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_ERROR_COUNTER_SEC_diseng_domainblend0_ErrCountSec_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_SOURCE_STATUS - Source protocol error detection for primary and secondary sources */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongCommandWord_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongCommandWord_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongCommandWord(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongCommandWord_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongCommandWord_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongPixelData_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongPixelData_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongPixelData(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongPixelData_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongPixelData_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongInput_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongInput_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongInput(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongInput_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_diseng_domainblend0_WrongInput_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR - Clearing source protocol error status for both primary and secondary sources */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongCommandWord_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongCommandWord_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongCommandWord(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongCommandWord_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongCommandWord_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongPixelData_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongPixelData_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongPixelData(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongPixelData_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongPixelData_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongInput_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongInput_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongInput(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongInput_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SOURCE_STATUS_CLEAR_diseng_domainblend0_ClearWrongInput_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_PRIMCONTROLWORD - Value of last received primary control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_PRIMCONTROLWORD_diseng_domainblend0_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_PRIMCONTROLWORD_diseng_domainblend0_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_PRIMCONTROLWORD_diseng_domainblend0_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_PRIMCONTROLWORD_diseng_domainblend0_P_VAL_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_PRIMCONTROLWORD_diseng_domainblend0_P_VAL_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND0_SECCONTROLWORD - Value of last received secondary control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SECCONTROLWORD_diseng_domainblend0_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SECCONTROLWORD_diseng_domainblend0_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SECCONTROLWORD_diseng_domainblend0_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SECCONTROLWORD_diseng_domainblend0_S_VAL_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND0_SECCONTROLWORD_diseng_domainblend0_S_VAL_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKUNLOCK_diseng_framegen0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKUNLOCK_diseng_framegen0_LockUnlock_SHIFT (0U)
/*! diseng_framegen0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKUNLOCK_diseng_framegen0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKUNLOCK_diseng_framegen0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKUNLOCK_diseng_framegen0_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_LOCKSTATUS_diseng_framegen0_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSTCTRL - FrameGen Static Control Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_ShdEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgSyncMode_MASK (0xEU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgSyncMode_SHIFT (1U)
/*! diseng_framegen0_FgSyncMode
 *  0b000..No side-by-side synchronization.
 *  0b001..Framegen is master.
 *  0b010..Framegen is slave. Runs in cyclic synchronization mode.
 *  0b011..Framegen is slave. Runs in one time synchronization mode.
 *  0b110..Framegen is slave. Runs in cyclic synchronization mode. Size is adapted.
 *  0b111..Framegen is slave. Runs in one time synchronization mode. Size is adapted.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgSyncMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgSyncMode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgSyncMode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgShdTokGenSyncMode_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgShdTokGenSyncMode_SHIFT (4U)
/*! diseng_framegen0_FgShdTokGenSyncMode
 *  0b0..Shadow token is generated by local FgSlr.ShdTokGen field.
 *  0b1..Shadow token is generated by FgSlr.ShdTokGen field of second framegenerator.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgShdTokGenSyncMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgShdTokGenSyncMode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_FgShdTokGenSyncMode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_Force_Disable_MASK (0x40000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_Force_Disable_SHIFT (30U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_Force_Disable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_Force_Disable_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSTCTRL_diseng_framegen0_Force_Disable_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_HTCFG1 - FrameGen Horizontal Timing Config Register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Hact_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Hact_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Hact(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Hact_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Hact_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Htotal_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Htotal_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Htotal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Htotal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG1_diseng_framegen0_Htotal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_HTCFG2 - FrameGen Horizontal Timing Config Register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsync_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsync_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsbp_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsbp_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsbp(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsbp_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_Hsbp_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_HsEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_HsEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_HTCFG2_diseng_framegen0_HsEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_VTCFG1 - FrameGen Vertical Timing Config Register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vact_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vact_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vact(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vact_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vact_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vtotal_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vtotal_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vtotal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vtotal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG1_diseng_framegen0_Vtotal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_VTCFG2 - FrameGen Vertical Timing Config Register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsync_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsync_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsbp_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsbp_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsbp(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsbp_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_Vsbp_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_VsEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_VsEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_VsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_VsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_VTCFG2_diseng_framegen0_VsEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_INT0CONFIG - Coordinates of the trigger point for generation of the Int0 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT0CONFIG_diseng_framegen0_Int0En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_INT1CONFIG - Coordinates of the trigger point for generation of the Int1 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT1CONFIG_diseng_framegen0_Int1En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_INT2CONFIG - Coordinates of the trigger point for generation of the Int2 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT2CONFIG_diseng_framegen0_Int2En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_INT3CONFIG - Coordinates of the trigger point for generation of the Int3 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_INT3CONFIG_diseng_framegen0_Int3En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_PKICKCONFIG - Coordinates of the trigger point for generation of the primary kick signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickCol_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickCol_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickCol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickCol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickCol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickInt0En_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickInt0En_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickInt0En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickInt0En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickInt0En_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickRow_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickRow_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickRow(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickRow_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickRow_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_PKICKCONFIG_diseng_framegen0_PKickEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_SKICKCONFIG - Coordinates of the trigger point for generation of the secondary kick signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickCol_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickCol_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickCol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickCol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickCol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickInt1En_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickInt1En_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickInt1En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickInt1En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickInt1En_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickRow_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickRow_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickRow(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickRow_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickRow_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickTrig_MASK (0x40000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickTrig_SHIFT (30U)
/*! diseng_framegen0_SKickTrig
 *  0b0..Use internal skick signal, trigger point defined by SKickRow and SKickCol.
 *  0b1..Use external skick input as trigger.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickTrig(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickTrig_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickTrig_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SKICKCONFIG_diseng_framegen0_SKickEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_SECSTATCONFIG - Configuration register for controlling the behaviour of the SecSyncStat field in the FgSecChStat register. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevGoodFrames_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevGoodFrames_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevGoodFrames(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevGoodFrames_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevGoodFrames_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevBadFrames_MASK (0xF0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevBadFrames_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevBadFrames(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevBadFrames_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevBadFrames_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevSkewInRange_MASK (0xF00U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevSkewInRange_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevSkewInRange(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevSkewInRange_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SECSTATCONFIG_diseng_framegen0_LevSkewInRange_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR1 - FrameGen Skew Regulation Control Register 1. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRMode_MASK (0x6U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRMode_SHIFT (1U)
/*! diseng_framegen0_SRMode
 *  0b00..Skew Regulation is off.
 *  0b01..Horizontal regulation enabled.
 *  0b10..Vertical regulation enabled.
 *  0b11..Both regulation modes are enabled.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRMode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRMode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRAdj_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRAdj_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRAdj(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRAdj_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRAdj_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREven_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREven_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREven(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREven_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREven_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRFastSync_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRFastSync_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRFastSync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRFastSync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRFastSync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQAlign_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQAlign_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQAlign(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQAlign_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQAlign_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQVal_MASK (0x180U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQVal_SHIFT (7U)
/*! diseng_framegen0_SRQVal
 *  0b00..Fixed two LSB values of HTOTAL are 0b00.
 *  0b01..Fixed two LSB values of HTOTAL are 0b01.
 *  0b10..Fixed two LSB values of HTOTAL are 0b10.
 *  0b11..Fixed two LSB values of HTOTAL are 0b11.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQVal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQVal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRQVal_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRDbgDisp_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRDbgDisp_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRDbgDisp(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRDbgDisp_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRDbgDisp_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREpOff_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREpOff_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREpOff(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREpOff_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SREpOff_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRClock_Mode_MASK (0x1800U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRClock_Mode_SHIFT (11U)
/*! diseng_framegen0_SRClock_Mode
 *  0b00..No clock regulation.
 *  0b01..Adapt clock frequency to input frame rate. Output alignment is done with h/vtotal regulation
 *  0b10..Start with CLKADAPT till in sync, switch to ONLY after in sync.
 *  0b11..Only clock regulation.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRClock_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRClock_Mode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRClock_Mode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRExt_MASK (0x2000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRExt_SHIFT (13U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRExt(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRExt_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_SRExt_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_CsSyncSel_MASK (0xC0000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_CsSyncSel_SHIFT (30U)
/*! diseng_framegen0_CsSyncSel
 *  0b00..Use APIX control signals for external sync.
 *  0b01..Use HS VS for external sync.
 *  0b10..Use DSC control signals for external sync.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_CsSyncSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_CsSyncSel_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR1_diseng_framegen0_CsSyncSel_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR2 - FrameGen Skew Regulation Control Register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMin_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMin_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMax_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMax_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR2_diseng_framegen0_HTotalMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR3 - FrameGen Skew Regulation Control Register 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMin_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMin_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMax_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMax_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR3_diseng_framegen0_VTotalMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR4 - FrameGen Skew Regulation Control Register 4 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR4_diseng_framegen0_TargetSkew_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR4_diseng_framegen0_TargetSkew_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR4_diseng_framegen0_TargetSkew(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR4_diseng_framegen0_TargetSkew_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR4_diseng_framegen0_TargetSkew_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR5 - FrameGen Skew Regulation Control Register 5 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR5_diseng_framegen0_SyncRangeLow_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR5_diseng_framegen0_SyncRangeLow_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR5_diseng_framegen0_SyncRangeLow(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR5_diseng_framegen0_SyncRangeLow_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR5_diseng_framegen0_SyncRangeLow_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR6 - FrameGen Skew Regulation Control Register 6 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR6_diseng_framegen0_SyncRangeHigh_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR6_diseng_framegen0_SyncRangeHigh_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR6_diseng_framegen0_SyncRangeHigh(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR6_diseng_framegen0_SyncRangeHigh_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR6_diseng_framegen0_SyncRangeHigh_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR7 - FrameGen Skew Regulation Control Register 7 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_HorizontalIncrement_MASK (0x7FFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_HorizontalIncrement_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_HorizontalIncrement(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_HorizontalIncrement_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_HorizontalIncrement_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_VerticalIncrement_MASK (0xF8000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_VerticalIncrement_SHIFT (27U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_VerticalIncrement(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_VerticalIncrement_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR7_diseng_framegen0_VerticalIncrement_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR8 - FrameGen Skew Regulation Control Register 8 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR8_diseng_framegen0_StartOffset_MASK (0x3FFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR8_diseng_framegen0_StartOffset_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR8_diseng_framegen0_StartOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR8_diseng_framegen0_StartOffset_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR8_diseng_framegen0_StartOffset_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR9 - FrameGen Skew Regulation Control Register 9 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR9_diseng_framegen0_clockperiod_ref_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR9_diseng_framegen0_clockperiod_ref_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR9_diseng_framegen0_clockperiod_ref(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR9_diseng_framegen0_clockperiod_ref_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR9_diseng_framegen0_clockperiod_ref_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR10 - FrameGen Skew Regulation Control Register 10 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR10_diseng_framegen0_clockperiod_min_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR10_diseng_framegen0_clockperiod_min_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR10_diseng_framegen0_clockperiod_min(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR10_diseng_framegen0_clockperiod_min_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR10_diseng_framegen0_clockperiod_min_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR11 - FrameGen Skew Regulation Control Register 11 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR11_diseng_framegen0_clockperiod_max_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR11_diseng_framegen0_clockperiod_max_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR11_diseng_framegen0_clockperiod_max(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR11_diseng_framegen0_clockperiod_max_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR11_diseng_framegen0_clockperiod_max_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR12 - FrameGen Skew Regulation Control Register 12 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR12_diseng_framegen0_pixel_period_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR12_diseng_framegen0_pixel_period_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR12_diseng_framegen0_pixel_period(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR12_diseng_framegen0_pixel_period_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR12_diseng_framegen0_pixel_period_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR13 - FrameGen Skew Regulation Control Register 13 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_filterrate_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_filterrate_SHIFT (2U)
/*! diseng_framegen0_CSR_filterrate
 *  0b00..Clock measurement update rate defined by CSR_updaterate, no additional filter used.
 *  0b01..Clock measurements update rate defined by CSR_updaterate filtered by 4.
 *  0b10..Clock measurements update rate defined by CSR_updaterate filtered by 16.
 *  0b11..Clock measurements update rate defined by CSR_updaterate filtered by 64.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_filterrate(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_filterrate_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_filterrate_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_updaterate_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_updaterate_SHIFT (4U)
/*! diseng_framegen0_CSR_updaterate
 *  0b000..Clock measurement is off, reference value is used.
 *  0b100..Measured clock is averaged over 2^16 input clock cycles.
 *  0b101..Measured clock is averaged over 2^14 input clock cycles.
 *  0b110..Measured clock is averaged over 2^12 input clock cycles.
 *  0b111..Measured clock is averaged over 2^10 input clock cycles.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_updaterate(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_updaterate_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CSR_updaterate_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CMSyncSel_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CMSyncSel_SHIFT (7U)
/*! diseng_framegen0_CMSyncSel
 *  0b0..Use APIX control signals for clock measurement.
 *  0b1..Use HS VS for clock measurement.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CMSyncSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CMSyncSel_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR13_diseng_framegen0_CMSyncSel_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR14 - FrameGen Skew Regulation Control Register 14 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_Clockperiod_val_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_Clockperiod_val_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_Clockperiod_val(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_Clockperiod_val_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_Clockperiod_val_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_SSCGTrack_en_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_SSCGTrack_en_SHIFT (3U)
/*! diseng_framegen0_CSR_SSCGTrack_en
 *  0b0..Phase regulation does not take SSCG into account.
 *  0b1..Phase regulation does take SSCG into account.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_SSCGTrack_en(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_SSCGTrack_en_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_SSCGTrack_en_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_SHIFT (4U)
/*! diseng_framegen0_CSR_ramprate
 *  0b000..Phase regulation uses phasegain for step.
 *  0b001..Phase regulation uses 1/2 of phasegain for step.
 *  0b010..Phase regulation uses 1/4 of phasegain for step.
 *  0b011..Phase regulation uses 1/8 of phasegain for step.
 *  0b100..Phase regulation uses 1/16 of phasegain for step.
 *  0b101..Phase regulation uses 1/32 of phasegain for step.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_en_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_en_SHIFT (7U)
/*! diseng_framegen0_CSR_ramprate_en
 *  0b0..Phase regulation uses phasegain for step.
 *  0b1..Phase regulation uses CSR_ramprate of phasegain for step.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_en(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_en_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_ramprate_en_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegain_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegain_SHIFT (8U)
/*! diseng_framegen0_CSR_phasegain
 *  0b000..Phase regulation uses 1/1024 of clock period. Htotal has to be bigger than 1025+32.
 *  0b001..Phase regulation uses 1/512 of clock period. Htotal has to be bigger than 513+32.
 *  0b010..Phase regulation uses 1/256 of clock period. Htotal has to be bigger than 257+32.
 *  0b011..Phase regulation uses 1/128 of clock period. Htotal has to be bigger than 129+32.
 *  0b100..Phase regulation uses 1/64 of clock period. Htotal has to be bigger than 65+32.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegain(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegain_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegain_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegainsync_MASK (0x7000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegainsync_SHIFT (12U)
/*! diseng_framegen0_CSR_phasegainsync
 *  0b000..Phase regulation uses 1/1024 of clock period. Htotal has to be bigger than 1025+32.
 *  0b001..Phase regulation uses 1/512 of clock period. Htotal has to be bigger than 513+32.
 *  0b010..Phase regulation uses 1/256 of clock period. Htotal has to be bigger than 257+32.
 *  0b011..Phase regulation uses 1/128 of clock period. Htotal has to be bigger than 129+32.
 *  0b100..Phase regulation uses 1/64 of clock period. Htotal has to be bigger than 65+32.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegainsync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegainsync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_CSR_phasegainsync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_SkewOffset_Threshold_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_SkewOffset_Threshold_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_SkewOffset_Threshold(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_SkewOffset_Threshold_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR14_diseng_framegen0_SkewOffset_Threshold_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCR15 - FrameGen Skew Regulation Control Register 15 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsHsPol_MASK (0x4000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsHsPol_SHIFT (14U)
/*! diseng_framegen0_CsHsPol
 *  0b0..HSYNC is low active.
 *  0b1..HSYNC is high active.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsHsPol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsHsPol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsHsPol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsVsPol_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsVsPol_SHIFT (15U)
/*! diseng_framegen0_CsVsPol
 *  0b0..VSYNC is low active.
 *  0b1..VSYNC is high active.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsVsPol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsVsPol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsVsPol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsDelay_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsDelay_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsDelay(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsDelay_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCR15_diseng_framegen0_CsDelay_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGKSDR - FrameGen Kick System Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_PCntCplMax_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_PCntCplMax_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_PCntCplMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_PCntCplMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_PCntCplMax_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_SCntCplMax_MASK (0x70000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_SCntCplMax_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_SCntCplMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_SCntCplMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGKSDR_diseng_framegen0_SCntCplMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_PACFG - FrameGen Primary Area Config Register 1 (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstartx_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstartx_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstartx(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstartx_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstartx_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstarty_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstarty_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstarty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstarty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_PACFG_diseng_framegen0_Pstarty_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_SACFG - FrameGen Secondary Area Config Register 1 (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstartx_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstartx_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstartx(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstartx_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstartx_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstarty_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstarty_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstarty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstarty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_SACFG_diseng_framegen0_Sstarty_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGINCTRL - FrameGen Input Control Register (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_FgDm_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_FgDm_SHIFT (0U)
/*! diseng_framegen0_FgDm
 *  0b000..Black Color Background is shown.
 *  0b001..Constant Color Background is shown.
 *  0b010..Primary input only is shown.
 *  0b011..Secondary input only is shown.
 *  0b100..Both inputs overlaid with primary on top.
 *  0b101..Both inputs overlaid with secondary on top.
 *  0b110..White color background with test pattern is shown.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_FgDm(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_FgDm_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_FgDm_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnPrimAlpha_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnPrimAlpha_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnPrimAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnPrimAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnPrimAlpha_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnSecAlpha_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnSecAlpha_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnSecAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnSecAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRL_diseng_framegen0_EnSecAlpha_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGINCTRLPANIC - FrameGen Input Control Panic Register (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_FgDmPanic_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_FgDmPanic_SHIFT (0U)
/*! diseng_framegen0_FgDmPanic
 *  0b000..Black Color Background is shown.
 *  0b001..Constant Color Background is shown.
 *  0b010..Primary input only is shown.
 *  0b011..Secondary input only is shown.
 *  0b100..Both inputs overlaid with primary on top.
 *  0b101..Both inputs overlaid with secondary on top.
 *  0b110..White color background with test pattern is shown.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_FgDmPanic(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_FgDmPanic_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_FgDmPanic_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnPrimAlphaPanic_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnPrimAlphaPanic_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnPrimAlphaPanic(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnPrimAlphaPanic_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnPrimAlphaPanic_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnSecAlphaPanic_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnSecAlphaPanic_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnSecAlphaPanic(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnSecAlphaPanic_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGINCTRLPANIC_diseng_framegen0_EnSecAlphaPanic_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGCCR - FrameGen Constant Color Register (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcBlue_MASK (0x3FFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcBlue_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcBlue_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcBlue_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcGreen_MASK (0xFFC00U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcGreen_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcGreen_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcGreen_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcRed_MASK (0x3FF00000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcRed_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcRed_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcRed_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcAlpha_MASK (0xC0000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcAlpha_SHIFT (30U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCCR_diseng_framegen0_CcAlpha_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGENABLE - FrameGen Enable Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENABLE_diseng_framegen0_FgEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENABLE_diseng_framegen0_FgEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENABLE_diseng_framegen0_FgEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENABLE_diseng_framegen0_FgEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENABLE_diseng_framegen0_FgEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSLR - FrameGen Shadow Load Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSLR_diseng_framegen0_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSLR_diseng_framegen0_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSLR_diseng_framegen0_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSLR_diseng_framegen0_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSLR_diseng_framegen0_ShdTokGen_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGENSTS - FrameGen Enable Status Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_EnSts_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_EnSts_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_EnSts(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_EnSts_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_EnSts_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_PanicStat_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_PanicStat_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_PanicStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_PanicStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGENSTS_diseng_framegen0_PanicStat_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGTIMESTAMP - Time stamp status. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_LineIndex_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_LineIndex_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_LineIndex(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_LineIndex_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_LineIndex_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_FrameIndex_MASK (0xFFFFC000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_FrameIndex_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_FrameIndex(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_FrameIndex_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGTIMESTAMP_diseng_framegen0_FrameIndex_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGCHSTAT - FrameGen Channel Status Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PFifoEmpty_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PFifoEmpty_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PFifoEmpty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PFifoEmpty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PFifoEmpty_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PrimSyncStat_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PrimSyncStat_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PrimSyncStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PrimSyncStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_PrimSyncStat_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SFifoEmpty_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SFifoEmpty_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SFifoEmpty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SFifoEmpty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SFifoEmpty_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SkewRangeErr_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SkewRangeErr_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SkewRangeErr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SkewRangeErr_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SkewRangeErr_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SecSyncStat_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SecSyncStat_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SecSyncStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SecSyncStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTAT_diseng_framegen0_SecSyncStat_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGCHSTATCLR - FrameGen Channel Status Clear Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrPrimStat_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrPrimStat_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrPrimStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrPrimStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrPrimStat_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrSecStat_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrSecStat_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrSecStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrSecStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGCHSTATCLR_diseng_framegen0_ClrSecStat_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSKEWMON - FrameGen Skew Monitor Register for Secondary Channel Skew Control */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSKEWMON_diseng_framegen0_SkewMon_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSKEWMON_diseng_framegen0_SkewMon_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSKEWMON_diseng_framegen0_SkewMon(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSKEWMON_diseng_framegen0_SkewMon_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSKEWMON_diseng_framegen0_SkewMon_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGPFIFOMIN - FrameGen Primary FIFO Min Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMIN_diseng_framegen0_PFifoMin_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMIN_diseng_framegen0_PFifoMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMIN_diseng_framegen0_PFifoMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMIN_diseng_framegen0_PFifoMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMIN_diseng_framegen0_PFifoMin_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGPFIFOMAX - FrameGen Primary FIFO Max Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMAX_diseng_framegen0_PFifoMax_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMAX_diseng_framegen0_PFifoMax_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMAX_diseng_framegen0_PFifoMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMAX_diseng_framegen0_PFifoMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOMAX_diseng_framegen0_PFifoMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGPFIFOFILLCLR - FrameGen Primary FIFO Fill Clear Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOFILLCLR_diseng_framegen0_PFifoFillClr_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOFILLCLR_diseng_framegen0_PFifoFillClr_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOFILLCLR_diseng_framegen0_PFifoFillClr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOFILLCLR_diseng_framegen0_PFifoFillClr_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOFILLCLR_diseng_framegen0_PFifoFillClr_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGPFIFOTRES - FrameGen Primary FIFO Thresholds */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres0_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres0_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres1_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres1_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGPFIFOTRES_diseng_framegen0_PFifoTres1_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSFIFOMIN - FrameGen Secondary FIFO Min Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMIN_diseng_framegen0_SFifoMin_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMIN_diseng_framegen0_SFifoMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMIN_diseng_framegen0_SFifoMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMIN_diseng_framegen0_SFifoMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMIN_diseng_framegen0_SFifoMin_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSFIFOMAX - FrameGen Secondary FIFO Max Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMAX_diseng_framegen0_SFifoMax_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMAX_diseng_framegen0_SFifoMax_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMAX_diseng_framegen0_SFifoMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMAX_diseng_framegen0_SFifoMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOMAX_diseng_framegen0_SFifoMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSFIFOFILLCLR - FrameGen Secondary FIFO Fill Clear Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOFILLCLR_diseng_framegen0_SFifoFillClr_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOFILLCLR_diseng_framegen0_SFifoFillClr_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOFILLCLR_diseng_framegen0_SFifoFillClr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOFILLCLR_diseng_framegen0_SFifoFillClr_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSFIFOFILLCLR_diseng_framegen0_SFifoFillClr_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSREPD - FrameGen Skew Regulation ExtraPolation Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSREPD_diseng_framegen0_EpVal_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSREPD_diseng_framegen0_EpVal_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSREPD_diseng_framegen0_EpVal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSREPD_diseng_framegen0_EpVal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSREPD_diseng_framegen0_EpVal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRFTD - FrameGen Skew Regulation Frame Total Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRFTD_diseng_framegen0_FrTot_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRFTD_diseng_framegen0_FrTot_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRFTD_diseng_framegen0_FrTot(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRFTD_diseng_framegen0_FrTot_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRFTD_diseng_framegen0_FrTot_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCSHTOTAL - FrameGen Skew Regulation External Sync HTotal Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCSHTOTAL_diseng_framegen0_FrCSHTotal_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCSHTOTAL_diseng_framegen0_FrCSHTotal_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCSHTOTAL_diseng_framegen0_FrCSHTotal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCSHTOTAL_diseng_framegen0_FrCSHTotal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCSHTOTAL_diseng_framegen0_FrCSHTotal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSRCLOCKDIV - FrameGen Skew Regulation External PLL Clock divider */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCLOCKDIV_diseng_framegen0_FrClockDiv_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCLOCKDIV_diseng_framegen0_FrClockDiv_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCLOCKDIV_diseng_framegen0_FrClockDiv(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCLOCKDIV_diseng_framegen0_FrClockDiv_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSRCLOCKDIV_diseng_framegen0_FrClockDiv_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN0_FGSL - FrameGen Scanline Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_ScanLine_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_ScanLine_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_ScanLine(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_ScanLine_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_ScanLine_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_VBlank_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_VBlank_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_VBlank(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_VBlank_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN0_FGSL_diseng_framegen0_VBlank_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKUNLOCK_diseng_idhash0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKUNLOCK_diseng_idhash0_LockUnlock_SHIFT (0U)
/*! diseng_idhash0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKUNLOCK_diseng_idhash0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOCKUNLOCK_diseng_idhash0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOCKUNLOCK_diseng_idhash0_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOCKSTATUS_diseng_idhash0_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_STATICCONTROL - Global configuration */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_EnCalc_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_EnCalc_SHIFT (0U)
/*! diseng_idhash0_EnCalc
 *  0b0..bypass mode. the idhash calculation mode will be skipped and avoided.
 *  0b1..idhash perform the calculationmode/idhash extension mode.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_EnCalc(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_EnCalc_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_EnCalc_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_ShdLdSel_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_ShdLdSel_SHIFT (4U)
/*! diseng_idhash0_ShdLdSel
 *  0b0..Shadows are loaded at start of frame for each evaluation window for which ShdLdReq has been set.
 *  0b1..Shadows of all evaluation windows are loaded synchronous to the display stream (shadow load token received on frame input port).
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_STATICCONTROL_diseng_idhash0_ShdLdSel_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_PANICTHRESHOLD - Set and reset thresholds applying to Window_Panic interrupts and status bits */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThres_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThres_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThres(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThres_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThres_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThresReset_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThresReset_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThresReset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThresReset_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_PANICTHRESHOLD_diseng_idhash0_PanicThresReset_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_PANICCOLOR - Overlay color for evaluation windows in panic mode */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicBlue_MASK (0x3FCU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicBlue_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicBlue_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicBlue_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicGreen_MASK (0xFF000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicGreen_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicGreen_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicGreen_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicRed_MASK (0x3FC00000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicRed_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicRed_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicRed_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicAlpha_MASK (0xC0000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicAlpha_SHIFT (30U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_PANICCOLOR_diseng_idhash0_PanicAlpha_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_SHADOWLOAD - Shadow load control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_ShdLdReq_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_ShdLdReq_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_SetupID_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_SetupID_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_SetupID(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_SetupID_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_SHADOWLOAD_diseng_idhash0_SetupID_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONTINUOUSMODE - Idhash operation mode control */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTINUOUSMODE_diseng_idhash0_EnCont_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTINUOUSMODE_diseng_idhash0_EnCont_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTINUOUSMODE_diseng_idhash0_EnCont(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTINUOUSMODE_diseng_idhash0_EnCont_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTINUOUSMODE_diseng_idhash0_EnCont_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_IDHASH_STATUS - Idhash status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDHASH_STATUS_diseng_idhash0_IdhashState_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDHASH_STATUS_diseng_idhash0_IdhashState_SHIFT (0U)
/*! diseng_idhash0_IdhashState
 *  0b0..Idhash is in idle state
 *  0b1..Idhash is in run state
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDHASH_STATUS_diseng_idhash0_IdhashState(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDHASH_STATUS_diseng_idhash0_IdhashState_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDHASH_STATUS_diseng_idhash0_IdhashState_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_RUN_STATUS - Idhash evaluation status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Error_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Error_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Error(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Error_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Error_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Panic_MASK (0xF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Panic_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Panic(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Panic_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_Window_Panic_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_IdhashValid_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_IdhashValid_SHIFT (16U)
/*! diseng_idhash0_IdhashValid
 *  0b0..Idhash results are not valid
 *  0b1..Idhash results are valid
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_IdhashValid(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_IdhashValid_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_IdhashValid_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_ResultSetupID_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_ResultSetupID_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_ResultSetupID(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_ResultSetupID_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_RUN_STATUS_diseng_idhash0_ResultSetupID_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONTROL_WINDOW0 - Window 0, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_Mode_Window0_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_Mode_Window0_SHIFT (0U)
/*! diseng_idhash0_Mode_Window0
 *  0b000..Window is disabled. The internal status for this window is reset (Error bit and frame counters).
 *  0b001..Window operates in Telltale mode.
 *  0b010..Window operates in Icon mode.
 *  0b011..Window operates in RGB mode.
 *  0b100..1bit Alpha is inserted.
 *  0b101..2bit Alpha is inserted.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_Mode_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_Mode_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_Mode_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaMask_Window0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaMask_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaMask_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaMask_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaMask_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaInv_Window0_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaInv_Window0_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaInv_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaInv_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaInv_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaSel_Window0_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaSel_Window0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaSel_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaSel_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_AlphaSel_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_LocalPanic_Window0_MASK (0xF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_LocalPanic_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_LocalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_LocalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_LocalPanic_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_GlobalPanic_Window0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_GlobalPanic_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_GlobalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_GlobalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW0_diseng_idhash0_GlobalPanic_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_UPPERLEFT_WINDOW0 - Window 0, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW0_diseng_idhash0_UpperLeft_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LOWERRIGHT_WINDOW0 - Window 0, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW0_diseng_idhash0_LowerRight_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_TILE_WINDOW0 - Window 0, Tile dimensions */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_X_Window0_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_Y_Window0_MASK (0xF0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_Y_Window0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW0_diseng_idhash0_Tile_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_ADDRESS_WINDOW0 - Window 0, Memory word Address for Idhash */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW0_diseng_idhash0_Address_Window0_MASK (0xFFCU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW0_diseng_idhash0_Address_Window0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW0_diseng_idhash0_Address_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW0_diseng_idhash0_Address_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW0_diseng_idhash0_Address_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONFIG_WINDOW0 - Window 0, Idhash Configuration settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_FG_Window0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_FG_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_FG_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_FG_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_FG_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_BG_Window0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_BG_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_BG_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_BG_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Th_BG_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Tolerance_Window0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Tolerance_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Tolerance_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Tolerance_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_Tolerance_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_RGB_Th_Window0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_RGB_Th_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_RGB_Th_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_RGB_Th_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW0_diseng_idhash0_RGB_Th_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LIMITS_WINDOW0 - Window 0, check Limit settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_SumLimit_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_SumLimit_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_SumLimit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_SumLimit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_SumLimit_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_SumLimit_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_SumLimit_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_SumLimit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_SumLimit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_SumLimit_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_WINDOW0 - Window 0, Foregound 0 Color settings. Used for Telltale mode and Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Blue_Window0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Blue_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Blue_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Blue_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Blue_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Green_Window0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Green_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Green_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Green_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Green_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Red_Window0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Red_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Red_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Red_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW0_diseng_idhash0_Foreground0_Red_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0 - Window 0, check Limit settings for Telltale mode or for foreground color 0 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg0Limit_Window0_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg0Limit_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg0Limit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg0Limit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg0Limit_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg0Limit_Window0_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg0Limit_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg0Limit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg0Limit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg0Limit_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_WINDOW0 - Window 0, Foregound 1 Color settings, Used for Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Blue_Window0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Blue_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Blue_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Blue_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Blue_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Green_Window0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Green_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Green_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Green_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Green_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Red_Window0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Red_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Red_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Red_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW0_diseng_idhash0_Foreground1_Red_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0 - Window 0, check Limit settings for foreground color 1 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg1Limit_Window0_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg1Limit_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg1Limit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg1Limit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg1Limit_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg1Limit_Window0_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg1Limit_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg1Limit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg1Limit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg1Limit_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_WINDOW0 - Window 0, Foregound 2 Color settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Blue_Window0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Blue_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Blue_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Blue_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Blue_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Green_Window0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Green_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Green_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Green_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Green_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Red_Window0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Red_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Red_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Red_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW0_diseng_idhash0_Foreground2_Red_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0 - Window 0, check Limit settings for foreground color 2 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg2Limit_Window0_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg2Limit_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg2Limit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg2Limit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_FG_cnt_Fg2Limit_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg2Limit_Window0_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg2Limit_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg2Limit_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg2Limit_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW0_diseng_idhash0_Drop_cnt_Fg2Limit_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_IDX_TABLE_WINDOW0 - Window 0, Index Table */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_EN_Window0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_EN_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_FG_BGn_Window0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_FG_BGn_Window0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg0_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_EN_Window0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_EN_Window0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_FG_BGn_Window0_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_FG_BGn_Window0_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg1_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_EN_Window0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_EN_Window0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_FG_BGn_Window0_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_FG_BGn_Window0_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx0_fg2_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_EN_Window0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_EN_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_FG_BGn_Window0_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_FG_BGn_Window0_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg0_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_EN_Window0_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_EN_Window0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_FG_BGn_Window0_MASK (0x800U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_FG_BGn_Window0_SHIFT (11U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg1_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_EN_Window0_MASK (0x1000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_EN_Window0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_FG_BGn_Window0_MASK (0x2000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_FG_BGn_Window0_SHIFT (13U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx1_fg2_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_EN_Window0_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_EN_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_FG_BGn_Window0_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_FG_BGn_Window0_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg0_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_EN_Window0_MASK (0x40000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_EN_Window0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_FG_BGn_Window0_MASK (0x80000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_FG_BGn_Window0_SHIFT (19U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg1_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_EN_Window0_MASK (0x100000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_EN_Window0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_FG_BGn_Window0_MASK (0x200000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_FG_BGn_Window0_SHIFT (21U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx2_fg2_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_EN_Window0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_EN_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_FG_BGn_Window0_MASK (0x2000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_FG_BGn_Window0_SHIFT (25U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg0_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_EN_Window0_MASK (0x4000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_EN_Window0_SHIFT (26U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_FG_BGn_Window0_MASK (0x8000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_FG_BGn_Window0_SHIFT (27U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg1_FG_BGn_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_EN_Window0_MASK (0x10000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_EN_Window0_SHIFT (28U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_EN_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_EN_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_EN_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_FG_BGn_Window0_MASK (0x20000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_FG_BGn_Window0_SHIFT (29U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_FG_BGn_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_FG_BGn_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW0_diseng_idhash0_idx3_fg2_FG_BGn_Window0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONTROL_WINDOW1 - Window 1, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_Mode_Window1_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_Mode_Window1_SHIFT (0U)
/*! diseng_idhash0_Mode_Window1
 *  0b000..Window is disabled. The internal status for this window is reset (Error bit and frame counters).
 *  0b001..Window operates in Telltale mode.
 *  0b010..Window operates in Icon mode.
 *  0b011..Window operates in RGB mode.
 *  0b100..1bit Alpha is inserted.
 *  0b101..2bit Alpha is inserted.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_Mode_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_Mode_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_Mode_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaMask_Window1_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaMask_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaMask_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaMask_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaMask_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaInv_Window1_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaInv_Window1_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaInv_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaInv_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaInv_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaSel_Window1_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaSel_Window1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaSel_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaSel_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_AlphaSel_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_LocalPanic_Window1_MASK (0xF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_LocalPanic_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_LocalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_LocalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_LocalPanic_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_GlobalPanic_Window1_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_GlobalPanic_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_GlobalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_GlobalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW1_diseng_idhash0_GlobalPanic_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_UPPERLEFT_WINDOW1 - Window 1, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW1_diseng_idhash0_UpperLeft_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LOWERRIGHT_WINDOW1 - Window 1, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW1_diseng_idhash0_LowerRight_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_TILE_WINDOW1 - Window 1, Tile dimensions */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_X_Window1_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_Y_Window1_MASK (0xF0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_Y_Window1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW1_diseng_idhash0_Tile_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_ADDRESS_WINDOW1 - Window 1, Memory word Address for Idhash */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW1_diseng_idhash0_Address_Window1_MASK (0xFFCU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW1_diseng_idhash0_Address_Window1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW1_diseng_idhash0_Address_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW1_diseng_idhash0_Address_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW1_diseng_idhash0_Address_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONFIG_WINDOW1 - Window 1, Idhash Configuration settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_FG_Window1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_FG_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_FG_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_FG_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_FG_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_BG_Window1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_BG_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_BG_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_BG_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Th_BG_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Tolerance_Window1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Tolerance_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Tolerance_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Tolerance_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_Tolerance_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_RGB_Th_Window1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_RGB_Th_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_RGB_Th_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_RGB_Th_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW1_diseng_idhash0_RGB_Th_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LIMITS_WINDOW1 - Window 1, check Limit settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_SumLimit_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_SumLimit_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_SumLimit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_SumLimit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_SumLimit_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_SumLimit_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_SumLimit_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_SumLimit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_SumLimit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_SumLimit_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_WINDOW1 - Window 1, Foregound 0 Color settings. Used for Telltale mode and Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Blue_Window1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Blue_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Blue_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Blue_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Blue_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Green_Window1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Green_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Green_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Green_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Green_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Red_Window1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Red_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Red_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Red_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW1_diseng_idhash0_Foreground0_Red_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1 - Window 1, check Limit settings for Telltale mode or for foreground color 0 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg0Limit_Window1_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg0Limit_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg0Limit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg0Limit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg0Limit_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg0Limit_Window1_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg0Limit_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg0Limit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg0Limit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg0Limit_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_WINDOW1 - Window 1, Foregound 1 Color settings, Used for Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Blue_Window1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Blue_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Blue_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Blue_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Blue_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Green_Window1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Green_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Green_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Green_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Green_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Red_Window1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Red_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Red_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Red_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW1_diseng_idhash0_Foreground1_Red_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1 - Window 1, check Limit settings for foreground color 1 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg1Limit_Window1_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg1Limit_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg1Limit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg1Limit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg1Limit_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg1Limit_Window1_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg1Limit_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg1Limit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg1Limit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg1Limit_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_WINDOW1 - Window 1, Foregound 2 Color settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Blue_Window1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Blue_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Blue_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Blue_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Blue_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Green_Window1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Green_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Green_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Green_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Green_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Red_Window1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Red_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Red_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Red_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW1_diseng_idhash0_Foreground2_Red_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1 - Window 1, check Limit settings for foreground color 2 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg2Limit_Window1_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg2Limit_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg2Limit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg2Limit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_FG_cnt_Fg2Limit_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg2Limit_Window1_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg2Limit_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg2Limit_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg2Limit_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW1_diseng_idhash0_Drop_cnt_Fg2Limit_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_IDX_TABLE_WINDOW1 - Window 1, Index Table */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_EN_Window1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_EN_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_FG_BGn_Window1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_FG_BGn_Window1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg0_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_EN_Window1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_EN_Window1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_FG_BGn_Window1_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_FG_BGn_Window1_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg1_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_EN_Window1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_EN_Window1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_FG_BGn_Window1_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_FG_BGn_Window1_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx0_fg2_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_EN_Window1_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_EN_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_FG_BGn_Window1_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_FG_BGn_Window1_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg0_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_EN_Window1_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_EN_Window1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_FG_BGn_Window1_MASK (0x800U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_FG_BGn_Window1_SHIFT (11U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg1_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_EN_Window1_MASK (0x1000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_EN_Window1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_FG_BGn_Window1_MASK (0x2000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_FG_BGn_Window1_SHIFT (13U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx1_fg2_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_EN_Window1_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_EN_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_FG_BGn_Window1_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_FG_BGn_Window1_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg0_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_EN_Window1_MASK (0x40000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_EN_Window1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_FG_BGn_Window1_MASK (0x80000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_FG_BGn_Window1_SHIFT (19U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg1_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_EN_Window1_MASK (0x100000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_EN_Window1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_FG_BGn_Window1_MASK (0x200000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_FG_BGn_Window1_SHIFT (21U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx2_fg2_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_EN_Window1_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_EN_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_FG_BGn_Window1_MASK (0x2000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_FG_BGn_Window1_SHIFT (25U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg0_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_EN_Window1_MASK (0x4000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_EN_Window1_SHIFT (26U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_FG_BGn_Window1_MASK (0x8000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_FG_BGn_Window1_SHIFT (27U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg1_FG_BGn_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_EN_Window1_MASK (0x10000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_EN_Window1_SHIFT (28U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_EN_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_EN_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_EN_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_FG_BGn_Window1_MASK (0x20000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_FG_BGn_Window1_SHIFT (29U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_FG_BGn_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_FG_BGn_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW1_diseng_idhash0_idx3_fg2_FG_BGn_Window1_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONTROL_WINDOW2 - Window 2, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_Mode_Window2_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_Mode_Window2_SHIFT (0U)
/*! diseng_idhash0_Mode_Window2
 *  0b000..Window is disabled. The internal status for this window is reset (Error bit and frame counters).
 *  0b001..Window operates in Telltale mode.
 *  0b010..Window operates in Icon mode.
 *  0b011..Window operates in RGB mode.
 *  0b100..1bit Alpha is inserted.
 *  0b101..2bit Alpha is inserted.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_Mode_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_Mode_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_Mode_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaMask_Window2_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaMask_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaMask_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaMask_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaMask_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaInv_Window2_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaInv_Window2_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaInv_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaInv_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaInv_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaSel_Window2_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaSel_Window2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaSel_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaSel_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_AlphaSel_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_LocalPanic_Window2_MASK (0xF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_LocalPanic_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_LocalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_LocalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_LocalPanic_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_GlobalPanic_Window2_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_GlobalPanic_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_GlobalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_GlobalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW2_diseng_idhash0_GlobalPanic_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_UPPERLEFT_WINDOW2 - Window 2, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW2_diseng_idhash0_UpperLeft_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LOWERRIGHT_WINDOW2 - Window 2, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW2_diseng_idhash0_LowerRight_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_TILE_WINDOW2 - Window 2, Tile dimensions */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_X_Window2_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_Y_Window2_MASK (0xF0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_Y_Window2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW2_diseng_idhash0_Tile_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_ADDRESS_WINDOW2 - Window 2, Memory word Address for Idhash */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW2_diseng_idhash0_Address_Window2_MASK (0xFFCU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW2_diseng_idhash0_Address_Window2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW2_diseng_idhash0_Address_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW2_diseng_idhash0_Address_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW2_diseng_idhash0_Address_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONFIG_WINDOW2 - Window 2, Idhash Configuration settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_FG_Window2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_FG_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_FG_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_FG_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_FG_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_BG_Window2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_BG_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_BG_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_BG_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Th_BG_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Tolerance_Window2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Tolerance_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Tolerance_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Tolerance_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_Tolerance_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_RGB_Th_Window2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_RGB_Th_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_RGB_Th_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_RGB_Th_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW2_diseng_idhash0_RGB_Th_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LIMITS_WINDOW2 - Window 2, check Limit settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_SumLimit_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_SumLimit_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_SumLimit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_SumLimit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_SumLimit_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_SumLimit_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_SumLimit_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_SumLimit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_SumLimit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_SumLimit_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_WINDOW2 - Window 2, Foregound 0 Color settings. Used for Telltale mode and Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Blue_Window2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Blue_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Blue_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Blue_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Blue_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Green_Window2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Green_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Green_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Green_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Green_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Red_Window2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Red_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Red_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Red_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW2_diseng_idhash0_Foreground0_Red_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2 - Window 2, check Limit settings for Telltale mode or for foreground color 0 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg0Limit_Window2_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg0Limit_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg0Limit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg0Limit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg0Limit_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg0Limit_Window2_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg0Limit_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg0Limit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg0Limit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg0Limit_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_WINDOW2 - Window 2, Foregound 1 Color settings, Used for Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Blue_Window2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Blue_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Blue_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Blue_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Blue_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Green_Window2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Green_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Green_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Green_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Green_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Red_Window2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Red_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Red_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Red_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW2_diseng_idhash0_Foreground1_Red_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2 - Window 2, check Limit settings for foreground color 1 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg1Limit_Window2_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg1Limit_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg1Limit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg1Limit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg1Limit_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg1Limit_Window2_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg1Limit_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg1Limit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg1Limit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg1Limit_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_WINDOW2 - Window 2, Foregound 2 Color settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Blue_Window2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Blue_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Blue_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Blue_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Blue_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Green_Window2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Green_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Green_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Green_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Green_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Red_Window2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Red_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Red_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Red_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW2_diseng_idhash0_Foreground2_Red_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2 - Window 2, check Limit settings for foreground color 2 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg2Limit_Window2_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg2Limit_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg2Limit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg2Limit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_FG_cnt_Fg2Limit_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg2Limit_Window2_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg2Limit_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg2Limit_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg2Limit_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW2_diseng_idhash0_Drop_cnt_Fg2Limit_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_IDX_TABLE_WINDOW2 - Window 2, Index Table */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_EN_Window2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_EN_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_FG_BGn_Window2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_FG_BGn_Window2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg0_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_EN_Window2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_EN_Window2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_FG_BGn_Window2_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_FG_BGn_Window2_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg1_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_EN_Window2_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_EN_Window2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_FG_BGn_Window2_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_FG_BGn_Window2_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx0_fg2_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_EN_Window2_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_EN_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_FG_BGn_Window2_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_FG_BGn_Window2_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg0_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_EN_Window2_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_EN_Window2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_FG_BGn_Window2_MASK (0x800U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_FG_BGn_Window2_SHIFT (11U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg1_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_EN_Window2_MASK (0x1000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_EN_Window2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_FG_BGn_Window2_MASK (0x2000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_FG_BGn_Window2_SHIFT (13U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx1_fg2_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_EN_Window2_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_EN_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_FG_BGn_Window2_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_FG_BGn_Window2_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg0_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_EN_Window2_MASK (0x40000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_EN_Window2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_FG_BGn_Window2_MASK (0x80000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_FG_BGn_Window2_SHIFT (19U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg1_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_EN_Window2_MASK (0x100000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_EN_Window2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_FG_BGn_Window2_MASK (0x200000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_FG_BGn_Window2_SHIFT (21U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx2_fg2_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_EN_Window2_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_EN_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_FG_BGn_Window2_MASK (0x2000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_FG_BGn_Window2_SHIFT (25U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg0_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_EN_Window2_MASK (0x4000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_EN_Window2_SHIFT (26U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_FG_BGn_Window2_MASK (0x8000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_FG_BGn_Window2_SHIFT (27U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg1_FG_BGn_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_EN_Window2_MASK (0x10000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_EN_Window2_SHIFT (28U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_EN_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_EN_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_EN_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_FG_BGn_Window2_MASK (0x20000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_FG_BGn_Window2_SHIFT (29U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_FG_BGn_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_FG_BGn_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW2_diseng_idhash0_idx3_fg2_FG_BGn_Window2_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONTROL_WINDOW3 - Window 3, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_Mode_Window3_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_Mode_Window3_SHIFT (0U)
/*! diseng_idhash0_Mode_Window3
 *  0b000..Window is disabled. The internal status for this window is reset (Error bit and frame counters).
 *  0b001..Window operates in Telltale mode.
 *  0b010..Window operates in Icon mode.
 *  0b011..Window operates in RGB mode.
 *  0b100..1bit Alpha is inserted.
 *  0b101..2bit Alpha is inserted.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_Mode_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_Mode_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_Mode_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaMask_Window3_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaMask_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaMask_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaMask_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaMask_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaInv_Window3_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaInv_Window3_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaInv_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaInv_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaInv_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaSel_Window3_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaSel_Window3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaSel_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaSel_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_AlphaSel_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_LocalPanic_Window3_MASK (0xF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_LocalPanic_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_LocalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_LocalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_LocalPanic_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_GlobalPanic_Window3_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_GlobalPanic_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_GlobalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_GlobalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONTROL_WINDOW3_diseng_idhash0_GlobalPanic_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_UPPERLEFT_WINDOW3 - Window 3, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_UPPERLEFT_WINDOW3_diseng_idhash0_UpperLeft_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LOWERRIGHT_WINDOW3 - Window 3, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LOWERRIGHT_WINDOW3_diseng_idhash0_LowerRight_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_TILE_WINDOW3 - Window 3, Tile dimensions */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_X_Window3_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_Y_Window3_MASK (0xF0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_Y_Window3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_TILE_WINDOW3_diseng_idhash0_Tile_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_ADDRESS_WINDOW3 - Window 3, Memory word Address for Idhash */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW3_diseng_idhash0_Address_Window3_MASK (0xFFCU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW3_diseng_idhash0_Address_Window3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW3_diseng_idhash0_Address_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW3_diseng_idhash0_Address_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_ADDRESS_WINDOW3_diseng_idhash0_Address_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_CONFIG_WINDOW3 - Window 3, Idhash Configuration settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_FG_Window3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_FG_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_FG_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_FG_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_FG_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_BG_Window3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_BG_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_BG_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_BG_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Th_BG_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Tolerance_Window3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Tolerance_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Tolerance_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Tolerance_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_Tolerance_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_RGB_Th_Window3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_RGB_Th_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_RGB_Th_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_RGB_Th_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_CONFIG_WINDOW3_diseng_idhash0_RGB_Th_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_LIMITS_WINDOW3 - Window 3, check Limit settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_SumLimit_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_SumLimit_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_SumLimit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_SumLimit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_SumLimit_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_SumLimit_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_SumLimit_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_SumLimit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_SumLimit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_SumLimit_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_WINDOW3 - Window 3, Foregound 0 Color settings. Used for Telltale mode and Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Blue_Window3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Blue_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Blue_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Blue_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Blue_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Green_Window3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Green_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Green_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Green_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Green_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Red_Window3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Red_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Red_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Red_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_WINDOW3_diseng_idhash0_Foreground0_Red_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3 - Window 3, check Limit settings for Telltale mode or for foreground color 0 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg0Limit_Window3_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg0Limit_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg0Limit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg0Limit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg0Limit_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg0Limit_Window3_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg0Limit_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg0Limit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg0Limit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND0_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg0Limit_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_WINDOW3 - Window 3, Foregound 1 Color settings, Used for Icon Mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Blue_Window3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Blue_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Blue_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Blue_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Blue_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Green_Window3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Green_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Green_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Green_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Green_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Red_Window3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Red_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Red_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Red_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_WINDOW3_diseng_idhash0_Foreground1_Red_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3 - Window 3, check Limit settings for foreground color 1 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg1Limit_Window3_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg1Limit_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg1Limit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg1Limit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg1Limit_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg1Limit_Window3_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg1Limit_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg1Limit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg1Limit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND1_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg1Limit_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_WINDOW3 - Window 3, Foregound 2 Color settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Blue_Window3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Blue_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Blue_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Blue_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Blue_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Green_Window3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Green_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Green_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Green_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Green_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Red_Window3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Red_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Red_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Red_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_WINDOW3_diseng_idhash0_Foreground2_Red_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3 - Window 3, check Limit settings for foreground color 2 in icon mode. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg2Limit_Window3_MASK (0xFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg2Limit_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg2Limit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg2Limit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_FG_cnt_Fg2Limit_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg2Limit_Window3_MASK (0xFFF0000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg2Limit_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg2Limit_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg2Limit_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_FOREGROUND2_LIMITS_WINDOW3_diseng_idhash0_Drop_cnt_Fg2Limit_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_IDX_TABLE_WINDOW3 - Window 3, Index Table */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_EN_Window3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_EN_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_FG_BGn_Window3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_FG_BGn_Window3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg0_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_EN_Window3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_EN_Window3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_FG_BGn_Window3_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_FG_BGn_Window3_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg1_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_EN_Window3_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_EN_Window3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_FG_BGn_Window3_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_FG_BGn_Window3_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx0_fg2_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_EN_Window3_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_EN_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_FG_BGn_Window3_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_FG_BGn_Window3_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg0_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_EN_Window3_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_EN_Window3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_FG_BGn_Window3_MASK (0x800U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_FG_BGn_Window3_SHIFT (11U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg1_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_EN_Window3_MASK (0x1000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_EN_Window3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_FG_BGn_Window3_MASK (0x2000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_FG_BGn_Window3_SHIFT (13U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx1_fg2_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_EN_Window3_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_EN_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_FG_BGn_Window3_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_FG_BGn_Window3_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg0_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_EN_Window3_MASK (0x40000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_EN_Window3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_FG_BGn_Window3_MASK (0x80000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_FG_BGn_Window3_SHIFT (19U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg1_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_EN_Window3_MASK (0x100000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_EN_Window3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_FG_BGn_Window3_MASK (0x200000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_FG_BGn_Window3_SHIFT (21U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx2_fg2_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_EN_Window3_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_EN_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_FG_BGn_Window3_MASK (0x2000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_FG_BGn_Window3_SHIFT (25U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg0_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_EN_Window3_MASK (0x4000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_EN_Window3_SHIFT (26U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_FG_BGn_Window3_MASK (0x8000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_FG_BGn_Window3_SHIFT (27U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg1_FG_BGn_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_EN_Window3_MASK (0x10000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_EN_Window3_SHIFT (28U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_EN_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_EN_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_EN_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_FG_BGn_Window3_MASK (0x20000000U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_FG_BGn_Window3_SHIFT (29U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_FG_BGn_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_FG_BGn_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDX_TABLE_WINDOW3_diseng_idhash0_idx3_fg2_FG_BGn_Window3_MASK)
/*! @} */

/*! @name DISENG_IDHASH0_IDRAM - SRAM, usage according to module register setup. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0_IDRAM_diseng_idhash0_data_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDRAM_diseng_idhash0_data_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0_IDRAM_diseng_idhash0_data(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0_IDRAM_diseng_idhash0_data_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0_IDRAM_diseng_idhash0_data_MASK)
/*! @} */

/*! @name DISENG_IDHASH0CFG_LOCKUNLOCK0 - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKUNLOCK0_diseng_idhash0cfg_LockUnlock0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKUNLOCK0_diseng_idhash0cfg_LockUnlock0_SHIFT (0U)
/*! diseng_idhash0cfg_LockUnlock0
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKUNLOCK0_diseng_idhash0cfg_LockUnlock0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKUNLOCK0_diseng_idhash0cfg_LockUnlock0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKUNLOCK0_diseng_idhash0cfg_LockUnlock0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0CFG_LOCKSTATUS0 - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_LockStatus0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_LockStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_LockStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_LockStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_LockStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_PrivilegeStatus0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_PrivilegeStatus0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_PrivilegeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_PrivilegeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_PrivilegeStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_FreezeStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_FreezeStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_FreezeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_FreezeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0CFG_LOCKSTATUS0_diseng_idhash0cfg_FreezeStatus0_MASK)
/*! @} */

/*! @name DISENG_IDHASH0CFG_SRCSELECT - Tap selection for IDHash0. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_SRCSELECT_diseng_idhash0cfg_idhash0_select_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_SRCSELECT_diseng_idhash0cfg_idhash0_select_SHIFT (0U)
/*! diseng_idhash0cfg_idhash0_select
 *  0b00..Source is FrameGen#0 output.
 *  0b01..Source is Matrix#0 output.
 *  0b10..Source is LuT3D#0 output.
 *  0b11..Source is Dither#0 output.
 */
#define DISPLAY_SEERIS_DISENG_IDHASH0CFG_SRCSELECT_diseng_idhash0cfg_idhash0_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_IDHASH0CFG_SRCSELECT_diseng_idhash0cfg_idhash0_select_SHIFT)) & DISPLAY_SEERIS_DISENG_IDHASH0CFG_SRCSELECT_diseng_idhash0cfg_idhash0_select_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOCKUNLOCK - Register to change the protection status of this address block */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOCKUNLOCK_diseng_sig0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKUNLOCK_diseng_sig0_LockUnlock_SHIFT (0U)
/*! diseng_sig0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKUNLOCK_diseng_sig0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOCKUNLOCK_diseng_sig0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOCKUNLOCK_diseng_sig0_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOCKSTATUS - Protection status of this address block */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOCKSTATUS_diseng_sig0_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATICCONTROL - Global configuration */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdEn_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdLdSel_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdLdSel_SHIFT (4U)
/*! diseng_sig0_ShdLdSel
 *  0b0..Shadows are loaded at start of frame for each evaluation window for which ShdLdReq has been set.
 *  0b1..Shadows of all evaluation windows are loaded synchronous to the display stream (shadow load token received on frame input port).
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATICCONTROL_diseng_sig0_ShdLdSel_MASK)
/*! @} */

/*! @name DISENG_SIG0_ERRORTHRESHOLD - Set and reset thresholds applying to Window_Error and Cluster_Error interrupts and status bits */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThres_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThres_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThres(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThres_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThres_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThresReset_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThresReset_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThresReset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThresReset_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_ERRORTHRESHOLD_diseng_sig0_ErrThresReset_MASK)
/*! @} */

/*! @name DISENG_SIG0_MATCHTHRESHOLD - Set and reset thresholds applying to Match interrupt and status bits */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThres_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThres_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThres(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThres_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThres_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThresReset_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThresReset_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThresReset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThresReset_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MATCHTHRESHOLD_diseng_sig0_MatchThresReset_MASK)
/*! @} */

/*! @name DISENG_SIG0_PANICCOLOR - Overlay color for evaluation windows in panic mode */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicAlpha_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicBlue_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicBlue_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicBlue_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicGreen_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicGreen_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicGreen_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicRed_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicRed_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PANICCOLOR_diseng_sig0_PanicRed_MASK)
/*! @} */

/*! @name DISENG_SIG0_SHADOWLOAD - Shadow load control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_SHADOWLOAD_diseng_sig0_ShdLdReq_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_SHADOWLOAD_diseng_sig0_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_SHADOWLOAD_diseng_sig0_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_SHADOWLOAD_diseng_sig0_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_SHADOWLOAD_diseng_sig0_ShdLdReq_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTINUOUSMODE - Signature operation mode control */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTINUOUSMODE_diseng_sig0_EnCont_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTINUOUSMODE_diseng_sig0_EnCont_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTINUOUSMODE_diseng_sig0_EnCont(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTINUOUSMODE_diseng_sig0_EnCont_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTINUOUSMODE_diseng_sig0_EnCont_MASK)
/*! @} */

/*! @name DISENG_SIG0_SOFTWAREKICK - Signature measurement trigger */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_SOFTWAREKICK_diseng_sig0_Kick_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_SOFTWAREKICK_diseng_sig0_Kick_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_SOFTWAREKICK_diseng_sig0_Kick(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_SOFTWAREKICK_diseng_sig0_Kick_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_SOFTWAREKICK_diseng_sig0_Kick_MASK)
/*! @} */

/*! @name DISENG_SIG0_SKIPWINDOW - Enable skipping window feature. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_SKIPWINDOW_diseng_sig0_SkipWinEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_SKIPWINDOW_diseng_sig0_SkipWinEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_SKIPWINDOW_diseng_sig0_SkipWinEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_SKIPWINDOW_diseng_sig0_SkipWinEn_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_SKIPWINDOW_diseng_sig0_SkipWinEn_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATUS - Signature evaluation status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigState_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigState_SHIFT (0U)
/*! diseng_sig0_SigState
 *  0b0..Signature is in idle state
 *  0b1..Signature is in run state
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigState(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigState_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigState_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigValid_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigValid_SHIFT (1U)
/*! diseng_sig0_SigValid
 *  0b0..Signature results are not valid
 *  0b1..Signature results are valid
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigValid(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigValid_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_SigValid_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Window_Error_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Window_Error_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Window_Error(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Window_Error_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Window_Error_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Error_MASK (0xF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Error_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Error(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Error_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Error_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Match_MASK (0xF00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Match_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Match(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Match_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_diseng_sig0_Cluster_Match_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW0 - Window 0, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_En_Window0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_En_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_En_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_En_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_En_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_CRC_Window0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_CRC_Window0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_CRC_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_CRC_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_CRC_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaMask_Window0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaMask_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaMask_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaMask_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaMask_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaInv_Window0_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaInv_Window0_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaInv_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaInv_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaInv_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaSel_Window0_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaSel_Window0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaSel_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaSel_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_AlphaSel_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_LocalPanic_Window0_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_LocalPanic_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_LocalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_LocalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_LocalPanic_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_GlobalPanic_Window0_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_GlobalPanic_Window0_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_GlobalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_GlobalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_GlobalPanic_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_Sum_Window0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_Sum_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_Sum_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_Sum_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW0_diseng_sig0_Sum_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW0 - Window 0, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW0_diseng_sig0_UpperLeft_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW0 - Window 0, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW0_diseng_sig0_LowerRight_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW0 - Window 0, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW0_diseng_sig0_Ref_R_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW0_diseng_sig0_Ref_R_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW0_diseng_sig0_Ref_R_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW0_diseng_sig0_Ref_R_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW0_diseng_sig0_Ref_R_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW0 - Window 0, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW0_diseng_sig0_Ref_G_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW0_diseng_sig0_Ref_G_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW0_diseng_sig0_Ref_G_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW0_diseng_sig0_Ref_G_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW0_diseng_sig0_Ref_G_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW0 - Window 0, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW0_diseng_sig0_Ref_B_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW0_diseng_sig0_Ref_B_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW0_diseng_sig0_Ref_B_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW0_diseng_sig0_Ref_B_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW0_diseng_sig0_Ref_B_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS0_WINDOW0 - Controls of Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaMask_S0_Win0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaMask_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaMask_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaMask_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaMask_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaInv_S0_Win0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaInv_S0_Win0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaInv_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaInv_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaInv_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaSel_S0_Win0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaSel_S0_Win0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaSel_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaSel_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW0_diseng_sig0_AlphaSel_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS1_WINDOW0 - Controls of Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaMask_S1_Win0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaMask_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaMask_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaMask_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaMask_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaInv_S1_Win0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaInv_S1_Win0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaInv_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaInv_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaInv_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaSel_S1_Win0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaSel_S1_Win0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaSel_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaSel_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW0_diseng_sig0_AlphaSel_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_REDSUM_WINDOW0 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW0_diseng_sig0_Min_RSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW0_diseng_sig0_Min_RSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW0_diseng_sig0_Min_RSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW0_diseng_sig0_Min_RSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW0_diseng_sig0_Min_RSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_GREENSUM_WINDOW0 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW0_diseng_sig0_Min_GSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW0_diseng_sig0_Min_GSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW0_diseng_sig0_Min_GSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW0_diseng_sig0_Min_GSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW0_diseng_sig0_Min_GSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_BLUESUM_WINDOW0 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW0_diseng_sig0_Min_BSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW0_diseng_sig0_Min_BSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW0_diseng_sig0_Min_BSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW0_diseng_sig0_Min_BSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW0_diseng_sig0_Min_BSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_LUMSUM_WINDOW0 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW0_diseng_sig0_Min_LSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW0_diseng_sig0_Min_LSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW0_diseng_sig0_Min_LSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW0_diseng_sig0_Min_LSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW0_diseng_sig0_Min_LSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_REDSUM_WINDOW0 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW0_diseng_sig0_Max_RSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW0_diseng_sig0_Max_RSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW0_diseng_sig0_Max_RSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW0_diseng_sig0_Max_RSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW0_diseng_sig0_Max_RSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_GREENSUM_WINDOW0 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW0_diseng_sig0_Max_GSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW0_diseng_sig0_Max_GSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW0_diseng_sig0_Max_GSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW0_diseng_sig0_Max_GSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW0_diseng_sig0_Max_GSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_BLUESUM_WINDOW0 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW0_diseng_sig0_Max_BSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW0_diseng_sig0_Max_BSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW0_diseng_sig0_Max_BSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW0_diseng_sig0_Max_BSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW0_diseng_sig0_Max_BSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_LUMSUM_WINDOW0 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW0_diseng_sig0_Max_LSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW0_diseng_sig0_Max_LSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW0_diseng_sig0_Max_LSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW0_diseng_sig0_Max_LSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW0_diseng_sig0_Max_LSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW1 - Window 1, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_En_Window1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_En_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_En_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_En_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_En_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_CRC_Window1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_CRC_Window1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_CRC_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_CRC_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_CRC_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaMask_Window1_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaMask_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaMask_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaMask_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaMask_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaInv_Window1_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaInv_Window1_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaInv_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaInv_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaInv_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaSel_Window1_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaSel_Window1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaSel_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaSel_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_AlphaSel_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_LocalPanic_Window1_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_LocalPanic_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_LocalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_LocalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_LocalPanic_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_GlobalPanic_Window1_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_GlobalPanic_Window1_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_GlobalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_GlobalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_GlobalPanic_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_Sum_Window1_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_Sum_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_Sum_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_Sum_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW1_diseng_sig0_Sum_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW1 - Window 1, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW1_diseng_sig0_UpperLeft_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW1 - Window 1, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW1_diseng_sig0_LowerRight_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW1 - Window 1, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW1_diseng_sig0_Ref_R_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW1_diseng_sig0_Ref_R_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW1_diseng_sig0_Ref_R_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW1_diseng_sig0_Ref_R_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW1_diseng_sig0_Ref_R_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW1 - Window 1, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW1_diseng_sig0_Ref_G_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW1_diseng_sig0_Ref_G_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW1_diseng_sig0_Ref_G_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW1_diseng_sig0_Ref_G_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW1_diseng_sig0_Ref_G_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW1 - Window 1, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW1_diseng_sig0_Ref_B_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW1_diseng_sig0_Ref_B_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW1_diseng_sig0_Ref_B_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW1_diseng_sig0_Ref_B_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW1_diseng_sig0_Ref_B_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS0_WINDOW1 - Controls of Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaMask_S0_Win1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaMask_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaMask_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaMask_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaMask_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaInv_S0_Win1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaInv_S0_Win1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaInv_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaInv_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaInv_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaSel_S0_Win1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaSel_S0_Win1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaSel_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaSel_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW1_diseng_sig0_AlphaSel_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS1_WINDOW1 - Controls of Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaMask_S1_Win1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaMask_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaMask_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaMask_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaMask_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaInv_S1_Win1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaInv_S1_Win1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaInv_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaInv_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaInv_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaSel_S1_Win1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaSel_S1_Win1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaSel_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaSel_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW1_diseng_sig0_AlphaSel_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_REDSUM_WINDOW1 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW1_diseng_sig0_Min_RSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW1_diseng_sig0_Min_RSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW1_diseng_sig0_Min_RSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW1_diseng_sig0_Min_RSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW1_diseng_sig0_Min_RSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_GREENSUM_WINDOW1 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW1_diseng_sig0_Min_GSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW1_diseng_sig0_Min_GSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW1_diseng_sig0_Min_GSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW1_diseng_sig0_Min_GSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW1_diseng_sig0_Min_GSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_BLUESUM_WINDOW1 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW1_diseng_sig0_Min_BSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW1_diseng_sig0_Min_BSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW1_diseng_sig0_Min_BSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW1_diseng_sig0_Min_BSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW1_diseng_sig0_Min_BSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_LUMSUM_WINDOW1 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW1_diseng_sig0_Min_LSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW1_diseng_sig0_Min_LSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW1_diseng_sig0_Min_LSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW1_diseng_sig0_Min_LSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW1_diseng_sig0_Min_LSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_REDSUM_WINDOW1 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW1_diseng_sig0_Max_RSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW1_diseng_sig0_Max_RSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW1_diseng_sig0_Max_RSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW1_diseng_sig0_Max_RSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW1_diseng_sig0_Max_RSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_GREENSUM_WINDOW1 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW1_diseng_sig0_Max_GSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW1_diseng_sig0_Max_GSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW1_diseng_sig0_Max_GSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW1_diseng_sig0_Max_GSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW1_diseng_sig0_Max_GSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_BLUESUM_WINDOW1 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW1_diseng_sig0_Max_BSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW1_diseng_sig0_Max_BSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW1_diseng_sig0_Max_BSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW1_diseng_sig0_Max_BSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW1_diseng_sig0_Max_BSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_LUMSUM_WINDOW1 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW1_diseng_sig0_Max_LSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW1_diseng_sig0_Max_LSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW1_diseng_sig0_Max_LSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW1_diseng_sig0_Max_LSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW1_diseng_sig0_Max_LSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW2 - Window 2, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_En_Window2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_En_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_En_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_En_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_En_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_CRC_Window2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_CRC_Window2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_CRC_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_CRC_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_CRC_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaMask_Window2_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaMask_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaMask_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaMask_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaMask_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaInv_Window2_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaInv_Window2_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaInv_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaInv_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaInv_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaSel_Window2_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaSel_Window2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaSel_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaSel_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_AlphaSel_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_LocalPanic_Window2_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_LocalPanic_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_LocalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_LocalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_LocalPanic_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_GlobalPanic_Window2_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_GlobalPanic_Window2_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_GlobalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_GlobalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_GlobalPanic_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_Sum_Window2_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_Sum_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_Sum_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_Sum_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW2_diseng_sig0_Sum_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW2 - Window 2, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW2_diseng_sig0_UpperLeft_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW2 - Window 2, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW2_diseng_sig0_LowerRight_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW2 - Window 2, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW2_diseng_sig0_Ref_R_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW2_diseng_sig0_Ref_R_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW2_diseng_sig0_Ref_R_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW2_diseng_sig0_Ref_R_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW2_diseng_sig0_Ref_R_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW2 - Window 2, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW2_diseng_sig0_Ref_G_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW2_diseng_sig0_Ref_G_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW2_diseng_sig0_Ref_G_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW2_diseng_sig0_Ref_G_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW2_diseng_sig0_Ref_G_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW2 - Window 2, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW2_diseng_sig0_Ref_B_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW2_diseng_sig0_Ref_B_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW2_diseng_sig0_Ref_B_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW2_diseng_sig0_Ref_B_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW2_diseng_sig0_Ref_B_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS0_WINDOW2 - Controls of Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaMask_S0_Win2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaMask_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaMask_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaMask_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaMask_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaInv_S0_Win2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaInv_S0_Win2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaInv_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaInv_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaInv_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaSel_S0_Win2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaSel_S0_Win2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaSel_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaSel_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW2_diseng_sig0_AlphaSel_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS1_WINDOW2 - Controls of Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaMask_S1_Win2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaMask_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaMask_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaMask_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaMask_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaInv_S1_Win2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaInv_S1_Win2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaInv_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaInv_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaInv_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaSel_S1_Win2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaSel_S1_Win2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaSel_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaSel_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW2_diseng_sig0_AlphaSel_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_REDSUM_WINDOW2 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW2_diseng_sig0_Min_RSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW2_diseng_sig0_Min_RSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW2_diseng_sig0_Min_RSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW2_diseng_sig0_Min_RSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW2_diseng_sig0_Min_RSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_GREENSUM_WINDOW2 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW2_diseng_sig0_Min_GSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW2_diseng_sig0_Min_GSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW2_diseng_sig0_Min_GSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW2_diseng_sig0_Min_GSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW2_diseng_sig0_Min_GSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_BLUESUM_WINDOW2 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW2_diseng_sig0_Min_BSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW2_diseng_sig0_Min_BSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW2_diseng_sig0_Min_BSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW2_diseng_sig0_Min_BSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW2_diseng_sig0_Min_BSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_LUMSUM_WINDOW2 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW2_diseng_sig0_Min_LSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW2_diseng_sig0_Min_LSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW2_diseng_sig0_Min_LSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW2_diseng_sig0_Min_LSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW2_diseng_sig0_Min_LSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_REDSUM_WINDOW2 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW2_diseng_sig0_Max_RSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW2_diseng_sig0_Max_RSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW2_diseng_sig0_Max_RSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW2_diseng_sig0_Max_RSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW2_diseng_sig0_Max_RSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_GREENSUM_WINDOW2 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW2_diseng_sig0_Max_GSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW2_diseng_sig0_Max_GSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW2_diseng_sig0_Max_GSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW2_diseng_sig0_Max_GSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW2_diseng_sig0_Max_GSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_BLUESUM_WINDOW2 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW2_diseng_sig0_Max_BSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW2_diseng_sig0_Max_BSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW2_diseng_sig0_Max_BSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW2_diseng_sig0_Max_BSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW2_diseng_sig0_Max_BSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_LUMSUM_WINDOW2 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW2_diseng_sig0_Max_LSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW2_diseng_sig0_Max_LSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW2_diseng_sig0_Max_LSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW2_diseng_sig0_Max_LSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW2_diseng_sig0_Max_LSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW3 - Window 3, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_En_Window3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_En_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_En_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_En_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_En_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_CRC_Window3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_CRC_Window3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_CRC_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_CRC_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_CRC_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaMask_Window3_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaMask_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaMask_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaMask_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaMask_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaInv_Window3_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaInv_Window3_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaInv_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaInv_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaInv_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaSel_Window3_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaSel_Window3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaSel_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaSel_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_AlphaSel_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_LocalPanic_Window3_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_LocalPanic_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_LocalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_LocalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_LocalPanic_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_GlobalPanic_Window3_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_GlobalPanic_Window3_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_GlobalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_GlobalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_GlobalPanic_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_Sum_Window3_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_Sum_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_Sum_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_Sum_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW3_diseng_sig0_Sum_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW3 - Window 3, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW3_diseng_sig0_UpperLeft_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW3 - Window 3, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW3_diseng_sig0_LowerRight_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW3 - Window 3, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW3_diseng_sig0_Ref_R_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW3_diseng_sig0_Ref_R_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW3_diseng_sig0_Ref_R_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW3_diseng_sig0_Ref_R_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW3_diseng_sig0_Ref_R_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW3 - Window 3, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW3_diseng_sig0_Ref_G_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW3_diseng_sig0_Ref_G_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW3_diseng_sig0_Ref_G_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW3_diseng_sig0_Ref_G_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW3_diseng_sig0_Ref_G_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW3 - Window 3, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW3_diseng_sig0_Ref_B_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW3_diseng_sig0_Ref_B_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW3_diseng_sig0_Ref_B_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW3_diseng_sig0_Ref_B_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW3_diseng_sig0_Ref_B_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS0_WINDOW3 - Controls of Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaMask_S0_Win3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaMask_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaMask_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaMask_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaMask_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaInv_S0_Win3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaInv_S0_Win3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaInv_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaInv_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaInv_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaSel_S0_Win3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaSel_S0_Win3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaSel_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaSel_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS0_WINDOW3_diseng_sig0_AlphaSel_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATS1_WINDOW3 - Controls of Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaMask_S1_Win3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaMask_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaMask_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaMask_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaMask_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaInv_S1_Win3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaInv_S1_Win3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaInv_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaInv_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaInv_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaSel_S1_Win3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaSel_S1_Win3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaSel_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaSel_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATS1_WINDOW3_diseng_sig0_AlphaSel_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_REDSUM_WINDOW3 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW3_diseng_sig0_Min_RSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW3_diseng_sig0_Min_RSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW3_diseng_sig0_Min_RSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW3_diseng_sig0_Min_RSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_REDSUM_WINDOW3_diseng_sig0_Min_RSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_GREENSUM_WINDOW3 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW3_diseng_sig0_Min_GSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW3_diseng_sig0_Min_GSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW3_diseng_sig0_Min_GSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW3_diseng_sig0_Min_GSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_GREENSUM_WINDOW3_diseng_sig0_Min_GSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_BLUESUM_WINDOW3 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW3_diseng_sig0_Min_BSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW3_diseng_sig0_Min_BSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW3_diseng_sig0_Min_BSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW3_diseng_sig0_Min_BSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_BLUESUM_WINDOW3_diseng_sig0_Min_BSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MIN_LUMSUM_WINDOW3 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW3_diseng_sig0_Min_LSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW3_diseng_sig0_Min_LSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW3_diseng_sig0_Min_LSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW3_diseng_sig0_Min_LSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MIN_LUMSUM_WINDOW3_diseng_sig0_Min_LSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_REDSUM_WINDOW3 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW3_diseng_sig0_Max_RSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW3_diseng_sig0_Max_RSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW3_diseng_sig0_Max_RSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW3_diseng_sig0_Max_RSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_REDSUM_WINDOW3_diseng_sig0_Max_RSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_GREENSUM_WINDOW3 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW3_diseng_sig0_Max_GSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW3_diseng_sig0_Max_GSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW3_diseng_sig0_Max_GSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW3_diseng_sig0_Max_GSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_GREENSUM_WINDOW3_diseng_sig0_Max_GSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_BLUESUM_WINDOW3 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW3_diseng_sig0_Max_BSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW3_diseng_sig0_Max_BSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW3_diseng_sig0_Max_BSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW3_diseng_sig0_Max_BSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_BLUESUM_WINDOW3_diseng_sig0_Max_BSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_MAX_LUMSUM_WINDOW3 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW3_diseng_sig0_Max_LSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW3_diseng_sig0_Max_LSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW3_diseng_sig0_Max_LSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW3_diseng_sig0_Max_LSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_MAX_LUMSUM_WINDOW3_diseng_sig0_Max_LSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW4 - Window 4, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_En_Window4_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_En_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_En_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_En_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_En_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_CRC_Window4_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_CRC_Window4_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_CRC_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_CRC_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_CRC_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaMask_Window4_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaMask_Window4_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaMask_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaMask_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaMask_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaInv_Window4_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaInv_Window4_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaInv_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaInv_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaInv_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaSel_Window4_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaSel_Window4_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaSel_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaSel_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_AlphaSel_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_LocalPanic_Window4_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_LocalPanic_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_LocalPanic_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_LocalPanic_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_LocalPanic_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_GlobalPanic_Window4_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_GlobalPanic_Window4_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_GlobalPanic_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_GlobalPanic_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW4_diseng_sig0_GlobalPanic_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW4 - Window 4, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_X_Window4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_X_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_X_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_X_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_X_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_Y_Window4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_Y_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_Y_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_Y_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW4_diseng_sig0_UpperLeft_Y_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW4 - Window 4, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_X_Window4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_X_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_X_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_X_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_X_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_Y_Window4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_Y_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_Y_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_Y_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW4_diseng_sig0_LowerRight_Y_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW4 - Window 4, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW4_diseng_sig0_Ref_R_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW4_diseng_sig0_Ref_R_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW4_diseng_sig0_Ref_R_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW4_diseng_sig0_Ref_R_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW4_diseng_sig0_Ref_R_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW4 - Window 4, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW4_diseng_sig0_Ref_G_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW4_diseng_sig0_Ref_G_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW4_diseng_sig0_Ref_G_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW4_diseng_sig0_Ref_G_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW4_diseng_sig0_Ref_G_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW4 - Window 4, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW4_diseng_sig0_Ref_B_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW4_diseng_sig0_Ref_B_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW4_diseng_sig0_Ref_B_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW4_diseng_sig0_Ref_B_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW4_diseng_sig0_Ref_B_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW5 - Window 5, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_En_Window5_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_En_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_En_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_En_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_En_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_CRC_Window5_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_CRC_Window5_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_CRC_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_CRC_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_CRC_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaMask_Window5_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaMask_Window5_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaMask_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaMask_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaMask_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaInv_Window5_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaInv_Window5_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaInv_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaInv_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaInv_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaSel_Window5_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaSel_Window5_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaSel_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaSel_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_AlphaSel_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_LocalPanic_Window5_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_LocalPanic_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_LocalPanic_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_LocalPanic_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_LocalPanic_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_GlobalPanic_Window5_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_GlobalPanic_Window5_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_GlobalPanic_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_GlobalPanic_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW5_diseng_sig0_GlobalPanic_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW5 - Window 5, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_X_Window5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_X_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_X_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_X_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_X_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_Y_Window5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_Y_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_Y_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_Y_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW5_diseng_sig0_UpperLeft_Y_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW5 - Window 5, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_X_Window5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_X_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_X_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_X_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_X_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_Y_Window5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_Y_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_Y_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_Y_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW5_diseng_sig0_LowerRight_Y_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW5 - Window 5, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW5_diseng_sig0_Ref_R_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW5_diseng_sig0_Ref_R_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW5_diseng_sig0_Ref_R_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW5_diseng_sig0_Ref_R_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW5_diseng_sig0_Ref_R_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW5 - Window 5, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW5_diseng_sig0_Ref_G_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW5_diseng_sig0_Ref_G_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW5_diseng_sig0_Ref_G_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW5_diseng_sig0_Ref_G_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW5_diseng_sig0_Ref_G_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW5 - Window 5, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW5_diseng_sig0_Ref_B_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW5_diseng_sig0_Ref_B_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW5_diseng_sig0_Ref_B_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW5_diseng_sig0_Ref_B_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW5_diseng_sig0_Ref_B_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW6 - Window 6, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_En_Window6_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_En_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_En_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_En_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_En_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_CRC_Window6_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_CRC_Window6_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_CRC_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_CRC_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_CRC_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaMask_Window6_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaMask_Window6_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaMask_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaMask_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaMask_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaInv_Window6_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaInv_Window6_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaInv_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaInv_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaInv_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaSel_Window6_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaSel_Window6_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaSel_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaSel_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_AlphaSel_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_LocalPanic_Window6_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_LocalPanic_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_LocalPanic_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_LocalPanic_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_LocalPanic_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_GlobalPanic_Window6_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_GlobalPanic_Window6_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_GlobalPanic_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_GlobalPanic_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW6_diseng_sig0_GlobalPanic_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW6 - Window 6, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_X_Window6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_X_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_X_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_X_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_X_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_Y_Window6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_Y_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_Y_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_Y_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW6_diseng_sig0_UpperLeft_Y_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW6 - Window 6, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_X_Window6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_X_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_X_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_X_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_X_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_Y_Window6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_Y_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_Y_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_Y_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW6_diseng_sig0_LowerRight_Y_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW6 - Window 6, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW6_diseng_sig0_Ref_R_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW6_diseng_sig0_Ref_R_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW6_diseng_sig0_Ref_R_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW6_diseng_sig0_Ref_R_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW6_diseng_sig0_Ref_R_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW6 - Window 6, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW6_diseng_sig0_Ref_G_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW6_diseng_sig0_Ref_G_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW6_diseng_sig0_Ref_G_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW6_diseng_sig0_Ref_G_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW6_diseng_sig0_Ref_G_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW6 - Window 6, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW6_diseng_sig0_Ref_B_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW6_diseng_sig0_Ref_B_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW6_diseng_sig0_Ref_B_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW6_diseng_sig0_Ref_B_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW6_diseng_sig0_Ref_B_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_WINDOW7 - Window 7, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_En_Window7_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_En_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_En_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_En_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_En_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_CRC_Window7_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_CRC_Window7_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_CRC_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_CRC_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_CRC_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaMask_Window7_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaMask_Window7_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaMask_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaMask_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaMask_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaInv_Window7_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaInv_Window7_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaInv_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaInv_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaInv_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaSel_Window7_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaSel_Window7_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaSel_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaSel_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_AlphaSel_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_LocalPanic_Window7_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_LocalPanic_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_LocalPanic_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_LocalPanic_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_LocalPanic_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_GlobalPanic_Window7_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_GlobalPanic_Window7_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_GlobalPanic_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_GlobalPanic_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_WINDOW7_diseng_sig0_GlobalPanic_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_UPPERLEFT_WINDOW7 - Window 7, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_X_Window7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_X_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_X_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_X_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_X_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_Y_Window7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_Y_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_Y_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_Y_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_UPPERLEFT_WINDOW7_diseng_sig0_UpperLeft_Y_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_LOWERRIGHT_WINDOW7 - Window 7, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_X_Window7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_X_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_X_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_X_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_X_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_Y_Window7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_Y_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_Y_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_Y_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LOWERRIGHT_WINDOW7_diseng_sig0_LowerRight_Y_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_R_WINDOW7 - Window 7, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW7_diseng_sig0_Ref_R_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW7_diseng_sig0_Ref_R_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW7_diseng_sig0_Ref_R_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW7_diseng_sig0_Ref_R_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_R_WINDOW7_diseng_sig0_Ref_R_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_G_WINDOW7 - Window 7, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW7_diseng_sig0_Ref_G_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW7_diseng_sig0_Ref_G_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW7_diseng_sig0_Ref_G_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW7_diseng_sig0_Ref_G_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_G_WINDOW7_diseng_sig0_Ref_G_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF_B_WINDOW7 - Window 7, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW7_diseng_sig0_Ref_B_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW7_diseng_sig0_Ref_B_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW7_diseng_sig0_Ref_B_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW7_diseng_sig0_Ref_B_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF_B_WINDOW7_diseng_sig0_Ref_B_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_CLUSTER0 - Cluster 0, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_En_Cluster0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_En_Cluster0_SHIFT (0U)
/*! diseng_sig0_En_Cluster0
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix0_En_Cluster0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix0_En_Cluster0_SHIFT (4U)
/*! diseng_sig0_Pix0_En_Cluster0
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix0_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix0_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix0_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix1_En_Cluster0_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix1_En_Cluster0_SHIFT (5U)
/*! diseng_sig0_Pix1_En_Cluster0
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix1_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix1_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix1_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix2_En_Cluster0_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix2_En_Cluster0_SHIFT (6U)
/*! diseng_sig0_Pix2_En_Cluster0
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix2_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix2_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix2_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix3_En_Cluster0_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix3_En_Cluster0_SHIFT (7U)
/*! diseng_sig0_Pix3_En_Cluster0
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix3_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix3_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_Pix3_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskBlue_Cluster0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskBlue_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskBlue_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskBlue_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskBlue_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskGreen_Cluster0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskGreen_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskGreen_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskGreen_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskGreen_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskRed_Cluster0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskRed_Cluster0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskRed_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskRed_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER0_diseng_sig0_MaskRed_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX0_CLUSTER0 - Cluster 0, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_X0_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_X0_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_X0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_X0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_X0_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_Y0_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_Y0_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_Y0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_Y0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER0_diseng_sig0_Y0_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX1_CLUSTER0 - Cluster 0, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_X1_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_X1_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_X1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_X1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_X1_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_Y1_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_Y1_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_Y1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_Y1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER0_diseng_sig0_Y1_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX2_CLUSTER0 - Cluster 0, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_X2_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_X2_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_X2_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_X2_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_X2_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_Y2_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_Y2_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_Y2_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_Y2_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER0_diseng_sig0_Y2_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX3_CLUSTER0 - Cluster 0, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_X3_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_X3_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_X3_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_X3_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_X3_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_Y3_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_Y3_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_Y3_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_Y3_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER0_diseng_sig0_Y3_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF0_CLUSTER0 - Cluster 0, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER0_diseng_sig0_Ref0_Cluster0_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER0_diseng_sig0_Ref0_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER0_diseng_sig0_Ref0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER0_diseng_sig0_Ref0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER0_diseng_sig0_Ref0_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF1_CLUSTER0 - Cluster 0, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER0_diseng_sig0_Ref1_Cluster0_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER0_diseng_sig0_Ref1_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER0_diseng_sig0_Ref1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER0_diseng_sig0_Ref1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER0_diseng_sig0_Ref1_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_CLUSTER1 - Cluster 1, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_En_Cluster1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_En_Cluster1_SHIFT (0U)
/*! diseng_sig0_En_Cluster1
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix0_En_Cluster1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix0_En_Cluster1_SHIFT (4U)
/*! diseng_sig0_Pix0_En_Cluster1
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix0_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix0_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix0_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix1_En_Cluster1_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix1_En_Cluster1_SHIFT (5U)
/*! diseng_sig0_Pix1_En_Cluster1
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix1_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix1_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix1_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix2_En_Cluster1_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix2_En_Cluster1_SHIFT (6U)
/*! diseng_sig0_Pix2_En_Cluster1
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix2_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix2_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix2_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix3_En_Cluster1_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix3_En_Cluster1_SHIFT (7U)
/*! diseng_sig0_Pix3_En_Cluster1
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix3_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix3_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_Pix3_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskBlue_Cluster1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskBlue_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskBlue_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskBlue_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskBlue_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskGreen_Cluster1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskGreen_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskGreen_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskGreen_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskGreen_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskRed_Cluster1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskRed_Cluster1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskRed_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskRed_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER1_diseng_sig0_MaskRed_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX0_CLUSTER1 - Cluster 1, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_X0_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_X0_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_X0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_X0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_X0_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_Y0_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_Y0_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_Y0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_Y0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER1_diseng_sig0_Y0_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX1_CLUSTER1 - Cluster 1, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_X1_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_X1_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_X1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_X1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_X1_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_Y1_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_Y1_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_Y1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_Y1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER1_diseng_sig0_Y1_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX2_CLUSTER1 - Cluster 1, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_X2_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_X2_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_X2_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_X2_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_X2_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_Y2_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_Y2_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_Y2_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_Y2_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER1_diseng_sig0_Y2_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX3_CLUSTER1 - Cluster 1, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_X3_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_X3_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_X3_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_X3_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_X3_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_Y3_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_Y3_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_Y3_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_Y3_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER1_diseng_sig0_Y3_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF0_CLUSTER1 - Cluster 1, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER1_diseng_sig0_Ref0_Cluster1_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER1_diseng_sig0_Ref0_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER1_diseng_sig0_Ref0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER1_diseng_sig0_Ref0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER1_diseng_sig0_Ref0_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF1_CLUSTER1 - Cluster 1, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER1_diseng_sig0_Ref1_Cluster1_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER1_diseng_sig0_Ref1_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER1_diseng_sig0_Ref1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER1_diseng_sig0_Ref1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER1_diseng_sig0_Ref1_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_CLUSTER2 - Cluster 2, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_En_Cluster2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_En_Cluster2_SHIFT (0U)
/*! diseng_sig0_En_Cluster2
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix0_En_Cluster2_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix0_En_Cluster2_SHIFT (4U)
/*! diseng_sig0_Pix0_En_Cluster2
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix0_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix0_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix0_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix1_En_Cluster2_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix1_En_Cluster2_SHIFT (5U)
/*! diseng_sig0_Pix1_En_Cluster2
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix1_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix1_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix1_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix2_En_Cluster2_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix2_En_Cluster2_SHIFT (6U)
/*! diseng_sig0_Pix2_En_Cluster2
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix2_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix2_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix2_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix3_En_Cluster2_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix3_En_Cluster2_SHIFT (7U)
/*! diseng_sig0_Pix3_En_Cluster2
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix3_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix3_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_Pix3_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskBlue_Cluster2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskBlue_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskBlue_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskBlue_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskBlue_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskGreen_Cluster2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskGreen_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskGreen_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskGreen_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskGreen_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskRed_Cluster2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskRed_Cluster2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskRed_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskRed_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER2_diseng_sig0_MaskRed_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX0_CLUSTER2 - Cluster 2, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_X0_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_X0_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_X0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_X0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_X0_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_Y0_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_Y0_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_Y0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_Y0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER2_diseng_sig0_Y0_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX1_CLUSTER2 - Cluster 2, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_X1_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_X1_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_X1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_X1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_X1_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_Y1_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_Y1_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_Y1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_Y1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER2_diseng_sig0_Y1_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX2_CLUSTER2 - Cluster 2, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_X2_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_X2_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_X2_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_X2_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_X2_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_Y2_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_Y2_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_Y2_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_Y2_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER2_diseng_sig0_Y2_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX3_CLUSTER2 - Cluster 2, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_X3_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_X3_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_X3_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_X3_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_X3_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_Y3_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_Y3_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_Y3_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_Y3_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER2_diseng_sig0_Y3_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF0_CLUSTER2 - Cluster 2, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER2_diseng_sig0_Ref0_Cluster2_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER2_diseng_sig0_Ref0_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER2_diseng_sig0_Ref0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER2_diseng_sig0_Ref0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER2_diseng_sig0_Ref0_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF1_CLUSTER2 - Cluster 2, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER2_diseng_sig0_Ref1_Cluster2_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER2_diseng_sig0_Ref1_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER2_diseng_sig0_Ref1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER2_diseng_sig0_Ref1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER2_diseng_sig0_Ref1_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_CONTROL_CLUSTER3 - Cluster 3, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_En_Cluster3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_En_Cluster3_SHIFT (0U)
/*! diseng_sig0_En_Cluster3
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix0_En_Cluster3_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix0_En_Cluster3_SHIFT (4U)
/*! diseng_sig0_Pix0_En_Cluster3
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix0_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix0_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix0_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix1_En_Cluster3_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix1_En_Cluster3_SHIFT (5U)
/*! diseng_sig0_Pix1_En_Cluster3
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix1_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix1_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix1_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix2_En_Cluster3_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix2_En_Cluster3_SHIFT (6U)
/*! diseng_sig0_Pix2_En_Cluster3
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix2_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix2_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix2_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix3_En_Cluster3_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix3_En_Cluster3_SHIFT (7U)
/*! diseng_sig0_Pix3_En_Cluster3
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix3_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix3_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_Pix3_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskBlue_Cluster3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskBlue_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskBlue_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskBlue_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskBlue_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskGreen_Cluster3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskGreen_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskGreen_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskGreen_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskGreen_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskRed_Cluster3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskRed_Cluster3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskRed_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskRed_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CONTROL_CLUSTER3_diseng_sig0_MaskRed_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX0_CLUSTER3 - Cluster 3, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_X0_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_X0_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_X0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_X0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_X0_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_Y0_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_Y0_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_Y0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_Y0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX0_CLUSTER3_diseng_sig0_Y0_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX1_CLUSTER3 - Cluster 3, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_X1_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_X1_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_X1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_X1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_X1_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_Y1_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_Y1_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_Y1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_Y1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX1_CLUSTER3_diseng_sig0_Y1_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX2_CLUSTER3 - Cluster 3, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_X2_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_X2_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_X2_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_X2_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_X2_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_Y2_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_Y2_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_Y2_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_Y2_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX2_CLUSTER3_diseng_sig0_Y2_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIX3_CLUSTER3 - Cluster 3, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_X3_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_X3_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_X3_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_X3_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_X3_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_Y3_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_Y3_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_Y3_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_Y3_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIX3_CLUSTER3_diseng_sig0_Y3_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF0_CLUSTER3 - Cluster 3, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER3_diseng_sig0_Ref0_Cluster3_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER3_diseng_sig0_Ref0_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER3_diseng_sig0_Ref0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER3_diseng_sig0_Ref0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF0_CLUSTER3_diseng_sig0_Ref0_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_REF1_CLUSTER3 - Cluster 3, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER3_diseng_sig0_Ref1_Cluster3_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER3_diseng_sig0_Ref1_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER3_diseng_sig0_Ref1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER3_diseng_sig0_Ref1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REF1_CLUSTER3_diseng_sig0_Ref1_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW0 - Window 0, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW0_diseng_sig0_CRC_R_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW0_diseng_sig0_CRC_R_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW0_diseng_sig0_CRC_R_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW0_diseng_sig0_CRC_R_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW0_diseng_sig0_CRC_R_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW0 - Window 0, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW0_diseng_sig0_CRC_G_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW0_diseng_sig0_CRC_G_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW0_diseng_sig0_CRC_G_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW0_diseng_sig0_CRC_G_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW0_diseng_sig0_CRC_G_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW0 - Window 0, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW0_diseng_sig0_CRC_B_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW0_diseng_sig0_CRC_B_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW0_diseng_sig0_CRC_B_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW0_diseng_sig0_CRC_B_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW0_diseng_sig0_CRC_B_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW1 - Window 1, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW1_diseng_sig0_CRC_R_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW1_diseng_sig0_CRC_R_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW1_diseng_sig0_CRC_R_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW1_diseng_sig0_CRC_R_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW1_diseng_sig0_CRC_R_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW1 - Window 1, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW1_diseng_sig0_CRC_G_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW1_diseng_sig0_CRC_G_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW1_diseng_sig0_CRC_G_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW1_diseng_sig0_CRC_G_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW1_diseng_sig0_CRC_G_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW1 - Window 1, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW1_diseng_sig0_CRC_B_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW1_diseng_sig0_CRC_B_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW1_diseng_sig0_CRC_B_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW1_diseng_sig0_CRC_B_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW1_diseng_sig0_CRC_B_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW2 - Window 2, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW2_diseng_sig0_CRC_R_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW2_diseng_sig0_CRC_R_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW2_diseng_sig0_CRC_R_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW2_diseng_sig0_CRC_R_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW2_diseng_sig0_CRC_R_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW2 - Window 2, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW2_diseng_sig0_CRC_G_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW2_diseng_sig0_CRC_G_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW2_diseng_sig0_CRC_G_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW2_diseng_sig0_CRC_G_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW2_diseng_sig0_CRC_G_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW2 - Window 2, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW2_diseng_sig0_CRC_B_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW2_diseng_sig0_CRC_B_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW2_diseng_sig0_CRC_B_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW2_diseng_sig0_CRC_B_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW2_diseng_sig0_CRC_B_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW3 - Window 3, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW3_diseng_sig0_CRC_R_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW3_diseng_sig0_CRC_R_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW3_diseng_sig0_CRC_R_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW3_diseng_sig0_CRC_R_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW3_diseng_sig0_CRC_R_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW3 - Window 3, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW3_diseng_sig0_CRC_G_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW3_diseng_sig0_CRC_G_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW3_diseng_sig0_CRC_G_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW3_diseng_sig0_CRC_G_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW3_diseng_sig0_CRC_G_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW3 - Window 3, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW3_diseng_sig0_CRC_B_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW3_diseng_sig0_CRC_B_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW3_diseng_sig0_CRC_B_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW3_diseng_sig0_CRC_B_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW3_diseng_sig0_CRC_B_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW4 - Window 4, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW4_diseng_sig0_CRC_R_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW4_diseng_sig0_CRC_R_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW4_diseng_sig0_CRC_R_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW4_diseng_sig0_CRC_R_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW4_diseng_sig0_CRC_R_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW4 - Window 4, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW4_diseng_sig0_CRC_G_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW4_diseng_sig0_CRC_G_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW4_diseng_sig0_CRC_G_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW4_diseng_sig0_CRC_G_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW4_diseng_sig0_CRC_G_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW4 - Window 4, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW4_diseng_sig0_CRC_B_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW4_diseng_sig0_CRC_B_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW4_diseng_sig0_CRC_B_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW4_diseng_sig0_CRC_B_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW4_diseng_sig0_CRC_B_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW5 - Window 5, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW5_diseng_sig0_CRC_R_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW5_diseng_sig0_CRC_R_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW5_diseng_sig0_CRC_R_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW5_diseng_sig0_CRC_R_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW5_diseng_sig0_CRC_R_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW5 - Window 5, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW5_diseng_sig0_CRC_G_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW5_diseng_sig0_CRC_G_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW5_diseng_sig0_CRC_G_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW5_diseng_sig0_CRC_G_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW5_diseng_sig0_CRC_G_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW5 - Window 5, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW5_diseng_sig0_CRC_B_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW5_diseng_sig0_CRC_B_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW5_diseng_sig0_CRC_B_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW5_diseng_sig0_CRC_B_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW5_diseng_sig0_CRC_B_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW6 - Window 6, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW6_diseng_sig0_CRC_R_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW6_diseng_sig0_CRC_R_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW6_diseng_sig0_CRC_R_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW6_diseng_sig0_CRC_R_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW6_diseng_sig0_CRC_R_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW6 - Window 6, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW6_diseng_sig0_CRC_G_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW6_diseng_sig0_CRC_G_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW6_diseng_sig0_CRC_G_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW6_diseng_sig0_CRC_G_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW6_diseng_sig0_CRC_G_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW6 - Window 6, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW6_diseng_sig0_CRC_B_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW6_diseng_sig0_CRC_B_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW6_diseng_sig0_CRC_B_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW6_diseng_sig0_CRC_B_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW6_diseng_sig0_CRC_B_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_R_WINDOW7 - Window 7, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW7_diseng_sig0_CRC_R_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW7_diseng_sig0_CRC_R_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW7_diseng_sig0_CRC_R_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW7_diseng_sig0_CRC_R_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_R_WINDOW7_diseng_sig0_CRC_R_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_G_WINDOW7 - Window 7, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW7_diseng_sig0_CRC_G_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW7_diseng_sig0_CRC_G_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW7_diseng_sig0_CRC_G_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW7_diseng_sig0_CRC_G_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_G_WINDOW7_diseng_sig0_CRC_G_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_CRC_B_WINDOW7 - Window 7, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW7_diseng_sig0_CRC_B_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW7_diseng_sig0_CRC_B_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW7_diseng_sig0_CRC_B_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW7_diseng_sig0_CRC_B_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_CRC_B_WINDOW7_diseng_sig0_CRC_B_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATUS_CLUSTER0 - Cluster 0, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts00_Cluster0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts00_Cluster0_SHIFT (0U)
/*! diseng_sig0_Sts00_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts00_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts00_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts00_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts01_Cluster0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts01_Cluster0_SHIFT (1U)
/*! diseng_sig0_Sts01_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts01_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts01_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts01_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts10_Cluster0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts10_Cluster0_SHIFT (2U)
/*! diseng_sig0_Sts10_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts11_Cluster0_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts11_Cluster0_SHIFT (3U)
/*! diseng_sig0_Sts11_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts11_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts11_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts11_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts20_Cluster0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts20_Cluster0_SHIFT (4U)
/*! diseng_sig0_Sts20_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts20_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts20_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts20_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts21_Cluster0_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts21_Cluster0_SHIFT (5U)
/*! diseng_sig0_Sts21_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts21_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts21_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts21_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts30_Cluster0_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts30_Cluster0_SHIFT (6U)
/*! diseng_sig0_Sts30_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts30_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts30_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts30_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts31_Cluster0_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts31_Cluster0_SHIFT (7U)
/*! diseng_sig0_Sts31_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts31_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts31_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER0_diseng_sig0_Sts31_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_COUNTER_CLUSTER0 - Cluster 0, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_MatchCount_Cluster0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_MatchCount_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_MatchCount_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_MatchCount_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_MatchCount_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_ErrorCount_Cluster0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_ErrorCount_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_ErrorCount_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_ErrorCount_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER0_diseng_sig0_ErrorCount_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR0_CLUSTER0 - Cluster 0, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_B10_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_B10_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_G10_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_G10_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_R10_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_R10_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix0_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_B10_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_B10_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_G10_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_G10_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_R10_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_R10_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix1_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_B10_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_B10_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_G10_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_G10_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_R10_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_R10_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix2_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_B10_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_B10_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_G10_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_G10_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_R10_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_R10_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER0_diseng_sig0_Pix3_R10_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR1_CLUSTER0 - Cluster 0, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_B32_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_B32_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_G32_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_G32_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_R32_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_R32_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix0_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_B32_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_B32_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_G32_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_G32_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_R32_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_R32_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix1_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_B32_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_B32_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_G32_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_G32_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_R32_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_R32_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix2_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_B32_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_B32_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_G32_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_G32_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_R32_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_R32_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER0_diseng_sig0_Pix3_R32_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR2_CLUSTER0 - Cluster 0, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_B54_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_B54_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_G54_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_G54_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_R54_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_R54_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix0_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_B54_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_B54_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_G54_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_G54_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_R54_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_R54_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix1_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_B54_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_B54_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_G54_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_G54_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_R54_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_R54_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix2_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_B54_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_B54_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_G54_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_G54_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_R54_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_R54_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER0_diseng_sig0_Pix3_R54_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR3_CLUSTER0 - Cluster 0, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_B76_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_B76_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_G76_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_G76_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_R76_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_R76_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix0_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_B76_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_B76_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_G76_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_G76_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_R76_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_R76_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix1_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_B76_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_B76_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_G76_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_G76_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_R76_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_R76_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix2_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_B76_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_B76_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_G76_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_G76_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_R76_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_R76_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER0_diseng_sig0_Pix3_R76_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATUS_CLUSTER1 - Cluster 1, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts00_Cluster1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts00_Cluster1_SHIFT (0U)
/*! diseng_sig0_Sts00_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts00_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts00_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts00_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts01_Cluster1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts01_Cluster1_SHIFT (1U)
/*! diseng_sig0_Sts01_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts01_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts01_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts01_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts10_Cluster1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts10_Cluster1_SHIFT (2U)
/*! diseng_sig0_Sts10_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts11_Cluster1_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts11_Cluster1_SHIFT (3U)
/*! diseng_sig0_Sts11_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts11_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts11_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts11_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts20_Cluster1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts20_Cluster1_SHIFT (4U)
/*! diseng_sig0_Sts20_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts20_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts20_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts20_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts21_Cluster1_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts21_Cluster1_SHIFT (5U)
/*! diseng_sig0_Sts21_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts21_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts21_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts21_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts30_Cluster1_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts30_Cluster1_SHIFT (6U)
/*! diseng_sig0_Sts30_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts30_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts30_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts30_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts31_Cluster1_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts31_Cluster1_SHIFT (7U)
/*! diseng_sig0_Sts31_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts31_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts31_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER1_diseng_sig0_Sts31_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_COUNTER_CLUSTER1 - Cluster 1, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_MatchCount_Cluster1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_MatchCount_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_MatchCount_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_MatchCount_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_MatchCount_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_ErrorCount_Cluster1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_ErrorCount_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_ErrorCount_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_ErrorCount_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER1_diseng_sig0_ErrorCount_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR0_CLUSTER1 - Cluster 1, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_B10_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_B10_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_G10_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_G10_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_R10_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_R10_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix0_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_B10_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_B10_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_G10_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_G10_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_R10_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_R10_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix1_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_B10_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_B10_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_G10_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_G10_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_R10_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_R10_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix2_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_B10_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_B10_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_G10_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_G10_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_R10_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_R10_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER1_diseng_sig0_Pix3_R10_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR1_CLUSTER1 - Cluster 1, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_B32_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_B32_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_G32_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_G32_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_R32_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_R32_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix0_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_B32_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_B32_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_G32_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_G32_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_R32_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_R32_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix1_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_B32_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_B32_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_G32_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_G32_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_R32_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_R32_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix2_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_B32_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_B32_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_G32_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_G32_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_R32_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_R32_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER1_diseng_sig0_Pix3_R32_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR2_CLUSTER1 - Cluster 1, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_B54_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_B54_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_G54_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_G54_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_R54_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_R54_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix0_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_B54_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_B54_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_G54_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_G54_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_R54_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_R54_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix1_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_B54_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_B54_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_G54_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_G54_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_R54_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_R54_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix2_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_B54_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_B54_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_G54_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_G54_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_R54_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_R54_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER1_diseng_sig0_Pix3_R54_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR3_CLUSTER1 - Cluster 1, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_B76_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_B76_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_G76_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_G76_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_R76_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_R76_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix0_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_B76_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_B76_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_G76_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_G76_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_R76_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_R76_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix1_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_B76_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_B76_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_G76_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_G76_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_R76_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_R76_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix2_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_B76_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_B76_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_G76_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_G76_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_R76_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_R76_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER1_diseng_sig0_Pix3_R76_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATUS_CLUSTER2 - Cluster 2, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts00_Cluster2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts00_Cluster2_SHIFT (0U)
/*! diseng_sig0_Sts00_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts00_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts00_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts00_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts01_Cluster2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts01_Cluster2_SHIFT (1U)
/*! diseng_sig0_Sts01_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts01_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts01_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts01_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts10_Cluster2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts10_Cluster2_SHIFT (2U)
/*! diseng_sig0_Sts10_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts11_Cluster2_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts11_Cluster2_SHIFT (3U)
/*! diseng_sig0_Sts11_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts11_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts11_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts11_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts20_Cluster2_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts20_Cluster2_SHIFT (4U)
/*! diseng_sig0_Sts20_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts20_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts20_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts20_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts21_Cluster2_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts21_Cluster2_SHIFT (5U)
/*! diseng_sig0_Sts21_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts21_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts21_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts21_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts30_Cluster2_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts30_Cluster2_SHIFT (6U)
/*! diseng_sig0_Sts30_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts30_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts30_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts30_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts31_Cluster2_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts31_Cluster2_SHIFT (7U)
/*! diseng_sig0_Sts31_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts31_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts31_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER2_diseng_sig0_Sts31_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_COUNTER_CLUSTER2 - Cluster 2, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_MatchCount_Cluster2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_MatchCount_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_MatchCount_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_MatchCount_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_MatchCount_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_ErrorCount_Cluster2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_ErrorCount_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_ErrorCount_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_ErrorCount_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER2_diseng_sig0_ErrorCount_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR0_CLUSTER2 - Cluster 2, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_B10_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_B10_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_G10_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_G10_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_R10_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_R10_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix0_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_B10_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_B10_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_G10_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_G10_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_R10_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_R10_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix1_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_B10_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_B10_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_G10_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_G10_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_R10_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_R10_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix2_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_B10_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_B10_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_G10_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_G10_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_R10_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_R10_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER2_diseng_sig0_Pix3_R10_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR1_CLUSTER2 - Cluster 2, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_B32_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_B32_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_G32_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_G32_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_R32_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_R32_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix0_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_B32_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_B32_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_G32_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_G32_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_R32_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_R32_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix1_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_B32_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_B32_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_G32_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_G32_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_R32_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_R32_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix2_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_B32_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_B32_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_G32_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_G32_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_R32_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_R32_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER2_diseng_sig0_Pix3_R32_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR2_CLUSTER2 - Cluster 2, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_B54_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_B54_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_G54_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_G54_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_R54_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_R54_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix0_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_B54_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_B54_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_G54_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_G54_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_R54_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_R54_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix1_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_B54_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_B54_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_G54_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_G54_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_R54_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_R54_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix2_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_B54_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_B54_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_G54_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_G54_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_R54_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_R54_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER2_diseng_sig0_Pix3_R54_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR3_CLUSTER2 - Cluster 2, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_B76_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_B76_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_G76_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_G76_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_R76_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_R76_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix0_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_B76_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_B76_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_G76_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_G76_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_R76_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_R76_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix1_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_B76_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_B76_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_G76_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_G76_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_R76_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_R76_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix2_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_B76_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_B76_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_G76_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_G76_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_R76_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_R76_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER2_diseng_sig0_Pix3_R76_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG0_STATUS_CLUSTER3 - Cluster 3, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts00_Cluster3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts00_Cluster3_SHIFT (0U)
/*! diseng_sig0_Sts00_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts00_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts00_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts00_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts01_Cluster3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts01_Cluster3_SHIFT (1U)
/*! diseng_sig0_Sts01_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts01_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts01_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts01_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts10_Cluster3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts10_Cluster3_SHIFT (2U)
/*! diseng_sig0_Sts10_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts11_Cluster3_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts11_Cluster3_SHIFT (3U)
/*! diseng_sig0_Sts11_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts11_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts11_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts11_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts20_Cluster3_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts20_Cluster3_SHIFT (4U)
/*! diseng_sig0_Sts20_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts20_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts20_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts20_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts21_Cluster3_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts21_Cluster3_SHIFT (5U)
/*! diseng_sig0_Sts21_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts21_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts21_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts21_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts30_Cluster3_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts30_Cluster3_SHIFT (6U)
/*! diseng_sig0_Sts30_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts30_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts30_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts30_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts31_Cluster3_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts31_Cluster3_SHIFT (7U)
/*! diseng_sig0_Sts31_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts31_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts31_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_STATUS_CLUSTER3_diseng_sig0_Sts31_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_COUNTER_CLUSTER3 - Cluster 3, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_MatchCount_Cluster3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_MatchCount_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_MatchCount_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_MatchCount_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_MatchCount_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_ErrorCount_Cluster3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_ErrorCount_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_ErrorCount_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_ErrorCount_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_COUNTER_CLUSTER3_diseng_sig0_ErrorCount_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR0_CLUSTER3 - Cluster 3, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_B10_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_B10_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_G10_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_G10_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_R10_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_R10_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix0_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_B10_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_B10_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_G10_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_G10_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_R10_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_R10_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix1_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_B10_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_B10_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_G10_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_G10_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_R10_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_R10_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix2_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_B10_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_B10_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_G10_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_G10_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_R10_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_R10_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR0_CLUSTER3_diseng_sig0_Pix3_R10_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR1_CLUSTER3 - Cluster 3, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_B32_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_B32_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_G32_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_G32_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_R32_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_R32_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix0_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_B32_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_B32_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_G32_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_G32_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_R32_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_R32_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix1_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_B32_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_B32_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_G32_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_G32_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_R32_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_R32_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix2_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_B32_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_B32_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_G32_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_G32_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_R32_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_R32_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR1_CLUSTER3_diseng_sig0_Pix3_R32_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR2_CLUSTER3 - Cluster 3, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_B54_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_B54_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_G54_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_G54_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_R54_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_R54_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix0_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_B54_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_B54_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_G54_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_G54_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_R54_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_R54_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix1_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_B54_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_B54_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_G54_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_G54_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_R54_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_R54_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix2_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_B54_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_B54_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_G54_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_G54_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_R54_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_R54_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR2_CLUSTER3_diseng_sig0_Pix3_R54_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_VECTOR3_CLUSTER3 - Cluster 3, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_B76_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_B76_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_G76_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_G76_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_R76_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_R76_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix0_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_B76_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_B76_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_G76_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_G76_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_R76_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_R76_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix1_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_B76_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_B76_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_G76_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_G76_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_R76_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_R76_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix2_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_B76_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_B76_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_G76_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_G76_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_R76_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_R76_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_VECTOR3_CLUSTER3_diseng_sig0_Pix3_R76_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS0_WIN0 - Pixel Counter Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN0_diseng_sig0_Px_Cnt_S0_Win0_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN0_diseng_sig0_Px_Cnt_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN0_diseng_sig0_Px_Cnt_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN0_diseng_sig0_Px_Cnt_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN0_diseng_sig0_Px_Cnt_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS0_WIN0 - Pixel Max Values Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Bl_Max_S0_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Bl_Max_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Bl_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Bl_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Bl_Max_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Gn_Max_S0_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Gn_Max_S0_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Gn_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Gn_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Gn_Max_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Rd_Max_S0_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Rd_Max_S0_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Rd_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Rd_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN0_diseng_sig0_Rd_Max_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS0_WIN0 - Pixel Min Values Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Bl_Min_S0_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Bl_Min_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Bl_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Bl_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Bl_Min_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Gn_Min_S0_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Gn_Min_S0_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Gn_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Gn_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Gn_Min_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Rd_Min_S0_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Rd_Min_S0_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Rd_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Rd_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN0_diseng_sig0_Rd_Min_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS0_WIN0 - Red Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN0_diseng_sig0_Rd_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN0_diseng_sig0_Rd_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN0_diseng_sig0_Rd_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN0_diseng_sig0_Rd_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN0_diseng_sig0_Rd_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS0_WIN0 - Green Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN0_diseng_sig0_Gn_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN0_diseng_sig0_Gn_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN0_diseng_sig0_Gn_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN0_diseng_sig0_Gn_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN0_diseng_sig0_Gn_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS0_WIN0 - Blue Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN0_diseng_sig0_Bl_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN0_diseng_sig0_Bl_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN0_diseng_sig0_Bl_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN0_diseng_sig0_Bl_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN0_diseng_sig0_Bl_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_LUMSUM_STATS0_WIN0 - Luminance Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN0_diseng_sig0_Lm_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN0_diseng_sig0_Lm_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN0_diseng_sig0_Lm_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN0_diseng_sig0_Lm_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN0_diseng_sig0_Lm_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS1_WIN0 - Pixel Counter Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN0_diseng_sig0_Px_Cnt_S1_Win0_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN0_diseng_sig0_Px_Cnt_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN0_diseng_sig0_Px_Cnt_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN0_diseng_sig0_Px_Cnt_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN0_diseng_sig0_Px_Cnt_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS1_WIN0 - Pixel Max Values Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Bl_Max_S1_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Bl_Max_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Bl_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Bl_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Bl_Max_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Gn_Max_S1_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Gn_Max_S1_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Gn_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Gn_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Gn_Max_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Rd_Max_S1_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Rd_Max_S1_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Rd_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Rd_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN0_diseng_sig0_Rd_Max_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS1_WIN0 - Pixel Min Values Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Bl_Min_S1_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Bl_Min_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Bl_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Bl_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Bl_Min_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Gn_Min_S1_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Gn_Min_S1_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Gn_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Gn_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Gn_Min_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Rd_Min_S1_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Rd_Min_S1_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Rd_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Rd_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN0_diseng_sig0_Rd_Min_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS1_WIN0 - Red Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN0_diseng_sig0_Rd_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN0_diseng_sig0_Rd_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN0_diseng_sig0_Rd_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN0_diseng_sig0_Rd_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN0_diseng_sig0_Rd_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS1_WIN0 - Green Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN0_diseng_sig0_Gn_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN0_diseng_sig0_Gn_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN0_diseng_sig0_Gn_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN0_diseng_sig0_Gn_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN0_diseng_sig0_Gn_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS1_WIN0 - Blue Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN0_diseng_sig0_Bl_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN0_diseng_sig0_Bl_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN0_diseng_sig0_Bl_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN0_diseng_sig0_Bl_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN0_diseng_sig0_Bl_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS0_WIN1 - Pixel Counter Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN1_diseng_sig0_Px_Cnt_S0_Win1_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN1_diseng_sig0_Px_Cnt_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN1_diseng_sig0_Px_Cnt_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN1_diseng_sig0_Px_Cnt_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN1_diseng_sig0_Px_Cnt_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS0_WIN1 - Pixel Max Values Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Bl_Max_S0_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Bl_Max_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Bl_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Bl_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Bl_Max_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Gn_Max_S0_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Gn_Max_S0_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Gn_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Gn_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Gn_Max_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Rd_Max_S0_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Rd_Max_S0_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Rd_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Rd_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN1_diseng_sig0_Rd_Max_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS0_WIN1 - Pixel Min Values Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Bl_Min_S0_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Bl_Min_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Bl_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Bl_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Bl_Min_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Gn_Min_S0_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Gn_Min_S0_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Gn_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Gn_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Gn_Min_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Rd_Min_S0_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Rd_Min_S0_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Rd_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Rd_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN1_diseng_sig0_Rd_Min_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS0_WIN1 - Red Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN1_diseng_sig0_Rd_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN1_diseng_sig0_Rd_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN1_diseng_sig0_Rd_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN1_diseng_sig0_Rd_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN1_diseng_sig0_Rd_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS0_WIN1 - Green Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN1_diseng_sig0_Gn_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN1_diseng_sig0_Gn_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN1_diseng_sig0_Gn_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN1_diseng_sig0_Gn_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN1_diseng_sig0_Gn_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS0_WIN1 - Blue Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN1_diseng_sig0_Bl_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN1_diseng_sig0_Bl_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN1_diseng_sig0_Bl_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN1_diseng_sig0_Bl_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN1_diseng_sig0_Bl_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_LUMSUM_STATS0_WIN1 - Luminance Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN1_diseng_sig0_Lm_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN1_diseng_sig0_Lm_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN1_diseng_sig0_Lm_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN1_diseng_sig0_Lm_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN1_diseng_sig0_Lm_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS1_WIN1 - Pixel Counter Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN1_diseng_sig0_Px_Cnt_S1_Win1_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN1_diseng_sig0_Px_Cnt_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN1_diseng_sig0_Px_Cnt_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN1_diseng_sig0_Px_Cnt_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN1_diseng_sig0_Px_Cnt_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS1_WIN1 - Pixel Max Values Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Bl_Max_S1_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Bl_Max_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Bl_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Bl_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Bl_Max_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Gn_Max_S1_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Gn_Max_S1_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Gn_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Gn_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Gn_Max_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Rd_Max_S1_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Rd_Max_S1_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Rd_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Rd_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN1_diseng_sig0_Rd_Max_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS1_WIN1 - Pixel Min Values Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Bl_Min_S1_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Bl_Min_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Bl_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Bl_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Bl_Min_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Gn_Min_S1_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Gn_Min_S1_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Gn_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Gn_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Gn_Min_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Rd_Min_S1_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Rd_Min_S1_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Rd_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Rd_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN1_diseng_sig0_Rd_Min_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS1_WIN1 - Red Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN1_diseng_sig0_Rd_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN1_diseng_sig0_Rd_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN1_diseng_sig0_Rd_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN1_diseng_sig0_Rd_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN1_diseng_sig0_Rd_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS1_WIN1 - Green Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN1_diseng_sig0_Gn_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN1_diseng_sig0_Gn_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN1_diseng_sig0_Gn_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN1_diseng_sig0_Gn_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN1_diseng_sig0_Gn_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS1_WIN1 - Blue Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN1_diseng_sig0_Bl_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN1_diseng_sig0_Bl_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN1_diseng_sig0_Bl_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN1_diseng_sig0_Bl_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN1_diseng_sig0_Bl_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS0_WIN2 - Pixel Counter Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN2_diseng_sig0_Px_Cnt_S0_Win2_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN2_diseng_sig0_Px_Cnt_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN2_diseng_sig0_Px_Cnt_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN2_diseng_sig0_Px_Cnt_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN2_diseng_sig0_Px_Cnt_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS0_WIN2 - Pixel Max Values Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Bl_Max_S0_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Bl_Max_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Bl_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Bl_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Bl_Max_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Gn_Max_S0_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Gn_Max_S0_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Gn_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Gn_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Gn_Max_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Rd_Max_S0_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Rd_Max_S0_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Rd_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Rd_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN2_diseng_sig0_Rd_Max_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS0_WIN2 - Pixel Min Values Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Bl_Min_S0_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Bl_Min_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Bl_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Bl_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Bl_Min_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Gn_Min_S0_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Gn_Min_S0_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Gn_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Gn_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Gn_Min_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Rd_Min_S0_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Rd_Min_S0_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Rd_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Rd_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN2_diseng_sig0_Rd_Min_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS0_WIN2 - Red Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN2_diseng_sig0_Rd_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN2_diseng_sig0_Rd_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN2_diseng_sig0_Rd_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN2_diseng_sig0_Rd_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN2_diseng_sig0_Rd_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS0_WIN2 - Green Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN2_diseng_sig0_Gn_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN2_diseng_sig0_Gn_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN2_diseng_sig0_Gn_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN2_diseng_sig0_Gn_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN2_diseng_sig0_Gn_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS0_WIN2 - Blue Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN2_diseng_sig0_Bl_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN2_diseng_sig0_Bl_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN2_diseng_sig0_Bl_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN2_diseng_sig0_Bl_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN2_diseng_sig0_Bl_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_LUMSUM_STATS0_WIN2 - Luminance Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN2_diseng_sig0_Lm_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN2_diseng_sig0_Lm_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN2_diseng_sig0_Lm_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN2_diseng_sig0_Lm_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN2_diseng_sig0_Lm_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS1_WIN2 - Pixel Counter Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN2_diseng_sig0_Px_Cnt_S1_Win2_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN2_diseng_sig0_Px_Cnt_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN2_diseng_sig0_Px_Cnt_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN2_diseng_sig0_Px_Cnt_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN2_diseng_sig0_Px_Cnt_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS1_WIN2 - Pixel Max Values Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Bl_Max_S1_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Bl_Max_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Bl_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Bl_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Bl_Max_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Gn_Max_S1_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Gn_Max_S1_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Gn_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Gn_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Gn_Max_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Rd_Max_S1_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Rd_Max_S1_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Rd_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Rd_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN2_diseng_sig0_Rd_Max_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS1_WIN2 - Pixel Min Values Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Bl_Min_S1_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Bl_Min_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Bl_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Bl_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Bl_Min_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Gn_Min_S1_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Gn_Min_S1_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Gn_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Gn_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Gn_Min_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Rd_Min_S1_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Rd_Min_S1_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Rd_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Rd_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN2_diseng_sig0_Rd_Min_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS1_WIN2 - Red Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN2_diseng_sig0_Rd_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN2_diseng_sig0_Rd_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN2_diseng_sig0_Rd_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN2_diseng_sig0_Rd_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN2_diseng_sig0_Rd_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS1_WIN2 - Green Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN2_diseng_sig0_Gn_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN2_diseng_sig0_Gn_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN2_diseng_sig0_Gn_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN2_diseng_sig0_Gn_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN2_diseng_sig0_Gn_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS1_WIN2 - Blue Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN2_diseng_sig0_Bl_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN2_diseng_sig0_Bl_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN2_diseng_sig0_Bl_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN2_diseng_sig0_Bl_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN2_diseng_sig0_Bl_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS0_WIN3 - Pixel Counter Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN3_diseng_sig0_Px_Cnt_S0_Win3_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN3_diseng_sig0_Px_Cnt_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN3_diseng_sig0_Px_Cnt_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN3_diseng_sig0_Px_Cnt_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS0_WIN3_diseng_sig0_Px_Cnt_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS0_WIN3 - Pixel Max Values Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Bl_Max_S0_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Bl_Max_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Bl_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Bl_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Bl_Max_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Gn_Max_S0_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Gn_Max_S0_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Gn_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Gn_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Gn_Max_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Rd_Max_S0_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Rd_Max_S0_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Rd_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Rd_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS0_WIN3_diseng_sig0_Rd_Max_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS0_WIN3 - Pixel Min Values Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Bl_Min_S0_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Bl_Min_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Bl_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Bl_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Bl_Min_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Gn_Min_S0_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Gn_Min_S0_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Gn_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Gn_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Gn_Min_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Rd_Min_S0_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Rd_Min_S0_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Rd_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Rd_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS0_WIN3_diseng_sig0_Rd_Min_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS0_WIN3 - Red Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN3_diseng_sig0_Rd_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN3_diseng_sig0_Rd_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN3_diseng_sig0_Rd_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN3_diseng_sig0_Rd_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS0_WIN3_diseng_sig0_Rd_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS0_WIN3 - Green Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN3_diseng_sig0_Gn_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN3_diseng_sig0_Gn_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN3_diseng_sig0_Gn_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN3_diseng_sig0_Gn_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS0_WIN3_diseng_sig0_Gn_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS0_WIN3 - Blue Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN3_diseng_sig0_Bl_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN3_diseng_sig0_Bl_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN3_diseng_sig0_Bl_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN3_diseng_sig0_Bl_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS0_WIN3_diseng_sig0_Bl_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_LUMSUM_STATS0_WIN3 - Luminance Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN3_diseng_sig0_Lm_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN3_diseng_sig0_Lm_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN3_diseng_sig0_Lm_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN3_diseng_sig0_Lm_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_LUMSUM_STATS0_WIN3_diseng_sig0_Lm_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXCNT_STATS1_WIN3 - Pixel Counter Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN3_diseng_sig0_Px_Cnt_S1_Win3_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN3_diseng_sig0_Px_Cnt_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN3_diseng_sig0_Px_Cnt_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN3_diseng_sig0_Px_Cnt_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXCNT_STATS1_WIN3_diseng_sig0_Px_Cnt_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMAX_STATS1_WIN3 - Pixel Max Values Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Bl_Max_S1_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Bl_Max_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Bl_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Bl_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Bl_Max_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Gn_Max_S1_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Gn_Max_S1_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Gn_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Gn_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Gn_Max_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Rd_Max_S1_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Rd_Max_S1_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Rd_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Rd_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMAX_STATS1_WIN3_diseng_sig0_Rd_Max_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_PIXMIN_STATS1_WIN3 - Pixel Min Values Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Bl_Min_S1_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Bl_Min_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Bl_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Bl_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Bl_Min_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Gn_Min_S1_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Gn_Min_S1_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Gn_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Gn_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Gn_Min_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Rd_Min_S1_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Rd_Min_S1_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Rd_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Rd_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_PIXMIN_STATS1_WIN3_diseng_sig0_Rd_Min_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_REDSUM_STATS1_WIN3 - Red Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN3_diseng_sig0_Rd_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN3_diseng_sig0_Rd_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN3_diseng_sig0_Rd_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN3_diseng_sig0_Rd_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_REDSUM_STATS1_WIN3_diseng_sig0_Rd_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_GREENSUM_STATS1_WIN3 - Green Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN3_diseng_sig0_Gn_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN3_diseng_sig0_Gn_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN3_diseng_sig0_Gn_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN3_diseng_sig0_Gn_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_GREENSUM_STATS1_WIN3_diseng_sig0_Gn_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0_BLUESUM_STATS1_WIN3 - Blue Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN3_diseng_sig0_Bl_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN3_diseng_sig0_Bl_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN3_diseng_sig0_Bl_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN3_diseng_sig0_Bl_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0_BLUESUM_STATS1_WIN3_diseng_sig0_Bl_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG0CFG_LOCKUNLOCK0 - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKUNLOCK0_diseng_sig0cfg_LockUnlock0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKUNLOCK0_diseng_sig0cfg_LockUnlock0_SHIFT (0U)
/*! diseng_sig0cfg_LockUnlock0
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKUNLOCK0_diseng_sig0cfg_LockUnlock0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKUNLOCK0_diseng_sig0cfg_LockUnlock0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKUNLOCK0_diseng_sig0cfg_LockUnlock0_MASK)
/*! @} */

/*! @name DISENG_SIG0CFG_LOCKSTATUS0 - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_LockStatus0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_LockStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_LockStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_LockStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_LockStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_PrivilegeStatus0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_PrivilegeStatus0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_PrivilegeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_PrivilegeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_PrivilegeStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_FreezeStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_FreezeStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_FreezeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_FreezeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0CFG_LOCKSTATUS0_diseng_sig0cfg_FreezeStatus0_MASK)
/*! @} */

/*! @name DISENG_SIG0CFG_SRCSELECT - Tap selection for sig0. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG0CFG_SRCSELECT_diseng_sig0cfg_sig0_select_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG0CFG_SRCSELECT_diseng_sig0cfg_sig0_select_SHIFT (0U)
/*! diseng_sig0cfg_sig0_select
 *  0b00..Source is FrameGen#0 output.
 *  0b01..Source is Matrix#0 output.
 *  0b10..Source is LuT3D#0 output.
 *  0b11..Source is Dither#0 output.
 */
#define DISPLAY_SEERIS_DISENG_SIG0CFG_SRCSELECT_diseng_sig0cfg_sig0_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG0CFG_SRCSELECT_diseng_sig0cfg_sig0_select_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG0CFG_SRCSELECT_diseng_sig0cfg_sig0_select_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOCKUNLOCK - Register to change the protection status of this address block */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOCKUNLOCK_diseng_sig2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKUNLOCK_diseng_sig2_LockUnlock_SHIFT (0U)
/*! diseng_sig2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKUNLOCK_diseng_sig2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOCKUNLOCK_diseng_sig2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOCKUNLOCK_diseng_sig2_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOCKSTATUS - Protection status of this address block */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOCKSTATUS_diseng_sig2_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATICCONTROL - Global configuration */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdEn_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdLdSel_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdLdSel_SHIFT (4U)
/*! diseng_sig2_ShdLdSel
 *  0b0..Shadows are loaded at start of frame for each evaluation window for which ShdLdReq has been set.
 *  0b1..Shadows of all evaluation windows are loaded synchronous to the display stream (shadow load token received on frame input port).
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATICCONTROL_diseng_sig2_ShdLdSel_MASK)
/*! @} */

/*! @name DISENG_SIG2_ERRORTHRESHOLD - Set and reset thresholds applying to Window_Error and Cluster_Error interrupts and status bits */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThres_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThres_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThres(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThres_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThres_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThresReset_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThresReset_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThresReset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThresReset_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_ERRORTHRESHOLD_diseng_sig2_ErrThresReset_MASK)
/*! @} */

/*! @name DISENG_SIG2_MATCHTHRESHOLD - Set and reset thresholds applying to Match interrupt and status bits */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThres_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThres_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThres(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThres_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThres_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThresReset_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThresReset_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThresReset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThresReset_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MATCHTHRESHOLD_diseng_sig2_MatchThresReset_MASK)
/*! @} */

/*! @name DISENG_SIG2_PANICCOLOR - Overlay color for evaluation windows in panic mode */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicAlpha_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicBlue_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicBlue_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicBlue_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicGreen_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicGreen_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicGreen_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicRed_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicRed_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PANICCOLOR_diseng_sig2_PanicRed_MASK)
/*! @} */

/*! @name DISENG_SIG2_SHADOWLOAD - Shadow load control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_SHADOWLOAD_diseng_sig2_ShdLdReq_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_SHADOWLOAD_diseng_sig2_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_SHADOWLOAD_diseng_sig2_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_SHADOWLOAD_diseng_sig2_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_SHADOWLOAD_diseng_sig2_ShdLdReq_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTINUOUSMODE - Signature operation mode control */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTINUOUSMODE_diseng_sig2_EnCont_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTINUOUSMODE_diseng_sig2_EnCont_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTINUOUSMODE_diseng_sig2_EnCont(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTINUOUSMODE_diseng_sig2_EnCont_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTINUOUSMODE_diseng_sig2_EnCont_MASK)
/*! @} */

/*! @name DISENG_SIG2_SOFTWAREKICK - Signature measurement trigger */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_SOFTWAREKICK_diseng_sig2_Kick_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_SOFTWAREKICK_diseng_sig2_Kick_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_SOFTWAREKICK_diseng_sig2_Kick(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_SOFTWAREKICK_diseng_sig2_Kick_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_SOFTWAREKICK_diseng_sig2_Kick_MASK)
/*! @} */

/*! @name DISENG_SIG2_SKIPWINDOW - Enable skipping window feature. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_SKIPWINDOW_diseng_sig2_SkipWinEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_SKIPWINDOW_diseng_sig2_SkipWinEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_SKIPWINDOW_diseng_sig2_SkipWinEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_SKIPWINDOW_diseng_sig2_SkipWinEn_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_SKIPWINDOW_diseng_sig2_SkipWinEn_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATUS - Signature evaluation status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigState_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigState_SHIFT (0U)
/*! diseng_sig2_SigState
 *  0b0..Signature is in idle state
 *  0b1..Signature is in run state
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigState(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigState_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigState_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigValid_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigValid_SHIFT (1U)
/*! diseng_sig2_SigValid
 *  0b0..Signature results are not valid
 *  0b1..Signature results are valid
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigValid(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigValid_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_SigValid_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Window_Error_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Window_Error_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Window_Error(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Window_Error_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Window_Error_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Error_MASK (0xF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Error_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Error(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Error_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Error_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Match_MASK (0xF00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Match_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Match(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Match_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_diseng_sig2_Cluster_Match_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW0 - Window 0, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_En_Window0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_En_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_En_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_En_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_En_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_CRC_Window0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_CRC_Window0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_CRC_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_CRC_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_CRC_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaMask_Window0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaMask_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaMask_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaMask_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaMask_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaInv_Window0_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaInv_Window0_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaInv_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaInv_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaInv_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaSel_Window0_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaSel_Window0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaSel_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaSel_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_AlphaSel_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_LocalPanic_Window0_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_LocalPanic_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_LocalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_LocalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_LocalPanic_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_GlobalPanic_Window0_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_GlobalPanic_Window0_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_GlobalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_GlobalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_GlobalPanic_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_Sum_Window0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_Sum_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_Sum_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_Sum_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW0_diseng_sig2_Sum_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW0 - Window 0, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW0_diseng_sig2_UpperLeft_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW0 - Window 0, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW0_diseng_sig2_LowerRight_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW0 - Window 0, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW0_diseng_sig2_Ref_R_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW0_diseng_sig2_Ref_R_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW0_diseng_sig2_Ref_R_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW0_diseng_sig2_Ref_R_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW0_diseng_sig2_Ref_R_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW0 - Window 0, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW0_diseng_sig2_Ref_G_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW0_diseng_sig2_Ref_G_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW0_diseng_sig2_Ref_G_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW0_diseng_sig2_Ref_G_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW0_diseng_sig2_Ref_G_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW0 - Window 0, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW0_diseng_sig2_Ref_B_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW0_diseng_sig2_Ref_B_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW0_diseng_sig2_Ref_B_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW0_diseng_sig2_Ref_B_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW0_diseng_sig2_Ref_B_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS0_WINDOW0 - Controls of Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaMask_S0_Win0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaMask_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaMask_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaMask_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaMask_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaInv_S0_Win0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaInv_S0_Win0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaInv_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaInv_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaInv_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaSel_S0_Win0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaSel_S0_Win0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaSel_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaSel_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW0_diseng_sig2_AlphaSel_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS1_WINDOW0 - Controls of Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaMask_S1_Win0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaMask_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaMask_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaMask_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaMask_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaInv_S1_Win0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaInv_S1_Win0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaInv_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaInv_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaInv_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaSel_S1_Win0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaSel_S1_Win0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaSel_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaSel_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW0_diseng_sig2_AlphaSel_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_REDSUM_WINDOW0 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW0_diseng_sig2_Min_RSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW0_diseng_sig2_Min_RSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW0_diseng_sig2_Min_RSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW0_diseng_sig2_Min_RSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW0_diseng_sig2_Min_RSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_GREENSUM_WINDOW0 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW0_diseng_sig2_Min_GSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW0_diseng_sig2_Min_GSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW0_diseng_sig2_Min_GSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW0_diseng_sig2_Min_GSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW0_diseng_sig2_Min_GSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_BLUESUM_WINDOW0 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW0_diseng_sig2_Min_BSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW0_diseng_sig2_Min_BSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW0_diseng_sig2_Min_BSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW0_diseng_sig2_Min_BSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW0_diseng_sig2_Min_BSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_LUMSUM_WINDOW0 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW0_diseng_sig2_Min_LSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW0_diseng_sig2_Min_LSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW0_diseng_sig2_Min_LSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW0_diseng_sig2_Min_LSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW0_diseng_sig2_Min_LSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_REDSUM_WINDOW0 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW0_diseng_sig2_Max_RSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW0_diseng_sig2_Max_RSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW0_diseng_sig2_Max_RSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW0_diseng_sig2_Max_RSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW0_diseng_sig2_Max_RSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_GREENSUM_WINDOW0 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW0_diseng_sig2_Max_GSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW0_diseng_sig2_Max_GSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW0_diseng_sig2_Max_GSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW0_diseng_sig2_Max_GSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW0_diseng_sig2_Max_GSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_BLUESUM_WINDOW0 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW0_diseng_sig2_Max_BSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW0_diseng_sig2_Max_BSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW0_diseng_sig2_Max_BSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW0_diseng_sig2_Max_BSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW0_diseng_sig2_Max_BSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_LUMSUM_WINDOW0 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW0_diseng_sig2_Max_LSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW0_diseng_sig2_Max_LSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW0_diseng_sig2_Max_LSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW0_diseng_sig2_Max_LSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW0_diseng_sig2_Max_LSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW1 - Window 1, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_En_Window1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_En_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_En_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_En_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_En_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_CRC_Window1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_CRC_Window1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_CRC_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_CRC_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_CRC_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaMask_Window1_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaMask_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaMask_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaMask_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaMask_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaInv_Window1_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaInv_Window1_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaInv_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaInv_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaInv_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaSel_Window1_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaSel_Window1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaSel_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaSel_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_AlphaSel_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_LocalPanic_Window1_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_LocalPanic_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_LocalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_LocalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_LocalPanic_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_GlobalPanic_Window1_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_GlobalPanic_Window1_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_GlobalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_GlobalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_GlobalPanic_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_Sum_Window1_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_Sum_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_Sum_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_Sum_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW1_diseng_sig2_Sum_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW1 - Window 1, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW1_diseng_sig2_UpperLeft_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW1 - Window 1, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW1_diseng_sig2_LowerRight_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW1 - Window 1, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW1_diseng_sig2_Ref_R_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW1_diseng_sig2_Ref_R_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW1_diseng_sig2_Ref_R_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW1_diseng_sig2_Ref_R_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW1_diseng_sig2_Ref_R_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW1 - Window 1, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW1_diseng_sig2_Ref_G_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW1_diseng_sig2_Ref_G_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW1_diseng_sig2_Ref_G_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW1_diseng_sig2_Ref_G_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW1_diseng_sig2_Ref_G_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW1 - Window 1, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW1_diseng_sig2_Ref_B_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW1_diseng_sig2_Ref_B_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW1_diseng_sig2_Ref_B_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW1_diseng_sig2_Ref_B_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW1_diseng_sig2_Ref_B_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS0_WINDOW1 - Controls of Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaMask_S0_Win1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaMask_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaMask_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaMask_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaMask_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaInv_S0_Win1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaInv_S0_Win1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaInv_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaInv_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaInv_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaSel_S0_Win1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaSel_S0_Win1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaSel_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaSel_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW1_diseng_sig2_AlphaSel_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS1_WINDOW1 - Controls of Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaMask_S1_Win1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaMask_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaMask_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaMask_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaMask_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaInv_S1_Win1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaInv_S1_Win1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaInv_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaInv_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaInv_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaSel_S1_Win1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaSel_S1_Win1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaSel_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaSel_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW1_diseng_sig2_AlphaSel_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_REDSUM_WINDOW1 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW1_diseng_sig2_Min_RSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW1_diseng_sig2_Min_RSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW1_diseng_sig2_Min_RSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW1_diseng_sig2_Min_RSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW1_diseng_sig2_Min_RSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_GREENSUM_WINDOW1 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW1_diseng_sig2_Min_GSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW1_diseng_sig2_Min_GSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW1_diseng_sig2_Min_GSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW1_diseng_sig2_Min_GSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW1_diseng_sig2_Min_GSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_BLUESUM_WINDOW1 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW1_diseng_sig2_Min_BSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW1_diseng_sig2_Min_BSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW1_diseng_sig2_Min_BSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW1_diseng_sig2_Min_BSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW1_diseng_sig2_Min_BSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_LUMSUM_WINDOW1 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW1_diseng_sig2_Min_LSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW1_diseng_sig2_Min_LSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW1_diseng_sig2_Min_LSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW1_diseng_sig2_Min_LSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW1_diseng_sig2_Min_LSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_REDSUM_WINDOW1 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW1_diseng_sig2_Max_RSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW1_diseng_sig2_Max_RSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW1_diseng_sig2_Max_RSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW1_diseng_sig2_Max_RSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW1_diseng_sig2_Max_RSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_GREENSUM_WINDOW1 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW1_diseng_sig2_Max_GSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW1_diseng_sig2_Max_GSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW1_diseng_sig2_Max_GSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW1_diseng_sig2_Max_GSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW1_diseng_sig2_Max_GSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_BLUESUM_WINDOW1 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW1_diseng_sig2_Max_BSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW1_diseng_sig2_Max_BSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW1_diseng_sig2_Max_BSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW1_diseng_sig2_Max_BSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW1_diseng_sig2_Max_BSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_LUMSUM_WINDOW1 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW1_diseng_sig2_Max_LSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW1_diseng_sig2_Max_LSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW1_diseng_sig2_Max_LSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW1_diseng_sig2_Max_LSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW1_diseng_sig2_Max_LSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW2 - Window 2, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_En_Window2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_En_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_En_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_En_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_En_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_CRC_Window2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_CRC_Window2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_CRC_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_CRC_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_CRC_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaMask_Window2_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaMask_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaMask_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaMask_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaMask_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaInv_Window2_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaInv_Window2_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaInv_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaInv_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaInv_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaSel_Window2_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaSel_Window2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaSel_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaSel_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_AlphaSel_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_LocalPanic_Window2_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_LocalPanic_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_LocalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_LocalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_LocalPanic_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_GlobalPanic_Window2_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_GlobalPanic_Window2_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_GlobalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_GlobalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_GlobalPanic_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_Sum_Window2_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_Sum_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_Sum_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_Sum_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW2_diseng_sig2_Sum_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW2 - Window 2, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW2_diseng_sig2_UpperLeft_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW2 - Window 2, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW2_diseng_sig2_LowerRight_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW2 - Window 2, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW2_diseng_sig2_Ref_R_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW2_diseng_sig2_Ref_R_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW2_diseng_sig2_Ref_R_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW2_diseng_sig2_Ref_R_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW2_diseng_sig2_Ref_R_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW2 - Window 2, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW2_diseng_sig2_Ref_G_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW2_diseng_sig2_Ref_G_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW2_diseng_sig2_Ref_G_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW2_diseng_sig2_Ref_G_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW2_diseng_sig2_Ref_G_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW2 - Window 2, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW2_diseng_sig2_Ref_B_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW2_diseng_sig2_Ref_B_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW2_diseng_sig2_Ref_B_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW2_diseng_sig2_Ref_B_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW2_diseng_sig2_Ref_B_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS0_WINDOW2 - Controls of Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaMask_S0_Win2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaMask_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaMask_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaMask_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaMask_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaInv_S0_Win2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaInv_S0_Win2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaInv_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaInv_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaInv_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaSel_S0_Win2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaSel_S0_Win2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaSel_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaSel_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW2_diseng_sig2_AlphaSel_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS1_WINDOW2 - Controls of Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaMask_S1_Win2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaMask_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaMask_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaMask_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaMask_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaInv_S1_Win2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaInv_S1_Win2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaInv_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaInv_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaInv_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaSel_S1_Win2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaSel_S1_Win2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaSel_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaSel_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW2_diseng_sig2_AlphaSel_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_REDSUM_WINDOW2 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW2_diseng_sig2_Min_RSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW2_diseng_sig2_Min_RSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW2_diseng_sig2_Min_RSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW2_diseng_sig2_Min_RSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW2_diseng_sig2_Min_RSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_GREENSUM_WINDOW2 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW2_diseng_sig2_Min_GSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW2_diseng_sig2_Min_GSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW2_diseng_sig2_Min_GSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW2_diseng_sig2_Min_GSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW2_diseng_sig2_Min_GSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_BLUESUM_WINDOW2 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW2_diseng_sig2_Min_BSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW2_diseng_sig2_Min_BSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW2_diseng_sig2_Min_BSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW2_diseng_sig2_Min_BSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW2_diseng_sig2_Min_BSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_LUMSUM_WINDOW2 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW2_diseng_sig2_Min_LSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW2_diseng_sig2_Min_LSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW2_diseng_sig2_Min_LSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW2_diseng_sig2_Min_LSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW2_diseng_sig2_Min_LSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_REDSUM_WINDOW2 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW2_diseng_sig2_Max_RSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW2_diseng_sig2_Max_RSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW2_diseng_sig2_Max_RSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW2_diseng_sig2_Max_RSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW2_diseng_sig2_Max_RSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_GREENSUM_WINDOW2 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW2_diseng_sig2_Max_GSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW2_diseng_sig2_Max_GSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW2_diseng_sig2_Max_GSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW2_diseng_sig2_Max_GSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW2_diseng_sig2_Max_GSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_BLUESUM_WINDOW2 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW2_diseng_sig2_Max_BSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW2_diseng_sig2_Max_BSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW2_diseng_sig2_Max_BSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW2_diseng_sig2_Max_BSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW2_diseng_sig2_Max_BSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_LUMSUM_WINDOW2 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW2_diseng_sig2_Max_LSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW2_diseng_sig2_Max_LSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW2_diseng_sig2_Max_LSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW2_diseng_sig2_Max_LSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW2_diseng_sig2_Max_LSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW3 - Window 3, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_En_Window3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_En_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_En_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_En_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_En_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_CRC_Window3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_CRC_Window3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_CRC_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_CRC_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_CRC_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaMask_Window3_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaMask_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaMask_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaMask_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaMask_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaInv_Window3_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaInv_Window3_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaInv_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaInv_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaInv_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaSel_Window3_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaSel_Window3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaSel_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaSel_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_AlphaSel_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_LocalPanic_Window3_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_LocalPanic_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_LocalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_LocalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_LocalPanic_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_GlobalPanic_Window3_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_GlobalPanic_Window3_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_GlobalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_GlobalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_GlobalPanic_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_Sum_Window3_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_Sum_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_Sum_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_Sum_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW3_diseng_sig2_Sum_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW3 - Window 3, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW3_diseng_sig2_UpperLeft_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW3 - Window 3, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW3_diseng_sig2_LowerRight_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW3 - Window 3, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW3_diseng_sig2_Ref_R_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW3_diseng_sig2_Ref_R_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW3_diseng_sig2_Ref_R_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW3_diseng_sig2_Ref_R_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW3_diseng_sig2_Ref_R_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW3 - Window 3, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW3_diseng_sig2_Ref_G_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW3_diseng_sig2_Ref_G_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW3_diseng_sig2_Ref_G_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW3_diseng_sig2_Ref_G_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW3_diseng_sig2_Ref_G_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW3 - Window 3, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW3_diseng_sig2_Ref_B_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW3_diseng_sig2_Ref_B_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW3_diseng_sig2_Ref_B_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW3_diseng_sig2_Ref_B_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW3_diseng_sig2_Ref_B_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS0_WINDOW3 - Controls of Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaMask_S0_Win3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaMask_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaMask_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaMask_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaMask_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaInv_S0_Win3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaInv_S0_Win3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaInv_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaInv_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaInv_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaSel_S0_Win3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaSel_S0_Win3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaSel_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaSel_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS0_WINDOW3_diseng_sig2_AlphaSel_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATS1_WINDOW3 - Controls of Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaMask_S1_Win3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaMask_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaMask_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaMask_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaMask_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaInv_S1_Win3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaInv_S1_Win3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaInv_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaInv_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaInv_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaSel_S1_Win3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaSel_S1_Win3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaSel_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaSel_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATS1_WINDOW3_diseng_sig2_AlphaSel_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_REDSUM_WINDOW3 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW3_diseng_sig2_Min_RSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW3_diseng_sig2_Min_RSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW3_diseng_sig2_Min_RSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW3_diseng_sig2_Min_RSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_REDSUM_WINDOW3_diseng_sig2_Min_RSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_GREENSUM_WINDOW3 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW3_diseng_sig2_Min_GSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW3_diseng_sig2_Min_GSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW3_diseng_sig2_Min_GSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW3_diseng_sig2_Min_GSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_GREENSUM_WINDOW3_diseng_sig2_Min_GSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_BLUESUM_WINDOW3 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW3_diseng_sig2_Min_BSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW3_diseng_sig2_Min_BSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW3_diseng_sig2_Min_BSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW3_diseng_sig2_Min_BSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_BLUESUM_WINDOW3_diseng_sig2_Min_BSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MIN_LUMSUM_WINDOW3 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW3_diseng_sig2_Min_LSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW3_diseng_sig2_Min_LSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW3_diseng_sig2_Min_LSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW3_diseng_sig2_Min_LSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MIN_LUMSUM_WINDOW3_diseng_sig2_Min_LSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_REDSUM_WINDOW3 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW3_diseng_sig2_Max_RSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW3_diseng_sig2_Max_RSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW3_diseng_sig2_Max_RSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW3_diseng_sig2_Max_RSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_REDSUM_WINDOW3_diseng_sig2_Max_RSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_GREENSUM_WINDOW3 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW3_diseng_sig2_Max_GSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW3_diseng_sig2_Max_GSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW3_diseng_sig2_Max_GSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW3_diseng_sig2_Max_GSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_GREENSUM_WINDOW3_diseng_sig2_Max_GSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_BLUESUM_WINDOW3 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW3_diseng_sig2_Max_BSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW3_diseng_sig2_Max_BSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW3_diseng_sig2_Max_BSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW3_diseng_sig2_Max_BSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_BLUESUM_WINDOW3_diseng_sig2_Max_BSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_MAX_LUMSUM_WINDOW3 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW3_diseng_sig2_Max_LSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW3_diseng_sig2_Max_LSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW3_diseng_sig2_Max_LSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW3_diseng_sig2_Max_LSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_MAX_LUMSUM_WINDOW3_diseng_sig2_Max_LSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW4 - Window 4, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_En_Window4_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_En_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_En_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_En_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_En_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_CRC_Window4_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_CRC_Window4_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_CRC_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_CRC_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_CRC_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaMask_Window4_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaMask_Window4_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaMask_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaMask_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaMask_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaInv_Window4_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaInv_Window4_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaInv_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaInv_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaInv_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaSel_Window4_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaSel_Window4_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaSel_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaSel_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_AlphaSel_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_LocalPanic_Window4_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_LocalPanic_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_LocalPanic_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_LocalPanic_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_LocalPanic_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_GlobalPanic_Window4_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_GlobalPanic_Window4_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_GlobalPanic_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_GlobalPanic_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW4_diseng_sig2_GlobalPanic_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW4 - Window 4, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_X_Window4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_X_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_X_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_X_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_X_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_Y_Window4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_Y_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_Y_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_Y_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW4_diseng_sig2_UpperLeft_Y_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW4 - Window 4, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_X_Window4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_X_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_X_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_X_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_X_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_Y_Window4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_Y_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_Y_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_Y_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW4_diseng_sig2_LowerRight_Y_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW4 - Window 4, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW4_diseng_sig2_Ref_R_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW4_diseng_sig2_Ref_R_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW4_diseng_sig2_Ref_R_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW4_diseng_sig2_Ref_R_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW4_diseng_sig2_Ref_R_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW4 - Window 4, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW4_diseng_sig2_Ref_G_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW4_diseng_sig2_Ref_G_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW4_diseng_sig2_Ref_G_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW4_diseng_sig2_Ref_G_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW4_diseng_sig2_Ref_G_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW4 - Window 4, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW4_diseng_sig2_Ref_B_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW4_diseng_sig2_Ref_B_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW4_diseng_sig2_Ref_B_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW4_diseng_sig2_Ref_B_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW4_diseng_sig2_Ref_B_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW5 - Window 5, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_En_Window5_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_En_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_En_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_En_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_En_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_CRC_Window5_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_CRC_Window5_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_CRC_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_CRC_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_CRC_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaMask_Window5_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaMask_Window5_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaMask_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaMask_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaMask_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaInv_Window5_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaInv_Window5_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaInv_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaInv_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaInv_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaSel_Window5_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaSel_Window5_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaSel_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaSel_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_AlphaSel_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_LocalPanic_Window5_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_LocalPanic_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_LocalPanic_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_LocalPanic_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_LocalPanic_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_GlobalPanic_Window5_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_GlobalPanic_Window5_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_GlobalPanic_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_GlobalPanic_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW5_diseng_sig2_GlobalPanic_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW5 - Window 5, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_X_Window5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_X_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_X_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_X_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_X_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_Y_Window5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_Y_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_Y_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_Y_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW5_diseng_sig2_UpperLeft_Y_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW5 - Window 5, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_X_Window5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_X_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_X_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_X_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_X_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_Y_Window5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_Y_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_Y_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_Y_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW5_diseng_sig2_LowerRight_Y_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW5 - Window 5, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW5_diseng_sig2_Ref_R_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW5_diseng_sig2_Ref_R_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW5_diseng_sig2_Ref_R_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW5_diseng_sig2_Ref_R_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW5_diseng_sig2_Ref_R_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW5 - Window 5, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW5_diseng_sig2_Ref_G_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW5_diseng_sig2_Ref_G_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW5_diseng_sig2_Ref_G_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW5_diseng_sig2_Ref_G_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW5_diseng_sig2_Ref_G_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW5 - Window 5, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW5_diseng_sig2_Ref_B_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW5_diseng_sig2_Ref_B_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW5_diseng_sig2_Ref_B_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW5_diseng_sig2_Ref_B_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW5_diseng_sig2_Ref_B_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW6 - Window 6, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_En_Window6_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_En_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_En_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_En_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_En_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_CRC_Window6_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_CRC_Window6_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_CRC_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_CRC_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_CRC_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaMask_Window6_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaMask_Window6_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaMask_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaMask_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaMask_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaInv_Window6_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaInv_Window6_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaInv_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaInv_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaInv_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaSel_Window6_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaSel_Window6_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaSel_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaSel_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_AlphaSel_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_LocalPanic_Window6_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_LocalPanic_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_LocalPanic_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_LocalPanic_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_LocalPanic_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_GlobalPanic_Window6_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_GlobalPanic_Window6_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_GlobalPanic_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_GlobalPanic_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW6_diseng_sig2_GlobalPanic_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW6 - Window 6, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_X_Window6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_X_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_X_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_X_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_X_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_Y_Window6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_Y_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_Y_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_Y_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW6_diseng_sig2_UpperLeft_Y_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW6 - Window 6, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_X_Window6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_X_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_X_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_X_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_X_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_Y_Window6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_Y_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_Y_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_Y_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW6_diseng_sig2_LowerRight_Y_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW6 - Window 6, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW6_diseng_sig2_Ref_R_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW6_diseng_sig2_Ref_R_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW6_diseng_sig2_Ref_R_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW6_diseng_sig2_Ref_R_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW6_diseng_sig2_Ref_R_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW6 - Window 6, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW6_diseng_sig2_Ref_G_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW6_diseng_sig2_Ref_G_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW6_diseng_sig2_Ref_G_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW6_diseng_sig2_Ref_G_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW6_diseng_sig2_Ref_G_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW6 - Window 6, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW6_diseng_sig2_Ref_B_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW6_diseng_sig2_Ref_B_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW6_diseng_sig2_Ref_B_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW6_diseng_sig2_Ref_B_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW6_diseng_sig2_Ref_B_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_WINDOW7 - Window 7, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_En_Window7_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_En_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_En_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_En_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_En_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_CRC_Window7_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_CRC_Window7_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_CRC_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_CRC_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_CRC_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaMask_Window7_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaMask_Window7_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaMask_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaMask_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaMask_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaInv_Window7_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaInv_Window7_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaInv_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaInv_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaInv_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaSel_Window7_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaSel_Window7_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaSel_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaSel_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_AlphaSel_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_LocalPanic_Window7_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_LocalPanic_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_LocalPanic_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_LocalPanic_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_LocalPanic_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_GlobalPanic_Window7_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_GlobalPanic_Window7_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_GlobalPanic_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_GlobalPanic_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_WINDOW7_diseng_sig2_GlobalPanic_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_UPPERLEFT_WINDOW7 - Window 7, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_X_Window7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_X_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_X_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_X_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_X_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_Y_Window7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_Y_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_Y_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_Y_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_UPPERLEFT_WINDOW7_diseng_sig2_UpperLeft_Y_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_LOWERRIGHT_WINDOW7 - Window 7, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_X_Window7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_X_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_X_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_X_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_X_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_Y_Window7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_Y_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_Y_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_Y_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LOWERRIGHT_WINDOW7_diseng_sig2_LowerRight_Y_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_R_WINDOW7 - Window 7, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW7_diseng_sig2_Ref_R_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW7_diseng_sig2_Ref_R_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW7_diseng_sig2_Ref_R_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW7_diseng_sig2_Ref_R_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_R_WINDOW7_diseng_sig2_Ref_R_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_G_WINDOW7 - Window 7, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW7_diseng_sig2_Ref_G_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW7_diseng_sig2_Ref_G_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW7_diseng_sig2_Ref_G_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW7_diseng_sig2_Ref_G_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_G_WINDOW7_diseng_sig2_Ref_G_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF_B_WINDOW7 - Window 7, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW7_diseng_sig2_Ref_B_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW7_diseng_sig2_Ref_B_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW7_diseng_sig2_Ref_B_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW7_diseng_sig2_Ref_B_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF_B_WINDOW7_diseng_sig2_Ref_B_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_CLUSTER0 - Cluster 0, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_En_Cluster0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_En_Cluster0_SHIFT (0U)
/*! diseng_sig2_En_Cluster0
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix0_En_Cluster0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix0_En_Cluster0_SHIFT (4U)
/*! diseng_sig2_Pix0_En_Cluster0
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix0_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix0_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix0_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix1_En_Cluster0_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix1_En_Cluster0_SHIFT (5U)
/*! diseng_sig2_Pix1_En_Cluster0
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix1_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix1_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix1_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix2_En_Cluster0_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix2_En_Cluster0_SHIFT (6U)
/*! diseng_sig2_Pix2_En_Cluster0
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix2_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix2_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix2_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix3_En_Cluster0_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix3_En_Cluster0_SHIFT (7U)
/*! diseng_sig2_Pix3_En_Cluster0
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix3_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix3_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_Pix3_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskBlue_Cluster0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskBlue_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskBlue_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskBlue_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskBlue_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskGreen_Cluster0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskGreen_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskGreen_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskGreen_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskGreen_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskRed_Cluster0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskRed_Cluster0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskRed_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskRed_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER0_diseng_sig2_MaskRed_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX0_CLUSTER0 - Cluster 0, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_X0_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_X0_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_X0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_X0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_X0_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_Y0_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_Y0_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_Y0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_Y0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER0_diseng_sig2_Y0_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX1_CLUSTER0 - Cluster 0, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_X1_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_X1_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_X1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_X1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_X1_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_Y1_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_Y1_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_Y1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_Y1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER0_diseng_sig2_Y1_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX2_CLUSTER0 - Cluster 0, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_X2_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_X2_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_X2_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_X2_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_X2_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_Y2_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_Y2_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_Y2_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_Y2_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER0_diseng_sig2_Y2_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX3_CLUSTER0 - Cluster 0, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_X3_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_X3_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_X3_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_X3_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_X3_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_Y3_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_Y3_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_Y3_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_Y3_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER0_diseng_sig2_Y3_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF0_CLUSTER0 - Cluster 0, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER0_diseng_sig2_Ref0_Cluster0_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER0_diseng_sig2_Ref0_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER0_diseng_sig2_Ref0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER0_diseng_sig2_Ref0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER0_diseng_sig2_Ref0_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF1_CLUSTER0 - Cluster 0, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER0_diseng_sig2_Ref1_Cluster0_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER0_diseng_sig2_Ref1_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER0_diseng_sig2_Ref1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER0_diseng_sig2_Ref1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER0_diseng_sig2_Ref1_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_CLUSTER1 - Cluster 1, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_En_Cluster1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_En_Cluster1_SHIFT (0U)
/*! diseng_sig2_En_Cluster1
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix0_En_Cluster1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix0_En_Cluster1_SHIFT (4U)
/*! diseng_sig2_Pix0_En_Cluster1
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix0_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix0_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix0_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix1_En_Cluster1_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix1_En_Cluster1_SHIFT (5U)
/*! diseng_sig2_Pix1_En_Cluster1
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix1_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix1_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix1_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix2_En_Cluster1_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix2_En_Cluster1_SHIFT (6U)
/*! diseng_sig2_Pix2_En_Cluster1
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix2_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix2_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix2_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix3_En_Cluster1_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix3_En_Cluster1_SHIFT (7U)
/*! diseng_sig2_Pix3_En_Cluster1
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix3_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix3_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_Pix3_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskBlue_Cluster1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskBlue_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskBlue_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskBlue_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskBlue_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskGreen_Cluster1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskGreen_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskGreen_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskGreen_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskGreen_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskRed_Cluster1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskRed_Cluster1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskRed_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskRed_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER1_diseng_sig2_MaskRed_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX0_CLUSTER1 - Cluster 1, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_X0_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_X0_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_X0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_X0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_X0_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_Y0_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_Y0_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_Y0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_Y0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER1_diseng_sig2_Y0_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX1_CLUSTER1 - Cluster 1, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_X1_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_X1_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_X1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_X1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_X1_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_Y1_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_Y1_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_Y1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_Y1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER1_diseng_sig2_Y1_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX2_CLUSTER1 - Cluster 1, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_X2_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_X2_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_X2_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_X2_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_X2_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_Y2_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_Y2_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_Y2_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_Y2_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER1_diseng_sig2_Y2_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX3_CLUSTER1 - Cluster 1, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_X3_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_X3_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_X3_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_X3_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_X3_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_Y3_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_Y3_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_Y3_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_Y3_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER1_diseng_sig2_Y3_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF0_CLUSTER1 - Cluster 1, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER1_diseng_sig2_Ref0_Cluster1_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER1_diseng_sig2_Ref0_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER1_diseng_sig2_Ref0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER1_diseng_sig2_Ref0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER1_diseng_sig2_Ref0_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF1_CLUSTER1 - Cluster 1, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER1_diseng_sig2_Ref1_Cluster1_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER1_diseng_sig2_Ref1_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER1_diseng_sig2_Ref1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER1_diseng_sig2_Ref1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER1_diseng_sig2_Ref1_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_CLUSTER2 - Cluster 2, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_En_Cluster2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_En_Cluster2_SHIFT (0U)
/*! diseng_sig2_En_Cluster2
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix0_En_Cluster2_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix0_En_Cluster2_SHIFT (4U)
/*! diseng_sig2_Pix0_En_Cluster2
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix0_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix0_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix0_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix1_En_Cluster2_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix1_En_Cluster2_SHIFT (5U)
/*! diseng_sig2_Pix1_En_Cluster2
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix1_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix1_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix1_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix2_En_Cluster2_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix2_En_Cluster2_SHIFT (6U)
/*! diseng_sig2_Pix2_En_Cluster2
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix2_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix2_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix2_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix3_En_Cluster2_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix3_En_Cluster2_SHIFT (7U)
/*! diseng_sig2_Pix3_En_Cluster2
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix3_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix3_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_Pix3_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskBlue_Cluster2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskBlue_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskBlue_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskBlue_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskBlue_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskGreen_Cluster2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskGreen_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskGreen_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskGreen_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskGreen_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskRed_Cluster2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskRed_Cluster2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskRed_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskRed_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER2_diseng_sig2_MaskRed_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX0_CLUSTER2 - Cluster 2, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_X0_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_X0_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_X0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_X0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_X0_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_Y0_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_Y0_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_Y0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_Y0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER2_diseng_sig2_Y0_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX1_CLUSTER2 - Cluster 2, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_X1_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_X1_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_X1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_X1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_X1_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_Y1_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_Y1_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_Y1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_Y1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER2_diseng_sig2_Y1_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX2_CLUSTER2 - Cluster 2, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_X2_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_X2_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_X2_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_X2_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_X2_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_Y2_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_Y2_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_Y2_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_Y2_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER2_diseng_sig2_Y2_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX3_CLUSTER2 - Cluster 2, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_X3_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_X3_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_X3_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_X3_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_X3_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_Y3_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_Y3_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_Y3_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_Y3_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER2_diseng_sig2_Y3_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF0_CLUSTER2 - Cluster 2, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER2_diseng_sig2_Ref0_Cluster2_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER2_diseng_sig2_Ref0_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER2_diseng_sig2_Ref0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER2_diseng_sig2_Ref0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER2_diseng_sig2_Ref0_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF1_CLUSTER2 - Cluster 2, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER2_diseng_sig2_Ref1_Cluster2_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER2_diseng_sig2_Ref1_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER2_diseng_sig2_Ref1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER2_diseng_sig2_Ref1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER2_diseng_sig2_Ref1_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_CONTROL_CLUSTER3 - Cluster 3, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_En_Cluster3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_En_Cluster3_SHIFT (0U)
/*! diseng_sig2_En_Cluster3
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix0_En_Cluster3_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix0_En_Cluster3_SHIFT (4U)
/*! diseng_sig2_Pix0_En_Cluster3
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix0_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix0_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix0_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix1_En_Cluster3_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix1_En_Cluster3_SHIFT (5U)
/*! diseng_sig2_Pix1_En_Cluster3
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix1_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix1_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix1_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix2_En_Cluster3_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix2_En_Cluster3_SHIFT (6U)
/*! diseng_sig2_Pix2_En_Cluster3
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix2_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix2_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix2_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix3_En_Cluster3_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix3_En_Cluster3_SHIFT (7U)
/*! diseng_sig2_Pix3_En_Cluster3
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix3_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix3_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_Pix3_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskBlue_Cluster3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskBlue_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskBlue_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskBlue_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskBlue_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskGreen_Cluster3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskGreen_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskGreen_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskGreen_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskGreen_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskRed_Cluster3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskRed_Cluster3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskRed_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskRed_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CONTROL_CLUSTER3_diseng_sig2_MaskRed_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX0_CLUSTER3 - Cluster 3, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_X0_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_X0_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_X0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_X0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_X0_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_Y0_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_Y0_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_Y0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_Y0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX0_CLUSTER3_diseng_sig2_Y0_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX1_CLUSTER3 - Cluster 3, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_X1_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_X1_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_X1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_X1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_X1_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_Y1_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_Y1_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_Y1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_Y1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX1_CLUSTER3_diseng_sig2_Y1_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX2_CLUSTER3 - Cluster 3, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_X2_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_X2_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_X2_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_X2_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_X2_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_Y2_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_Y2_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_Y2_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_Y2_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX2_CLUSTER3_diseng_sig2_Y2_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIX3_CLUSTER3 - Cluster 3, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_X3_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_X3_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_X3_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_X3_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_X3_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_Y3_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_Y3_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_Y3_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_Y3_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIX3_CLUSTER3_diseng_sig2_Y3_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF0_CLUSTER3 - Cluster 3, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER3_diseng_sig2_Ref0_Cluster3_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER3_diseng_sig2_Ref0_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER3_diseng_sig2_Ref0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER3_diseng_sig2_Ref0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF0_CLUSTER3_diseng_sig2_Ref0_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_REF1_CLUSTER3 - Cluster 3, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER3_diseng_sig2_Ref1_Cluster3_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER3_diseng_sig2_Ref1_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER3_diseng_sig2_Ref1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER3_diseng_sig2_Ref1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REF1_CLUSTER3_diseng_sig2_Ref1_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW0 - Window 0, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW0_diseng_sig2_CRC_R_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW0_diseng_sig2_CRC_R_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW0_diseng_sig2_CRC_R_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW0_diseng_sig2_CRC_R_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW0_diseng_sig2_CRC_R_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW0 - Window 0, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW0_diseng_sig2_CRC_G_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW0_diseng_sig2_CRC_G_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW0_diseng_sig2_CRC_G_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW0_diseng_sig2_CRC_G_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW0_diseng_sig2_CRC_G_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW0 - Window 0, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW0_diseng_sig2_CRC_B_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW0_diseng_sig2_CRC_B_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW0_diseng_sig2_CRC_B_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW0_diseng_sig2_CRC_B_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW0_diseng_sig2_CRC_B_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW1 - Window 1, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW1_diseng_sig2_CRC_R_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW1_diseng_sig2_CRC_R_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW1_diseng_sig2_CRC_R_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW1_diseng_sig2_CRC_R_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW1_diseng_sig2_CRC_R_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW1 - Window 1, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW1_diseng_sig2_CRC_G_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW1_diseng_sig2_CRC_G_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW1_diseng_sig2_CRC_G_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW1_diseng_sig2_CRC_G_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW1_diseng_sig2_CRC_G_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW1 - Window 1, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW1_diseng_sig2_CRC_B_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW1_diseng_sig2_CRC_B_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW1_diseng_sig2_CRC_B_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW1_diseng_sig2_CRC_B_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW1_diseng_sig2_CRC_B_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW2 - Window 2, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW2_diseng_sig2_CRC_R_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW2_diseng_sig2_CRC_R_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW2_diseng_sig2_CRC_R_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW2_diseng_sig2_CRC_R_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW2_diseng_sig2_CRC_R_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW2 - Window 2, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW2_diseng_sig2_CRC_G_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW2_diseng_sig2_CRC_G_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW2_diseng_sig2_CRC_G_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW2_diseng_sig2_CRC_G_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW2_diseng_sig2_CRC_G_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW2 - Window 2, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW2_diseng_sig2_CRC_B_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW2_diseng_sig2_CRC_B_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW2_diseng_sig2_CRC_B_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW2_diseng_sig2_CRC_B_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW2_diseng_sig2_CRC_B_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW3 - Window 3, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW3_diseng_sig2_CRC_R_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW3_diseng_sig2_CRC_R_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW3_diseng_sig2_CRC_R_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW3_diseng_sig2_CRC_R_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW3_diseng_sig2_CRC_R_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW3 - Window 3, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW3_diseng_sig2_CRC_G_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW3_diseng_sig2_CRC_G_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW3_diseng_sig2_CRC_G_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW3_diseng_sig2_CRC_G_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW3_diseng_sig2_CRC_G_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW3 - Window 3, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW3_diseng_sig2_CRC_B_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW3_diseng_sig2_CRC_B_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW3_diseng_sig2_CRC_B_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW3_diseng_sig2_CRC_B_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW3_diseng_sig2_CRC_B_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW4 - Window 4, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW4_diseng_sig2_CRC_R_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW4_diseng_sig2_CRC_R_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW4_diseng_sig2_CRC_R_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW4_diseng_sig2_CRC_R_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW4_diseng_sig2_CRC_R_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW4 - Window 4, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW4_diseng_sig2_CRC_G_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW4_diseng_sig2_CRC_G_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW4_diseng_sig2_CRC_G_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW4_diseng_sig2_CRC_G_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW4_diseng_sig2_CRC_G_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW4 - Window 4, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW4_diseng_sig2_CRC_B_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW4_diseng_sig2_CRC_B_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW4_diseng_sig2_CRC_B_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW4_diseng_sig2_CRC_B_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW4_diseng_sig2_CRC_B_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW5 - Window 5, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW5_diseng_sig2_CRC_R_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW5_diseng_sig2_CRC_R_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW5_diseng_sig2_CRC_R_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW5_diseng_sig2_CRC_R_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW5_diseng_sig2_CRC_R_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW5 - Window 5, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW5_diseng_sig2_CRC_G_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW5_diseng_sig2_CRC_G_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW5_diseng_sig2_CRC_G_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW5_diseng_sig2_CRC_G_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW5_diseng_sig2_CRC_G_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW5 - Window 5, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW5_diseng_sig2_CRC_B_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW5_diseng_sig2_CRC_B_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW5_diseng_sig2_CRC_B_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW5_diseng_sig2_CRC_B_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW5_diseng_sig2_CRC_B_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW6 - Window 6, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW6_diseng_sig2_CRC_R_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW6_diseng_sig2_CRC_R_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW6_diseng_sig2_CRC_R_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW6_diseng_sig2_CRC_R_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW6_diseng_sig2_CRC_R_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW6 - Window 6, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW6_diseng_sig2_CRC_G_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW6_diseng_sig2_CRC_G_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW6_diseng_sig2_CRC_G_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW6_diseng_sig2_CRC_G_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW6_diseng_sig2_CRC_G_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW6 - Window 6, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW6_diseng_sig2_CRC_B_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW6_diseng_sig2_CRC_B_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW6_diseng_sig2_CRC_B_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW6_diseng_sig2_CRC_B_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW6_diseng_sig2_CRC_B_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_R_WINDOW7 - Window 7, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW7_diseng_sig2_CRC_R_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW7_diseng_sig2_CRC_R_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW7_diseng_sig2_CRC_R_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW7_diseng_sig2_CRC_R_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_R_WINDOW7_diseng_sig2_CRC_R_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_G_WINDOW7 - Window 7, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW7_diseng_sig2_CRC_G_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW7_diseng_sig2_CRC_G_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW7_diseng_sig2_CRC_G_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW7_diseng_sig2_CRC_G_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_G_WINDOW7_diseng_sig2_CRC_G_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_CRC_B_WINDOW7 - Window 7, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW7_diseng_sig2_CRC_B_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW7_diseng_sig2_CRC_B_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW7_diseng_sig2_CRC_B_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW7_diseng_sig2_CRC_B_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_CRC_B_WINDOW7_diseng_sig2_CRC_B_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATUS_CLUSTER0 - Cluster 0, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts00_Cluster0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts00_Cluster0_SHIFT (0U)
/*! diseng_sig2_Sts00_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts00_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts00_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts00_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts01_Cluster0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts01_Cluster0_SHIFT (1U)
/*! diseng_sig2_Sts01_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts01_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts01_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts01_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts10_Cluster0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts10_Cluster0_SHIFT (2U)
/*! diseng_sig2_Sts10_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts11_Cluster0_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts11_Cluster0_SHIFT (3U)
/*! diseng_sig2_Sts11_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts11_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts11_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts11_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts20_Cluster0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts20_Cluster0_SHIFT (4U)
/*! diseng_sig2_Sts20_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts20_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts20_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts20_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts21_Cluster0_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts21_Cluster0_SHIFT (5U)
/*! diseng_sig2_Sts21_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts21_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts21_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts21_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts30_Cluster0_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts30_Cluster0_SHIFT (6U)
/*! diseng_sig2_Sts30_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts30_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts30_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts30_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts31_Cluster0_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts31_Cluster0_SHIFT (7U)
/*! diseng_sig2_Sts31_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts31_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts31_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER0_diseng_sig2_Sts31_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_COUNTER_CLUSTER0 - Cluster 0, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_MatchCount_Cluster0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_MatchCount_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_MatchCount_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_MatchCount_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_MatchCount_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_ErrorCount_Cluster0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_ErrorCount_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_ErrorCount_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_ErrorCount_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER0_diseng_sig2_ErrorCount_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR0_CLUSTER0 - Cluster 0, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_B10_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_B10_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_G10_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_G10_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_R10_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_R10_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix0_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_B10_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_B10_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_G10_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_G10_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_R10_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_R10_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix1_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_B10_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_B10_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_G10_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_G10_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_R10_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_R10_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix2_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_B10_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_B10_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_G10_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_G10_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_R10_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_R10_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER0_diseng_sig2_Pix3_R10_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR1_CLUSTER0 - Cluster 0, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_B32_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_B32_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_G32_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_G32_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_R32_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_R32_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix0_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_B32_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_B32_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_G32_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_G32_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_R32_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_R32_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix1_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_B32_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_B32_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_G32_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_G32_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_R32_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_R32_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix2_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_B32_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_B32_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_G32_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_G32_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_R32_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_R32_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER0_diseng_sig2_Pix3_R32_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR2_CLUSTER0 - Cluster 0, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_B54_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_B54_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_G54_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_G54_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_R54_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_R54_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix0_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_B54_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_B54_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_G54_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_G54_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_R54_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_R54_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix1_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_B54_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_B54_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_G54_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_G54_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_R54_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_R54_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix2_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_B54_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_B54_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_G54_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_G54_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_R54_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_R54_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER0_diseng_sig2_Pix3_R54_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR3_CLUSTER0 - Cluster 0, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_B76_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_B76_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_G76_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_G76_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_R76_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_R76_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix0_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_B76_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_B76_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_G76_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_G76_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_R76_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_R76_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix1_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_B76_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_B76_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_G76_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_G76_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_R76_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_R76_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix2_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_B76_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_B76_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_G76_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_G76_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_R76_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_R76_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER0_diseng_sig2_Pix3_R76_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATUS_CLUSTER1 - Cluster 1, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts00_Cluster1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts00_Cluster1_SHIFT (0U)
/*! diseng_sig2_Sts00_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts00_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts00_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts00_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts01_Cluster1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts01_Cluster1_SHIFT (1U)
/*! diseng_sig2_Sts01_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts01_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts01_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts01_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts10_Cluster1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts10_Cluster1_SHIFT (2U)
/*! diseng_sig2_Sts10_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts11_Cluster1_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts11_Cluster1_SHIFT (3U)
/*! diseng_sig2_Sts11_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts11_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts11_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts11_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts20_Cluster1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts20_Cluster1_SHIFT (4U)
/*! diseng_sig2_Sts20_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts20_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts20_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts20_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts21_Cluster1_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts21_Cluster1_SHIFT (5U)
/*! diseng_sig2_Sts21_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts21_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts21_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts21_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts30_Cluster1_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts30_Cluster1_SHIFT (6U)
/*! diseng_sig2_Sts30_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts30_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts30_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts30_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts31_Cluster1_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts31_Cluster1_SHIFT (7U)
/*! diseng_sig2_Sts31_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts31_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts31_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER1_diseng_sig2_Sts31_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_COUNTER_CLUSTER1 - Cluster 1, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_MatchCount_Cluster1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_MatchCount_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_MatchCount_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_MatchCount_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_MatchCount_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_ErrorCount_Cluster1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_ErrorCount_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_ErrorCount_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_ErrorCount_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER1_diseng_sig2_ErrorCount_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR0_CLUSTER1 - Cluster 1, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_B10_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_B10_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_G10_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_G10_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_R10_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_R10_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix0_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_B10_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_B10_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_G10_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_G10_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_R10_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_R10_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix1_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_B10_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_B10_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_G10_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_G10_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_R10_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_R10_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix2_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_B10_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_B10_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_G10_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_G10_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_R10_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_R10_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER1_diseng_sig2_Pix3_R10_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR1_CLUSTER1 - Cluster 1, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_B32_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_B32_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_G32_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_G32_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_R32_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_R32_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix0_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_B32_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_B32_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_G32_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_G32_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_R32_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_R32_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix1_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_B32_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_B32_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_G32_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_G32_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_R32_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_R32_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix2_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_B32_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_B32_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_G32_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_G32_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_R32_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_R32_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER1_diseng_sig2_Pix3_R32_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR2_CLUSTER1 - Cluster 1, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_B54_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_B54_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_G54_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_G54_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_R54_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_R54_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix0_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_B54_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_B54_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_G54_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_G54_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_R54_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_R54_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix1_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_B54_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_B54_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_G54_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_G54_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_R54_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_R54_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix2_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_B54_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_B54_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_G54_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_G54_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_R54_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_R54_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER1_diseng_sig2_Pix3_R54_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR3_CLUSTER1 - Cluster 1, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_B76_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_B76_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_G76_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_G76_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_R76_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_R76_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix0_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_B76_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_B76_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_G76_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_G76_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_R76_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_R76_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix1_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_B76_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_B76_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_G76_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_G76_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_R76_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_R76_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix2_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_B76_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_B76_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_G76_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_G76_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_R76_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_R76_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER1_diseng_sig2_Pix3_R76_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATUS_CLUSTER2 - Cluster 2, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts00_Cluster2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts00_Cluster2_SHIFT (0U)
/*! diseng_sig2_Sts00_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts00_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts00_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts00_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts01_Cluster2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts01_Cluster2_SHIFT (1U)
/*! diseng_sig2_Sts01_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts01_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts01_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts01_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts10_Cluster2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts10_Cluster2_SHIFT (2U)
/*! diseng_sig2_Sts10_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts11_Cluster2_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts11_Cluster2_SHIFT (3U)
/*! diseng_sig2_Sts11_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts11_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts11_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts11_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts20_Cluster2_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts20_Cluster2_SHIFT (4U)
/*! diseng_sig2_Sts20_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts20_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts20_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts20_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts21_Cluster2_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts21_Cluster2_SHIFT (5U)
/*! diseng_sig2_Sts21_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts21_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts21_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts21_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts30_Cluster2_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts30_Cluster2_SHIFT (6U)
/*! diseng_sig2_Sts30_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts30_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts30_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts30_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts31_Cluster2_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts31_Cluster2_SHIFT (7U)
/*! diseng_sig2_Sts31_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts31_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts31_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER2_diseng_sig2_Sts31_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_COUNTER_CLUSTER2 - Cluster 2, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_MatchCount_Cluster2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_MatchCount_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_MatchCount_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_MatchCount_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_MatchCount_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_ErrorCount_Cluster2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_ErrorCount_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_ErrorCount_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_ErrorCount_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER2_diseng_sig2_ErrorCount_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR0_CLUSTER2 - Cluster 2, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_B10_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_B10_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_G10_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_G10_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_R10_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_R10_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix0_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_B10_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_B10_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_G10_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_G10_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_R10_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_R10_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix1_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_B10_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_B10_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_G10_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_G10_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_R10_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_R10_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix2_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_B10_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_B10_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_G10_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_G10_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_R10_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_R10_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER2_diseng_sig2_Pix3_R10_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR1_CLUSTER2 - Cluster 2, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_B32_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_B32_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_G32_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_G32_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_R32_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_R32_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix0_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_B32_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_B32_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_G32_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_G32_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_R32_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_R32_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix1_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_B32_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_B32_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_G32_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_G32_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_R32_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_R32_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix2_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_B32_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_B32_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_G32_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_G32_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_R32_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_R32_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER2_diseng_sig2_Pix3_R32_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR2_CLUSTER2 - Cluster 2, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_B54_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_B54_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_G54_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_G54_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_R54_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_R54_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix0_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_B54_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_B54_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_G54_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_G54_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_R54_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_R54_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix1_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_B54_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_B54_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_G54_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_G54_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_R54_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_R54_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix2_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_B54_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_B54_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_G54_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_G54_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_R54_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_R54_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER2_diseng_sig2_Pix3_R54_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR3_CLUSTER2 - Cluster 2, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_B76_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_B76_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_G76_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_G76_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_R76_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_R76_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix0_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_B76_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_B76_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_G76_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_G76_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_R76_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_R76_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix1_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_B76_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_B76_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_G76_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_G76_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_R76_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_R76_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix2_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_B76_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_B76_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_G76_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_G76_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_R76_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_R76_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER2_diseng_sig2_Pix3_R76_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG2_STATUS_CLUSTER3 - Cluster 3, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts00_Cluster3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts00_Cluster3_SHIFT (0U)
/*! diseng_sig2_Sts00_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts00_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts00_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts00_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts01_Cluster3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts01_Cluster3_SHIFT (1U)
/*! diseng_sig2_Sts01_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts01_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts01_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts01_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts10_Cluster3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts10_Cluster3_SHIFT (2U)
/*! diseng_sig2_Sts10_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts11_Cluster3_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts11_Cluster3_SHIFT (3U)
/*! diseng_sig2_Sts11_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts11_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts11_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts11_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts20_Cluster3_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts20_Cluster3_SHIFT (4U)
/*! diseng_sig2_Sts20_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts20_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts20_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts20_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts21_Cluster3_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts21_Cluster3_SHIFT (5U)
/*! diseng_sig2_Sts21_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts21_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts21_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts21_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts30_Cluster3_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts30_Cluster3_SHIFT (6U)
/*! diseng_sig2_Sts30_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts30_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts30_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts30_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts31_Cluster3_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts31_Cluster3_SHIFT (7U)
/*! diseng_sig2_Sts31_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts31_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts31_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_STATUS_CLUSTER3_diseng_sig2_Sts31_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_COUNTER_CLUSTER3 - Cluster 3, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_MatchCount_Cluster3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_MatchCount_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_MatchCount_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_MatchCount_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_MatchCount_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_ErrorCount_Cluster3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_ErrorCount_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_ErrorCount_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_ErrorCount_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_COUNTER_CLUSTER3_diseng_sig2_ErrorCount_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR0_CLUSTER3 - Cluster 3, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_B10_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_B10_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_G10_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_G10_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_R10_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_R10_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix0_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_B10_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_B10_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_G10_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_G10_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_R10_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_R10_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix1_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_B10_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_B10_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_G10_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_G10_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_R10_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_R10_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix2_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_B10_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_B10_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_G10_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_G10_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_R10_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_R10_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR0_CLUSTER3_diseng_sig2_Pix3_R10_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR1_CLUSTER3 - Cluster 3, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_B32_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_B32_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_G32_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_G32_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_R32_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_R32_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix0_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_B32_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_B32_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_G32_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_G32_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_R32_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_R32_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix1_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_B32_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_B32_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_G32_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_G32_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_R32_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_R32_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix2_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_B32_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_B32_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_G32_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_G32_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_R32_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_R32_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR1_CLUSTER3_diseng_sig2_Pix3_R32_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR2_CLUSTER3 - Cluster 3, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_B54_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_B54_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_G54_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_G54_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_R54_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_R54_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix0_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_B54_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_B54_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_G54_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_G54_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_R54_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_R54_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix1_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_B54_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_B54_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_G54_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_G54_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_R54_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_R54_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix2_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_B54_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_B54_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_G54_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_G54_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_R54_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_R54_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR2_CLUSTER3_diseng_sig2_Pix3_R54_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_VECTOR3_CLUSTER3 - Cluster 3, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_B76_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_B76_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_G76_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_G76_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_R76_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_R76_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix0_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_B76_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_B76_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_G76_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_G76_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_R76_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_R76_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix1_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_B76_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_B76_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_G76_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_G76_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_R76_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_R76_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix2_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_B76_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_B76_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_G76_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_G76_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_R76_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_R76_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_VECTOR3_CLUSTER3_diseng_sig2_Pix3_R76_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS0_WIN0 - Pixel Counter Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN0_diseng_sig2_Px_Cnt_S0_Win0_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN0_diseng_sig2_Px_Cnt_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN0_diseng_sig2_Px_Cnt_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN0_diseng_sig2_Px_Cnt_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN0_diseng_sig2_Px_Cnt_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS0_WIN0 - Pixel Max Values Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Bl_Max_S0_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Bl_Max_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Bl_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Bl_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Bl_Max_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Gn_Max_S0_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Gn_Max_S0_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Gn_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Gn_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Gn_Max_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Rd_Max_S0_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Rd_Max_S0_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Rd_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Rd_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN0_diseng_sig2_Rd_Max_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS0_WIN0 - Pixel Min Values Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Bl_Min_S0_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Bl_Min_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Bl_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Bl_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Bl_Min_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Gn_Min_S0_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Gn_Min_S0_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Gn_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Gn_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Gn_Min_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Rd_Min_S0_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Rd_Min_S0_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Rd_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Rd_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN0_diseng_sig2_Rd_Min_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS0_WIN0 - Red Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN0_diseng_sig2_Rd_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN0_diseng_sig2_Rd_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN0_diseng_sig2_Rd_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN0_diseng_sig2_Rd_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN0_diseng_sig2_Rd_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS0_WIN0 - Green Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN0_diseng_sig2_Gn_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN0_diseng_sig2_Gn_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN0_diseng_sig2_Gn_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN0_diseng_sig2_Gn_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN0_diseng_sig2_Gn_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS0_WIN0 - Blue Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN0_diseng_sig2_Bl_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN0_diseng_sig2_Bl_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN0_diseng_sig2_Bl_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN0_diseng_sig2_Bl_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN0_diseng_sig2_Bl_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_LUMSUM_STATS0_WIN0 - Luminance Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN0_diseng_sig2_Lm_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN0_diseng_sig2_Lm_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN0_diseng_sig2_Lm_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN0_diseng_sig2_Lm_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN0_diseng_sig2_Lm_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS1_WIN0 - Pixel Counter Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN0_diseng_sig2_Px_Cnt_S1_Win0_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN0_diseng_sig2_Px_Cnt_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN0_diseng_sig2_Px_Cnt_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN0_diseng_sig2_Px_Cnt_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN0_diseng_sig2_Px_Cnt_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS1_WIN0 - Pixel Max Values Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Bl_Max_S1_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Bl_Max_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Bl_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Bl_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Bl_Max_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Gn_Max_S1_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Gn_Max_S1_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Gn_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Gn_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Gn_Max_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Rd_Max_S1_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Rd_Max_S1_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Rd_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Rd_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN0_diseng_sig2_Rd_Max_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS1_WIN0 - Pixel Min Values Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Bl_Min_S1_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Bl_Min_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Bl_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Bl_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Bl_Min_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Gn_Min_S1_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Gn_Min_S1_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Gn_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Gn_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Gn_Min_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Rd_Min_S1_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Rd_Min_S1_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Rd_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Rd_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN0_diseng_sig2_Rd_Min_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS1_WIN0 - Red Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN0_diseng_sig2_Rd_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN0_diseng_sig2_Rd_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN0_diseng_sig2_Rd_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN0_diseng_sig2_Rd_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN0_diseng_sig2_Rd_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS1_WIN0 - Green Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN0_diseng_sig2_Gn_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN0_diseng_sig2_Gn_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN0_diseng_sig2_Gn_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN0_diseng_sig2_Gn_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN0_diseng_sig2_Gn_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS1_WIN0 - Blue Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN0_diseng_sig2_Bl_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN0_diseng_sig2_Bl_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN0_diseng_sig2_Bl_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN0_diseng_sig2_Bl_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN0_diseng_sig2_Bl_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS0_WIN1 - Pixel Counter Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN1_diseng_sig2_Px_Cnt_S0_Win1_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN1_diseng_sig2_Px_Cnt_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN1_diseng_sig2_Px_Cnt_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN1_diseng_sig2_Px_Cnt_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN1_diseng_sig2_Px_Cnt_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS0_WIN1 - Pixel Max Values Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Bl_Max_S0_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Bl_Max_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Bl_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Bl_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Bl_Max_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Gn_Max_S0_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Gn_Max_S0_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Gn_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Gn_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Gn_Max_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Rd_Max_S0_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Rd_Max_S0_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Rd_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Rd_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN1_diseng_sig2_Rd_Max_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS0_WIN1 - Pixel Min Values Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Bl_Min_S0_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Bl_Min_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Bl_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Bl_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Bl_Min_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Gn_Min_S0_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Gn_Min_S0_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Gn_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Gn_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Gn_Min_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Rd_Min_S0_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Rd_Min_S0_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Rd_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Rd_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN1_diseng_sig2_Rd_Min_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS0_WIN1 - Red Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN1_diseng_sig2_Rd_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN1_diseng_sig2_Rd_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN1_diseng_sig2_Rd_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN1_diseng_sig2_Rd_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN1_diseng_sig2_Rd_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS0_WIN1 - Green Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN1_diseng_sig2_Gn_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN1_diseng_sig2_Gn_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN1_diseng_sig2_Gn_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN1_diseng_sig2_Gn_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN1_diseng_sig2_Gn_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS0_WIN1 - Blue Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN1_diseng_sig2_Bl_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN1_diseng_sig2_Bl_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN1_diseng_sig2_Bl_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN1_diseng_sig2_Bl_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN1_diseng_sig2_Bl_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_LUMSUM_STATS0_WIN1 - Luminance Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN1_diseng_sig2_Lm_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN1_diseng_sig2_Lm_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN1_diseng_sig2_Lm_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN1_diseng_sig2_Lm_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN1_diseng_sig2_Lm_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS1_WIN1 - Pixel Counter Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN1_diseng_sig2_Px_Cnt_S1_Win1_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN1_diseng_sig2_Px_Cnt_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN1_diseng_sig2_Px_Cnt_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN1_diseng_sig2_Px_Cnt_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN1_diseng_sig2_Px_Cnt_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS1_WIN1 - Pixel Max Values Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Bl_Max_S1_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Bl_Max_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Bl_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Bl_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Bl_Max_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Gn_Max_S1_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Gn_Max_S1_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Gn_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Gn_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Gn_Max_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Rd_Max_S1_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Rd_Max_S1_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Rd_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Rd_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN1_diseng_sig2_Rd_Max_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS1_WIN1 - Pixel Min Values Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Bl_Min_S1_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Bl_Min_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Bl_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Bl_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Bl_Min_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Gn_Min_S1_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Gn_Min_S1_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Gn_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Gn_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Gn_Min_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Rd_Min_S1_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Rd_Min_S1_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Rd_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Rd_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN1_diseng_sig2_Rd_Min_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS1_WIN1 - Red Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN1_diseng_sig2_Rd_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN1_diseng_sig2_Rd_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN1_diseng_sig2_Rd_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN1_diseng_sig2_Rd_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN1_diseng_sig2_Rd_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS1_WIN1 - Green Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN1_diseng_sig2_Gn_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN1_diseng_sig2_Gn_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN1_diseng_sig2_Gn_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN1_diseng_sig2_Gn_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN1_diseng_sig2_Gn_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS1_WIN1 - Blue Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN1_diseng_sig2_Bl_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN1_diseng_sig2_Bl_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN1_diseng_sig2_Bl_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN1_diseng_sig2_Bl_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN1_diseng_sig2_Bl_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS0_WIN2 - Pixel Counter Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN2_diseng_sig2_Px_Cnt_S0_Win2_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN2_diseng_sig2_Px_Cnt_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN2_diseng_sig2_Px_Cnt_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN2_diseng_sig2_Px_Cnt_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN2_diseng_sig2_Px_Cnt_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS0_WIN2 - Pixel Max Values Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Bl_Max_S0_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Bl_Max_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Bl_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Bl_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Bl_Max_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Gn_Max_S0_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Gn_Max_S0_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Gn_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Gn_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Gn_Max_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Rd_Max_S0_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Rd_Max_S0_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Rd_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Rd_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN2_diseng_sig2_Rd_Max_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS0_WIN2 - Pixel Min Values Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Bl_Min_S0_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Bl_Min_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Bl_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Bl_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Bl_Min_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Gn_Min_S0_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Gn_Min_S0_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Gn_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Gn_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Gn_Min_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Rd_Min_S0_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Rd_Min_S0_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Rd_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Rd_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN2_diseng_sig2_Rd_Min_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS0_WIN2 - Red Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN2_diseng_sig2_Rd_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN2_diseng_sig2_Rd_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN2_diseng_sig2_Rd_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN2_diseng_sig2_Rd_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN2_diseng_sig2_Rd_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS0_WIN2 - Green Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN2_diseng_sig2_Gn_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN2_diseng_sig2_Gn_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN2_diseng_sig2_Gn_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN2_diseng_sig2_Gn_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN2_diseng_sig2_Gn_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS0_WIN2 - Blue Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN2_diseng_sig2_Bl_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN2_diseng_sig2_Bl_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN2_diseng_sig2_Bl_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN2_diseng_sig2_Bl_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN2_diseng_sig2_Bl_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_LUMSUM_STATS0_WIN2 - Luminance Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN2_diseng_sig2_Lm_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN2_diseng_sig2_Lm_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN2_diseng_sig2_Lm_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN2_diseng_sig2_Lm_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN2_diseng_sig2_Lm_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS1_WIN2 - Pixel Counter Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN2_diseng_sig2_Px_Cnt_S1_Win2_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN2_diseng_sig2_Px_Cnt_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN2_diseng_sig2_Px_Cnt_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN2_diseng_sig2_Px_Cnt_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN2_diseng_sig2_Px_Cnt_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS1_WIN2 - Pixel Max Values Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Bl_Max_S1_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Bl_Max_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Bl_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Bl_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Bl_Max_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Gn_Max_S1_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Gn_Max_S1_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Gn_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Gn_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Gn_Max_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Rd_Max_S1_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Rd_Max_S1_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Rd_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Rd_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN2_diseng_sig2_Rd_Max_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS1_WIN2 - Pixel Min Values Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Bl_Min_S1_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Bl_Min_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Bl_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Bl_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Bl_Min_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Gn_Min_S1_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Gn_Min_S1_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Gn_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Gn_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Gn_Min_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Rd_Min_S1_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Rd_Min_S1_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Rd_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Rd_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN2_diseng_sig2_Rd_Min_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS1_WIN2 - Red Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN2_diseng_sig2_Rd_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN2_diseng_sig2_Rd_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN2_diseng_sig2_Rd_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN2_diseng_sig2_Rd_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN2_diseng_sig2_Rd_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS1_WIN2 - Green Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN2_diseng_sig2_Gn_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN2_diseng_sig2_Gn_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN2_diseng_sig2_Gn_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN2_diseng_sig2_Gn_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN2_diseng_sig2_Gn_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS1_WIN2 - Blue Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN2_diseng_sig2_Bl_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN2_diseng_sig2_Bl_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN2_diseng_sig2_Bl_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN2_diseng_sig2_Bl_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN2_diseng_sig2_Bl_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS0_WIN3 - Pixel Counter Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN3_diseng_sig2_Px_Cnt_S0_Win3_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN3_diseng_sig2_Px_Cnt_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN3_diseng_sig2_Px_Cnt_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN3_diseng_sig2_Px_Cnt_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS0_WIN3_diseng_sig2_Px_Cnt_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS0_WIN3 - Pixel Max Values Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Bl_Max_S0_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Bl_Max_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Bl_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Bl_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Bl_Max_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Gn_Max_S0_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Gn_Max_S0_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Gn_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Gn_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Gn_Max_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Rd_Max_S0_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Rd_Max_S0_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Rd_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Rd_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS0_WIN3_diseng_sig2_Rd_Max_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS0_WIN3 - Pixel Min Values Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Bl_Min_S0_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Bl_Min_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Bl_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Bl_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Bl_Min_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Gn_Min_S0_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Gn_Min_S0_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Gn_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Gn_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Gn_Min_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Rd_Min_S0_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Rd_Min_S0_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Rd_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Rd_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS0_WIN3_diseng_sig2_Rd_Min_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS0_WIN3 - Red Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN3_diseng_sig2_Rd_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN3_diseng_sig2_Rd_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN3_diseng_sig2_Rd_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN3_diseng_sig2_Rd_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS0_WIN3_diseng_sig2_Rd_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS0_WIN3 - Green Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN3_diseng_sig2_Gn_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN3_diseng_sig2_Gn_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN3_diseng_sig2_Gn_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN3_diseng_sig2_Gn_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS0_WIN3_diseng_sig2_Gn_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS0_WIN3 - Blue Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN3_diseng_sig2_Bl_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN3_diseng_sig2_Bl_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN3_diseng_sig2_Bl_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN3_diseng_sig2_Bl_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS0_WIN3_diseng_sig2_Bl_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_LUMSUM_STATS0_WIN3 - Luminance Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN3_diseng_sig2_Lm_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN3_diseng_sig2_Lm_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN3_diseng_sig2_Lm_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN3_diseng_sig2_Lm_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_LUMSUM_STATS0_WIN3_diseng_sig2_Lm_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXCNT_STATS1_WIN3 - Pixel Counter Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN3_diseng_sig2_Px_Cnt_S1_Win3_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN3_diseng_sig2_Px_Cnt_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN3_diseng_sig2_Px_Cnt_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN3_diseng_sig2_Px_Cnt_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXCNT_STATS1_WIN3_diseng_sig2_Px_Cnt_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMAX_STATS1_WIN3 - Pixel Max Values Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Bl_Max_S1_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Bl_Max_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Bl_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Bl_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Bl_Max_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Gn_Max_S1_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Gn_Max_S1_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Gn_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Gn_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Gn_Max_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Rd_Max_S1_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Rd_Max_S1_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Rd_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Rd_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMAX_STATS1_WIN3_diseng_sig2_Rd_Max_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_PIXMIN_STATS1_WIN3 - Pixel Min Values Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Bl_Min_S1_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Bl_Min_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Bl_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Bl_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Bl_Min_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Gn_Min_S1_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Gn_Min_S1_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Gn_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Gn_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Gn_Min_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Rd_Min_S1_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Rd_Min_S1_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Rd_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Rd_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_PIXMIN_STATS1_WIN3_diseng_sig2_Rd_Min_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_REDSUM_STATS1_WIN3 - Red Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN3_diseng_sig2_Rd_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN3_diseng_sig2_Rd_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN3_diseng_sig2_Rd_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN3_diseng_sig2_Rd_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_REDSUM_STATS1_WIN3_diseng_sig2_Rd_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_GREENSUM_STATS1_WIN3 - Green Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN3_diseng_sig2_Gn_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN3_diseng_sig2_Gn_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN3_diseng_sig2_Gn_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN3_diseng_sig2_Gn_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_GREENSUM_STATS1_WIN3_diseng_sig2_Gn_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2_BLUESUM_STATS1_WIN3 - Blue Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN3_diseng_sig2_Bl_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN3_diseng_sig2_Bl_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN3_diseng_sig2_Bl_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN3_diseng_sig2_Bl_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2_BLUESUM_STATS1_WIN3_diseng_sig2_Bl_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG2CFG_LOCKUNLOCK0 - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKUNLOCK0_diseng_sig2cfg_LockUnlock0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKUNLOCK0_diseng_sig2cfg_LockUnlock0_SHIFT (0U)
/*! diseng_sig2cfg_LockUnlock0
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKUNLOCK0_diseng_sig2cfg_LockUnlock0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKUNLOCK0_diseng_sig2cfg_LockUnlock0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKUNLOCK0_diseng_sig2cfg_LockUnlock0_MASK)
/*! @} */

/*! @name DISENG_SIG2CFG_LOCKSTATUS0 - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_LockStatus0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_LockStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_LockStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_LockStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_LockStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_PrivilegeStatus0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_PrivilegeStatus0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_PrivilegeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_PrivilegeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_PrivilegeStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_FreezeStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_FreezeStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_FreezeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_FreezeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2CFG_LOCKSTATUS0_diseng_sig2cfg_FreezeStatus0_MASK)
/*! @} */

/*! @name DISENG_SIG2CFG_SRCSELECT - Tap selection for sig2. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG2CFG_SRCSELECT_diseng_sig2cfg_sig2_select_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG2CFG_SRCSELECT_diseng_sig2cfg_sig2_select_SHIFT (0U)
/*! diseng_sig2cfg_sig2_select
 *  0b00..Source is FrameGen#0 output.
 *  0b01..Source is Matrix#0 output.
 *  0b10..Source is LuT3D#0 output.
 *  0b11..Source is Dither#0 output.
 */
#define DISPLAY_SEERIS_DISENG_SIG2CFG_SRCSELECT_diseng_sig2cfg_sig2_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG2CFG_SRCSELECT_diseng_sig2cfg_sig2_select_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG2CFG_SRCSELECT_diseng_sig2cfg_sig2_select_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKUNLOCK_diseng_matrix0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKUNLOCK_diseng_matrix0_LockUnlock_SHIFT (0U)
/*! diseng_matrix0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKUNLOCK_diseng_matrix0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_LOCKUNLOCK_diseng_matrix0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_LOCKUNLOCK_diseng_matrix0_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_LOCKSTATUS_diseng_matrix0_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_STATICCONTROL - Color Matrix static control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_STATICCONTROL_diseng_matrix0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_STATICCONTROL_diseng_matrix0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_STATICCONTROL_diseng_matrix0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_STATICCONTROL_diseng_matrix0_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_STATICCONTROL_diseng_matrix0_ShdEn_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_CONTROL - Color Matrix control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_MODE_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_MODE_SHIFT (0U)
/*! diseng_matrix0_MODE
 *  0b00..Module in neutral mode, input data is bypassed
 *  0b01..Module in matrix mode, input data is multiplied with matrix values
 *  0b10..Module in alpha pre-multiplication mode, input color is multiplied with input alpha
 *  0b11..Reserved, do not use
 */
#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_MODE_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_MODE_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaMask_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaMask_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaMask(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaMask_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaMask_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaInvert_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaInvert_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaInvert(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaInvert_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_CONTROL_diseng_matrix0_AlphaInvert_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_RED0 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A11_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A11_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A11(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A11_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A11_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A12_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A12_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A12(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A12_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_RED0_diseng_matrix0_A12_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_RED1 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_RED1_diseng_matrix0_A13_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_RED1_diseng_matrix0_A13_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_RED1_diseng_matrix0_A13(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_RED1_diseng_matrix0_A13_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_RED1_diseng_matrix0_A13_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_GREEN0 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A21_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A21_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A21(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A21_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A21_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A22_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A22_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A22(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A22_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_GREEN0_diseng_matrix0_A22_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_GREEN1 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN1_diseng_matrix0_A23_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN1_diseng_matrix0_A23_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_GREEN1_diseng_matrix0_A23(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_GREEN1_diseng_matrix0_A23_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_GREEN1_diseng_matrix0_A23_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_BLUE0 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A31_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A31_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A31(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A31_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A31_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A32_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A32_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A32(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A32_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_BLUE0_diseng_matrix0_A32_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_BLUE1 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE1_diseng_matrix0_A33_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE1_diseng_matrix0_A33_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_BLUE1_diseng_matrix0_A33(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_BLUE1_diseng_matrix0_A33_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_BLUE1_diseng_matrix0_A33_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_OFFSETVECTOR0 - Offset vectors for red and green output. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C1_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C1_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C1_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C2_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C2_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR0_diseng_matrix0_C2_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_OFFSETVECTOR1 - Offset vectors for blue and alpha output. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR1_diseng_matrix0_C3_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR1_diseng_matrix0_C3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR1_diseng_matrix0_C3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR1_diseng_matrix0_C3_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_OFFSETVECTOR1_diseng_matrix0_C3_MASK)
/*! @} */

/*! @name DISENG_MATRIX0_LASTCONTROLWORD - Value of last received control word, for debugging. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX0_LASTCONTROLWORD_diseng_matrix0_L_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LASTCONTROLWORD_diseng_matrix0_L_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX0_LASTCONTROLWORD_diseng_matrix0_L_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX0_LASTCONTROLWORD_diseng_matrix0_L_VAL_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX0_LASTCONTROLWORD_diseng_matrix0_L_VAL_MASK)
/*! @} */

/*! @name DISENG_LUT3D0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKUNLOCK_diseng_lut3d0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKUNLOCK_diseng_lut3d0_LockUnlock_SHIFT (0U)
/*! diseng_lut3d0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKUNLOCK_diseng_lut3d0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_LOCKUNLOCK_diseng_lut3d0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_LOCKUNLOCK_diseng_lut3d0_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_LUT3D0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_LOCKSTATUS_diseng_lut3d0_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_LUT3D0_STATICCONTROL - lut3d static control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D0_STATICCONTROL_diseng_lut3d0_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_STATICCONTROL_diseng_lut3d0_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_STATICCONTROL_diseng_lut3d0_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_STATICCONTROL_diseng_lut3d0_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_STATICCONTROL_diseng_lut3d0_ShdEn_MASK)
/*! @} */

/*! @name DISENG_LUT3D0_CONTROL - lut3d control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_MODE_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_MODE_SHIFT (0U)
/*! diseng_lut3d0_MODE
 *  0b000..Module in neutral mode, RGBA input data is bypassed to the output unchanged.
 *  0b001..LUT operates in 3D mode.
 *  0b010..Each RGB input is used as individual index into the respective LUT. Alpha channel is bypassed to output.
 *  0b011..Red input is used as common index for any RGB LUT. The alpha channel is bypassed to output.
 *  0b100..Red input is used as common index for any RGB LUT. The result is remapped and upconverted to RGBA.
 */
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_MODE_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_MODE_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_DITH_EN_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_DITH_EN_SHIFT (3U)
/*! diseng_lut3d0_DITH_EN
 *  0b0..Output is 10bit. If LUT_DATA_WIDTH == MODE_12BIT then 2 LSB are truncated.
 *  0b1..If LUT_DATA_WIDTH == MODE_12BIT then 12bit value is dithered to 10bit. if LUT_DATA_WIDTH == MODE_10BIT then 10bit value is dithered to 8bit.
 */
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_DITH_EN(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_DITH_EN_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_DITH_EN_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaMask_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaMask_SHIFT (5U)
/*! diseng_lut3d0_AlphaMask
 *  0b0..Alpha mask mode disabled
 *  0b1..Alpha mask mode enabled
 */
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaMask(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaMask_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaMask_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaInvert_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaInvert_SHIFT (6U)
/*! diseng_lut3d0_AlphaInvert
 *  0b0..Disable computation for alpha smaller than 128
 *  0b1..Disable computation for alpha greater than or equal to 128
 */
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaInvert(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaInvert_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_AlphaInvert_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_IDX_BITS_MASK (0xF00U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_IDX_BITS_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_IDX_BITS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_IDX_BITS_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_CONTROL_diseng_lut3d0_IDX_BITS_MASK)
/*! @} */

/*! @name DISENG_LUT3D0_LUT - Look Up Table */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D0_LUT_diseng_lut3d0_DATA_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LUT_diseng_lut3d0_DATA_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_LUT3D0_LUT_diseng_lut3d0_DATA(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D0_LUT_diseng_lut3d0_DATA_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D0_LUT_diseng_lut3d0_DATA_MASK)
/*! @} */

/*! @name DISENG_DITHER0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKUNLOCK_diseng_dither0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKUNLOCK_diseng_dither0_LockUnlock_SHIFT (0U)
/*! diseng_dither0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKUNLOCK_diseng_dither0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_LOCKUNLOCK_diseng_dither0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_LOCKUNLOCK_diseng_dither0_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_DITHER0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_LOCKSTATUS_diseng_dither0_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_DITHER0_CONTROL - Dither Unit common control. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0_CONTROL_diseng_dither0_mode_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_DITHER0_CONTROL_diseng_dither0_mode_SHIFT (0U)
/*! diseng_dither0_mode
 *  0b00..Neutral mode. Pixels by-pass the Dither Unit, all other settings are ignored.
 *  0b01..Dither Unit is active (uses 10bit input).
 *  0b10..Dither Unit is active (uses 12bit input).
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_CONTROL_diseng_dither0_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_CONTROL_diseng_dither0_mode_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_CONTROL_diseng_dither0_mode_MASK)
/*! @} */

/*! @name DISENG_DITHER0_DITHERCONTROL10BITS - Dither Unit processing control. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_blue_range_select_10bit_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_blue_range_select_10bit_SHIFT (0U)
/*! diseng_dither0_blue_range_select_10bit
 *  0b010..Reduces blue component width from 10 bit to 8bit.
 *  0b011..Reduces blue component width from 10 bit to 7bit.
 *  0b100..Reduces blue component width from 10 bit to 6bit.
 *  0b101..Reduces blue component width from 10 bit to 5bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_blue_range_select_10bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_blue_range_select_10bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_blue_range_select_10bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_green_range_select_10bit_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_green_range_select_10bit_SHIFT (4U)
/*! diseng_dither0_green_range_select_10bit
 *  0b010..Reduces green component width from 10 bit to 8bit.
 *  0b011..Reduces green component width from 10 bit to 7bit.
 *  0b100..Reduces green component width from 10 bit to 6bit.
 *  0b101..Reduces green component width from 10 bit to 5bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_green_range_select_10bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_green_range_select_10bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_green_range_select_10bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_red_range_select_10bit_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_red_range_select_10bit_SHIFT (8U)
/*! diseng_dither0_red_range_select_10bit
 *  0b010..Reduces red component width from 10 bit to 8bit.
 *  0b011..Reduces red component width from 10 bit to 7bit.
 *  0b100..Reduces red component width from 10 bit to 6bit.
 *  0b101..Reduces red component width from 10 bit to 5bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_red_range_select_10bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_red_range_select_10bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL10BITS_diseng_dither0_red_range_select_10bit_MASK)
/*! @} */

/*! @name DISENG_DITHER0_DITHERCONTROL12BITS - Dither Unit processing control. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_blue_range_select_12bit_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_blue_range_select_12bit_SHIFT (0U)
/*! diseng_dither0_blue_range_select_12bit
 *  0b010..Reduces blue component width from 12 bit to 10bit.
 *  0b011..Reduces blue component width from 12 bit to 9bit.
 *  0b100..Reduces blue component width from 12 bit to 8bit.
 *  0b110..Reduces blue component width from 12 bit to 6bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_blue_range_select_12bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_blue_range_select_12bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_blue_range_select_12bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_green_range_select_12bit_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_green_range_select_12bit_SHIFT (4U)
/*! diseng_dither0_green_range_select_12bit
 *  0b010..Reduces green component width from 12 bit to 10bit.
 *  0b011..Reduces green component width from 12 bit to 9bit.
 *  0b100..Reduces green component width from 12 bit to 8bit.
 *  0b110..Reduces green component width from 12 bit to 6bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_green_range_select_12bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_green_range_select_12bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_green_range_select_12bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_red_range_select_12bit_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_red_range_select_12bit_SHIFT (8U)
/*! diseng_dither0_red_range_select_12bit
 *  0b010..Reduces red component width from 12 bit to 10bit.
 *  0b011..Reduces red component width from 12 bit to 9bit.
 *  0b100..Reduces red component width from 12 bit to 8bit.
 *  0b110..Reduces red component width from 12 bit to 6bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_red_range_select_12bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_red_range_select_12bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_red_range_select_12bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_offset_select_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_offset_select_SHIFT (16U)
/*! diseng_dither0_offset_select
 *  0b0..Offset is a bayer matrix value, which is selected according to pixel frame position.
 *  0b1..Offset is the sum from a bayer matrix value, which is selected according to pixel frame position, and a
 *       value from a regular sequence, which changes each frame.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_offset_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_offset_select_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_offset_select_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_algo_select_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_algo_select_SHIFT (20U)
/*! diseng_dither0_algo_select
 *  0b01..Best possible resolution for most dark colors. Adds a diminutive offset to overall image brightness.
 *  0b10..Preserves overall image brightness. Cannot resolve most dark and most bright colors. All codes in-between are distributed perfectly smooth.
 *  0b11..Preserves overall image brightness. Best possible distribution of color codes over complete range.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_algo_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_algo_select_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_algo_select_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_alpha_mode_MASK (0x3000000U)
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_alpha_mode_SHIFT (24U)
/*! diseng_dither0_alpha_mode
 *  0b00..The alpha bit is not considered.
 *  0b01..Red, green and blue components are only dithered, if the alpha bit is 1.
 *  0b10..Red, green and blue components are only dithered, if the alpha bit is 0.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_alpha_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_alpha_mode_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0_DITHERCONTROL12BITS_diseng_dither0_alpha_mode_MASK)
/*! @} */

/*! @name DISENG_DITHER0CFG_LOCKUNLOCK0 - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKUNLOCK0_diseng_dither0cfg_LockUnlock0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKUNLOCK0_diseng_dither0cfg_LockUnlock0_SHIFT (0U)
/*! diseng_dither0cfg_LockUnlock0
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKUNLOCK0_diseng_dither0cfg_LockUnlock0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKUNLOCK0_diseng_dither0cfg_LockUnlock0_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKUNLOCK0_diseng_dither0cfg_LockUnlock0_MASK)
/*! @} */

/*! @name DISENG_DITHER0CFG_LOCKSTATUS0 - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_LockStatus0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_LockStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_LockStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_LockStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_LockStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_PrivilegeStatus0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_PrivilegeStatus0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_PrivilegeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_PrivilegeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_PrivilegeStatus0_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_FreezeStatus0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_FreezeStatus0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_FreezeStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_FreezeStatus0_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0CFG_LOCKSTATUS0_diseng_dither0cfg_FreezeStatus0_MASK)
/*! @} */

/*! @name DISENG_DITHER0CFG_POLARITYCTRL0 - Polarity control for display stream #0. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolHs0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolHs0_SHIFT (0U)
/*! diseng_dither0cfg_PolHs0
 *  0b0..Low active
 *  0b1..High active
 */
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolHs0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolHs0_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolHs0_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolVs0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolVs0_SHIFT (1U)
/*! diseng_dither0cfg_PolVs0
 *  0b0..Low active
 *  0b1..High active
 */
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolVs0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolVs0_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolVs0_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolEn0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolEn0_SHIFT (2U)
/*! diseng_dither0cfg_PolEn0
 *  0b0..Low active
 *  0b1..High active
 */
#define DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolEn0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolEn0_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER0CFG_POLARITYCTRL0_diseng_dither0cfg_PolEn0_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUNLOCK_diseng_domainblend1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUNLOCK_diseng_domainblend1_LockUnlock_SHIFT (0U)
/*! diseng_domainblend1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUNLOCK_diseng_domainblend1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUNLOCK_diseng_domainblend1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUNLOCK_diseng_domainblend1_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKSTATUS_diseng_domainblend1_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_STATICCONTROL - Static control settings. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdEn_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdLdSel_MASK (0xEU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdLdSel_SHIFT (1U)
/*! diseng_domainblend1_ShdLdSel
 *  0b000..Shadow loading not allowed
 *  0b001..Load shadows with shadow load token on primary input.
 *  0b010..Load shadows with shadow load token on secondary input.
 *  0b011..Load shadows with shadow load token on primary or secondary input.
 *  0b100..Load shadows with shadow load token from ControlTrigger register.
 *  0b101..Load shadows with shadow load token from ControlTrigger register or primary input.
 *  0b110..Load shadows with shadow load token from ControlTrigger register or secondary input.
 *  0b111..Load shadows with shadow load token from ControlTrigger register or primary or secondary input.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdLdSel_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdTokSel_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdTokSel_SHIFT (4U)
/*! diseng_domainblend1_ShdTokSel
 *  0b000..Shadow load forwarding not allowed
 *  0b001..When a token was received on the primary input.
 *  0b010..When a token was received on the secondary input.
 *  0b011..When a token was received on the primary or secondary input.
 *  0b100..When a token was received from ControlTrigger register.
 *  0b101..When a token was received from ControlTrigger register or primary input.
 *  0b110..When a token was received from ControlTrigger register or secondary input.
 *  0b111..When a token was received from ControlTrigger register or primary or secondary input.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdTokSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdTokSel_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_STATICCONTROL_diseng_domainblend1_ShdTokSel_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_CONTROLTRIGGER - Shadow load and sequence complete triggers. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_ShdTokGen_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_Trigger_Sequence_Complete_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_Trigger_Sequence_Complete_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_Trigger_Sequence_Complete(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_Trigger_Sequence_Complete_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_CONTROLTRIGGER_diseng_domainblend1_Trigger_Sequence_Complete_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_MODECONTROL - Operation mode of the domainblend */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_MODECONTROL_diseng_domainblend1_MODE_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_MODECONTROL_diseng_domainblend1_MODE_SHIFT (0U)
/*! diseng_domainblend1_MODE
 *  0b00..Output is same as primary input.
 *  0b01..Output is same as secondary input.
 *  0b10..Module is in blending mode.
 *  0b11..Module is in side by side mode. The primary and secondary inputs are displayed side by side.
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_MODECONTROL_diseng_domainblend1_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_MODECONTROL_diseng_domainblend1_MODE_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_MODECONTROL_diseng_domainblend1_MODE_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_ALPHACONTROL - Alpha mask settings. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskEnable_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskEnable_SHIFT (0U)
/*! diseng_domainblend1_AlphaMaskEnable
 *  0b0..AlphaMask feature disabled
 *  0b1..AlphaMask feature enabled
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskEnable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskEnable_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskEnable_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskMode_MASK (0xEU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskMode_SHIFT (1U)
/*! diseng_domainblend1_AlphaMaskMode
 *  0b000..Areas with primary input alpha > 128 will be mapped to 255 and the rest will have an alpha value of 0
 *  0b001..The area of the secondary input will get an alpha value of 255 and the rest will be 0
 *  0b010..Behaves as if the output of modes PRIM and SEC would be ORed together
 *  0b011..Behaves as if the output of modes PRIM and SEC would be ANDed together
 *  0b100..Behaves as if the output of mode PRIM would be inverted
 *  0b101..Behaves as if the output of mode SEC would be inverted
 *  0b110..Behaves as if the output of modes PRIM and SEC_INV would be ORed together
 *  0b111..Behaves as if the output of modes PRIM and SEC_INV would be ANDed together
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskMode_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ALPHACONTROL_diseng_domainblend1_AlphaMaskMode_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_BLENDCONTROL - Options for blend operations */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_C_BLD_FUNC_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_C_BLD_FUNC_SHIFT (0U)
/*! diseng_domainblend1_PRIM_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_C_BLD_FUNC_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_C_BLD_FUNC_SHIFT (4U)
/*! diseng_domainblend1_SEC_C_BLD_FUNC
 *  0b000..Cout = Cin * 0
 *  0b001..Cout = Cin * 1
 *  0b010..Cout = Cin * ALPHA_prim
 *  0b011..Cout = Cin * (1 - ALPHA_prim)
 *  0b100..Cout = Cin * ALPHA_sec
 *  0b101..Cout = Cin * (1 - ALPHA_sec)
 *  0b110..Cout = Cin * ALPHA_const
 *  0b111..Cout = Cin * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_C_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_C_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_C_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_A_BLD_FUNC_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_A_BLD_FUNC_SHIFT (8U)
/*! diseng_domainblend1_PRIM_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_PRIM_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_A_BLD_FUNC_MASK (0x7000U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_A_BLD_FUNC_SHIFT (12U)
/*! diseng_domainblend1_SEC_A_BLD_FUNC
 *  0b000..Aout = Ain * 0
 *  0b001..Aout = Ain * 1
 *  0b010..Aout = Ain * ALPHA_prim
 *  0b011..Aout = Ain * (1 - ALPHA_prim)
 *  0b100..Aout = Ain * ALPHA_sec
 *  0b101..Aout = Ain * (1 - ALPHA_sec)
 *  0b110..Aout = Ain * ALPHA_const
 *  0b111..Aout = Ain * (1 - ALPHA_const)
 */
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_A_BLD_FUNC(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_A_BLD_FUNC_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_SEC_A_BLD_FUNC_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_BlendAlpha_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_BlendAlpha_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_BlendAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_BlendAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_BLENDCONTROL_diseng_domainblend1_BlendAlpha_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK - The status of primary and secondary sources waiting for pixels. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_PrimWait_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_PrimWait_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_PrimWait(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_PrimWait_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_PrimWait_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_SecWait_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_SecWait_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_SecWait(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_SecWait_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_TIMEOUT_FEEDBACK_diseng_domainblend1_SecWait_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_LOCKUP_CLEAR - The register can be used to internally reset domainblend if it gets stuck by pending pixels from one source. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUP_CLEAR_diseng_domainblend1_LockupClear_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUP_CLEAR_diseng_domainblend1_LockupClear_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUP_CLEAR_diseng_domainblend1_LockupClear(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUP_CLEAR_diseng_domainblend1_LockupClear_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_LOCKUP_CLEAR_diseng_domainblend1_LockupClear_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_DELAY_COUNTER_EN - The register enables the delay and error counters that report on the delay on prim and sec sources. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_EN_diseng_domainblend1_DelayCountEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_EN_diseng_domainblend1_DelayCountEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_EN_diseng_domainblend1_DelayCountEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_EN_diseng_domainblend1_DelayCountEn_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_EN_diseng_domainblend1_DelayCountEn_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_DELAY_COUNTER_PRIM - The number of inavtive clock cycles during which the domainblend is waiting for pixels from primary source. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_PRIM_diseng_domainblend1_DelayCountPrim_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_PRIM_diseng_domainblend1_DelayCountPrim_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_PRIM_diseng_domainblend1_DelayCountPrim(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_PRIM_diseng_domainblend1_DelayCountPrim_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_PRIM_diseng_domainblend1_DelayCountPrim_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_DELAY_COUNTER_SEC - The number of inavtive clock cycles during which the domainblend is waiting for pixels from secondary source. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_SEC_diseng_domainblend1_DelayCountSec_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_SEC_diseng_domainblend1_DelayCountSec_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_SEC_diseng_domainblend1_DelayCountSec(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_SEC_diseng_domainblend1_DelayCountSec_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_DELAY_COUNTER_SEC_diseng_domainblend1_DelayCountSec_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_ERROR_COUNTER_PRIM - The number of inavtive clock cycles on the primary source till the synchronization loss of domainblend. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_PRIM_diseng_domainblend1_ErrCountPrim_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_PRIM_diseng_domainblend1_ErrCountPrim_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_PRIM_diseng_domainblend1_ErrCountPrim(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_PRIM_diseng_domainblend1_ErrCountPrim_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_PRIM_diseng_domainblend1_ErrCountPrim_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_ERROR_COUNTER_SEC - The number of inavtive clock cycles on the secondary source till the synchronization loss of domainblend. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_SEC_diseng_domainblend1_ErrCountSec_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_SEC_diseng_domainblend1_ErrCountSec_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_SEC_diseng_domainblend1_ErrCountSec(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_SEC_diseng_domainblend1_ErrCountSec_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_ERROR_COUNTER_SEC_diseng_domainblend1_ErrCountSec_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_SOURCE_STATUS - Source protocol error detection for primary and secondary sources */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongCommandWord_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongCommandWord_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongCommandWord(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongCommandWord_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongCommandWord_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongPixelData_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongPixelData_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongPixelData(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongPixelData_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongPixelData_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongInput_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongInput_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongInput(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongInput_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_diseng_domainblend1_WrongInput_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR - Clearing source protocol error status for both primary and secondary sources */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongCommandWord_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongCommandWord_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongCommandWord(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongCommandWord_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongCommandWord_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongPixelData_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongPixelData_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongPixelData(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongPixelData_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongPixelData_MASK)

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongInput_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongInput_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongInput(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongInput_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SOURCE_STATUS_CLEAR_diseng_domainblend1_ClearWrongInput_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_PRIMCONTROLWORD - Value of last received primary control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_PRIMCONTROLWORD_diseng_domainblend1_P_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_PRIMCONTROLWORD_diseng_domainblend1_P_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_PRIMCONTROLWORD_diseng_domainblend1_P_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_PRIMCONTROLWORD_diseng_domainblend1_P_VAL_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_PRIMCONTROLWORD_diseng_domainblend1_P_VAL_MASK)
/*! @} */

/*! @name DISENG_DOMAINBLEND1_SECCONTROLWORD - Value of last received secondary control word, for debugging */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SECCONTROLWORD_diseng_domainblend1_S_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SECCONTROLWORD_diseng_domainblend1_S_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SECCONTROLWORD_diseng_domainblend1_S_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SECCONTROLWORD_diseng_domainblend1_S_VAL_SHIFT)) & DISPLAY_SEERIS_DISENG_DOMAINBLEND1_SECCONTROLWORD_diseng_domainblend1_S_VAL_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKUNLOCK_diseng_framegen1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKUNLOCK_diseng_framegen1_LockUnlock_SHIFT (0U)
/*! diseng_framegen1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKUNLOCK_diseng_framegen1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKUNLOCK_diseng_framegen1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKUNLOCK_diseng_framegen1_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_LOCKSTATUS_diseng_framegen1_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSTCTRL - FrameGen Static Control Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_ShdEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgSyncMode_MASK (0xEU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgSyncMode_SHIFT (1U)
/*! diseng_framegen1_FgSyncMode
 *  0b000..No side-by-side synchronization.
 *  0b001..Framegen is master.
 *  0b010..Framegen is slave. Runs in cyclic synchronization mode.
 *  0b011..Framegen is slave. Runs in one time synchronization mode.
 *  0b110..Framegen is slave. Runs in cyclic synchronization mode. Size is adapted.
 *  0b111..Framegen is slave. Runs in one time synchronization mode. Size is adapted.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgSyncMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgSyncMode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgSyncMode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgShdTokGenSyncMode_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgShdTokGenSyncMode_SHIFT (4U)
/*! diseng_framegen1_FgShdTokGenSyncMode
 *  0b0..Shadow token is generated by local FgSlr.ShdTokGen field.
 *  0b1..Shadow token is generated by FgSlr.ShdTokGen field of second framegenerator.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgShdTokGenSyncMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgShdTokGenSyncMode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_FgShdTokGenSyncMode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_Force_Disable_MASK (0x40000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_Force_Disable_SHIFT (30U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_Force_Disable(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_Force_Disable_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSTCTRL_diseng_framegen1_Force_Disable_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_HTCFG1 - FrameGen Horizontal Timing Config Register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Hact_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Hact_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Hact(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Hact_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Hact_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Htotal_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Htotal_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Htotal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Htotal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG1_diseng_framegen1_Htotal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_HTCFG2 - FrameGen Horizontal Timing Config Register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsync_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsync_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsbp_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsbp_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsbp(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsbp_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_Hsbp_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_HsEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_HsEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_HTCFG2_diseng_framegen1_HsEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_VTCFG1 - FrameGen Vertical Timing Config Register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vact_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vact_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vact(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vact_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vact_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vtotal_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vtotal_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vtotal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vtotal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG1_diseng_framegen1_Vtotal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_VTCFG2 - FrameGen Vertical Timing Config Register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsync_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsync_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsbp_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsbp_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsbp(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsbp_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_Vsbp_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_VsEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_VsEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_VsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_VsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_VTCFG2_diseng_framegen1_VsEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_INT0CONFIG - Coordinates of the trigger point for generation of the Int0 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT0CONFIG_diseng_framegen1_Int0En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_INT1CONFIG - Coordinates of the trigger point for generation of the Int1 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT1CONFIG_diseng_framegen1_Int1En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_INT2CONFIG - Coordinates of the trigger point for generation of the Int2 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT2CONFIG_diseng_framegen1_Int2En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_INT3CONFIG - Coordinates of the trigger point for generation of the Int3 interrupt signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Col_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Col_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Col(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Col_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Col_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3HsEn_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3HsEn_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3HsEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3HsEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3HsEn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Row_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Row_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Row(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Row_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3Row_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3En_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3En_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_INT3CONFIG_diseng_framegen1_Int3En_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_PKICKCONFIG - Coordinates of the trigger point for generation of the primary kick signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickCol_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickCol_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickCol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickCol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickCol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickInt0En_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickInt0En_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickInt0En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickInt0En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickInt0En_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickRow_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickRow_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickRow(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickRow_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickRow_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_PKICKCONFIG_diseng_framegen1_PKickEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_SKICKCONFIG - Coordinates of the trigger point for generation of the secondary kick signal */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickCol_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickCol_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickCol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickCol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickCol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickInt1En_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickInt1En_SHIFT (15U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickInt1En(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickInt1En_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickInt1En_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickRow_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickRow_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickRow(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickRow_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickRow_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickTrig_MASK (0x40000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickTrig_SHIFT (30U)
/*! diseng_framegen1_SKickTrig
 *  0b0..Use internal skick signal, trigger point defined by SKickRow and SKickCol.
 *  0b1..Use external skick input as trigger.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickTrig(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickTrig_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickTrig_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickEn_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickEn_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SKICKCONFIG_diseng_framegen1_SKickEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_SECSTATCONFIG - Configuration register for controlling the behaviour of the SecSyncStat field in the FgSecChStat register. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevGoodFrames_MASK (0xFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevGoodFrames_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevGoodFrames(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevGoodFrames_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevGoodFrames_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevBadFrames_MASK (0xF0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevBadFrames_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevBadFrames(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevBadFrames_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevBadFrames_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevSkewInRange_MASK (0xF00U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevSkewInRange_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevSkewInRange(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevSkewInRange_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SECSTATCONFIG_diseng_framegen1_LevSkewInRange_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR1 - FrameGen Skew Regulation Control Register 1. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREn_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRMode_MASK (0x6U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRMode_SHIFT (1U)
/*! diseng_framegen1_SRMode
 *  0b00..Skew Regulation is off.
 *  0b01..Horizontal regulation enabled.
 *  0b10..Vertical regulation enabled.
 *  0b11..Both regulation modes are enabled.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRMode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRMode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRMode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRAdj_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRAdj_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRAdj(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRAdj_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRAdj_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREven_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREven_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREven(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREven_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREven_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRFastSync_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRFastSync_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRFastSync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRFastSync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRFastSync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQAlign_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQAlign_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQAlign(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQAlign_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQAlign_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQVal_MASK (0x180U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQVal_SHIFT (7U)
/*! diseng_framegen1_SRQVal
 *  0b00..Fixed two LSB values of HTOTAL are 0b00.
 *  0b01..Fixed two LSB values of HTOTAL are 0b01.
 *  0b10..Fixed two LSB values of HTOTAL are 0b10.
 *  0b11..Fixed two LSB values of HTOTAL are 0b11.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQVal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQVal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRQVal_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRDbgDisp_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRDbgDisp_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRDbgDisp(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRDbgDisp_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRDbgDisp_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREpOff_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREpOff_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREpOff(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREpOff_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SREpOff_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRClock_Mode_MASK (0x1800U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRClock_Mode_SHIFT (11U)
/*! diseng_framegen1_SRClock_Mode
 *  0b00..No clock regulation.
 *  0b01..Adapt clock frequency to input frame rate. Output alignment is done with h/vtotal regulation
 *  0b10..Start with CLKADAPT till in sync, switch to ONLY after in sync.
 *  0b11..Only clock regulation.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRClock_Mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRClock_Mode_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRClock_Mode_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRExt_MASK (0x2000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRExt_SHIFT (13U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRExt(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRExt_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_SRExt_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_CsSyncSel_MASK (0xC0000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_CsSyncSel_SHIFT (30U)
/*! diseng_framegen1_CsSyncSel
 *  0b00..Use APIX control signals for external sync.
 *  0b01..Use HS VS for external sync.
 *  0b10..Use DSC control signals for external sync.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_CsSyncSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_CsSyncSel_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR1_diseng_framegen1_CsSyncSel_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR2 - FrameGen Skew Regulation Control Register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMin_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMin_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMax_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMax_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR2_diseng_framegen1_HTotalMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR3 - FrameGen Skew Regulation Control Register 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMin_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMin_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMax_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMax_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR3_diseng_framegen1_VTotalMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR4 - FrameGen Skew Regulation Control Register 4 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR4_diseng_framegen1_TargetSkew_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR4_diseng_framegen1_TargetSkew_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR4_diseng_framegen1_TargetSkew(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR4_diseng_framegen1_TargetSkew_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR4_diseng_framegen1_TargetSkew_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR5 - FrameGen Skew Regulation Control Register 5 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR5_diseng_framegen1_SyncRangeLow_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR5_diseng_framegen1_SyncRangeLow_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR5_diseng_framegen1_SyncRangeLow(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR5_diseng_framegen1_SyncRangeLow_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR5_diseng_framegen1_SyncRangeLow_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR6 - FrameGen Skew Regulation Control Register 6 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR6_diseng_framegen1_SyncRangeHigh_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR6_diseng_framegen1_SyncRangeHigh_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR6_diseng_framegen1_SyncRangeHigh(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR6_diseng_framegen1_SyncRangeHigh_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR6_diseng_framegen1_SyncRangeHigh_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR7 - FrameGen Skew Regulation Control Register 7 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_HorizontalIncrement_MASK (0x7FFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_HorizontalIncrement_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_HorizontalIncrement(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_HorizontalIncrement_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_HorizontalIncrement_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_VerticalIncrement_MASK (0xF8000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_VerticalIncrement_SHIFT (27U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_VerticalIncrement(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_VerticalIncrement_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR7_diseng_framegen1_VerticalIncrement_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR8 - FrameGen Skew Regulation Control Register 8 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR8_diseng_framegen1_StartOffset_MASK (0x3FFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR8_diseng_framegen1_StartOffset_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR8_diseng_framegen1_StartOffset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR8_diseng_framegen1_StartOffset_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR8_diseng_framegen1_StartOffset_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR9 - FrameGen Skew Regulation Control Register 9 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR9_diseng_framegen1_clockperiod_ref_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR9_diseng_framegen1_clockperiod_ref_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR9_diseng_framegen1_clockperiod_ref(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR9_diseng_framegen1_clockperiod_ref_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR9_diseng_framegen1_clockperiod_ref_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR10 - FrameGen Skew Regulation Control Register 10 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR10_diseng_framegen1_clockperiod_min_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR10_diseng_framegen1_clockperiod_min_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR10_diseng_framegen1_clockperiod_min(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR10_diseng_framegen1_clockperiod_min_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR10_diseng_framegen1_clockperiod_min_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR11 - FrameGen Skew Regulation Control Register 11 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR11_diseng_framegen1_clockperiod_max_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR11_diseng_framegen1_clockperiod_max_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR11_diseng_framegen1_clockperiod_max(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR11_diseng_framegen1_clockperiod_max_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR11_diseng_framegen1_clockperiod_max_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR12 - FrameGen Skew Regulation Control Register 12 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR12_diseng_framegen1_pixel_period_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR12_diseng_framegen1_pixel_period_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR12_diseng_framegen1_pixel_period(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR12_diseng_framegen1_pixel_period_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR12_diseng_framegen1_pixel_period_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR13 - FrameGen Skew Regulation Control Register 13 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_filterrate_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_filterrate_SHIFT (2U)
/*! diseng_framegen1_CSR_filterrate
 *  0b00..Clock measurement update rate defined by CSR_updaterate, no additional filter used.
 *  0b01..Clock measurements update rate defined by CSR_updaterate filtered by 4.
 *  0b10..Clock measurements update rate defined by CSR_updaterate filtered by 16.
 *  0b11..Clock measurements update rate defined by CSR_updaterate filtered by 64.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_filterrate(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_filterrate_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_filterrate_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_updaterate_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_updaterate_SHIFT (4U)
/*! diseng_framegen1_CSR_updaterate
 *  0b000..Clock measurement is off, reference value is used.
 *  0b100..Measured clock is averaged over 2^16 input clock cycles.
 *  0b101..Measured clock is averaged over 2^14 input clock cycles.
 *  0b110..Measured clock is averaged over 2^12 input clock cycles.
 *  0b111..Measured clock is averaged over 2^10 input clock cycles.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_updaterate(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_updaterate_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CSR_updaterate_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CMSyncSel_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CMSyncSel_SHIFT (7U)
/*! diseng_framegen1_CMSyncSel
 *  0b0..Use APIX control signals for clock measurement.
 *  0b1..Use HS VS for clock measurement.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CMSyncSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CMSyncSel_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR13_diseng_framegen1_CMSyncSel_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR14 - FrameGen Skew Regulation Control Register 14 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_Clockperiod_val_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_Clockperiod_val_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_Clockperiod_val(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_Clockperiod_val_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_Clockperiod_val_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_SSCGTrack_en_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_SSCGTrack_en_SHIFT (3U)
/*! diseng_framegen1_CSR_SSCGTrack_en
 *  0b0..Phase regulation does not take SSCG into account.
 *  0b1..Phase regulation does take SSCG into account.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_SSCGTrack_en(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_SSCGTrack_en_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_SSCGTrack_en_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_SHIFT (4U)
/*! diseng_framegen1_CSR_ramprate
 *  0b000..Phase regulation uses phasegain for step.
 *  0b001..Phase regulation uses 1/2 of phasegain for step.
 *  0b010..Phase regulation uses 1/4 of phasegain for step.
 *  0b011..Phase regulation uses 1/8 of phasegain for step.
 *  0b100..Phase regulation uses 1/16 of phasegain for step.
 *  0b101..Phase regulation uses 1/32 of phasegain for step.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_en_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_en_SHIFT (7U)
/*! diseng_framegen1_CSR_ramprate_en
 *  0b0..Phase regulation uses phasegain for step.
 *  0b1..Phase regulation uses CSR_ramprate of phasegain for step.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_en(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_en_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_ramprate_en_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegain_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegain_SHIFT (8U)
/*! diseng_framegen1_CSR_phasegain
 *  0b000..Phase regulation uses 1/1024 of clock period. Htotal has to be bigger than 1025+32.
 *  0b001..Phase regulation uses 1/512 of clock period. Htotal has to be bigger than 513+32.
 *  0b010..Phase regulation uses 1/256 of clock period. Htotal has to be bigger than 257+32.
 *  0b011..Phase regulation uses 1/128 of clock period. Htotal has to be bigger than 129+32.
 *  0b100..Phase regulation uses 1/64 of clock period. Htotal has to be bigger than 65+32.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegain(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegain_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegain_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegainsync_MASK (0x7000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegainsync_SHIFT (12U)
/*! diseng_framegen1_CSR_phasegainsync
 *  0b000..Phase regulation uses 1/1024 of clock period. Htotal has to be bigger than 1025+32.
 *  0b001..Phase regulation uses 1/512 of clock period. Htotal has to be bigger than 513+32.
 *  0b010..Phase regulation uses 1/256 of clock period. Htotal has to be bigger than 257+32.
 *  0b011..Phase regulation uses 1/128 of clock period. Htotal has to be bigger than 129+32.
 *  0b100..Phase regulation uses 1/64 of clock period. Htotal has to be bigger than 65+32.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegainsync(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegainsync_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_CSR_phasegainsync_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_SkewOffset_Threshold_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_SkewOffset_Threshold_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_SkewOffset_Threshold(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_SkewOffset_Threshold_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR14_diseng_framegen1_SkewOffset_Threshold_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCR15 - FrameGen Skew Regulation Control Register 15 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsHsPol_MASK (0x4000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsHsPol_SHIFT (14U)
/*! diseng_framegen1_CsHsPol
 *  0b0..HSYNC is low active.
 *  0b1..HSYNC is high active.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsHsPol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsHsPol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsHsPol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsVsPol_MASK (0x8000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsVsPol_SHIFT (15U)
/*! diseng_framegen1_CsVsPol
 *  0b0..VSYNC is low active.
 *  0b1..VSYNC is high active.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsVsPol(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsVsPol_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsVsPol_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsDelay_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsDelay_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsDelay(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsDelay_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCR15_diseng_framegen1_CsDelay_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGKSDR - FrameGen Kick System Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_PCntCplMax_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_PCntCplMax_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_PCntCplMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_PCntCplMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_PCntCplMax_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_SCntCplMax_MASK (0x70000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_SCntCplMax_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_SCntCplMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_SCntCplMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGKSDR_diseng_framegen1_SCntCplMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_PACFG - FrameGen Primary Area Config Register 1 (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstartx_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstartx_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstartx(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstartx_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstartx_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstarty_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstarty_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstarty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstarty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_PACFG_diseng_framegen1_Pstarty_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_SACFG - FrameGen Secondary Area Config Register 1 (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstartx_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstartx_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstartx(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstartx_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstartx_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstarty_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstarty_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstarty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstarty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_SACFG_diseng_framegen1_Sstarty_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGINCTRL - FrameGen Input Control Register (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_FgDm_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_FgDm_SHIFT (0U)
/*! diseng_framegen1_FgDm
 *  0b000..Black Color Background is shown.
 *  0b001..Constant Color Background is shown.
 *  0b010..Primary input only is shown.
 *  0b011..Secondary input only is shown.
 *  0b100..Both inputs overlaid with primary on top.
 *  0b101..Both inputs overlaid with secondary on top.
 *  0b110..White color background with test pattern is shown.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_FgDm(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_FgDm_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_FgDm_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnPrimAlpha_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnPrimAlpha_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnPrimAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnPrimAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnPrimAlpha_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnSecAlpha_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnSecAlpha_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnSecAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnSecAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRL_diseng_framegen1_EnSecAlpha_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGINCTRLPANIC - FrameGen Input Control Panic Register (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_FgDmPanic_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_FgDmPanic_SHIFT (0U)
/*! diseng_framegen1_FgDmPanic
 *  0b000..Black Color Background is shown.
 *  0b001..Constant Color Background is shown.
 *  0b010..Primary input only is shown.
 *  0b011..Secondary input only is shown.
 *  0b100..Both inputs overlaid with primary on top.
 *  0b101..Both inputs overlaid with secondary on top.
 *  0b110..White color background with test pattern is shown.
 */
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_FgDmPanic(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_FgDmPanic_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_FgDmPanic_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnPrimAlphaPanic_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnPrimAlphaPanic_SHIFT (3U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnPrimAlphaPanic(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnPrimAlphaPanic_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnPrimAlphaPanic_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnSecAlphaPanic_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnSecAlphaPanic_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnSecAlphaPanic(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnSecAlphaPanic_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGINCTRLPANIC_diseng_framegen1_EnSecAlphaPanic_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGCCR - FrameGen Constant Color Register (shadowed) */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcBlue_MASK (0x3FFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcBlue_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcBlue_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcBlue_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcGreen_MASK (0xFFC00U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcGreen_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcGreen_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcGreen_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcRed_MASK (0x3FF00000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcRed_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcRed_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcRed_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcAlpha_MASK (0xC0000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcAlpha_SHIFT (30U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCCR_diseng_framegen1_CcAlpha_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGENABLE - FrameGen Enable Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENABLE_diseng_framegen1_FgEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENABLE_diseng_framegen1_FgEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENABLE_diseng_framegen1_FgEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENABLE_diseng_framegen1_FgEn_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENABLE_diseng_framegen1_FgEn_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSLR - FrameGen Shadow Load Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSLR_diseng_framegen1_ShdTokGen_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSLR_diseng_framegen1_ShdTokGen_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSLR_diseng_framegen1_ShdTokGen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSLR_diseng_framegen1_ShdTokGen_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSLR_diseng_framegen1_ShdTokGen_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGENSTS - FrameGen Enable Status Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_EnSts_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_EnSts_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_EnSts(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_EnSts_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_EnSts_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_PanicStat_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_PanicStat_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_PanicStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_PanicStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGENSTS_diseng_framegen1_PanicStat_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGTIMESTAMP - Time stamp status. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_LineIndex_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_LineIndex_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_LineIndex(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_LineIndex_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_LineIndex_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_FrameIndex_MASK (0xFFFFC000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_FrameIndex_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_FrameIndex(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_FrameIndex_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGTIMESTAMP_diseng_framegen1_FrameIndex_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGCHSTAT - FrameGen Channel Status Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PFifoEmpty_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PFifoEmpty_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PFifoEmpty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PFifoEmpty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PFifoEmpty_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PrimSyncStat_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PrimSyncStat_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PrimSyncStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PrimSyncStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_PrimSyncStat_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SFifoEmpty_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SFifoEmpty_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SFifoEmpty(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SFifoEmpty_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SFifoEmpty_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SkewRangeErr_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SkewRangeErr_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SkewRangeErr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SkewRangeErr_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SkewRangeErr_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SecSyncStat_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SecSyncStat_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SecSyncStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SecSyncStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTAT_diseng_framegen1_SecSyncStat_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGCHSTATCLR - FrameGen Channel Status Clear Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrPrimStat_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrPrimStat_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrPrimStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrPrimStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrPrimStat_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrSecStat_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrSecStat_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrSecStat(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrSecStat_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGCHSTATCLR_diseng_framegen1_ClrSecStat_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSKEWMON - FrameGen Skew Monitor Register for Secondary Channel Skew Control */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSKEWMON_diseng_framegen1_SkewMon_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSKEWMON_diseng_framegen1_SkewMon_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSKEWMON_diseng_framegen1_SkewMon(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSKEWMON_diseng_framegen1_SkewMon_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSKEWMON_diseng_framegen1_SkewMon_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGPFIFOMIN - FrameGen Primary FIFO Min Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMIN_diseng_framegen1_PFifoMin_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMIN_diseng_framegen1_PFifoMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMIN_diseng_framegen1_PFifoMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMIN_diseng_framegen1_PFifoMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMIN_diseng_framegen1_PFifoMin_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGPFIFOMAX - FrameGen Primary FIFO Max Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMAX_diseng_framegen1_PFifoMax_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMAX_diseng_framegen1_PFifoMax_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMAX_diseng_framegen1_PFifoMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMAX_diseng_framegen1_PFifoMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOMAX_diseng_framegen1_PFifoMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGPFIFOFILLCLR - FrameGen Primary FIFO Fill Clear Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOFILLCLR_diseng_framegen1_PFifoFillClr_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOFILLCLR_diseng_framegen1_PFifoFillClr_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOFILLCLR_diseng_framegen1_PFifoFillClr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOFILLCLR_diseng_framegen1_PFifoFillClr_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOFILLCLR_diseng_framegen1_PFifoFillClr_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGPFIFOTRES - FrameGen Primary FIFO Thresholds */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres0_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres0_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres0_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres1_MASK (0xFFFF0000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres1_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGPFIFOTRES_diseng_framegen1_PFifoTres1_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSFIFOMIN - FrameGen Secondary FIFO Min Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMIN_diseng_framegen1_SFifoMin_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMIN_diseng_framegen1_SFifoMin_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMIN_diseng_framegen1_SFifoMin(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMIN_diseng_framegen1_SFifoMin_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMIN_diseng_framegen1_SFifoMin_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSFIFOMAX - FrameGen Secondary FIFO Max Fill Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMAX_diseng_framegen1_SFifoMax_MASK (0xFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMAX_diseng_framegen1_SFifoMax_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMAX_diseng_framegen1_SFifoMax(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMAX_diseng_framegen1_SFifoMax_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOMAX_diseng_framegen1_SFifoMax_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSFIFOFILLCLR - FrameGen Secondary FIFO Fill Clear Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOFILLCLR_diseng_framegen1_SFifoFillClr_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOFILLCLR_diseng_framegen1_SFifoFillClr_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOFILLCLR_diseng_framegen1_SFifoFillClr(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOFILLCLR_diseng_framegen1_SFifoFillClr_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSFIFOFILLCLR_diseng_framegen1_SFifoFillClr_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSREPD - FrameGen Skew Regulation ExtraPolation Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSREPD_diseng_framegen1_EpVal_MASK (0x1FFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSREPD_diseng_framegen1_EpVal_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSREPD_diseng_framegen1_EpVal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSREPD_diseng_framegen1_EpVal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSREPD_diseng_framegen1_EpVal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRFTD - FrameGen Skew Regulation Frame Total Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRFTD_diseng_framegen1_FrTot_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRFTD_diseng_framegen1_FrTot_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRFTD_diseng_framegen1_FrTot(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRFTD_diseng_framegen1_FrTot_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRFTD_diseng_framegen1_FrTot_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCSHTOTAL - FrameGen Skew Regulation External Sync HTotal Debug Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCSHTOTAL_diseng_framegen1_FrCSHTotal_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCSHTOTAL_diseng_framegen1_FrCSHTotal_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCSHTOTAL_diseng_framegen1_FrCSHTotal(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCSHTOTAL_diseng_framegen1_FrCSHTotal_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCSHTOTAL_diseng_framegen1_FrCSHTotal_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSRCLOCKDIV - FrameGen Skew Regulation External PLL Clock divider */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCLOCKDIV_diseng_framegen1_FrClockDiv_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCLOCKDIV_diseng_framegen1_FrClockDiv_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCLOCKDIV_diseng_framegen1_FrClockDiv(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCLOCKDIV_diseng_framegen1_FrClockDiv_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSRCLOCKDIV_diseng_framegen1_FrClockDiv_MASK)
/*! @} */

/*! @name DISENG_FRAMEGEN1_FGSL - FrameGen Scanline Register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_ScanLine_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_ScanLine_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_ScanLine(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_ScanLine_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_ScanLine_MASK)

#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_VBlank_MASK (0x80000000U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_VBlank_SHIFT (31U)
#define DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_VBlank(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_VBlank_SHIFT)) & DISPLAY_SEERIS_DISENG_FRAMEGEN1_FGSL_diseng_framegen1_VBlank_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOCKUNLOCK - Register to change the protection status of this address block */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOCKUNLOCK_diseng_sig1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKUNLOCK_diseng_sig1_LockUnlock_SHIFT (0U)
/*! diseng_sig1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKUNLOCK_diseng_sig1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOCKUNLOCK_diseng_sig1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOCKUNLOCK_diseng_sig1_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOCKSTATUS - Protection status of this address block */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOCKSTATUS_diseng_sig1_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATICCONTROL - Global configuration */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdEn_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdLdSel_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdLdSel_SHIFT (4U)
/*! diseng_sig1_ShdLdSel
 *  0b0..Shadows are loaded at start of frame for each evaluation window for which ShdLdReq has been set.
 *  0b1..Shadows of all evaluation windows are loaded synchronous to the display stream (shadow load token received on frame input port).
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdLdSel(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdLdSel_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATICCONTROL_diseng_sig1_ShdLdSel_MASK)
/*! @} */

/*! @name DISENG_SIG1_ERRORTHRESHOLD - Set and reset thresholds applying to Window_Error and Cluster_Error interrupts and status bits */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThres_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThres_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThres(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThres_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThres_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThresReset_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThresReset_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThresReset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThresReset_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_ERRORTHRESHOLD_diseng_sig1_ErrThresReset_MASK)
/*! @} */

/*! @name DISENG_SIG1_MATCHTHRESHOLD - Set and reset thresholds applying to Match interrupt and status bits */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThres_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThres_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThres(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThres_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThres_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThresReset_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThresReset_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThresReset(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThresReset_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MATCHTHRESHOLD_diseng_sig1_MatchThresReset_MASK)
/*! @} */

/*! @name DISENG_SIG1_PANICCOLOR - Overlay color for evaluation windows in panic mode */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicAlpha_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicAlpha_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicAlpha(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicAlpha_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicAlpha_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicBlue_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicBlue_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicBlue(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicBlue_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicBlue_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicGreen_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicGreen_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicGreen(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicGreen_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicGreen_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicRed_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicRed_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicRed(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicRed_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PANICCOLOR_diseng_sig1_PanicRed_MASK)
/*! @} */

/*! @name DISENG_SIG1_SHADOWLOAD - Shadow load control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_SHADOWLOAD_diseng_sig1_ShdLdReq_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_SHADOWLOAD_diseng_sig1_ShdLdReq_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_SHADOWLOAD_diseng_sig1_ShdLdReq(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_SHADOWLOAD_diseng_sig1_ShdLdReq_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_SHADOWLOAD_diseng_sig1_ShdLdReq_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTINUOUSMODE - Signature operation mode control */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTINUOUSMODE_diseng_sig1_EnCont_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTINUOUSMODE_diseng_sig1_EnCont_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTINUOUSMODE_diseng_sig1_EnCont(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTINUOUSMODE_diseng_sig1_EnCont_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTINUOUSMODE_diseng_sig1_EnCont_MASK)
/*! @} */

/*! @name DISENG_SIG1_SOFTWAREKICK - Signature measurement trigger */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_SOFTWAREKICK_diseng_sig1_Kick_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_SOFTWAREKICK_diseng_sig1_Kick_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_SOFTWAREKICK_diseng_sig1_Kick(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_SOFTWAREKICK_diseng_sig1_Kick_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_SOFTWAREKICK_diseng_sig1_Kick_MASK)
/*! @} */

/*! @name DISENG_SIG1_SKIPWINDOW - Enable skipping window feature. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_SKIPWINDOW_diseng_sig1_SkipWinEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_SKIPWINDOW_diseng_sig1_SkipWinEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_SKIPWINDOW_diseng_sig1_SkipWinEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_SKIPWINDOW_diseng_sig1_SkipWinEn_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_SKIPWINDOW_diseng_sig1_SkipWinEn_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATUS - Signature evaluation status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigState_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigState_SHIFT (0U)
/*! diseng_sig1_SigState
 *  0b0..Signature is in idle state
 *  0b1..Signature is in run state
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigState(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigState_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigState_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigValid_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigValid_SHIFT (1U)
/*! diseng_sig1_SigValid
 *  0b0..Signature results are not valid
 *  0b1..Signature results are valid
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigValid(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigValid_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_SigValid_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Window_Error_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Window_Error_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Window_Error(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Window_Error_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Window_Error_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Error_MASK (0xF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Error_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Error(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Error_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Error_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Match_MASK (0xF00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Match_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Match(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Match_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_diseng_sig1_Cluster_Match_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW0 - Window 0, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_En_Window0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_En_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_En_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_En_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_En_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_CRC_Window0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_CRC_Window0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_CRC_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_CRC_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_CRC_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaMask_Window0_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaMask_Window0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaMask_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaMask_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaMask_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaInv_Window0_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaInv_Window0_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaInv_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaInv_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaInv_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaSel_Window0_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaSel_Window0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaSel_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaSel_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_AlphaSel_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_LocalPanic_Window0_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_LocalPanic_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_LocalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_LocalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_LocalPanic_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_GlobalPanic_Window0_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_GlobalPanic_Window0_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_GlobalPanic_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_GlobalPanic_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_GlobalPanic_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_Sum_Window0_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_Sum_Window0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_Sum_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_Sum_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW0_diseng_sig1_Sum_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW0 - Window 0, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW0_diseng_sig1_UpperLeft_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW0 - Window 0, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_X_Window0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_X_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_X_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_X_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_X_Window0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_Y_Window0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_Y_Window0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_Y_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_Y_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW0_diseng_sig1_LowerRight_Y_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW0 - Window 0, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW0_diseng_sig1_Ref_R_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW0_diseng_sig1_Ref_R_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW0_diseng_sig1_Ref_R_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW0_diseng_sig1_Ref_R_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW0_diseng_sig1_Ref_R_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW0 - Window 0, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW0_diseng_sig1_Ref_G_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW0_diseng_sig1_Ref_G_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW0_diseng_sig1_Ref_G_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW0_diseng_sig1_Ref_G_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW0_diseng_sig1_Ref_G_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW0 - Window 0, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW0_diseng_sig1_Ref_B_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW0_diseng_sig1_Ref_B_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW0_diseng_sig1_Ref_B_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW0_diseng_sig1_Ref_B_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW0_diseng_sig1_Ref_B_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS0_WINDOW0 - Controls of Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaMask_S0_Win0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaMask_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaMask_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaMask_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaMask_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaInv_S0_Win0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaInv_S0_Win0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaInv_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaInv_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaInv_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaSel_S0_Win0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaSel_S0_Win0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaSel_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaSel_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW0_diseng_sig1_AlphaSel_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS1_WINDOW0 - Controls of Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaMask_S1_Win0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaMask_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaMask_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaMask_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaMask_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaInv_S1_Win0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaInv_S1_Win0_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaInv_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaInv_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaInv_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaSel_S1_Win0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaSel_S1_Win0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaSel_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaSel_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW0_diseng_sig1_AlphaSel_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_REDSUM_WINDOW0 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW0_diseng_sig1_Min_RSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW0_diseng_sig1_Min_RSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW0_diseng_sig1_Min_RSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW0_diseng_sig1_Min_RSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW0_diseng_sig1_Min_RSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_GREENSUM_WINDOW0 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW0_diseng_sig1_Min_GSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW0_diseng_sig1_Min_GSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW0_diseng_sig1_Min_GSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW0_diseng_sig1_Min_GSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW0_diseng_sig1_Min_GSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_BLUESUM_WINDOW0 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW0_diseng_sig1_Min_BSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW0_diseng_sig1_Min_BSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW0_diseng_sig1_Min_BSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW0_diseng_sig1_Min_BSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW0_diseng_sig1_Min_BSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_LUMSUM_WINDOW0 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW0_diseng_sig1_Min_LSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW0_diseng_sig1_Min_LSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW0_diseng_sig1_Min_LSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW0_diseng_sig1_Min_LSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW0_diseng_sig1_Min_LSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_REDSUM_WINDOW0 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW0_diseng_sig1_Max_RSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW0_diseng_sig1_Max_RSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW0_diseng_sig1_Max_RSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW0_diseng_sig1_Max_RSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW0_diseng_sig1_Max_RSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_GREENSUM_WINDOW0 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW0_diseng_sig1_Max_GSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW0_diseng_sig1_Max_GSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW0_diseng_sig1_Max_GSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW0_diseng_sig1_Max_GSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW0_diseng_sig1_Max_GSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_BLUESUM_WINDOW0 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW0_diseng_sig1_Max_BSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW0_diseng_sig1_Max_BSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW0_diseng_sig1_Max_BSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW0_diseng_sig1_Max_BSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW0_diseng_sig1_Max_BSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_LUMSUM_WINDOW0 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW0_diseng_sig1_Max_LSum_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW0_diseng_sig1_Max_LSum_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW0_diseng_sig1_Max_LSum_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW0_diseng_sig1_Max_LSum_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW0_diseng_sig1_Max_LSum_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW1 - Window 1, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_En_Window1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_En_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_En_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_En_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_En_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_CRC_Window1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_CRC_Window1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_CRC_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_CRC_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_CRC_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaMask_Window1_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaMask_Window1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaMask_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaMask_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaMask_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaInv_Window1_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaInv_Window1_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaInv_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaInv_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaInv_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaSel_Window1_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaSel_Window1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaSel_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaSel_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_AlphaSel_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_LocalPanic_Window1_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_LocalPanic_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_LocalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_LocalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_LocalPanic_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_GlobalPanic_Window1_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_GlobalPanic_Window1_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_GlobalPanic_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_GlobalPanic_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_GlobalPanic_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_Sum_Window1_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_Sum_Window1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_Sum_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_Sum_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW1_diseng_sig1_Sum_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW1 - Window 1, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW1_diseng_sig1_UpperLeft_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW1 - Window 1, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_X_Window1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_X_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_X_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_X_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_X_Window1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_Y_Window1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_Y_Window1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_Y_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_Y_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW1_diseng_sig1_LowerRight_Y_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW1 - Window 1, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW1_diseng_sig1_Ref_R_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW1_diseng_sig1_Ref_R_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW1_diseng_sig1_Ref_R_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW1_diseng_sig1_Ref_R_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW1_diseng_sig1_Ref_R_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW1 - Window 1, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW1_diseng_sig1_Ref_G_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW1_diseng_sig1_Ref_G_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW1_diseng_sig1_Ref_G_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW1_diseng_sig1_Ref_G_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW1_diseng_sig1_Ref_G_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW1 - Window 1, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW1_diseng_sig1_Ref_B_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW1_diseng_sig1_Ref_B_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW1_diseng_sig1_Ref_B_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW1_diseng_sig1_Ref_B_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW1_diseng_sig1_Ref_B_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS0_WINDOW1 - Controls of Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaMask_S0_Win1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaMask_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaMask_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaMask_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaMask_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaInv_S0_Win1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaInv_S0_Win1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaInv_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaInv_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaInv_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaSel_S0_Win1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaSel_S0_Win1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaSel_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaSel_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW1_diseng_sig1_AlphaSel_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS1_WINDOW1 - Controls of Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaMask_S1_Win1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaMask_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaMask_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaMask_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaMask_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaInv_S1_Win1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaInv_S1_Win1_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaInv_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaInv_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaInv_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaSel_S1_Win1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaSel_S1_Win1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaSel_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaSel_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW1_diseng_sig1_AlphaSel_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_REDSUM_WINDOW1 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW1_diseng_sig1_Min_RSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW1_diseng_sig1_Min_RSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW1_diseng_sig1_Min_RSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW1_diseng_sig1_Min_RSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW1_diseng_sig1_Min_RSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_GREENSUM_WINDOW1 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW1_diseng_sig1_Min_GSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW1_diseng_sig1_Min_GSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW1_diseng_sig1_Min_GSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW1_diseng_sig1_Min_GSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW1_diseng_sig1_Min_GSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_BLUESUM_WINDOW1 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW1_diseng_sig1_Min_BSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW1_diseng_sig1_Min_BSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW1_diseng_sig1_Min_BSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW1_diseng_sig1_Min_BSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW1_diseng_sig1_Min_BSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_LUMSUM_WINDOW1 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW1_diseng_sig1_Min_LSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW1_diseng_sig1_Min_LSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW1_diseng_sig1_Min_LSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW1_diseng_sig1_Min_LSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW1_diseng_sig1_Min_LSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_REDSUM_WINDOW1 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW1_diseng_sig1_Max_RSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW1_diseng_sig1_Max_RSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW1_diseng_sig1_Max_RSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW1_diseng_sig1_Max_RSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW1_diseng_sig1_Max_RSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_GREENSUM_WINDOW1 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW1_diseng_sig1_Max_GSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW1_diseng_sig1_Max_GSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW1_diseng_sig1_Max_GSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW1_diseng_sig1_Max_GSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW1_diseng_sig1_Max_GSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_BLUESUM_WINDOW1 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW1_diseng_sig1_Max_BSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW1_diseng_sig1_Max_BSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW1_diseng_sig1_Max_BSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW1_diseng_sig1_Max_BSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW1_diseng_sig1_Max_BSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_LUMSUM_WINDOW1 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW1_diseng_sig1_Max_LSum_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW1_diseng_sig1_Max_LSum_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW1_diseng_sig1_Max_LSum_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW1_diseng_sig1_Max_LSum_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW1_diseng_sig1_Max_LSum_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW2 - Window 2, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_En_Window2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_En_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_En_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_En_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_En_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_CRC_Window2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_CRC_Window2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_CRC_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_CRC_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_CRC_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaMask_Window2_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaMask_Window2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaMask_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaMask_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaMask_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaInv_Window2_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaInv_Window2_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaInv_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaInv_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaInv_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaSel_Window2_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaSel_Window2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaSel_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaSel_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_AlphaSel_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_LocalPanic_Window2_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_LocalPanic_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_LocalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_LocalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_LocalPanic_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_GlobalPanic_Window2_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_GlobalPanic_Window2_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_GlobalPanic_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_GlobalPanic_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_GlobalPanic_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_Sum_Window2_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_Sum_Window2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_Sum_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_Sum_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW2_diseng_sig1_Sum_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW2 - Window 2, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW2_diseng_sig1_UpperLeft_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW2 - Window 2, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_X_Window2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_X_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_X_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_X_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_X_Window2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_Y_Window2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_Y_Window2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_Y_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_Y_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW2_diseng_sig1_LowerRight_Y_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW2 - Window 2, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW2_diseng_sig1_Ref_R_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW2_diseng_sig1_Ref_R_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW2_diseng_sig1_Ref_R_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW2_diseng_sig1_Ref_R_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW2_diseng_sig1_Ref_R_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW2 - Window 2, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW2_diseng_sig1_Ref_G_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW2_diseng_sig1_Ref_G_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW2_diseng_sig1_Ref_G_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW2_diseng_sig1_Ref_G_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW2_diseng_sig1_Ref_G_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW2 - Window 2, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW2_diseng_sig1_Ref_B_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW2_diseng_sig1_Ref_B_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW2_diseng_sig1_Ref_B_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW2_diseng_sig1_Ref_B_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW2_diseng_sig1_Ref_B_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS0_WINDOW2 - Controls of Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaMask_S0_Win2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaMask_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaMask_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaMask_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaMask_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaInv_S0_Win2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaInv_S0_Win2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaInv_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaInv_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaInv_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaSel_S0_Win2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaSel_S0_Win2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaSel_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaSel_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW2_diseng_sig1_AlphaSel_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS1_WINDOW2 - Controls of Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaMask_S1_Win2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaMask_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaMask_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaMask_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaMask_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaInv_S1_Win2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaInv_S1_Win2_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaInv_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaInv_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaInv_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaSel_S1_Win2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaSel_S1_Win2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaSel_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaSel_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW2_diseng_sig1_AlphaSel_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_REDSUM_WINDOW2 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW2_diseng_sig1_Min_RSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW2_diseng_sig1_Min_RSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW2_diseng_sig1_Min_RSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW2_diseng_sig1_Min_RSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW2_diseng_sig1_Min_RSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_GREENSUM_WINDOW2 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW2_diseng_sig1_Min_GSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW2_diseng_sig1_Min_GSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW2_diseng_sig1_Min_GSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW2_diseng_sig1_Min_GSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW2_diseng_sig1_Min_GSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_BLUESUM_WINDOW2 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW2_diseng_sig1_Min_BSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW2_diseng_sig1_Min_BSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW2_diseng_sig1_Min_BSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW2_diseng_sig1_Min_BSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW2_diseng_sig1_Min_BSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_LUMSUM_WINDOW2 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW2_diseng_sig1_Min_LSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW2_diseng_sig1_Min_LSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW2_diseng_sig1_Min_LSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW2_diseng_sig1_Min_LSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW2_diseng_sig1_Min_LSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_REDSUM_WINDOW2 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW2_diseng_sig1_Max_RSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW2_diseng_sig1_Max_RSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW2_diseng_sig1_Max_RSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW2_diseng_sig1_Max_RSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW2_diseng_sig1_Max_RSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_GREENSUM_WINDOW2 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW2_diseng_sig1_Max_GSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW2_diseng_sig1_Max_GSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW2_diseng_sig1_Max_GSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW2_diseng_sig1_Max_GSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW2_diseng_sig1_Max_GSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_BLUESUM_WINDOW2 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW2_diseng_sig1_Max_BSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW2_diseng_sig1_Max_BSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW2_diseng_sig1_Max_BSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW2_diseng_sig1_Max_BSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW2_diseng_sig1_Max_BSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_LUMSUM_WINDOW2 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW2_diseng_sig1_Max_LSum_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW2_diseng_sig1_Max_LSum_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW2_diseng_sig1_Max_LSum_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW2_diseng_sig1_Max_LSum_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW2_diseng_sig1_Max_LSum_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW3 - Window 3, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_En_Window3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_En_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_En_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_En_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_En_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_CRC_Window3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_CRC_Window3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_CRC_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_CRC_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_CRC_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaMask_Window3_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaMask_Window3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaMask_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaMask_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaMask_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaInv_Window3_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaInv_Window3_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaInv_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaInv_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaInv_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaSel_Window3_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaSel_Window3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaSel_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaSel_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_AlphaSel_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_LocalPanic_Window3_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_LocalPanic_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_LocalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_LocalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_LocalPanic_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_GlobalPanic_Window3_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_GlobalPanic_Window3_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_GlobalPanic_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_GlobalPanic_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_GlobalPanic_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_Sum_Window3_MASK (0x1000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_Sum_Window3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_Sum_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_Sum_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW3_diseng_sig1_Sum_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW3 - Window 3, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW3_diseng_sig1_UpperLeft_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW3 - Window 3, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_X_Window3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_X_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_X_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_X_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_X_Window3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_Y_Window3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_Y_Window3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_Y_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_Y_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW3_diseng_sig1_LowerRight_Y_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW3 - Window 3, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW3_diseng_sig1_Ref_R_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW3_diseng_sig1_Ref_R_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW3_diseng_sig1_Ref_R_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW3_diseng_sig1_Ref_R_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW3_diseng_sig1_Ref_R_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW3 - Window 3, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW3_diseng_sig1_Ref_G_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW3_diseng_sig1_Ref_G_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW3_diseng_sig1_Ref_G_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW3_diseng_sig1_Ref_G_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW3_diseng_sig1_Ref_G_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW3 - Window 3, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW3_diseng_sig1_Ref_B_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW3_diseng_sig1_Ref_B_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW3_diseng_sig1_Ref_B_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW3_diseng_sig1_Ref_B_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW3_diseng_sig1_Ref_B_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS0_WINDOW3 - Controls of Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaMask_S0_Win3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaMask_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaMask_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaMask_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaMask_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaInv_S0_Win3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaInv_S0_Win3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaInv_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaInv_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaInv_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaSel_S0_Win3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaSel_S0_Win3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaSel_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaSel_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS0_WINDOW3_diseng_sig1_AlphaSel_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATS1_WINDOW3 - Controls of Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaMask_S1_Win3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaMask_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaMask_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaMask_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaMask_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaInv_S1_Win3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaInv_S1_Win3_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaInv_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaInv_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaInv_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaSel_S1_Win3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaSel_S1_Win3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaSel_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaSel_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATS1_WINDOW3_diseng_sig1_AlphaSel_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_REDSUM_WINDOW3 - Minimum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW3_diseng_sig1_Min_RSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW3_diseng_sig1_Min_RSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW3_diseng_sig1_Min_RSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW3_diseng_sig1_Min_RSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_REDSUM_WINDOW3_diseng_sig1_Min_RSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_GREENSUM_WINDOW3 - Minimum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW3_diseng_sig1_Min_GSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW3_diseng_sig1_Min_GSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW3_diseng_sig1_Min_GSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW3_diseng_sig1_Min_GSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_GREENSUM_WINDOW3_diseng_sig1_Min_GSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_BLUESUM_WINDOW3 - Minimum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW3_diseng_sig1_Min_BSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW3_diseng_sig1_Min_BSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW3_diseng_sig1_Min_BSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW3_diseng_sig1_Min_BSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_BLUESUM_WINDOW3_diseng_sig1_Min_BSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MIN_LUMSUM_WINDOW3 - Minimum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW3_diseng_sig1_Min_LSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW3_diseng_sig1_Min_LSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW3_diseng_sig1_Min_LSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW3_diseng_sig1_Min_LSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MIN_LUMSUM_WINDOW3_diseng_sig1_Min_LSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_REDSUM_WINDOW3 - Maximum sum-threshold for red component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW3_diseng_sig1_Max_RSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW3_diseng_sig1_Max_RSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW3_diseng_sig1_Max_RSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW3_diseng_sig1_Max_RSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_REDSUM_WINDOW3_diseng_sig1_Max_RSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_GREENSUM_WINDOW3 - Maximum sum-threshold for green component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW3_diseng_sig1_Max_GSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW3_diseng_sig1_Max_GSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW3_diseng_sig1_Max_GSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW3_diseng_sig1_Max_GSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_GREENSUM_WINDOW3_diseng_sig1_Max_GSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_BLUESUM_WINDOW3 - Maximum sum-threshold for blue component of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW3_diseng_sig1_Max_BSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW3_diseng_sig1_Max_BSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW3_diseng_sig1_Max_BSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW3_diseng_sig1_Max_BSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_BLUESUM_WINDOW3_diseng_sig1_Max_BSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_MAX_LUMSUM_WINDOW3 - Maximum sum-threshold for luminance of the pixels in a window. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW3_diseng_sig1_Max_LSum_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW3_diseng_sig1_Max_LSum_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW3_diseng_sig1_Max_LSum_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW3_diseng_sig1_Max_LSum_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_MAX_LUMSUM_WINDOW3_diseng_sig1_Max_LSum_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW4 - Window 4, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_En_Window4_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_En_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_En_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_En_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_En_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_CRC_Window4_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_CRC_Window4_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_CRC_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_CRC_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_CRC_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaMask_Window4_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaMask_Window4_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaMask_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaMask_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaMask_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaInv_Window4_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaInv_Window4_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaInv_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaInv_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaInv_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaSel_Window4_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaSel_Window4_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaSel_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaSel_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_AlphaSel_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_LocalPanic_Window4_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_LocalPanic_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_LocalPanic_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_LocalPanic_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_LocalPanic_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_GlobalPanic_Window4_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_GlobalPanic_Window4_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_GlobalPanic_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_GlobalPanic_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW4_diseng_sig1_GlobalPanic_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW4 - Window 4, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_X_Window4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_X_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_X_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_X_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_X_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_Y_Window4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_Y_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_Y_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_Y_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW4_diseng_sig1_UpperLeft_Y_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW4 - Window 4, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_X_Window4_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_X_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_X_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_X_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_X_Window4_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_Y_Window4_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_Y_Window4_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_Y_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_Y_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW4_diseng_sig1_LowerRight_Y_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW4 - Window 4, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW4_diseng_sig1_Ref_R_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW4_diseng_sig1_Ref_R_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW4_diseng_sig1_Ref_R_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW4_diseng_sig1_Ref_R_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW4_diseng_sig1_Ref_R_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW4 - Window 4, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW4_diseng_sig1_Ref_G_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW4_diseng_sig1_Ref_G_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW4_diseng_sig1_Ref_G_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW4_diseng_sig1_Ref_G_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW4_diseng_sig1_Ref_G_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW4 - Window 4, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW4_diseng_sig1_Ref_B_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW4_diseng_sig1_Ref_B_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW4_diseng_sig1_Ref_B_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW4_diseng_sig1_Ref_B_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW4_diseng_sig1_Ref_B_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW5 - Window 5, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_En_Window5_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_En_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_En_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_En_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_En_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_CRC_Window5_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_CRC_Window5_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_CRC_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_CRC_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_CRC_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaMask_Window5_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaMask_Window5_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaMask_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaMask_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaMask_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaInv_Window5_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaInv_Window5_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaInv_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaInv_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaInv_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaSel_Window5_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaSel_Window5_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaSel_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaSel_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_AlphaSel_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_LocalPanic_Window5_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_LocalPanic_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_LocalPanic_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_LocalPanic_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_LocalPanic_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_GlobalPanic_Window5_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_GlobalPanic_Window5_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_GlobalPanic_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_GlobalPanic_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW5_diseng_sig1_GlobalPanic_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW5 - Window 5, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_X_Window5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_X_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_X_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_X_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_X_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_Y_Window5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_Y_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_Y_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_Y_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW5_diseng_sig1_UpperLeft_Y_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW5 - Window 5, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_X_Window5_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_X_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_X_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_X_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_X_Window5_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_Y_Window5_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_Y_Window5_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_Y_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_Y_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW5_diseng_sig1_LowerRight_Y_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW5 - Window 5, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW5_diseng_sig1_Ref_R_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW5_diseng_sig1_Ref_R_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW5_diseng_sig1_Ref_R_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW5_diseng_sig1_Ref_R_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW5_diseng_sig1_Ref_R_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW5 - Window 5, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW5_diseng_sig1_Ref_G_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW5_diseng_sig1_Ref_G_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW5_diseng_sig1_Ref_G_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW5_diseng_sig1_Ref_G_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW5_diseng_sig1_Ref_G_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW5 - Window 5, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW5_diseng_sig1_Ref_B_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW5_diseng_sig1_Ref_B_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW5_diseng_sig1_Ref_B_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW5_diseng_sig1_Ref_B_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW5_diseng_sig1_Ref_B_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW6 - Window 6, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_En_Window6_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_En_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_En_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_En_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_En_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_CRC_Window6_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_CRC_Window6_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_CRC_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_CRC_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_CRC_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaMask_Window6_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaMask_Window6_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaMask_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaMask_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaMask_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaInv_Window6_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaInv_Window6_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaInv_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaInv_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaInv_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaSel_Window6_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaSel_Window6_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaSel_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaSel_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_AlphaSel_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_LocalPanic_Window6_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_LocalPanic_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_LocalPanic_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_LocalPanic_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_LocalPanic_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_GlobalPanic_Window6_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_GlobalPanic_Window6_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_GlobalPanic_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_GlobalPanic_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW6_diseng_sig1_GlobalPanic_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW6 - Window 6, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_X_Window6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_X_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_X_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_X_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_X_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_Y_Window6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_Y_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_Y_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_Y_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW6_diseng_sig1_UpperLeft_Y_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW6 - Window 6, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_X_Window6_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_X_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_X_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_X_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_X_Window6_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_Y_Window6_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_Y_Window6_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_Y_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_Y_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW6_diseng_sig1_LowerRight_Y_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW6 - Window 6, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW6_diseng_sig1_Ref_R_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW6_diseng_sig1_Ref_R_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW6_diseng_sig1_Ref_R_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW6_diseng_sig1_Ref_R_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW6_diseng_sig1_Ref_R_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW6 - Window 6, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW6_diseng_sig1_Ref_G_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW6_diseng_sig1_Ref_G_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW6_diseng_sig1_Ref_G_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW6_diseng_sig1_Ref_G_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW6_diseng_sig1_Ref_G_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW6 - Window 6, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW6_diseng_sig1_Ref_B_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW6_diseng_sig1_Ref_B_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW6_diseng_sig1_Ref_B_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW6_diseng_sig1_Ref_B_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW6_diseng_sig1_Ref_B_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_WINDOW7 - Window 7, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_En_Window7_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_En_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_En_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_En_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_En_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_CRC_Window7_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_CRC_Window7_SHIFT (1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_CRC_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_CRC_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_CRC_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaMask_Window7_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaMask_Window7_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaMask_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaMask_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaMask_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaInv_Window7_MASK (0x200U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaInv_Window7_SHIFT (9U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaInv_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaInv_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaInv_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaSel_Window7_MASK (0x400U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaSel_Window7_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaSel_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaSel_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_AlphaSel_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_LocalPanic_Window7_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_LocalPanic_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_LocalPanic_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_LocalPanic_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_LocalPanic_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_GlobalPanic_Window7_MASK (0x20000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_GlobalPanic_Window7_SHIFT (17U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_GlobalPanic_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_GlobalPanic_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_WINDOW7_diseng_sig1_GlobalPanic_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_UPPERLEFT_WINDOW7 - Window 7, Upper Left Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_X_Window7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_X_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_X_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_X_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_X_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_Y_Window7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_Y_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_Y_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_Y_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_UPPERLEFT_WINDOW7_diseng_sig1_UpperLeft_Y_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_LOWERRIGHT_WINDOW7 - Window 7, Lower Right Coordinates */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_X_Window7_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_X_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_X_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_X_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_X_Window7_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_Y_Window7_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_Y_Window7_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_Y_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_Y_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LOWERRIGHT_WINDOW7_diseng_sig1_LowerRight_Y_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_R_WINDOW7 - Window 7, Reference CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW7_diseng_sig1_Ref_R_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW7_diseng_sig1_Ref_R_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW7_diseng_sig1_Ref_R_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW7_diseng_sig1_Ref_R_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_R_WINDOW7_diseng_sig1_Ref_R_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_G_WINDOW7 - Window 7, Reference CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW7_diseng_sig1_Ref_G_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW7_diseng_sig1_Ref_G_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW7_diseng_sig1_Ref_G_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW7_diseng_sig1_Ref_G_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_G_WINDOW7_diseng_sig1_Ref_G_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF_B_WINDOW7 - Window 7, Reference CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW7_diseng_sig1_Ref_B_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW7_diseng_sig1_Ref_B_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW7_diseng_sig1_Ref_B_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW7_diseng_sig1_Ref_B_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF_B_WINDOW7_diseng_sig1_Ref_B_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_CLUSTER0 - Cluster 0, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_En_Cluster0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_En_Cluster0_SHIFT (0U)
/*! diseng_sig1_En_Cluster0
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix0_En_Cluster0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix0_En_Cluster0_SHIFT (4U)
/*! diseng_sig1_Pix0_En_Cluster0
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix0_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix0_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix0_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix1_En_Cluster0_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix1_En_Cluster0_SHIFT (5U)
/*! diseng_sig1_Pix1_En_Cluster0
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix1_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix1_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix1_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix2_En_Cluster0_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix2_En_Cluster0_SHIFT (6U)
/*! diseng_sig1_Pix2_En_Cluster0
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix2_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix2_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix2_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix3_En_Cluster0_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix3_En_Cluster0_SHIFT (7U)
/*! diseng_sig1_Pix3_En_Cluster0
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix3_En_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix3_En_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_Pix3_En_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskBlue_Cluster0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskBlue_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskBlue_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskBlue_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskBlue_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskGreen_Cluster0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskGreen_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskGreen_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskGreen_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskGreen_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskRed_Cluster0_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskRed_Cluster0_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskRed_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskRed_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER0_diseng_sig1_MaskRed_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX0_CLUSTER0 - Cluster 0, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_X0_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_X0_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_X0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_X0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_X0_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_Y0_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_Y0_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_Y0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_Y0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER0_diseng_sig1_Y0_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX1_CLUSTER0 - Cluster 0, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_X1_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_X1_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_X1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_X1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_X1_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_Y1_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_Y1_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_Y1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_Y1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER0_diseng_sig1_Y1_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX2_CLUSTER0 - Cluster 0, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_X2_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_X2_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_X2_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_X2_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_X2_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_Y2_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_Y2_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_Y2_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_Y2_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER0_diseng_sig1_Y2_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX3_CLUSTER0 - Cluster 0, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_X3_Cluster0_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_X3_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_X3_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_X3_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_X3_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_Y3_Cluster0_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_Y3_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_Y3_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_Y3_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER0_diseng_sig1_Y3_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF0_CLUSTER0 - Cluster 0, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER0_diseng_sig1_Ref0_Cluster0_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER0_diseng_sig1_Ref0_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER0_diseng_sig1_Ref0_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER0_diseng_sig1_Ref0_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER0_diseng_sig1_Ref0_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF1_CLUSTER0 - Cluster 0, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER0_diseng_sig1_Ref1_Cluster0_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER0_diseng_sig1_Ref1_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER0_diseng_sig1_Ref1_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER0_diseng_sig1_Ref1_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER0_diseng_sig1_Ref1_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_CLUSTER1 - Cluster 1, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_En_Cluster1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_En_Cluster1_SHIFT (0U)
/*! diseng_sig1_En_Cluster1
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix0_En_Cluster1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix0_En_Cluster1_SHIFT (4U)
/*! diseng_sig1_Pix0_En_Cluster1
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix0_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix0_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix0_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix1_En_Cluster1_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix1_En_Cluster1_SHIFT (5U)
/*! diseng_sig1_Pix1_En_Cluster1
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix1_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix1_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix1_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix2_En_Cluster1_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix2_En_Cluster1_SHIFT (6U)
/*! diseng_sig1_Pix2_En_Cluster1
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix2_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix2_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix2_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix3_En_Cluster1_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix3_En_Cluster1_SHIFT (7U)
/*! diseng_sig1_Pix3_En_Cluster1
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix3_En_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix3_En_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_Pix3_En_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskBlue_Cluster1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskBlue_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskBlue_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskBlue_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskBlue_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskGreen_Cluster1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskGreen_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskGreen_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskGreen_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskGreen_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskRed_Cluster1_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskRed_Cluster1_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskRed_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskRed_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER1_diseng_sig1_MaskRed_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX0_CLUSTER1 - Cluster 1, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_X0_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_X0_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_X0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_X0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_X0_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_Y0_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_Y0_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_Y0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_Y0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER1_diseng_sig1_Y0_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX1_CLUSTER1 - Cluster 1, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_X1_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_X1_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_X1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_X1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_X1_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_Y1_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_Y1_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_Y1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_Y1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER1_diseng_sig1_Y1_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX2_CLUSTER1 - Cluster 1, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_X2_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_X2_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_X2_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_X2_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_X2_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_Y2_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_Y2_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_Y2_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_Y2_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER1_diseng_sig1_Y2_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX3_CLUSTER1 - Cluster 1, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_X3_Cluster1_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_X3_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_X3_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_X3_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_X3_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_Y3_Cluster1_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_Y3_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_Y3_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_Y3_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER1_diseng_sig1_Y3_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF0_CLUSTER1 - Cluster 1, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER1_diseng_sig1_Ref0_Cluster1_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER1_diseng_sig1_Ref0_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER1_diseng_sig1_Ref0_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER1_diseng_sig1_Ref0_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER1_diseng_sig1_Ref0_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF1_CLUSTER1 - Cluster 1, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER1_diseng_sig1_Ref1_Cluster1_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER1_diseng_sig1_Ref1_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER1_diseng_sig1_Ref1_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER1_diseng_sig1_Ref1_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER1_diseng_sig1_Ref1_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_CLUSTER2 - Cluster 2, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_En_Cluster2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_En_Cluster2_SHIFT (0U)
/*! diseng_sig1_En_Cluster2
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix0_En_Cluster2_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix0_En_Cluster2_SHIFT (4U)
/*! diseng_sig1_Pix0_En_Cluster2
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix0_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix0_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix0_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix1_En_Cluster2_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix1_En_Cluster2_SHIFT (5U)
/*! diseng_sig1_Pix1_En_Cluster2
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix1_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix1_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix1_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix2_En_Cluster2_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix2_En_Cluster2_SHIFT (6U)
/*! diseng_sig1_Pix2_En_Cluster2
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix2_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix2_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix2_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix3_En_Cluster2_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix3_En_Cluster2_SHIFT (7U)
/*! diseng_sig1_Pix3_En_Cluster2
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix3_En_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix3_En_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_Pix3_En_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskBlue_Cluster2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskBlue_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskBlue_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskBlue_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskBlue_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskGreen_Cluster2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskGreen_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskGreen_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskGreen_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskGreen_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskRed_Cluster2_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskRed_Cluster2_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskRed_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskRed_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER2_diseng_sig1_MaskRed_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX0_CLUSTER2 - Cluster 2, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_X0_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_X0_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_X0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_X0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_X0_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_Y0_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_Y0_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_Y0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_Y0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER2_diseng_sig1_Y0_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX1_CLUSTER2 - Cluster 2, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_X1_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_X1_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_X1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_X1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_X1_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_Y1_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_Y1_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_Y1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_Y1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER2_diseng_sig1_Y1_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX2_CLUSTER2 - Cluster 2, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_X2_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_X2_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_X2_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_X2_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_X2_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_Y2_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_Y2_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_Y2_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_Y2_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER2_diseng_sig1_Y2_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX3_CLUSTER2 - Cluster 2, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_X3_Cluster2_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_X3_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_X3_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_X3_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_X3_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_Y3_Cluster2_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_Y3_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_Y3_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_Y3_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER2_diseng_sig1_Y3_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF0_CLUSTER2 - Cluster 2, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER2_diseng_sig1_Ref0_Cluster2_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER2_diseng_sig1_Ref0_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER2_diseng_sig1_Ref0_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER2_diseng_sig1_Ref0_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER2_diseng_sig1_Ref0_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF1_CLUSTER2 - Cluster 2, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER2_diseng_sig1_Ref1_Cluster2_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER2_diseng_sig1_Ref1_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER2_diseng_sig1_Ref1_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER2_diseng_sig1_Ref1_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER2_diseng_sig1_Ref1_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_CONTROL_CLUSTER3 - Cluster 3, Control settings */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_En_Cluster3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_En_Cluster3_SHIFT (0U)
/*! diseng_sig1_En_Cluster3
 *  0b0..Cluster is disabled and all Status flags are cleared
 *  0b1..Cluster is enabled and reference checking is executed
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix0_En_Cluster3_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix0_En_Cluster3_SHIFT (4U)
/*! diseng_sig1_Pix0_En_Cluster3
 *  0b0..Pixel 0 will not be evaluated
 *  0b1..Pixel 0 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix0_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix0_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix0_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix1_En_Cluster3_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix1_En_Cluster3_SHIFT (5U)
/*! diseng_sig1_Pix1_En_Cluster3
 *  0b0..Pixel 1 will not be evaluated
 *  0b1..Pixel 1 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix1_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix1_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix1_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix2_En_Cluster3_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix2_En_Cluster3_SHIFT (6U)
/*! diseng_sig1_Pix2_En_Cluster3
 *  0b0..Pixel 2 will not be evaluated
 *  0b1..Pixel 2 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix2_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix2_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix2_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix3_En_Cluster3_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix3_En_Cluster3_SHIFT (7U)
/*! diseng_sig1_Pix3_En_Cluster3
 *  0b0..Pixel 3 will not be evaluated
 *  0b1..Pixel 3 will be evaluated
 */
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix3_En_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix3_En_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_Pix3_En_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskBlue_Cluster3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskBlue_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskBlue_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskBlue_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskBlue_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskGreen_Cluster3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskGreen_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskGreen_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskGreen_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskGreen_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskRed_Cluster3_MASK (0xFF000000U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskRed_Cluster3_SHIFT (24U)
#define DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskRed_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskRed_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CONTROL_CLUSTER3_diseng_sig1_MaskRed_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX0_CLUSTER3 - Cluster 3, Coordinate of Pixel 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_X0_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_X0_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_X0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_X0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_X0_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_Y0_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_Y0_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_Y0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_Y0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX0_CLUSTER3_diseng_sig1_Y0_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX1_CLUSTER3 - Cluster 3, Coordinate of Pixel 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_X1_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_X1_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_X1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_X1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_X1_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_Y1_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_Y1_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_Y1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_Y1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX1_CLUSTER3_diseng_sig1_Y1_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX2_CLUSTER3 - Cluster 3, Coordinate of Pixel 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_X2_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_X2_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_X2_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_X2_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_X2_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_Y2_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_Y2_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_Y2_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_Y2_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX2_CLUSTER3_diseng_sig1_Y2_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIX3_CLUSTER3 - Cluster 3, Coordinate of Pixel 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_X3_Cluster3_MASK (0x3FFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_X3_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_X3_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_X3_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_X3_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_Y3_Cluster3_MASK (0x3FFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_Y3_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_Y3_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_Y3_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIX3_CLUSTER3_diseng_sig1_Y3_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF0_CLUSTER3 - Cluster 3, Reference Vector 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER3_diseng_sig1_Ref0_Cluster3_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER3_diseng_sig1_Ref0_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER3_diseng_sig1_Ref0_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER3_diseng_sig1_Ref0_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF0_CLUSTER3_diseng_sig1_Ref0_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_REF1_CLUSTER3 - Cluster 3, Reference Vector 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER3_diseng_sig1_Ref1_Cluster3_MASK (0xFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER3_diseng_sig1_Ref1_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER3_diseng_sig1_Ref1_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER3_diseng_sig1_Ref1_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REF1_CLUSTER3_diseng_sig1_Ref1_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW0 - Window 0, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW0_diseng_sig1_CRC_R_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW0_diseng_sig1_CRC_R_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW0_diseng_sig1_CRC_R_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW0_diseng_sig1_CRC_R_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW0_diseng_sig1_CRC_R_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW0 - Window 0, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW0_diseng_sig1_CRC_G_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW0_diseng_sig1_CRC_G_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW0_diseng_sig1_CRC_G_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW0_diseng_sig1_CRC_G_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW0_diseng_sig1_CRC_G_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW0 - Window 0, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW0_diseng_sig1_CRC_B_Window0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW0_diseng_sig1_CRC_B_Window0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW0_diseng_sig1_CRC_B_Window0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW0_diseng_sig1_CRC_B_Window0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW0_diseng_sig1_CRC_B_Window0_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW1 - Window 1, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW1_diseng_sig1_CRC_R_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW1_diseng_sig1_CRC_R_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW1_diseng_sig1_CRC_R_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW1_diseng_sig1_CRC_R_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW1_diseng_sig1_CRC_R_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW1 - Window 1, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW1_diseng_sig1_CRC_G_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW1_diseng_sig1_CRC_G_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW1_diseng_sig1_CRC_G_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW1_diseng_sig1_CRC_G_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW1_diseng_sig1_CRC_G_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW1 - Window 1, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW1_diseng_sig1_CRC_B_Window1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW1_diseng_sig1_CRC_B_Window1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW1_diseng_sig1_CRC_B_Window1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW1_diseng_sig1_CRC_B_Window1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW1_diseng_sig1_CRC_B_Window1_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW2 - Window 2, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW2_diseng_sig1_CRC_R_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW2_diseng_sig1_CRC_R_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW2_diseng_sig1_CRC_R_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW2_diseng_sig1_CRC_R_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW2_diseng_sig1_CRC_R_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW2 - Window 2, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW2_diseng_sig1_CRC_G_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW2_diseng_sig1_CRC_G_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW2_diseng_sig1_CRC_G_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW2_diseng_sig1_CRC_G_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW2_diseng_sig1_CRC_G_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW2 - Window 2, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW2_diseng_sig1_CRC_B_Window2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW2_diseng_sig1_CRC_B_Window2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW2_diseng_sig1_CRC_B_Window2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW2_diseng_sig1_CRC_B_Window2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW2_diseng_sig1_CRC_B_Window2_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW3 - Window 3, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW3_diseng_sig1_CRC_R_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW3_diseng_sig1_CRC_R_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW3_diseng_sig1_CRC_R_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW3_diseng_sig1_CRC_R_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW3_diseng_sig1_CRC_R_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW3 - Window 3, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW3_diseng_sig1_CRC_G_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW3_diseng_sig1_CRC_G_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW3_diseng_sig1_CRC_G_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW3_diseng_sig1_CRC_G_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW3_diseng_sig1_CRC_G_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW3 - Window 3, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW3_diseng_sig1_CRC_B_Window3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW3_diseng_sig1_CRC_B_Window3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW3_diseng_sig1_CRC_B_Window3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW3_diseng_sig1_CRC_B_Window3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW3_diseng_sig1_CRC_B_Window3_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW4 - Window 4, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW4_diseng_sig1_CRC_R_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW4_diseng_sig1_CRC_R_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW4_diseng_sig1_CRC_R_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW4_diseng_sig1_CRC_R_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW4_diseng_sig1_CRC_R_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW4 - Window 4, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW4_diseng_sig1_CRC_G_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW4_diseng_sig1_CRC_G_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW4_diseng_sig1_CRC_G_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW4_diseng_sig1_CRC_G_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW4_diseng_sig1_CRC_G_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW4 - Window 4, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW4_diseng_sig1_CRC_B_Window4_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW4_diseng_sig1_CRC_B_Window4_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW4_diseng_sig1_CRC_B_Window4(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW4_diseng_sig1_CRC_B_Window4_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW4_diseng_sig1_CRC_B_Window4_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW5 - Window 5, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW5_diseng_sig1_CRC_R_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW5_diseng_sig1_CRC_R_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW5_diseng_sig1_CRC_R_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW5_diseng_sig1_CRC_R_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW5_diseng_sig1_CRC_R_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW5 - Window 5, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW5_diseng_sig1_CRC_G_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW5_diseng_sig1_CRC_G_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW5_diseng_sig1_CRC_G_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW5_diseng_sig1_CRC_G_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW5_diseng_sig1_CRC_G_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW5 - Window 5, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW5_diseng_sig1_CRC_B_Window5_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW5_diseng_sig1_CRC_B_Window5_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW5_diseng_sig1_CRC_B_Window5(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW5_diseng_sig1_CRC_B_Window5_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW5_diseng_sig1_CRC_B_Window5_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW6 - Window 6, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW6_diseng_sig1_CRC_R_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW6_diseng_sig1_CRC_R_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW6_diseng_sig1_CRC_R_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW6_diseng_sig1_CRC_R_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW6_diseng_sig1_CRC_R_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW6 - Window 6, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW6_diseng_sig1_CRC_G_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW6_diseng_sig1_CRC_G_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW6_diseng_sig1_CRC_G_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW6_diseng_sig1_CRC_G_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW6_diseng_sig1_CRC_G_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW6 - Window 6, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW6_diseng_sig1_CRC_B_Window6_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW6_diseng_sig1_CRC_B_Window6_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW6_diseng_sig1_CRC_B_Window6(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW6_diseng_sig1_CRC_B_Window6_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW6_diseng_sig1_CRC_B_Window6_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_R_WINDOW7 - Window 7, Measured CRC Value of Red Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW7_diseng_sig1_CRC_R_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW7_diseng_sig1_CRC_R_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW7_diseng_sig1_CRC_R_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW7_diseng_sig1_CRC_R_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_R_WINDOW7_diseng_sig1_CRC_R_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_G_WINDOW7 - Window 7, Measured CRC Value of Green Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW7_diseng_sig1_CRC_G_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW7_diseng_sig1_CRC_G_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW7_diseng_sig1_CRC_G_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW7_diseng_sig1_CRC_G_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_G_WINDOW7_diseng_sig1_CRC_G_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_CRC_B_WINDOW7 - Window 7, Measured CRC Value of Blue Channel */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW7_diseng_sig1_CRC_B_Window7_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW7_diseng_sig1_CRC_B_Window7_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW7_diseng_sig1_CRC_B_Window7(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW7_diseng_sig1_CRC_B_Window7_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_CRC_B_WINDOW7_diseng_sig1_CRC_B_Window7_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATUS_CLUSTER0 - Cluster 0, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts00_Cluster0_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts00_Cluster0_SHIFT (0U)
/*! diseng_sig1_Sts00_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts00_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts00_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts00_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts01_Cluster0_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts01_Cluster0_SHIFT (1U)
/*! diseng_sig1_Sts01_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts01_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts01_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts01_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts10_Cluster0_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts10_Cluster0_SHIFT (2U)
/*! diseng_sig1_Sts10_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts11_Cluster0_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts11_Cluster0_SHIFT (3U)
/*! diseng_sig1_Sts11_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts11_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts11_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts11_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts20_Cluster0_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts20_Cluster0_SHIFT (4U)
/*! diseng_sig1_Sts20_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts20_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts20_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts20_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts21_Cluster0_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts21_Cluster0_SHIFT (5U)
/*! diseng_sig1_Sts21_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts21_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts21_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts21_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts30_Cluster0_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts30_Cluster0_SHIFT (6U)
/*! diseng_sig1_Sts30_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts30_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts30_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts30_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts31_Cluster0_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts31_Cluster0_SHIFT (7U)
/*! diseng_sig1_Sts31_Cluster0
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts31_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts31_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER0_diseng_sig1_Sts31_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_COUNTER_CLUSTER0 - Cluster 0, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_MatchCount_Cluster0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_MatchCount_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_MatchCount_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_MatchCount_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_MatchCount_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_ErrorCount_Cluster0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_ErrorCount_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_ErrorCount_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_ErrorCount_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER0_diseng_sig1_ErrorCount_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR0_CLUSTER0 - Cluster 0, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_B10_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_B10_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_G10_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_G10_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_R10_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_R10_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix0_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_B10_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_B10_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_G10_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_G10_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_R10_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_R10_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix1_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_B10_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_B10_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_G10_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_G10_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_R10_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_R10_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix2_R10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_B10_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_B10_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_B10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_B10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_B10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_G10_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_G10_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_G10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_G10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_G10_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_R10_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_R10_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_R10_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_R10_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER0_diseng_sig1_Pix3_R10_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR1_CLUSTER0 - Cluster 0, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_B32_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_B32_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_G32_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_G32_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_R32_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_R32_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix0_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_B32_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_B32_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_G32_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_G32_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_R32_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_R32_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix1_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_B32_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_B32_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_G32_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_G32_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_R32_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_R32_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix2_R32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_B32_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_B32_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_B32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_B32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_B32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_G32_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_G32_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_G32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_G32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_G32_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_R32_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_R32_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_R32_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_R32_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER0_diseng_sig1_Pix3_R32_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR2_CLUSTER0 - Cluster 0, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_B54_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_B54_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_G54_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_G54_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_R54_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_R54_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix0_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_B54_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_B54_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_G54_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_G54_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_R54_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_R54_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix1_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_B54_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_B54_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_G54_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_G54_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_R54_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_R54_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix2_R54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_B54_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_B54_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_B54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_B54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_B54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_G54_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_G54_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_G54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_G54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_G54_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_R54_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_R54_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_R54_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_R54_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER0_diseng_sig1_Pix3_R54_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR3_CLUSTER0 - Cluster 0, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_B76_Cluster0_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_B76_Cluster0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_G76_Cluster0_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_G76_Cluster0_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_R76_Cluster0_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_R76_Cluster0_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix0_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_B76_Cluster0_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_B76_Cluster0_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_G76_Cluster0_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_G76_Cluster0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_R76_Cluster0_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_R76_Cluster0_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix1_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_B76_Cluster0_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_B76_Cluster0_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_G76_Cluster0_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_G76_Cluster0_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_R76_Cluster0_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_R76_Cluster0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix2_R76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_B76_Cluster0_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_B76_Cluster0_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_B76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_B76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_B76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_G76_Cluster0_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_G76_Cluster0_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_G76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_G76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_G76_Cluster0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_R76_Cluster0_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_R76_Cluster0_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_R76_Cluster0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_R76_Cluster0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER0_diseng_sig1_Pix3_R76_Cluster0_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATUS_CLUSTER1 - Cluster 1, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts00_Cluster1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts00_Cluster1_SHIFT (0U)
/*! diseng_sig1_Sts00_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts00_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts00_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts00_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts01_Cluster1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts01_Cluster1_SHIFT (1U)
/*! diseng_sig1_Sts01_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts01_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts01_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts01_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts10_Cluster1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts10_Cluster1_SHIFT (2U)
/*! diseng_sig1_Sts10_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts11_Cluster1_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts11_Cluster1_SHIFT (3U)
/*! diseng_sig1_Sts11_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts11_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts11_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts11_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts20_Cluster1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts20_Cluster1_SHIFT (4U)
/*! diseng_sig1_Sts20_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts20_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts20_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts20_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts21_Cluster1_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts21_Cluster1_SHIFT (5U)
/*! diseng_sig1_Sts21_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts21_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts21_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts21_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts30_Cluster1_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts30_Cluster1_SHIFT (6U)
/*! diseng_sig1_Sts30_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts30_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts30_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts30_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts31_Cluster1_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts31_Cluster1_SHIFT (7U)
/*! diseng_sig1_Sts31_Cluster1
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts31_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts31_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER1_diseng_sig1_Sts31_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_COUNTER_CLUSTER1 - Cluster 1, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_MatchCount_Cluster1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_MatchCount_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_MatchCount_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_MatchCount_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_MatchCount_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_ErrorCount_Cluster1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_ErrorCount_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_ErrorCount_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_ErrorCount_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER1_diseng_sig1_ErrorCount_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR0_CLUSTER1 - Cluster 1, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_B10_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_B10_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_G10_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_G10_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_R10_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_R10_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix0_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_B10_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_B10_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_G10_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_G10_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_R10_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_R10_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix1_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_B10_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_B10_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_G10_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_G10_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_R10_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_R10_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix2_R10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_B10_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_B10_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_B10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_B10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_B10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_G10_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_G10_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_G10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_G10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_G10_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_R10_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_R10_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_R10_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_R10_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER1_diseng_sig1_Pix3_R10_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR1_CLUSTER1 - Cluster 1, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_B32_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_B32_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_G32_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_G32_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_R32_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_R32_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix0_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_B32_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_B32_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_G32_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_G32_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_R32_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_R32_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix1_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_B32_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_B32_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_G32_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_G32_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_R32_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_R32_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix2_R32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_B32_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_B32_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_B32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_B32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_B32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_G32_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_G32_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_G32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_G32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_G32_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_R32_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_R32_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_R32_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_R32_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER1_diseng_sig1_Pix3_R32_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR2_CLUSTER1 - Cluster 1, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_B54_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_B54_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_G54_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_G54_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_R54_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_R54_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix0_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_B54_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_B54_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_G54_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_G54_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_R54_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_R54_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix1_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_B54_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_B54_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_G54_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_G54_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_R54_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_R54_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix2_R54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_B54_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_B54_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_B54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_B54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_B54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_G54_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_G54_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_G54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_G54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_G54_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_R54_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_R54_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_R54_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_R54_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER1_diseng_sig1_Pix3_R54_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR3_CLUSTER1 - Cluster 1, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_B76_Cluster1_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_B76_Cluster1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_G76_Cluster1_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_G76_Cluster1_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_R76_Cluster1_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_R76_Cluster1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix0_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_B76_Cluster1_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_B76_Cluster1_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_G76_Cluster1_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_G76_Cluster1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_R76_Cluster1_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_R76_Cluster1_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix1_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_B76_Cluster1_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_B76_Cluster1_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_G76_Cluster1_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_G76_Cluster1_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_R76_Cluster1_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_R76_Cluster1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix2_R76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_B76_Cluster1_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_B76_Cluster1_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_B76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_B76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_B76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_G76_Cluster1_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_G76_Cluster1_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_G76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_G76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_G76_Cluster1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_R76_Cluster1_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_R76_Cluster1_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_R76_Cluster1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_R76_Cluster1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER1_diseng_sig1_Pix3_R76_Cluster1_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATUS_CLUSTER2 - Cluster 2, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts00_Cluster2_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts00_Cluster2_SHIFT (0U)
/*! diseng_sig1_Sts00_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts00_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts00_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts00_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts01_Cluster2_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts01_Cluster2_SHIFT (1U)
/*! diseng_sig1_Sts01_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts01_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts01_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts01_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts10_Cluster2_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts10_Cluster2_SHIFT (2U)
/*! diseng_sig1_Sts10_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts11_Cluster2_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts11_Cluster2_SHIFT (3U)
/*! diseng_sig1_Sts11_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts11_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts11_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts11_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts20_Cluster2_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts20_Cluster2_SHIFT (4U)
/*! diseng_sig1_Sts20_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts20_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts20_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts20_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts21_Cluster2_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts21_Cluster2_SHIFT (5U)
/*! diseng_sig1_Sts21_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts21_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts21_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts21_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts30_Cluster2_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts30_Cluster2_SHIFT (6U)
/*! diseng_sig1_Sts30_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts30_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts30_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts30_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts31_Cluster2_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts31_Cluster2_SHIFT (7U)
/*! diseng_sig1_Sts31_Cluster2
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts31_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts31_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER2_diseng_sig1_Sts31_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_COUNTER_CLUSTER2 - Cluster 2, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_MatchCount_Cluster2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_MatchCount_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_MatchCount_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_MatchCount_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_MatchCount_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_ErrorCount_Cluster2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_ErrorCount_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_ErrorCount_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_ErrorCount_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER2_diseng_sig1_ErrorCount_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR0_CLUSTER2 - Cluster 2, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_B10_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_B10_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_G10_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_G10_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_R10_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_R10_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix0_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_B10_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_B10_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_G10_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_G10_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_R10_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_R10_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix1_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_B10_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_B10_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_G10_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_G10_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_R10_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_R10_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix2_R10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_B10_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_B10_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_B10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_B10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_B10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_G10_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_G10_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_G10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_G10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_G10_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_R10_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_R10_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_R10_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_R10_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER2_diseng_sig1_Pix3_R10_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR1_CLUSTER2 - Cluster 2, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_B32_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_B32_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_G32_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_G32_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_R32_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_R32_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix0_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_B32_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_B32_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_G32_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_G32_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_R32_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_R32_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix1_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_B32_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_B32_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_G32_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_G32_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_R32_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_R32_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix2_R32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_B32_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_B32_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_B32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_B32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_B32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_G32_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_G32_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_G32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_G32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_G32_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_R32_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_R32_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_R32_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_R32_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER2_diseng_sig1_Pix3_R32_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR2_CLUSTER2 - Cluster 2, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_B54_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_B54_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_G54_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_G54_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_R54_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_R54_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix0_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_B54_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_B54_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_G54_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_G54_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_R54_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_R54_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix1_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_B54_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_B54_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_G54_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_G54_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_R54_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_R54_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix2_R54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_B54_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_B54_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_B54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_B54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_B54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_G54_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_G54_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_G54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_G54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_G54_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_R54_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_R54_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_R54_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_R54_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER2_diseng_sig1_Pix3_R54_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR3_CLUSTER2 - Cluster 2, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_B76_Cluster2_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_B76_Cluster2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_G76_Cluster2_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_G76_Cluster2_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_R76_Cluster2_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_R76_Cluster2_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix0_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_B76_Cluster2_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_B76_Cluster2_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_G76_Cluster2_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_G76_Cluster2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_R76_Cluster2_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_R76_Cluster2_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix1_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_B76_Cluster2_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_B76_Cluster2_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_G76_Cluster2_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_G76_Cluster2_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_R76_Cluster2_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_R76_Cluster2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix2_R76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_B76_Cluster2_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_B76_Cluster2_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_B76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_B76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_B76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_G76_Cluster2_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_G76_Cluster2_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_G76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_G76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_G76_Cluster2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_R76_Cluster2_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_R76_Cluster2_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_R76_Cluster2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_R76_Cluster2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER2_diseng_sig1_Pix3_R76_Cluster2_MASK)
/*! @} */

/*! @name DISENG_SIG1_STATUS_CLUSTER3 - Cluster 3, Status */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts00_Cluster3_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts00_Cluster3_SHIFT (0U)
/*! diseng_sig1_Sts00_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts00_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts00_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts00_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts01_Cluster3_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts01_Cluster3_SHIFT (1U)
/*! diseng_sig1_Sts01_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts01_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts01_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts01_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts10_Cluster3_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts10_Cluster3_SHIFT (2U)
/*! diseng_sig1_Sts10_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts11_Cluster3_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts11_Cluster3_SHIFT (3U)
/*! diseng_sig1_Sts11_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts11_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts11_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts11_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts20_Cluster3_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts20_Cluster3_SHIFT (4U)
/*! diseng_sig1_Sts20_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts20_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts20_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts20_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts21_Cluster3_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts21_Cluster3_SHIFT (5U)
/*! diseng_sig1_Sts21_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts21_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts21_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts21_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts30_Cluster3_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts30_Cluster3_SHIFT (6U)
/*! diseng_sig1_Sts30_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts30_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts30_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts30_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts31_Cluster3_MASK (0x80U)
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts31_Cluster3_SHIFT (7U)
/*! diseng_sig1_Sts31_Cluster3
 *  0b0..Measurement value and reference are equal
 *  0b1..Measurement value and reference are not equal
 */
#define DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts31_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts31_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_STATUS_CLUSTER3_diseng_sig1_Sts31_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_COUNTER_CLUSTER3 - Cluster 3, Match and Error Counters */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_MatchCount_Cluster3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_MatchCount_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_MatchCount_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_MatchCount_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_MatchCount_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_ErrorCount_Cluster3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_ErrorCount_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_ErrorCount_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_ErrorCount_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_COUNTER_CLUSTER3_diseng_sig1_ErrorCount_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR0_CLUSTER3 - Cluster 3, Result Vector 0, RGB bitslices[1:0] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_B10_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_B10_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_G10_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_G10_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_R10_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_R10_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix0_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_B10_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_B10_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_G10_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_G10_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_R10_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_R10_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix1_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_B10_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_B10_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_G10_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_G10_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_R10_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_R10_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix2_R10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_B10_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_B10_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_B10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_B10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_B10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_G10_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_G10_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_G10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_G10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_G10_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_R10_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_R10_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_R10_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_R10_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR0_CLUSTER3_diseng_sig1_Pix3_R10_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR1_CLUSTER3 - Cluster 3, Result Vector 1, RGB bitslices[3:2] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_B32_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_B32_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_G32_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_G32_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_R32_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_R32_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix0_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_B32_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_B32_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_G32_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_G32_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_R32_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_R32_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix1_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_B32_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_B32_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_G32_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_G32_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_R32_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_R32_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix2_R32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_B32_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_B32_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_B32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_B32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_B32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_G32_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_G32_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_G32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_G32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_G32_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_R32_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_R32_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_R32_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_R32_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR1_CLUSTER3_diseng_sig1_Pix3_R32_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR2_CLUSTER3 - Cluster 3, Result Vector 2, RGB bitslices[5:4] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_B54_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_B54_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_G54_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_G54_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_R54_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_R54_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix0_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_B54_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_B54_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_G54_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_G54_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_R54_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_R54_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix1_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_B54_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_B54_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_G54_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_G54_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_R54_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_R54_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix2_R54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_B54_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_B54_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_B54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_B54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_B54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_G54_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_G54_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_G54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_G54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_G54_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_R54_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_R54_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_R54_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_R54_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR2_CLUSTER3_diseng_sig1_Pix3_R54_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_VECTOR3_CLUSTER3 - Cluster 3, Result Vector 3, RGB bitslices[7:6] */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_B76_Cluster3_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_B76_Cluster3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_G76_Cluster3_MASK (0xCU)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_G76_Cluster3_SHIFT (2U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_R76_Cluster3_MASK (0x30U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_R76_Cluster3_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix0_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_B76_Cluster3_MASK (0xC0U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_B76_Cluster3_SHIFT (6U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_G76_Cluster3_MASK (0x300U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_G76_Cluster3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_R76_Cluster3_MASK (0xC00U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_R76_Cluster3_SHIFT (10U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix1_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_B76_Cluster3_MASK (0x3000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_B76_Cluster3_SHIFT (12U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_G76_Cluster3_MASK (0xC000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_G76_Cluster3_SHIFT (14U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_R76_Cluster3_MASK (0x30000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_R76_Cluster3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix2_R76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_B76_Cluster3_MASK (0xC0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_B76_Cluster3_SHIFT (18U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_B76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_B76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_B76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_G76_Cluster3_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_G76_Cluster3_SHIFT (20U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_G76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_G76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_G76_Cluster3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_R76_Cluster3_MASK (0xC00000U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_R76_Cluster3_SHIFT (22U)
#define DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_R76_Cluster3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_R76_Cluster3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_VECTOR3_CLUSTER3_diseng_sig1_Pix3_R76_Cluster3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS0_WIN0 - Pixel Counter Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN0_diseng_sig1_Px_Cnt_S0_Win0_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN0_diseng_sig1_Px_Cnt_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN0_diseng_sig1_Px_Cnt_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN0_diseng_sig1_Px_Cnt_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN0_diseng_sig1_Px_Cnt_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS0_WIN0 - Pixel Max Values Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Bl_Max_S0_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Bl_Max_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Bl_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Bl_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Bl_Max_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Gn_Max_S0_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Gn_Max_S0_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Gn_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Gn_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Gn_Max_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Rd_Max_S0_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Rd_Max_S0_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Rd_Max_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Rd_Max_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN0_diseng_sig1_Rd_Max_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS0_WIN0 - Pixel Min Values Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Bl_Min_S0_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Bl_Min_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Bl_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Bl_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Bl_Min_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Gn_Min_S0_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Gn_Min_S0_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Gn_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Gn_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Gn_Min_S0_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Rd_Min_S0_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Rd_Min_S0_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Rd_Min_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Rd_Min_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN0_diseng_sig1_Rd_Min_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS0_WIN0 - Red Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN0_diseng_sig1_Rd_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN0_diseng_sig1_Rd_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN0_diseng_sig1_Rd_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN0_diseng_sig1_Rd_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN0_diseng_sig1_Rd_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS0_WIN0 - Green Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN0_diseng_sig1_Gn_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN0_diseng_sig1_Gn_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN0_diseng_sig1_Gn_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN0_diseng_sig1_Gn_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN0_diseng_sig1_Gn_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS0_WIN0 - Blue Component Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN0_diseng_sig1_Bl_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN0_diseng_sig1_Bl_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN0_diseng_sig1_Bl_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN0_diseng_sig1_Bl_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN0_diseng_sig1_Bl_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_LUMSUM_STATS0_WIN0 - Luminance Sum Register, Statistics Block 0, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN0_diseng_sig1_Lm_Sum_S0_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN0_diseng_sig1_Lm_Sum_S0_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN0_diseng_sig1_Lm_Sum_S0_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN0_diseng_sig1_Lm_Sum_S0_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN0_diseng_sig1_Lm_Sum_S0_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS1_WIN0 - Pixel Counter Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN0_diseng_sig1_Px_Cnt_S1_Win0_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN0_diseng_sig1_Px_Cnt_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN0_diseng_sig1_Px_Cnt_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN0_diseng_sig1_Px_Cnt_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN0_diseng_sig1_Px_Cnt_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS1_WIN0 - Pixel Max Values Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Bl_Max_S1_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Bl_Max_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Bl_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Bl_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Bl_Max_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Gn_Max_S1_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Gn_Max_S1_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Gn_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Gn_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Gn_Max_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Rd_Max_S1_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Rd_Max_S1_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Rd_Max_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Rd_Max_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN0_diseng_sig1_Rd_Max_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS1_WIN0 - Pixel Min Values Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Bl_Min_S1_Win0_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Bl_Min_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Bl_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Bl_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Bl_Min_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Gn_Min_S1_Win0_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Gn_Min_S1_Win0_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Gn_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Gn_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Gn_Min_S1_Win0_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Rd_Min_S1_Win0_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Rd_Min_S1_Win0_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Rd_Min_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Rd_Min_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN0_diseng_sig1_Rd_Min_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS1_WIN0 - Red Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN0_diseng_sig1_Rd_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN0_diseng_sig1_Rd_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN0_diseng_sig1_Rd_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN0_diseng_sig1_Rd_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN0_diseng_sig1_Rd_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS1_WIN0 - Green Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN0_diseng_sig1_Gn_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN0_diseng_sig1_Gn_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN0_diseng_sig1_Gn_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN0_diseng_sig1_Gn_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN0_diseng_sig1_Gn_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS1_WIN0 - Blue Component Sum Register, Statistics Block 1, Window 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN0_diseng_sig1_Bl_Sum_S1_Win0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN0_diseng_sig1_Bl_Sum_S1_Win0_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN0_diseng_sig1_Bl_Sum_S1_Win0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN0_diseng_sig1_Bl_Sum_S1_Win0_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN0_diseng_sig1_Bl_Sum_S1_Win0_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS0_WIN1 - Pixel Counter Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN1_diseng_sig1_Px_Cnt_S0_Win1_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN1_diseng_sig1_Px_Cnt_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN1_diseng_sig1_Px_Cnt_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN1_diseng_sig1_Px_Cnt_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN1_diseng_sig1_Px_Cnt_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS0_WIN1 - Pixel Max Values Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Bl_Max_S0_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Bl_Max_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Bl_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Bl_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Bl_Max_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Gn_Max_S0_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Gn_Max_S0_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Gn_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Gn_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Gn_Max_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Rd_Max_S0_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Rd_Max_S0_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Rd_Max_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Rd_Max_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN1_diseng_sig1_Rd_Max_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS0_WIN1 - Pixel Min Values Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Bl_Min_S0_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Bl_Min_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Bl_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Bl_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Bl_Min_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Gn_Min_S0_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Gn_Min_S0_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Gn_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Gn_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Gn_Min_S0_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Rd_Min_S0_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Rd_Min_S0_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Rd_Min_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Rd_Min_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN1_diseng_sig1_Rd_Min_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS0_WIN1 - Red Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN1_diseng_sig1_Rd_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN1_diseng_sig1_Rd_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN1_diseng_sig1_Rd_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN1_diseng_sig1_Rd_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN1_diseng_sig1_Rd_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS0_WIN1 - Green Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN1_diseng_sig1_Gn_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN1_diseng_sig1_Gn_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN1_diseng_sig1_Gn_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN1_diseng_sig1_Gn_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN1_diseng_sig1_Gn_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS0_WIN1 - Blue Component Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN1_diseng_sig1_Bl_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN1_diseng_sig1_Bl_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN1_diseng_sig1_Bl_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN1_diseng_sig1_Bl_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN1_diseng_sig1_Bl_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_LUMSUM_STATS0_WIN1 - Luminance Sum Register, Statistics Block 0, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN1_diseng_sig1_Lm_Sum_S0_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN1_diseng_sig1_Lm_Sum_S0_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN1_diseng_sig1_Lm_Sum_S0_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN1_diseng_sig1_Lm_Sum_S0_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN1_diseng_sig1_Lm_Sum_S0_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS1_WIN1 - Pixel Counter Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN1_diseng_sig1_Px_Cnt_S1_Win1_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN1_diseng_sig1_Px_Cnt_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN1_diseng_sig1_Px_Cnt_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN1_diseng_sig1_Px_Cnt_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN1_diseng_sig1_Px_Cnt_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS1_WIN1 - Pixel Max Values Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Bl_Max_S1_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Bl_Max_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Bl_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Bl_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Bl_Max_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Gn_Max_S1_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Gn_Max_S1_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Gn_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Gn_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Gn_Max_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Rd_Max_S1_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Rd_Max_S1_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Rd_Max_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Rd_Max_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN1_diseng_sig1_Rd_Max_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS1_WIN1 - Pixel Min Values Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Bl_Min_S1_Win1_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Bl_Min_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Bl_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Bl_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Bl_Min_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Gn_Min_S1_Win1_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Gn_Min_S1_Win1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Gn_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Gn_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Gn_Min_S1_Win1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Rd_Min_S1_Win1_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Rd_Min_S1_Win1_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Rd_Min_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Rd_Min_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN1_diseng_sig1_Rd_Min_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS1_WIN1 - Red Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN1_diseng_sig1_Rd_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN1_diseng_sig1_Rd_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN1_diseng_sig1_Rd_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN1_diseng_sig1_Rd_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN1_diseng_sig1_Rd_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS1_WIN1 - Green Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN1_diseng_sig1_Gn_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN1_diseng_sig1_Gn_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN1_diseng_sig1_Gn_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN1_diseng_sig1_Gn_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN1_diseng_sig1_Gn_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS1_WIN1 - Blue Component Sum Register, Statistics Block 1, Window 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN1_diseng_sig1_Bl_Sum_S1_Win1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN1_diseng_sig1_Bl_Sum_S1_Win1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN1_diseng_sig1_Bl_Sum_S1_Win1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN1_diseng_sig1_Bl_Sum_S1_Win1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN1_diseng_sig1_Bl_Sum_S1_Win1_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS0_WIN2 - Pixel Counter Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN2_diseng_sig1_Px_Cnt_S0_Win2_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN2_diseng_sig1_Px_Cnt_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN2_diseng_sig1_Px_Cnt_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN2_diseng_sig1_Px_Cnt_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN2_diseng_sig1_Px_Cnt_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS0_WIN2 - Pixel Max Values Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Bl_Max_S0_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Bl_Max_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Bl_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Bl_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Bl_Max_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Gn_Max_S0_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Gn_Max_S0_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Gn_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Gn_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Gn_Max_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Rd_Max_S0_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Rd_Max_S0_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Rd_Max_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Rd_Max_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN2_diseng_sig1_Rd_Max_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS0_WIN2 - Pixel Min Values Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Bl_Min_S0_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Bl_Min_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Bl_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Bl_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Bl_Min_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Gn_Min_S0_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Gn_Min_S0_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Gn_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Gn_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Gn_Min_S0_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Rd_Min_S0_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Rd_Min_S0_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Rd_Min_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Rd_Min_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN2_diseng_sig1_Rd_Min_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS0_WIN2 - Red Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN2_diseng_sig1_Rd_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN2_diseng_sig1_Rd_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN2_diseng_sig1_Rd_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN2_diseng_sig1_Rd_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN2_diseng_sig1_Rd_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS0_WIN2 - Green Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN2_diseng_sig1_Gn_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN2_diseng_sig1_Gn_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN2_diseng_sig1_Gn_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN2_diseng_sig1_Gn_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN2_diseng_sig1_Gn_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS0_WIN2 - Blue Component Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN2_diseng_sig1_Bl_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN2_diseng_sig1_Bl_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN2_diseng_sig1_Bl_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN2_diseng_sig1_Bl_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN2_diseng_sig1_Bl_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_LUMSUM_STATS0_WIN2 - Luminance Sum Register, Statistics Block 0, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN2_diseng_sig1_Lm_Sum_S0_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN2_diseng_sig1_Lm_Sum_S0_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN2_diseng_sig1_Lm_Sum_S0_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN2_diseng_sig1_Lm_Sum_S0_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN2_diseng_sig1_Lm_Sum_S0_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS1_WIN2 - Pixel Counter Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN2_diseng_sig1_Px_Cnt_S1_Win2_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN2_diseng_sig1_Px_Cnt_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN2_diseng_sig1_Px_Cnt_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN2_diseng_sig1_Px_Cnt_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN2_diseng_sig1_Px_Cnt_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS1_WIN2 - Pixel Max Values Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Bl_Max_S1_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Bl_Max_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Bl_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Bl_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Bl_Max_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Gn_Max_S1_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Gn_Max_S1_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Gn_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Gn_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Gn_Max_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Rd_Max_S1_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Rd_Max_S1_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Rd_Max_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Rd_Max_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN2_diseng_sig1_Rd_Max_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS1_WIN2 - Pixel Min Values Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Bl_Min_S1_Win2_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Bl_Min_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Bl_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Bl_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Bl_Min_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Gn_Min_S1_Win2_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Gn_Min_S1_Win2_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Gn_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Gn_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Gn_Min_S1_Win2_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Rd_Min_S1_Win2_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Rd_Min_S1_Win2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Rd_Min_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Rd_Min_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN2_diseng_sig1_Rd_Min_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS1_WIN2 - Red Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN2_diseng_sig1_Rd_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN2_diseng_sig1_Rd_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN2_diseng_sig1_Rd_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN2_diseng_sig1_Rd_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN2_diseng_sig1_Rd_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS1_WIN2 - Green Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN2_diseng_sig1_Gn_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN2_diseng_sig1_Gn_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN2_diseng_sig1_Gn_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN2_diseng_sig1_Gn_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN2_diseng_sig1_Gn_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS1_WIN2 - Blue Component Sum Register, Statistics Block 1, Window 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN2_diseng_sig1_Bl_Sum_S1_Win2_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN2_diseng_sig1_Bl_Sum_S1_Win2_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN2_diseng_sig1_Bl_Sum_S1_Win2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN2_diseng_sig1_Bl_Sum_S1_Win2_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN2_diseng_sig1_Bl_Sum_S1_Win2_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS0_WIN3 - Pixel Counter Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN3_diseng_sig1_Px_Cnt_S0_Win3_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN3_diseng_sig1_Px_Cnt_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN3_diseng_sig1_Px_Cnt_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN3_diseng_sig1_Px_Cnt_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS0_WIN3_diseng_sig1_Px_Cnt_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS0_WIN3 - Pixel Max Values Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Bl_Max_S0_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Bl_Max_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Bl_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Bl_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Bl_Max_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Gn_Max_S0_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Gn_Max_S0_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Gn_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Gn_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Gn_Max_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Rd_Max_S0_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Rd_Max_S0_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Rd_Max_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Rd_Max_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS0_WIN3_diseng_sig1_Rd_Max_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS0_WIN3 - Pixel Min Values Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Bl_Min_S0_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Bl_Min_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Bl_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Bl_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Bl_Min_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Gn_Min_S0_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Gn_Min_S0_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Gn_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Gn_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Gn_Min_S0_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Rd_Min_S0_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Rd_Min_S0_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Rd_Min_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Rd_Min_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS0_WIN3_diseng_sig1_Rd_Min_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS0_WIN3 - Red Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN3_diseng_sig1_Rd_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN3_diseng_sig1_Rd_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN3_diseng_sig1_Rd_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN3_diseng_sig1_Rd_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS0_WIN3_diseng_sig1_Rd_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS0_WIN3 - Green Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN3_diseng_sig1_Gn_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN3_diseng_sig1_Gn_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN3_diseng_sig1_Gn_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN3_diseng_sig1_Gn_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS0_WIN3_diseng_sig1_Gn_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS0_WIN3 - Blue Component Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN3_diseng_sig1_Bl_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN3_diseng_sig1_Bl_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN3_diseng_sig1_Bl_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN3_diseng_sig1_Bl_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS0_WIN3_diseng_sig1_Bl_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_LUMSUM_STATS0_WIN3 - Luminance Sum Register, Statistics Block 0, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN3_diseng_sig1_Lm_Sum_S0_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN3_diseng_sig1_Lm_Sum_S0_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN3_diseng_sig1_Lm_Sum_S0_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN3_diseng_sig1_Lm_Sum_S0_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_LUMSUM_STATS0_WIN3_diseng_sig1_Lm_Sum_S0_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXCNT_STATS1_WIN3 - Pixel Counter Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN3_diseng_sig1_Px_Cnt_S1_Win3_MASK (0xFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN3_diseng_sig1_Px_Cnt_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN3_diseng_sig1_Px_Cnt_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN3_diseng_sig1_Px_Cnt_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXCNT_STATS1_WIN3_diseng_sig1_Px_Cnt_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMAX_STATS1_WIN3 - Pixel Max Values Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Bl_Max_S1_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Bl_Max_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Bl_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Bl_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Bl_Max_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Gn_Max_S1_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Gn_Max_S1_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Gn_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Gn_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Gn_Max_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Rd_Max_S1_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Rd_Max_S1_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Rd_Max_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Rd_Max_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMAX_STATS1_WIN3_diseng_sig1_Rd_Max_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_PIXMIN_STATS1_WIN3 - Pixel Min Values Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Bl_Min_S1_Win3_MASK (0xFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Bl_Min_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Bl_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Bl_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Bl_Min_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Gn_Min_S1_Win3_MASK (0xFF00U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Gn_Min_S1_Win3_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Gn_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Gn_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Gn_Min_S1_Win3_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Rd_Min_S1_Win3_MASK (0xFF0000U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Rd_Min_S1_Win3_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Rd_Min_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Rd_Min_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_PIXMIN_STATS1_WIN3_diseng_sig1_Rd_Min_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_REDSUM_STATS1_WIN3 - Red Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN3_diseng_sig1_Rd_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN3_diseng_sig1_Rd_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN3_diseng_sig1_Rd_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN3_diseng_sig1_Rd_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_REDSUM_STATS1_WIN3_diseng_sig1_Rd_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_GREENSUM_STATS1_WIN3 - Green Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN3_diseng_sig1_Gn_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN3_diseng_sig1_Gn_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN3_diseng_sig1_Gn_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN3_diseng_sig1_Gn_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_GREENSUM_STATS1_WIN3_diseng_sig1_Gn_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1_BLUESUM_STATS1_WIN3 - Blue Component Sum Register, Statistics Block 1, Window 3 */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN3_diseng_sig1_Bl_Sum_S1_Win3_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN3_diseng_sig1_Bl_Sum_S1_Win3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN3_diseng_sig1_Bl_Sum_S1_Win3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN3_diseng_sig1_Bl_Sum_S1_Win3_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1_BLUESUM_STATS1_WIN3_diseng_sig1_Bl_Sum_S1_Win3_MASK)
/*! @} */

/*! @name DISENG_SIG1CFG_LOCKUNLOCK1 - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKUNLOCK1_diseng_sig1cfg_LockUnlock1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKUNLOCK1_diseng_sig1cfg_LockUnlock1_SHIFT (0U)
/*! diseng_sig1cfg_LockUnlock1
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKUNLOCK1_diseng_sig1cfg_LockUnlock1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKUNLOCK1_diseng_sig1cfg_LockUnlock1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKUNLOCK1_diseng_sig1cfg_LockUnlock1_MASK)
/*! @} */

/*! @name DISENG_SIG1CFG_LOCKSTATUS1 - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_LockStatus1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_LockStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_LockStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_LockStatus1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_LockStatus1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_PrivilegeStatus1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_PrivilegeStatus1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_PrivilegeStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_PrivilegeStatus1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_PrivilegeStatus1_MASK)

#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_FreezeStatus1_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_FreezeStatus1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_FreezeStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_FreezeStatus1_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1CFG_LOCKSTATUS1_diseng_sig1cfg_FreezeStatus1_MASK)
/*! @} */

/*! @name DISENG_SIG1CFG_SRCSELECT - Tap selection for Signature1. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_SIG1CFG_SRCSELECT_diseng_sig1cfg_sig1_select_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_SIG1CFG_SRCSELECT_diseng_sig1cfg_sig1_select_SHIFT (0U)
/*! diseng_sig1cfg_sig1_select
 *  0b00..Source is FrameGen#1 output.
 *  0b01..Source is Matrix#1 output.
 *  0b10..Source is LuT3D#1 output.
 *  0b11..Source is Dither#1 output.
 */
#define DISPLAY_SEERIS_DISENG_SIG1CFG_SRCSELECT_diseng_sig1cfg_sig1_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_SIG1CFG_SRCSELECT_diseng_sig1cfg_sig1_select_SHIFT)) & DISPLAY_SEERIS_DISENG_SIG1CFG_SRCSELECT_diseng_sig1cfg_sig1_select_MASK)
/*! @} */

/*! @name DISENG_LUT3D1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKUNLOCK_diseng_lut3d1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKUNLOCK_diseng_lut3d1_LockUnlock_SHIFT (0U)
/*! diseng_lut3d1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKUNLOCK_diseng_lut3d1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_LOCKUNLOCK_diseng_lut3d1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_LOCKUNLOCK_diseng_lut3d1_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_LUT3D1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_LOCKSTATUS_diseng_lut3d1_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_LUT3D1_STATICCONTROL - lut3d static control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D1_STATICCONTROL_diseng_lut3d1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_STATICCONTROL_diseng_lut3d1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_STATICCONTROL_diseng_lut3d1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_STATICCONTROL_diseng_lut3d1_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_STATICCONTROL_diseng_lut3d1_ShdEn_MASK)
/*! @} */

/*! @name DISENG_LUT3D1_CONTROL - lut3d control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_MODE_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_MODE_SHIFT (0U)
/*! diseng_lut3d1_MODE
 *  0b000..Module in neutral mode, RGBA input data is bypassed to the output unchanged.
 *  0b001..LUT operates in 3D mode.
 *  0b010..Each RGB input is used as individual index into the respective LUT. Alpha channel is bypassed to output.
 *  0b011..Red input is used as common index for any RGB LUT. The alpha channel is bypassed to output.
 *  0b100..Red input is used as common index for any RGB LUT. The result is remapped and upconverted to RGBA.
 */
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_MODE_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_MODE_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_DITH_EN_MASK (0x8U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_DITH_EN_SHIFT (3U)
/*! diseng_lut3d1_DITH_EN
 *  0b0..Output is 10bit. If LUT_DATA_WIDTH == MODE_12BIT then 2 LSB are truncated.
 *  0b1..If LUT_DATA_WIDTH == MODE_12BIT then 12bit value is dithered to 10bit. if LUT_DATA_WIDTH == MODE_10BIT then 10bit value is dithered to 8bit.
 */
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_DITH_EN(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_DITH_EN_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_DITH_EN_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaMask_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaMask_SHIFT (5U)
/*! diseng_lut3d1_AlphaMask
 *  0b0..Alpha mask mode disabled
 *  0b1..Alpha mask mode enabled
 */
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaMask(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaMask_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaMask_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaInvert_MASK (0x40U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaInvert_SHIFT (6U)
/*! diseng_lut3d1_AlphaInvert
 *  0b0..Disable computation for alpha smaller than 128
 *  0b1..Disable computation for alpha greater than or equal to 128
 */
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaInvert(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaInvert_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_AlphaInvert_MASK)

#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_IDX_BITS_MASK (0xF00U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_IDX_BITS_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_IDX_BITS(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_IDX_BITS_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_CONTROL_diseng_lut3d1_IDX_BITS_MASK)
/*! @} */

/*! @name DISENG_LUT3D1_LUT - Look Up Table */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_LUT3D1_LUT_diseng_lut3d1_DATA_MASK (0xFFFFFU)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LUT_diseng_lut3d1_DATA_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_LUT3D1_LUT_diseng_lut3d1_DATA(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_LUT3D1_LUT_diseng_lut3d1_DATA_SHIFT)) & DISPLAY_SEERIS_DISENG_LUT3D1_LUT_diseng_lut3d1_DATA_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKUNLOCK_diseng_matrix1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKUNLOCK_diseng_matrix1_LockUnlock_SHIFT (0U)
/*! diseng_matrix1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKUNLOCK_diseng_matrix1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_LOCKUNLOCK_diseng_matrix1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_LOCKUNLOCK_diseng_matrix1_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_LOCKSTATUS_diseng_matrix1_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_STATICCONTROL - Color Matrix static control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_STATICCONTROL_diseng_matrix1_ShdEn_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_STATICCONTROL_diseng_matrix1_ShdEn_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_STATICCONTROL_diseng_matrix1_ShdEn(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_STATICCONTROL_diseng_matrix1_ShdEn_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_STATICCONTROL_diseng_matrix1_ShdEn_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_CONTROL - Color Matrix control register */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_MODE_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_MODE_SHIFT (0U)
/*! diseng_matrix1_MODE
 *  0b00..Module in neutral mode, input data is bypassed
 *  0b01..Module in matrix mode, input data is multiplied with matrix values
 *  0b10..Module in alpha pre-multiplication mode, input color is multiplied with input alpha
 *  0b11..Reserved, do not use
 */
#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_MODE(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_MODE_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_MODE_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaMask_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaMask_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaMask(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaMask_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaMask_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaInvert_MASK (0x20U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaInvert_SHIFT (5U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaInvert(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaInvert_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_CONTROL_diseng_matrix1_AlphaInvert_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_RED0 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A11_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A11_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A11(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A11_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A11_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A12_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A12_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A12(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A12_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_RED0_diseng_matrix1_A12_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_RED1 - Matrix values for calculation of the red output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_RED1_diseng_matrix1_A13_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_RED1_diseng_matrix1_A13_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_RED1_diseng_matrix1_A13(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_RED1_diseng_matrix1_A13_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_RED1_diseng_matrix1_A13_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_GREEN0 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A21_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A21_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A21(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A21_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A21_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A22_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A22_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A22(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A22_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_GREEN0_diseng_matrix1_A22_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_GREEN1 - Matrix values for calculation of the green output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN1_diseng_matrix1_A23_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN1_diseng_matrix1_A23_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_GREEN1_diseng_matrix1_A23(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_GREEN1_diseng_matrix1_A23_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_GREEN1_diseng_matrix1_A23_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_BLUE0 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A31_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A31_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A31(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A31_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A31_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A32_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A32_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A32(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A32_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_BLUE0_diseng_matrix1_A32_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_BLUE1 - Matrix values for calculation of the blue output value. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE1_diseng_matrix1_A33_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE1_diseng_matrix1_A33_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_BLUE1_diseng_matrix1_A33(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_BLUE1_diseng_matrix1_A33_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_BLUE1_diseng_matrix1_A33_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_OFFSETVECTOR0 - Offset vectors for red and green output. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C1_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C1_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C1_MASK)

#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C2_MASK (0x1FFF0000U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C2_SHIFT (16U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C2_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR0_diseng_matrix1_C2_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_OFFSETVECTOR1 - Offset vectors for blue and alpha output. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR1_diseng_matrix1_C3_MASK (0x1FFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR1_diseng_matrix1_C3_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR1_diseng_matrix1_C3(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR1_diseng_matrix1_C3_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_OFFSETVECTOR1_diseng_matrix1_C3_MASK)
/*! @} */

/*! @name DISENG_MATRIX1_LASTCONTROLWORD - Value of last received control word, for debugging. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_MATRIX1_LASTCONTROLWORD_diseng_matrix1_L_VAL_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LASTCONTROLWORD_diseng_matrix1_L_VAL_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_MATRIX1_LASTCONTROLWORD_diseng_matrix1_L_VAL(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_MATRIX1_LASTCONTROLWORD_diseng_matrix1_L_VAL_SHIFT)) & DISPLAY_SEERIS_DISENG_MATRIX1_LASTCONTROLWORD_diseng_matrix1_L_VAL_MASK)
/*! @} */

/*! @name DISENG_DITHER1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKUNLOCK_diseng_dither1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKUNLOCK_diseng_dither1_LockUnlock_SHIFT (0U)
/*! diseng_dither1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKUNLOCK_diseng_dither1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_LOCKUNLOCK_diseng_dither1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_LOCKUNLOCK_diseng_dither1_LockUnlock_MASK)
/*! @} */

/*! @name DISENG_DITHER1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_LockStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_LOCKSTATUS_diseng_dither1_FreezeStatus_MASK)
/*! @} */

/*! @name DISENG_DITHER1_CONTROL - Dither Unit common control. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1_CONTROL_diseng_dither1_mode_MASK (0x3U)
#define DISPLAY_SEERIS_DISENG_DITHER1_CONTROL_diseng_dither1_mode_SHIFT (0U)
/*! diseng_dither1_mode
 *  0b00..Neutral mode. Pixels by-pass the Dither Unit, all other settings are ignored.
 *  0b01..Dither Unit is active (uses 10bit input).
 *  0b10..Dither Unit is active (uses 12bit input).
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_CONTROL_diseng_dither1_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_CONTROL_diseng_dither1_mode_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_CONTROL_diseng_dither1_mode_MASK)
/*! @} */

/*! @name DISENG_DITHER1_DITHERCONTROL10BITS - Dither Unit processing control. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_blue_range_select_10bit_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_blue_range_select_10bit_SHIFT (0U)
/*! diseng_dither1_blue_range_select_10bit
 *  0b010..Reduces blue component width from 10 bit to 8bit.
 *  0b011..Reduces blue component width from 10 bit to 7bit.
 *  0b100..Reduces blue component width from 10 bit to 6bit.
 *  0b101..Reduces blue component width from 10 bit to 5bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_blue_range_select_10bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_blue_range_select_10bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_blue_range_select_10bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_green_range_select_10bit_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_green_range_select_10bit_SHIFT (4U)
/*! diseng_dither1_green_range_select_10bit
 *  0b010..Reduces green component width from 10 bit to 8bit.
 *  0b011..Reduces green component width from 10 bit to 7bit.
 *  0b100..Reduces green component width from 10 bit to 6bit.
 *  0b101..Reduces green component width from 10 bit to 5bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_green_range_select_10bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_green_range_select_10bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_green_range_select_10bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_red_range_select_10bit_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_red_range_select_10bit_SHIFT (8U)
/*! diseng_dither1_red_range_select_10bit
 *  0b010..Reduces red component width from 10 bit to 8bit.
 *  0b011..Reduces red component width from 10 bit to 7bit.
 *  0b100..Reduces red component width from 10 bit to 6bit.
 *  0b101..Reduces red component width from 10 bit to 5bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_red_range_select_10bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_red_range_select_10bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL10BITS_diseng_dither1_red_range_select_10bit_MASK)
/*! @} */

/*! @name DISENG_DITHER1_DITHERCONTROL12BITS - Dither Unit processing control. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_blue_range_select_12bit_MASK (0x7U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_blue_range_select_12bit_SHIFT (0U)
/*! diseng_dither1_blue_range_select_12bit
 *  0b010..Reduces blue component width from 12 bit to 10bit.
 *  0b011..Reduces blue component width from 12 bit to 9bit.
 *  0b100..Reduces blue component width from 12 bit to 8bit.
 *  0b110..Reduces blue component width from 12 bit to 6bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_blue_range_select_12bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_blue_range_select_12bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_blue_range_select_12bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_green_range_select_12bit_MASK (0x70U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_green_range_select_12bit_SHIFT (4U)
/*! diseng_dither1_green_range_select_12bit
 *  0b010..Reduces green component width from 12 bit to 10bit.
 *  0b011..Reduces green component width from 12 bit to 9bit.
 *  0b100..Reduces green component width from 12 bit to 8bit.
 *  0b110..Reduces green component width from 12 bit to 6bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_green_range_select_12bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_green_range_select_12bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_green_range_select_12bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_red_range_select_12bit_MASK (0x700U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_red_range_select_12bit_SHIFT (8U)
/*! diseng_dither1_red_range_select_12bit
 *  0b010..Reduces red component width from 12 bit to 10bit.
 *  0b011..Reduces red component width from 12 bit to 9bit.
 *  0b100..Reduces red component width from 12 bit to 8bit.
 *  0b110..Reduces red component width from 12 bit to 6bit.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_red_range_select_12bit(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_red_range_select_12bit_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_red_range_select_12bit_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_offset_select_MASK (0x10000U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_offset_select_SHIFT (16U)
/*! diseng_dither1_offset_select
 *  0b0..Offset is a bayer matrix value, which is selected according to pixel frame position.
 *  0b1..Offset is the sum from a bayer matrix value, which is selected according to pixel frame position, and a
 *       value from a regular sequence, which changes each frame.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_offset_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_offset_select_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_offset_select_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_algo_select_MASK (0x300000U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_algo_select_SHIFT (20U)
/*! diseng_dither1_algo_select
 *  0b01..Best possible resolution for most dark colors. Adds a diminutive offset to overall image brightness.
 *  0b10..Preserves overall image brightness. Cannot resolve most dark and most bright colors. All codes in-between are distributed perfectly smooth.
 *  0b11..Preserves overall image brightness. Best possible distribution of color codes over complete range.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_algo_select(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_algo_select_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_algo_select_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_alpha_mode_MASK (0x3000000U)
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_alpha_mode_SHIFT (24U)
/*! diseng_dither1_alpha_mode
 *  0b00..The alpha bit is not considered.
 *  0b01..Red, green and blue components are only dithered, if the alpha bit is 1.
 *  0b10..Red, green and blue components are only dithered, if the alpha bit is 0.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_alpha_mode(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_alpha_mode_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1_DITHERCONTROL12BITS_diseng_dither1_alpha_mode_MASK)
/*! @} */

/*! @name DISENG_DITHER1CFG_LOCKUNLOCK1 - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKUNLOCK1_diseng_dither1cfg_LockUnlock1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKUNLOCK1_diseng_dither1cfg_LockUnlock1_SHIFT (0U)
/*! diseng_dither1cfg_LockUnlock1
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKUNLOCK1_diseng_dither1cfg_LockUnlock1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKUNLOCK1_diseng_dither1cfg_LockUnlock1_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKUNLOCK1_diseng_dither1cfg_LockUnlock1_MASK)
/*! @} */

/*! @name DISENG_DITHER1CFG_LOCKSTATUS1 - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_LockStatus1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_LockStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_LockStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_LockStatus1_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_LockStatus1_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_PrivilegeStatus1_MASK (0x10U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_PrivilegeStatus1_SHIFT (4U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_PrivilegeStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_PrivilegeStatus1_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_PrivilegeStatus1_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_FreezeStatus1_MASK (0x100U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_FreezeStatus1_SHIFT (8U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_FreezeStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_FreezeStatus1_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1CFG_LOCKSTATUS1_diseng_dither1cfg_FreezeStatus1_MASK)
/*! @} */

/*! @name DISENG_DITHER1CFG_POLARITYCTRL1 - Polarity control for display stream #1. */
/*! @{ */

#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolHs1_MASK (0x1U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolHs1_SHIFT (0U)
/*! diseng_dither1cfg_PolHs1
 *  0b0..Low active
 *  0b1..High active
 */
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolHs1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolHs1_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolHs1_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolVs1_MASK (0x2U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolVs1_SHIFT (1U)
/*! diseng_dither1cfg_PolVs1
 *  0b0..Low active
 *  0b1..High active
 */
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolVs1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolVs1_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolVs1_MASK)

#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolEn1_MASK (0x4U)
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolEn1_SHIFT (2U)
/*! diseng_dither1cfg_PolEn1
 *  0b0..Low active
 *  0b1..High active
 */
#define DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolEn1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolEn1_SHIFT)) & DISPLAY_SEERIS_DISENG_DITHER1CFG_POLARITYCTRL1_diseng_dither1cfg_PolEn1_MASK)
/*! @} */

/*! @name DISPIRQ0_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_LOCKUNLOCK_dispirq0_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_LOCKUNLOCK_dispirq0_LockUnlock_SHIFT (0U)
/*! dispirq0_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISPIRQ0_LOCKUNLOCK_dispirq0_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_LOCKUNLOCK_dispirq0_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_LOCKUNLOCK_dispirq0_LockUnlock_MASK)
/*! @} */

/*! @name DISPIRQ0_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_LockStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_LOCKSTATUS_dispirq0_FreezeStatus_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTENABLE0 - Interrupt Enable register 0. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE0_dispirq0_InterruptEnable0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE0_dispirq0_InterruptEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE0_dispirq0_InterruptEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE0_dispirq0_InterruptEnable0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE0_dispirq0_InterruptEnable0_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTENABLE1 - Interrupt Enable register 1. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE1_dispirq0_InterruptEnable1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE1_dispirq0_InterruptEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE1_dispirq0_InterruptEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE1_dispirq0_InterruptEnable1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE1_dispirq0_InterruptEnable1_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTENABLE2 - Interrupt Enable register 2. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE2_dispirq0_InterruptEnable2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE2_dispirq0_InterruptEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE2_dispirq0_InterruptEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE2_dispirq0_InterruptEnable2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTENABLE2_dispirq0_InterruptEnable2_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTPRESET0 - Interrupt Preset register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET0_dispirq0_InterruptPreset0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET0_dispirq0_InterruptPreset0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET0_dispirq0_InterruptPreset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET0_dispirq0_InterruptPreset0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET0_dispirq0_InterruptPreset0_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTPRESET1 - Interrupt Preset register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET1_dispirq0_InterruptPreset1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET1_dispirq0_InterruptPreset1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET1_dispirq0_InterruptPreset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET1_dispirq0_InterruptPreset1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET1_dispirq0_InterruptPreset1_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTPRESET2 - Interrupt Preset register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET2_dispirq0_InterruptPreset2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET2_dispirq0_InterruptPreset2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET2_dispirq0_InterruptPreset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET2_dispirq0_InterruptPreset2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTPRESET2_dispirq0_InterruptPreset2_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTCLEAR0 - Interrupt Clear register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR0_dispirq0_InterruptClear0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR0_dispirq0_InterruptClear0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR0_dispirq0_InterruptClear0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR0_dispirq0_InterruptClear0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR0_dispirq0_InterruptClear0_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTCLEAR1 - Interrupt Clear register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR1_dispirq0_InterruptClear1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR1_dispirq0_InterruptClear1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR1_dispirq0_InterruptClear1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR1_dispirq0_InterruptClear1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR1_dispirq0_InterruptClear1_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTCLEAR2 - Interrupt Clear register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR2_dispirq0_InterruptClear2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR2_dispirq0_InterruptClear2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR2_dispirq0_InterruptClear2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR2_dispirq0_InterruptClear2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTCLEAR2_dispirq0_InterruptClear2_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTSTATUS0 - Interrupt Status register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS0_dispirq0_InterruptStatus0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS0_dispirq0_InterruptStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS0_dispirq0_InterruptStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS0_dispirq0_InterruptStatus0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS0_dispirq0_InterruptStatus0_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTSTATUS1 - Interrupt Status register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS1_dispirq0_InterruptStatus1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS1_dispirq0_InterruptStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS1_dispirq0_InterruptStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS1_dispirq0_InterruptStatus1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS1_dispirq0_InterruptStatus1_MASK)
/*! @} */

/*! @name DISPIRQ0_INTERRUPTSTATUS2 - Interrupt Status register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS2_dispirq0_InterruptStatus2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS2_dispirq0_InterruptStatus2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS2_dispirq0_InterruptStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS2_dispirq0_InterruptStatus2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ0_INTERRUPTSTATUS2_dispirq0_InterruptStatus2_MASK)
/*! @} */

/*! @name DISPIRQ1_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_LOCKUNLOCK_dispirq1_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_LOCKUNLOCK_dispirq1_LockUnlock_SHIFT (0U)
/*! dispirq1_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISPIRQ1_LOCKUNLOCK_dispirq1_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_LOCKUNLOCK_dispirq1_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_LOCKUNLOCK_dispirq1_LockUnlock_MASK)
/*! @} */

/*! @name DISPIRQ1_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_LockStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_LOCKSTATUS_dispirq1_FreezeStatus_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTENABLE0 - Interrupt Enable register 0. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE0_dispirq1_InterruptEnable0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE0_dispirq1_InterruptEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE0_dispirq1_InterruptEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE0_dispirq1_InterruptEnable0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE0_dispirq1_InterruptEnable0_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTENABLE1 - Interrupt Enable register 1. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE1_dispirq1_InterruptEnable1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE1_dispirq1_InterruptEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE1_dispirq1_InterruptEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE1_dispirq1_InterruptEnable1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE1_dispirq1_InterruptEnable1_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTENABLE2 - Interrupt Enable register 2. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE2_dispirq1_InterruptEnable2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE2_dispirq1_InterruptEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE2_dispirq1_InterruptEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE2_dispirq1_InterruptEnable2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTENABLE2_dispirq1_InterruptEnable2_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTPRESET0 - Interrupt Preset register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET0_dispirq1_InterruptPreset0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET0_dispirq1_InterruptPreset0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET0_dispirq1_InterruptPreset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET0_dispirq1_InterruptPreset0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET0_dispirq1_InterruptPreset0_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTPRESET1 - Interrupt Preset register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET1_dispirq1_InterruptPreset1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET1_dispirq1_InterruptPreset1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET1_dispirq1_InterruptPreset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET1_dispirq1_InterruptPreset1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET1_dispirq1_InterruptPreset1_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTPRESET2 - Interrupt Preset register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET2_dispirq1_InterruptPreset2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET2_dispirq1_InterruptPreset2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET2_dispirq1_InterruptPreset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET2_dispirq1_InterruptPreset2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTPRESET2_dispirq1_InterruptPreset2_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTCLEAR0 - Interrupt Clear register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR0_dispirq1_InterruptClear0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR0_dispirq1_InterruptClear0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR0_dispirq1_InterruptClear0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR0_dispirq1_InterruptClear0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR0_dispirq1_InterruptClear0_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTCLEAR1 - Interrupt Clear register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR1_dispirq1_InterruptClear1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR1_dispirq1_InterruptClear1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR1_dispirq1_InterruptClear1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR1_dispirq1_InterruptClear1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR1_dispirq1_InterruptClear1_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTCLEAR2 - Interrupt Clear register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR2_dispirq1_InterruptClear2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR2_dispirq1_InterruptClear2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR2_dispirq1_InterruptClear2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR2_dispirq1_InterruptClear2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTCLEAR2_dispirq1_InterruptClear2_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTSTATUS0 - Interrupt Status register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS0_dispirq1_InterruptStatus0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS0_dispirq1_InterruptStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS0_dispirq1_InterruptStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS0_dispirq1_InterruptStatus0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS0_dispirq1_InterruptStatus0_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTSTATUS1 - Interrupt Status register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS1_dispirq1_InterruptStatus1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS1_dispirq1_InterruptStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS1_dispirq1_InterruptStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS1_dispirq1_InterruptStatus1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS1_dispirq1_InterruptStatus1_MASK)
/*! @} */

/*! @name DISPIRQ1_INTERRUPTSTATUS2 - Interrupt Status register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS2_dispirq1_InterruptStatus2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS2_dispirq1_InterruptStatus2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS2_dispirq1_InterruptStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS2_dispirq1_InterruptStatus2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ1_INTERRUPTSTATUS2_dispirq1_InterruptStatus2_MASK)
/*! @} */

/*! @name DISPIRQ2_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_LOCKUNLOCK_dispirq2_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_LOCKUNLOCK_dispirq2_LockUnlock_SHIFT (0U)
/*! dispirq2_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISPIRQ2_LOCKUNLOCK_dispirq2_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_LOCKUNLOCK_dispirq2_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_LOCKUNLOCK_dispirq2_LockUnlock_MASK)
/*! @} */

/*! @name DISPIRQ2_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_LockStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_LOCKSTATUS_dispirq2_FreezeStatus_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTENABLE0 - Interrupt Enable register 0. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE0_dispirq2_InterruptEnable0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE0_dispirq2_InterruptEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE0_dispirq2_InterruptEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE0_dispirq2_InterruptEnable0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE0_dispirq2_InterruptEnable0_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTENABLE1 - Interrupt Enable register 1. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE1_dispirq2_InterruptEnable1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE1_dispirq2_InterruptEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE1_dispirq2_InterruptEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE1_dispirq2_InterruptEnable1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE1_dispirq2_InterruptEnable1_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTENABLE2 - Interrupt Enable register 2. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE2_dispirq2_InterruptEnable2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE2_dispirq2_InterruptEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE2_dispirq2_InterruptEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE2_dispirq2_InterruptEnable2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTENABLE2_dispirq2_InterruptEnable2_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTPRESET0 - Interrupt Preset register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET0_dispirq2_InterruptPreset0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET0_dispirq2_InterruptPreset0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET0_dispirq2_InterruptPreset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET0_dispirq2_InterruptPreset0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET0_dispirq2_InterruptPreset0_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTPRESET1 - Interrupt Preset register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET1_dispirq2_InterruptPreset1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET1_dispirq2_InterruptPreset1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET1_dispirq2_InterruptPreset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET1_dispirq2_InterruptPreset1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET1_dispirq2_InterruptPreset1_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTPRESET2 - Interrupt Preset register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET2_dispirq2_InterruptPreset2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET2_dispirq2_InterruptPreset2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET2_dispirq2_InterruptPreset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET2_dispirq2_InterruptPreset2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTPRESET2_dispirq2_InterruptPreset2_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTCLEAR0 - Interrupt Clear register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR0_dispirq2_InterruptClear0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR0_dispirq2_InterruptClear0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR0_dispirq2_InterruptClear0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR0_dispirq2_InterruptClear0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR0_dispirq2_InterruptClear0_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTCLEAR1 - Interrupt Clear register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR1_dispirq2_InterruptClear1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR1_dispirq2_InterruptClear1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR1_dispirq2_InterruptClear1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR1_dispirq2_InterruptClear1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR1_dispirq2_InterruptClear1_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTCLEAR2 - Interrupt Clear register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR2_dispirq2_InterruptClear2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR2_dispirq2_InterruptClear2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR2_dispirq2_InterruptClear2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR2_dispirq2_InterruptClear2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTCLEAR2_dispirq2_InterruptClear2_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTSTATUS0 - Interrupt Status register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS0_dispirq2_InterruptStatus0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS0_dispirq2_InterruptStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS0_dispirq2_InterruptStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS0_dispirq2_InterruptStatus0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS0_dispirq2_InterruptStatus0_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTSTATUS1 - Interrupt Status register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS1_dispirq2_InterruptStatus1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS1_dispirq2_InterruptStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS1_dispirq2_InterruptStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS1_dispirq2_InterruptStatus1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS1_dispirq2_InterruptStatus1_MASK)
/*! @} */

/*! @name DISPIRQ2_INTERRUPTSTATUS2 - Interrupt Status register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS2_dispirq2_InterruptStatus2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS2_dispirq2_InterruptStatus2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS2_dispirq2_InterruptStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS2_dispirq2_InterruptStatus2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ2_INTERRUPTSTATUS2_dispirq2_InterruptStatus2_MASK)
/*! @} */

/*! @name DISPIRQ3_LOCKUNLOCK - Register to change the protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_LOCKUNLOCK_dispirq3_LockUnlock_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_LOCKUNLOCK_dispirq3_LockUnlock_SHIFT (0U)
/*! dispirq3_LockUnlock
 *  0b01010110010100011111011101100011..Decrements the unlock counter. When the counter value is null, lock protection is active. Reset counter value is 1.
 *  0b01101001000111011011100100110110..Increments the unlock counter. Max allowed value is 15.
 *  0b10101110111010010101110011011100..Enables privilege protection. Disabled after reset.
 *  0b10110101111000100100011001101110..Disables privilege protection.
 *  0b11111011111010001011000111100110..Freezes current protection status. Writing keys to this register has no more effect until reset.
 */
#define DISPLAY_SEERIS_DISPIRQ3_LOCKUNLOCK_dispirq3_LockUnlock(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_LOCKUNLOCK_dispirq3_LockUnlock_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_LOCKUNLOCK_dispirq3_LockUnlock_MASK)
/*! @} */

/*! @name DISPIRQ3_LOCKSTATUS - Protection status of this address block. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_LockStatus_MASK (0x1U)
#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_LockStatus_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_LockStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_LockStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_LockStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_PrivilegeStatus_MASK (0x10U)
#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_PrivilegeStatus_SHIFT (4U)
#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_PrivilegeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_PrivilegeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_PrivilegeStatus_MASK)

#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_FreezeStatus_MASK (0x100U)
#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_FreezeStatus_SHIFT (8U)
#define DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_FreezeStatus(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_FreezeStatus_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_LOCKSTATUS_dispirq3_FreezeStatus_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTENABLE0 - Interrupt Enable register 0. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE0_dispirq3_InterruptEnable0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE0_dispirq3_InterruptEnable0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE0_dispirq3_InterruptEnable0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE0_dispirq3_InterruptEnable0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE0_dispirq3_InterruptEnable0_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTENABLE1 - Interrupt Enable register 1. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE1_dispirq3_InterruptEnable1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE1_dispirq3_InterruptEnable1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE1_dispirq3_InterruptEnable1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE1_dispirq3_InterruptEnable1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE1_dispirq3_InterruptEnable1_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTENABLE2 - Interrupt Enable register 2. */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE2_dispirq3_InterruptEnable2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE2_dispirq3_InterruptEnable2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE2_dispirq3_InterruptEnable2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE2_dispirq3_InterruptEnable2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTENABLE2_dispirq3_InterruptEnable2_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTPRESET0 - Interrupt Preset register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET0_dispirq3_InterruptPreset0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET0_dispirq3_InterruptPreset0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET0_dispirq3_InterruptPreset0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET0_dispirq3_InterruptPreset0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET0_dispirq3_InterruptPreset0_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTPRESET1 - Interrupt Preset register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET1_dispirq3_InterruptPreset1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET1_dispirq3_InterruptPreset1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET1_dispirq3_InterruptPreset1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET1_dispirq3_InterruptPreset1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET1_dispirq3_InterruptPreset1_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTPRESET2 - Interrupt Preset register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET2_dispirq3_InterruptPreset2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET2_dispirq3_InterruptPreset2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET2_dispirq3_InterruptPreset2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET2_dispirq3_InterruptPreset2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTPRESET2_dispirq3_InterruptPreset2_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTCLEAR0 - Interrupt Clear register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR0_dispirq3_InterruptClear0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR0_dispirq3_InterruptClear0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR0_dispirq3_InterruptClear0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR0_dispirq3_InterruptClear0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR0_dispirq3_InterruptClear0_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTCLEAR1 - Interrupt Clear register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR1_dispirq3_InterruptClear1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR1_dispirq3_InterruptClear1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR1_dispirq3_InterruptClear1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR1_dispirq3_InterruptClear1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR1_dispirq3_InterruptClear1_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTCLEAR2 - Interrupt Clear register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR2_dispirq3_InterruptClear2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR2_dispirq3_InterruptClear2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR2_dispirq3_InterruptClear2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR2_dispirq3_InterruptClear2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTCLEAR2_dispirq3_InterruptClear2_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTSTATUS0 - Interrupt Status register 0 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS0_dispirq3_InterruptStatus0_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS0_dispirq3_InterruptStatus0_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS0_dispirq3_InterruptStatus0(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS0_dispirq3_InterruptStatus0_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS0_dispirq3_InterruptStatus0_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTSTATUS1 - Interrupt Status register 1 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS1_dispirq3_InterruptStatus1_MASK (0xFFFFFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS1_dispirq3_InterruptStatus1_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS1_dispirq3_InterruptStatus1(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS1_dispirq3_InterruptStatus1_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS1_dispirq3_InterruptStatus1_MASK)
/*! @} */

/*! @name DISPIRQ3_INTERRUPTSTATUS2 - Interrupt Status register 2 */
/*! @{ */

#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS2_dispirq3_InterruptStatus2_MASK (0x3FFFFFU)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS2_dispirq3_InterruptStatus2_SHIFT (0U)
#define DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS2_dispirq3_InterruptStatus2(x) (((uint32_t)(((uint32_t)(x)) << DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS2_dispirq3_InterruptStatus2_SHIFT)) & DISPLAY_SEERIS_DISPIRQ3_INTERRUPTSTATUS2_dispirq3_InterruptStatus2_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group DISPLAY_SEERIS_Register_Masks */


/*!
 * @}
 */ /* end of group DISPLAY_SEERIS_Peripheral_Access_Layer */


/*
** End of section using anonymous unions
*/

#if defined(__ARMCC_VERSION)
  #if (__ARMCC_VERSION >= 6010050)
    #pragma clang diagnostic pop
  #else
    #pragma pop
  #endif
#elif defined(__GNUC__)
  /* leave anonymous unions enabled */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=default
#else
  #error Not supported compiler type
#endif

/*!
 * @}
 */ /* end of group Peripheral_access_layer */


#endif  /* DISPLAY_SEERIS_H_ */

