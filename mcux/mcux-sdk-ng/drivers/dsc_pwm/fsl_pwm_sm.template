  /* Disable the submodule and its output before the submodule init. */
  ${PERIPHERAL}$->OUTEN &= ~(PWM_OUTEN_PWMA_EN(1U << ${SUBMODULE}$) | PWM_OUTEN_PWMB_EN(1U << ${SUBMODULE}$) | PWM_OUTEN_PWMX_EN(1U << ${SUBMODULE}$));
  ${PERIPHERAL}$->MCTRL &= ~(PWM_MCTRL_RUN(1U << ${SUBMODULE}$) | PWM_MCTRL_CLDOK(1U << ${SUBMODULE}$));
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CTRL_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CTRL = ${VPREFIX}$_SM${SUBMODULE}$CTRL_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CTRL = 0x400U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CTRL_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CTRL2_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CTRL2 = ${VPREFIX}$_SM${SUBMODULE}$CTRL2_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CTRL2 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CTRL2_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$INIT_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].INIT = ${VPREFIX}$_SM${SUBMODULE}$INIT_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].INIT = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$INIT_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$VAL0_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL0 = ${VPREFIX}$_SM${SUBMODULE}$VAL0_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL0 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$VAL0_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$VAL1_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL1 = ${VPREFIX}$_SM${SUBMODULE}$VAL1_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL1 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$VAL1_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$VAL2_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL2 = ${VPREFIX}$_SM${SUBMODULE}$VAL2_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL2 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$VAL2_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$VAL3_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL3 = ${VPREFIX}$_SM${SUBMODULE}$VAL3_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL3 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$VAL3_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$VAL4_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL4 = ${VPREFIX}$_SM${SUBMODULE}$VAL4_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL4 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$VAL4_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$VAL5_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL5 = ${VPREFIX}$_SM${SUBMODULE}$VAL5_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].VAL5 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$VAL5_INIT */
#if (defined(${VPREFIX}$_SM${SUBMODULE}$_FRACTIONAL_BLOCK_AVAILABLE))
#ifdef ${VPREFIX}$_SM${SUBMODULE}$FRACVAL1_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL1 = ${VPREFIX}$_SM${SUBMODULE}$FRACVAL1_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL1 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$FRACVAL1_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$FRACVAL2_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL2 = ${VPREFIX}$_SM${SUBMODULE}$FRACVAL2_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL2 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$FRACVAL2_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$FRACVAL3_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL3 = ${VPREFIX}$_SM${SUBMODULE}$FRACVAL3_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL3 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$FRACVAL3_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$FRACVAL4_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL4 = ${VPREFIX}$_SM${SUBMODULE}$FRACVAL4_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL4 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$FRACVAL4_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$FRACVAL5_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL5 = ${VPREFIX}$_SM${SUBMODULE}$FRACVAL5_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRACVAL5 = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$FRACVAL5_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$FRCTRL_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRCTRL = ${VPREFIX}$_SM${SUBMODULE}$FRCTRL_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].FRCTRL = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$FRCTRL_INIT */
#endif /* (defined(${VPREFIX}$_SM${SUBMODULE}$_FRACTIONAL_BLOCK_AVAILABLE)) */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$OCTRL_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].OCTRL = ${VPREFIX}$_SM${SUBMODULE}$OCTRL_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].OCTRL = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$OCTRL_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$STS_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].STS = ${VPREFIX}$_SM${SUBMODULE}$STS_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].STS = 0x3fffU;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$STS_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$INTEN_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].INTEN = ${VPREFIX}$_SM${SUBMODULE}$INTEN_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].INTEN = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$INTEN_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$DMAEN_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DMAEN = ${VPREFIX}$_SM${SUBMODULE}$DMAEN_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DMAEN = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$DMAEN_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$TCTRL_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].TCTRL = ${VPREFIX}$_SM${SUBMODULE}$TCTRL_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].TCTRL = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$TCTRL_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$DISMAP0_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DISMAP[0] = ${VPREFIX}$_SM${SUBMODULE}$DISMAP0_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DISMAP[0] = 0xffffU;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$DISMAP0_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$DISMAP1_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DISMAP[1] = ${VPREFIX}$_SM${SUBMODULE}$DISMAP1_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DISMAP[1] = 0xffffU;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$DISMAP1_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$DTCNT0_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DTCNT0 = ${VPREFIX}$_SM${SUBMODULE}$DTCNT0_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DTCNT0 = 0x7ffU;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$DTCNT0_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$DTCNT1_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DTCNT1 = ${VPREFIX}$_SM${SUBMODULE}$DTCNT1_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].DTCNT1 = 0x7ffU;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$DTCNT1_INIT */

#ifdef PWM_CAPTCTRLA_EDGA0_MASK
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLA_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCTRLA = ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLA_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCTRLA = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLA_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPA_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCOMPA = ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPA_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCOMPA = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPA_INIT */
#endif /* PWM_CAPTCTRLA_EDGA0_MASK */

#ifdef PWM_CAPTFILTA_CAPTA_FILT_PER_MASK
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTFILTA = 0x0U;
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTFILTA_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTFILTA = ${VPREFIX}$_SM${SUBMODULE}$CAPTFILTA_INIT;
#endif
#endif  /* PWM_CAPTFILTA_CAPTA_FILT_PER_MASK */

#ifdef PWM_CAPTCTRLB_EDGB0_MASK
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLB_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCTRLB = ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLB_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCTRLB = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLB_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPB_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCOMPB = ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPB_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCOMPB = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPB_INIT */
#endif /* PWM_CAPTCTRLB_EDGB0_MASK */

#ifdef PWM_CAPTFILTB_CAPTB_FILT_PER_MASK
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTFILTB = 0x0U;
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTFILTB_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTFILTB = ${VPREFIX}$_SM${SUBMODULE}$CAPTFILTB_INIT;
#endif
#endif  /* PWM_CAPTFILTB_CAPTB_FILT_PER_MASK */

#ifdef PWM_CAPTCTRLX_EDGX0_MASK
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLX_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCTRLX = ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLX_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCTRLX = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CAPTCTRLX_INIT */
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPX_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCOMPX = ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPX_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTCOMPX = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$CAPTCOMPX_INIT */
#endif /* PWM_CAPTCTRLX_EDGX0_MASK */

#ifdef PWM_CAPTFILTX_CAPTX_FILT_PER_MASK
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTFILTX = 0x0U;
#ifdef ${VPREFIX}$_SM${SUBMODULE}$CAPTFILTX_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].CAPTFILTX = ${VPREFIX}$_SM${SUBMODULE}$CAPTFILTX_INIT;
#endif
#endif  /* PWM_CAPTFILTX_CAPTX_FILT_PER_MASK */

#if (0 != ${SUBMODULE}$)
#ifdef PWM_PHASEDLY_PHASEDLY_MASK
#ifdef ${VPREFIX}$_SM${SUBMODULE}$PHASEDLY_INIT
  ${PERIPHERAL}$->SM[${SUBMODULE}$].PHASEDLY = ${VPREFIX}$_SM${SUBMODULE}$PHASEDLY_INIT;
#else
  ${PERIPHERAL}$->SM[${SUBMODULE}$].PHASEDLY = 0x0U;
#endif /* ${VPREFIX}$_SM${SUBMODULE}$PHASEDLY_INIT */
#endif /* PWM_PHASEDLY_PHASEDLY_MASK */
#endif /* (0 != ${SUBMODULE}$) */
#if ((!defined(${VPREFIX}$_SM${SUBMODULE}$CTRL_INIT)) || (0U == (${VPREFIX}$_SM${SUBMODULE}$CTRL_INIT & PWM_CTRL_LDMOD_MASK)))
  ${PERIPHERAL}$->MCTRL |= PWM_MCTRL_LDOK(1U << ${SUBMODULE}$);
#endif /* ((!defined(${VPREFIX}$_SM${SUBMODULE}$CTRL_INIT)) || (0U == (${VPREFIX}$_SM${SUBMODULE}$CTRL_INIT & PWM_CTRL_LDMOD_MASK))) */
